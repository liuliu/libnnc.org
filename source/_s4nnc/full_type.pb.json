{
  "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 19073,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>fileprivate struct _GeneratedWithProtocGenSwiftVersion : SwiftProtobuf.ProtobufAPIVersionCheck<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 676
          }
        ],
        "key.bodylength" : 77,
        "key.bodyoffset" : 771,
        "key.column" : 20,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 37,
            "key.offset" : 732
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>_GeneratedWithProtocGenSwiftVersion<\/decl.name> : SwiftProtobuf.ProtobufAPIVersionCheck<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "SwiftProtobuf.ProtobufAPIVersionCheck"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 161,
        "key.line" : 18,
        "key.modulename" : "main",
        "key.name" : "_GeneratedWithProtocGenSwiftVersion",
        "key.namelength" : 35,
        "key.nameoffset" : 695,
        "key.offset" : 688,
        "key.parsed_declaration" : "fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 18,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>struct <Type usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV\">_GeneratedWithProtocGenSwiftVersion<\/Type>._2 : SwiftProtobuf.ProtobufAPIVersion_2<\/Declaration>",
            "key.bodylength" : 0,
            "key.bodyoffset" : 821,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 34,
                "key.offset" : 785
              }
            ],
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.struct usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV\">_GeneratedWithProtocGenSwiftVersion<\/ref.struct>.<decl.name>_2<\/decl.name> : SwiftProtobuf.ProtobufAPIVersion_2<\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "SwiftProtobuf.ProtobufAPIVersion_2"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 48,
            "key.line" : 19,
            "key.modulename" : "main",
            "key.name" : "_2",
            "key.namelength" : 2,
            "key.nameoffset" : 781,
            "key.offset" : 774,
            "key.parsed_declaration" : "struct _2: SwiftProtobuf.ProtobufAPIVersion_2",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.reusingastcontext" : false,
            "key.typename" : "_GeneratedWithProtocGenSwiftVersion._2.Type",
            "key.typeusr" : "$s4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV2_2VmD",
            "key.usr" : "s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV2_2V"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV\">_GeneratedWithProtocGenSwiftVersion<\/Type>.Version = <Type usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV2_2V\">_2<\/Type><\/Declaration>",
            "key.column" : 13,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV\">_GeneratedWithProtocGenSwiftVersion<\/ref.struct>.<decl.name>Version<\/decl.name> = <ref.struct usr=\"s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV2_2V\">_2<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 22,
            "key.line" : 20,
            "key.modulename" : "main",
            "key.name" : "Version",
            "key.namelength" : 7,
            "key.nameoffset" : 835,
            "key.offset" : 825,
            "key.parsed_declaration" : "typealias Version = _2",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.reusingastcontext" : false,
            "key.typename" : "_GeneratedWithProtocGenSwiftVersion._2.Type",
            "key.typeusr" : "$s4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV2_2VmD",
            "key.usr" : "s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV0G0a"
          }
        ],
        "key.typename" : "_GeneratedWithProtocGenSwiftVersion.Type",
        "key.typeusr" : "$s4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLVmD",
        "key.usr" : "s:4main35_GeneratedWithProtocGenSwiftVersion33_2093C02B6C75DA1D2AD141260D569941LLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.<Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type><\/Declaration>",
        "key.bodylength" : 11811,
        "key.bodyoffset" : 1024,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 6,
        "key.doc.comment" : "DISABLED.IfChange\nExperimental. Represents the complete type information of a TensorFlow value.",
        "key.doc.declaration" : "enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.CaseIterable",
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"25\" column=\"6\"><Name>Tensorboard_FullTypeId<\/Name><USR>s:4main22Tensorboard_FullTypeIdO<\/USR><Declaration>enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.CaseIterable<\/Declaration><CommentParts><Abstract><Para>DISABLED.IfChange Experimental. Represents the complete type information of a TensorFlow value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 25,
        "key.doc.name" : "Tensorboard_FullTypeId",
        "key.doc.type" : "Other",
        "key.doclength" : 104,
        "key.docoffset" : 851,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 984
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 1004
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tensorboard_FullTypeId<\/decl.name> : SwiftProtobuf.Enum, Swift.<ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "SwiftProtobuf.Enum"
          },
          {
            "key.name" : "Swift.CaseIterable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 11881,
        "key.line" : 25,
        "key.modulename" : "main",
        "key.name" : "Tensorboard_FullTypeId",
        "key.namelength" : 22,
        "key.nameoffset" : 960,
        "key.offset" : 955,
        "key.parsed_declaration" : "enum Tensorboard_FullTypeId: SwiftProtobuf.Enum, Swift.CaseIterable",
        "key.parsed_scope.end" : 368,
        "key.parsed_scope.start" : 25,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/Type>.RawValue = <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 13,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.enum usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/ref.enum>.<decl.name>RawValue<\/decl.name> = <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 24,
            "key.line" : 26,
            "key.modulename" : "main",
            "key.name" : "RawValue",
            "key.namelength" : 8,
            "key.nameoffset" : 1037,
            "key.offset" : 1027,
            "key.parsed_declaration" : "typealias RawValue = Int",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.reusingastcontext" : false,
            "key.typename" : "Int.Type",
            "key.typeusr" : "$sSimD",
            "key.usr" : "s:4main22Tensorboard_FullTypeIdO8RawValuea"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 1109,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftUnset<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The default represents an uninitialized values.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"29\" column=\"8\"><Name>tftUnset<\/Name><USR>s:4main22Tensorboard_FullTypeIdO8tftUnsetyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The default represents an uninitialized values.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 29,
                "key.doc.name" : "tftUnset",
                "key.doc.type" : "Other",
                "key.doclength" : 52,
                "key.docoffset" : 1055,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftUnset<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 29,
                "key.modulename" : "main",
                "key.name" : "tftUnset",
                "key.namelength" : 8,
                "key.nameoffset" : 1114,
                "key.offset" : 1114,
                "key.parsed_declaration" : "case tftUnset",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftUnsetyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.offset" : 1639,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftVar<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Type variables may serve as placeholder for any other type ID in type\ntemplates.\n\nExamples:\n  TFT_DATASET[TFT_VAR[\"T\"]] is a Dataset returning a type indicated by \"T\".\n  TFT_TENSOR[TFT_VAR[\"T\"]] is a Tensor of n element type indicated by \"T\".\n  TFT_TENSOR[TFT_VAR[\"T\"]], TFT_TENSOR[TFT_VAR[\"T\"]] are two tensors of\n    identical element types.\n  TFT_TENSOR[TFT_VAR[\"P\"]], TFT_TENSOR[TFT_VAR[\"Q\"]] are two tensors of\n    independent element types.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Examples: TFT_DATASET[TFT_VAR[“T”]] is a Dataset returning a type indicated by “T”. TFT_TENSOR[TFT_VAR[“T”]] is a Tensor of n element type indicated by “T”. TFT_TENSOR[TFT_VAR[“T”]], TFT_TENSOR[TFT_VAR[“T”]] are two tensors of identical element types. TFT_TENSOR[TFT_VAR[“P”]], TFT_TENSOR[TFT_VAR[“Q”]] are two tensors of independent element types."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"41\" column=\"8\"><Name>tftVar<\/Name><USR>s:4main22Tensorboard_FullTypeIdO6tftVaryA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Type variables may serve as placeholder for any other type ID in type templates.<\/Para><\/Abstract><Discussion><Para>Examples: TFT_DATASET[TFT_VAR[“T”]] is a Dataset returning a type indicated by “T”. TFT_TENSOR[TFT_VAR[“T”]] is a Tensor of n element type indicated by “T”. TFT_TENSOR[TFT_VAR[“T”]], TFT_TENSOR[TFT_VAR[“T”]] are two tensors of identical element types. TFT_TENSOR[TFT_VAR[“P”]], TFT_TENSOR[TFT_VAR[“Q”]] are two tensors of independent element types.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 41,
                "key.doc.name" : "tftVar",
                "key.doc.type" : "Other",
                "key.doclength" : 504,
                "key.docoffset" : 1133,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftVar<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.line" : 41,
                "key.modulename" : "main",
                "key.name" : "tftVar",
                "key.namelength" : 6,
                "key.nameoffset" : 1644,
                "key.offset" : 1644,
                "key.parsed_declaration" : "case tftVar",
                "key.parsed_scope.end" : 41,
                "key.parsed_scope.start" : 41,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO6tftVaryA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.offset" : 1935,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftAny<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Wildcard type. Describes a parameter of unknown type. In TensorFlow, that\ncan mean either a \"Top\" type (accepts any type), or a dynamically typed\nobject whose type is unknown in context.\nImportant: \"unknown\" does not necessarily mean undeterminable!",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"47\" column=\"8\"><Name>tftAny<\/Name><USR>s:4main22Tensorboard_FullTypeIdO6tftAnyyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Wildcard type. Describes a parameter of unknown type. In TensorFlow, that can mean either a “Top” type (accepts any type), or a dynamically typed object whose type is unknown in context. Important: “unknown” does not necessarily mean undeterminable!<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 47,
                "key.doc.name" : "tftAny",
                "key.doc.type" : "Other",
                "key.doclength" : 272,
                "key.docoffset" : 1661,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftAny<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.line" : 47,
                "key.modulename" : "main",
                "key.name" : "tftAny",
                "key.namelength" : 6,
                "key.nameoffset" : 1940,
                "key.offset" : 1940,
                "key.parsed_declaration" : "case tftAny",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO6tftAnyyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.offset" : 2339,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftProduct<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The algebraic product type. This is an algebraic type that may be used just\nfor logical grouping. Not to confused with TFT_TUPLE which describes a\nconcrete object of several elements.\n\nExample:\n  TFT_DATASET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]]]\n    is a Dataset producing two tensors, an integer one and a float one.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Example: TFT_DATASET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]]] is a Dataset producing two tensors, an integer one and a float one."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"56\" column=\"8\"><Name>tftProduct<\/Name><USR>s:4main22Tensorboard_FullTypeIdO10tftProductyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The algebraic product type. This is an algebraic type that may be used just for logical grouping. Not to confused with TFT_TUPLE which describes a concrete object of several elements.<\/Para><\/Abstract><Discussion><Para>Example: TFT_DATASET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]]] is a Dataset producing two tensors, an integer one and a float one.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 56,
                "key.doc.name" : "tftProduct",
                "key.doc.type" : "Other",
                "key.doclength" : 380,
                "key.docoffset" : 1957,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftProduct<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 56,
                "key.modulename" : "main",
                "key.name" : "tftProduct",
                "key.namelength" : 10,
                "key.nameoffset" : 2344,
                "key.offset" : 2344,
                "key.parsed_declaration" : "case tftProduct",
                "key.parsed_scope.end" : 56,
                "key.parsed_scope.start" : 56,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO10tftProductyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 2895,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftNamed<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Represents a named field, with the name stored in the attribute.\n\nParametrization:\n  TFT_NAMED[<type>]{<name>}\n  * <type> is the type of the field\n  * <name> is the field name, as string (thpugh can theoretically be an int\n    as well)\n\nExample:\n  TFT_RECORD[\n    TFT_NAMED[TFT_TENSOR[TFT_INT32]]{'foo'},\n    TFT_NAMED[TFT_TENSOR[TFT_FLOAT32]]{'bar'},\n  ]\n    is a structure with two fields, an int tensor \"foo\" and a float tensor\n    \"bar\".",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_NAMED[<type>]{<name>}"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Example: TFT_RECORD[ TFT_NAMED[TFT_TENSOR[TFT_INT32]]{‘foo’}, TFT_NAMED[TFT_TENSOR[TFT_FLOAT32]]{‘bar’}, ] is a structure with two fields, an int tensor “foo” and a float tensor “bar”."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"73\" column=\"8\"><Name>tftNamed<\/Name><USR>s:4main22Tensorboard_FullTypeIdO8tftNamedyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Represents a named field, with the name stored in the attribute.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_NAMED[<rawHTML><![CDATA[<type>]]><\/rawHTML>]{<rawHTML><![CDATA[<name>]]><\/rawHTML>}<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<type>]]><\/rawHTML> is the type of the field<\/Para><\/Item><Item><Para><rawHTML><![CDATA[<name>]]><\/rawHTML> is the field name, as string (thpugh can theoretically be an int as well)<\/Para><\/Item><\/List-Bullet><Para>Example: TFT_RECORD[ TFT_NAMED[TFT_TENSOR[TFT_INT32]]{‘foo’}, TFT_NAMED[TFT_TENSOR[TFT_FLOAT32]]{‘bar’}, ] is a structure with two fields, an int tensor “foo” and a float tensor “bar”.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 73,
                "key.doc.name" : "tftNamed",
                "key.doc.type" : "Other",
                "key.doclength" : 528,
                "key.docoffset" : 2365,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftNamed<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 73,
                "key.modulename" : "main",
                "key.name" : "tftNamed",
                "key.namelength" : 8,
                "key.nameoffset" : 2900,
                "key.offset" : 2900,
                "key.parsed_declaration" : "case tftNamed",
                "key.parsed_scope.end" : 73,
                "key.parsed_scope.start" : 73,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftNamedyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.offset" : 3741,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftForEach<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Template definition. Expands the variables by repeating a template as\narguments of container.\n\nParametrization:\n  TFT_FOR_EACH[<container_type>, <template>, <expansions>]\n  * <container_type> is the type of the container that the template will be\n    expanded into\n  * <template> is any type definition that potentially contains type\n    variables\n  * <expansions> is a TFT_VAR and may include more types in the future\n\nExample:\n  TFT_FOR_EACH[\n        TFT_PRODUCT,\n        TFT_TENSOR[TFT_VAR[\"t\"]],\n        TFT_VAR[\"t\"]\n    ]\n    will substitute a T = TFT_INT32 to TFT_PRODUCT[TFT_TENSOR[TFT_INT32]]\n    and a T = (TFT_INT32, TFT_INT64) to\n    TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_INT64]].",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_FOR_EACH[<container_type>, <template>, <expansions>]"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Example: TFT_FOR_EACH[ TFT_PRODUCT, TFT_TENSOR[TFT_VAR[“t”]], TFT_VAR[“t”] ] will substitute a T = TFT_INT32 to TFT_PRODUCT[TFT_TENSOR[TFT_INT32]] and a T = (TFT_INT32, TFT_INT64) to TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_INT64]]."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"95\" column=\"8\"><Name>tftForEach<\/Name><USR>s:4main22Tensorboard_FullTypeIdO10tftForEachyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Template definition. Expands the variables by repeating a template as arguments of container.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_FOR_EACH[&lt;container_type&gt;, <rawHTML><![CDATA[<template>]]><\/rawHTML>, <rawHTML><![CDATA[<expansions>]]><\/rawHTML>]<\/Para><List-Bullet><Item><Para>&lt;container_type&gt; is the type of the container that the template will be expanded into<\/Para><\/Item><Item><Para><rawHTML><![CDATA[<template>]]><\/rawHTML> is any type definition that potentially contains type variables<\/Para><\/Item><Item><Para><rawHTML><![CDATA[<expansions>]]><\/rawHTML> is a TFT_VAR and may include more types in the future<\/Para><\/Item><\/List-Bullet><Para>Example: TFT_FOR_EACH[ TFT_PRODUCT, TFT_TENSOR[TFT_VAR[“t”]], TFT_VAR[“t”] ] will substitute a T = TFT_INT32 to TFT_PRODUCT[TFT_TENSOR[TFT_INT32]] and a T = (TFT_INT32, TFT_INT64) to TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_INT64]].<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 95,
                "key.doc.name" : "tftForEach",
                "key.doc.type" : "Other",
                "key.doclength" : 820,
                "key.docoffset" : 2919,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftForEach<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 95,
                "key.modulename" : "main",
                "key.name" : "tftForEach",
                "key.namelength" : 10,
                "key.nameoffset" : 3746,
                "key.offset" : 3746,
                "key.parsed_declaration" : "case tftForEach",
                "key.parsed_scope.end" : 95,
                "key.parsed_scope.start" : 95,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO10tftForEachyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.offset" : 4470,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftCallable<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Callable types describe functions and ops.\n\nParametrization:\n  TFT_CALLABLE[<arg type>, <return type>]\n  * <arg type> is the type of the arguments; TFT_PRODUCT represents\n  multiple\n    arguments.\n  * <return type> is the return type; TFT_PRODUCT represents multiple\n    return values (that means that callables returning multiple things\n    don't necessarily return a single tuple).\n\nExample:\n  TFT_CALLABLE[\n    TFT_ANY,\n    TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]],\n  ]\n    is a callable with unspecified (for now) input arguments, and\n    two return values of type tensor.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_CALLABLE[<arg type>, <return type>]"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Example: TFT_CALLABLE[ TFT_ANY, TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]], ] is a callable with unspecified (for now) input arguments, and two return values of type tensor."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"115\" column=\"8\"><Name>tftCallable<\/Name><USR>s:4main22Tensorboard_FullTypeIdO11tftCallableyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Callable types describe functions and ops.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_CALLABLE[<rawHTML><![CDATA[<arg type>]]><\/rawHTML>, <rawHTML><![CDATA[<return type>]]><\/rawHTML>]<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<arg type>]]><\/rawHTML> is the type of the arguments; TFT_PRODUCT represents multiple arguments.<\/Para><\/Item><Item><Para><rawHTML><![CDATA[<return type>]]><\/rawHTML> is the return type; TFT_PRODUCT represents multiple return values (that means that callables returning multiple things don’t necessarily return a single tuple).<\/Para><\/Item><\/List-Bullet><Para>Example: TFT_CALLABLE[ TFT_ANY, TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT64]], ] is a callable with unspecified (for now) input arguments, and two return values of type tensor.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 115,
                "key.doc.name" : "tftCallable",
                "key.doc.type" : "Other",
                "key.doclength" : 700,
                "key.docoffset" : 3768,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftCallable<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.line" : 115,
                "key.modulename" : "main",
                "key.name" : "tftCallable",
                "key.namelength" : 11,
                "key.nameoffset" : 4475,
                "key.offset" : 4475,
                "key.parsed_declaration" : "case tftCallable",
                "key.parsed_scope.end" : 115,
                "key.parsed_scope.start" : 115,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO11tftCallableyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 5058,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftTensor<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The usual Tensor. This is a parametric type.\n\nParametrization:\n  TFT_TENSOR[<element type>, <shape type>]\n  * <element type> is currently limited to one of the element types\n    defined below.\n  * <shape type> is not yet defined, and may only be TFT_UNKNOWN for now.\n\nA TFT_SHAPE type will be defined in the future.\n\nExample:\n  TFT_TENSOR[TFT_INT32, TFT_UNKNOWN]\n    is a Tensor of int32 element type and unknown shape.\n\nTODO(mdan): Define TFT_SHAPE and add more examples.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_TENSOR[<element type>, <shape type>]"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "A TFT_SHAPE type will be defined in the future."
                  },
                  {
                    "Para" : "Example: TFT_TENSOR[TFT_INT32, TFT_UNKNOWN] is a Tensor of int32 element type and unknown shape."
                  },
                  {
                    "Para" : "TODO(mdan): Define TFT_SHAPE and add more examples."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"132\" column=\"8\"><Name>tftTensor<\/Name><USR>s:4main22Tensorboard_FullTypeIdO9tftTensoryA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The usual Tensor. This is a parametric type.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_TENSOR[<rawHTML><![CDATA[<element type>]]><\/rawHTML>, <rawHTML><![CDATA[<shape type>]]><\/rawHTML>]<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<element type>]]><\/rawHTML> is currently limited to one of the element types defined below.<\/Para><\/Item><Item><Para><rawHTML><![CDATA[<shape type>]]><\/rawHTML> is not yet defined, and may only be TFT_UNKNOWN for now.<\/Para><\/Item><\/List-Bullet><Para>A TFT_SHAPE type will be defined in the future.<\/Para><Para>Example: TFT_TENSOR[TFT_INT32, TFT_UNKNOWN] is a Tensor of int32 element type and unknown shape.<\/Para><Para>TODO(mdan): Define TFT_SHAPE and add more examples.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 132,
                "key.doc.name" : "tftTensor",
                "key.doc.type" : "Other",
                "key.doclength" : 557,
                "key.docoffset" : 4499,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftTensor<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 132,
                "key.modulename" : "main",
                "key.name" : "tftTensor",
                "key.namelength" : 9,
                "key.nameoffset" : 5063,
                "key.offset" : 5063,
                "key.parsed_declaration" : "case tftTensor",
                "key.parsed_scope.end" : 132,
                "key.parsed_scope.start" : 132,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftTensoryA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 6154,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftArray<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Array (or tensorflow::TensorList in the variant type registry).\nNote: this is not to be confused with the deprecated `TensorArray*` ops\nwhich are not supported by FullType.\nThis type represents a random-access list whose elements can be\ndescribed by a single type. Although immutable, Array is expected to\nsupport efficient mutation semantics (i.e. element update) in the\nuser-facing API.\nThe element type may be generic or even TFT_ANY for a heterogenous list.\n\nParametrization:\n  TFT_ARRAY[<element type>]\n  * <element type> may be any concrete type.\n\nExamples:\n  TFT_ARRAY[TFT_TENSOR[TFT_INT32]] is a TensorArray holding int32 Tensors\n    of any shape.\n  TFT_ARRAY[TFT_TENSOR[TFT_UNKNOWN]] is a TensorArray holding Tensors of\n    mixed element types.\n  TFT_ARRAY[TFT_UNKNOWN] is a TensorArray holding any element type.\n  TFT_ARRAY[] is equivalent to TFT_ARRAY[TFT_UNKNOWN].\n  TFT_ARRAY[TFT_ARRAY[]] is an array or arrays (of unknown types).",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_ARRAY[<element type>]"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Examples: TFT_ARRAY[TFT_TENSOR[TFT_INT32]] is a TensorArray holding int32 Tensors of any shape. TFT_ARRAY[TFT_TENSOR[TFT_UNKNOWN]] is a TensorArray holding Tensors of mixed element types. TFT_ARRAY[TFT_UNKNOWN] is a TensorArray holding any element type. TFT_ARRAY[] is equivalent to TFT_ARRAY[TFT_UNKNOWN]. TFT_ARRAY[TFT_ARRAY[]] is an array or arrays (of unknown types)."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"155\" column=\"8\"><Name>tftArray<\/Name><USR>s:4main22Tensorboard_FullTypeIdO8tftArrayyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Array (or tensorflow::TensorList in the variant type registry). Note: this is not to be confused with the deprecated <codeVoice>TensorArray*<\/codeVoice> ops which are not supported by FullType. This type represents a random-access list whose elements can be described by a single type. Although immutable, Array is expected to support efficient mutation semantics (i.e. element update) in the user-facing API. The element type may be generic or even TFT_ANY for a heterogenous list.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_ARRAY[<rawHTML><![CDATA[<element type>]]><\/rawHTML>]<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<element type>]]><\/rawHTML> may be any concrete type.<\/Para><\/Item><\/List-Bullet><Para>Examples: TFT_ARRAY[TFT_TENSOR[TFT_INT32]] is a TensorArray holding int32 Tensors of any shape. TFT_ARRAY[TFT_TENSOR[TFT_UNKNOWN]] is a TensorArray holding Tensors of mixed element types. TFT_ARRAY[TFT_UNKNOWN] is a TensorArray holding any element type. TFT_ARRAY[] is equivalent to TFT_ARRAY[TFT_UNKNOWN]. TFT_ARRAY[TFT_ARRAY[]] is an array or arrays (of unknown types).<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 155,
                "key.doc.name" : "tftArray",
                "key.doc.type" : "Other",
                "key.doclength" : 1066,
                "key.docoffset" : 5086,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftArray<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 155,
                "key.modulename" : "main",
                "key.name" : "tftArray",
                "key.namelength" : 8,
                "key.nameoffset" : 6159,
                "key.offset" : 6159,
                "key.parsed_declaration" : "case tftArray",
                "key.parsed_scope.end" : 155,
                "key.parsed_scope.start" : 155,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftArrayyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.offset" : 6625,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftOptional<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Optional (or tensorflow::OptionalVariant in the variant type registry).\nThis type represents a value that may either hold an element of a single\nspecified type, or nothing at all.\n\nParametrization:\n  TFT_OPTIONAL[<element type>]\n  * <element type> may be any concrete type.\n\nExamples:\n  TFT_OPTIONAL[TFT_TENSOR[TFT_INT32]] is an Optional holding an int32\n    Tensor of any shape.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_OPTIONAL[<element type>]"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Examples: TFT_OPTIONAL[TFT_TENSOR[TFT_INT32]] is an Optional holding an int32 Tensor of any shape."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"168\" column=\"8\"><Name>tftOptional<\/Name><USR>s:4main22Tensorboard_FullTypeIdO11tftOptionalyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Optional (or tensorflow::OptionalVariant in the variant type registry). This type represents a value that may either hold an element of a single specified type, or nothing at all.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_OPTIONAL[<rawHTML><![CDATA[<element type>]]><\/rawHTML>]<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<element type>]]><\/rawHTML> may be any concrete type.<\/Para><\/Item><\/List-Bullet><Para>Examples: TFT_OPTIONAL[TFT_TENSOR[TFT_INT32]] is an Optional holding an int32 Tensor of any shape.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 168,
                "key.doc.name" : "tftOptional",
                "key.doc.type" : "Other",
                "key.doclength" : 442,
                "key.docoffset" : 6181,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftOptional<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.line" : 168,
                "key.modulename" : "main",
                "key.name" : "tftOptional",
                "key.namelength" : 11,
                "key.nameoffset" : 6630,
                "key.offset" : 6630,
                "key.parsed_declaration" : "case tftOptional",
                "key.parsed_scope.end" : 168,
                "key.parsed_scope.start" : 168,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO11tftOptionalyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.offset" : 7094,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftLiteral<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Literal types describe compile-time constant values.\nLiteral types may also participate in dependent types.\n\nParametrization:\n  TFT_LITERAL[<value type>]{<value>}\n  * <value type> may be any concrete type compatible that can hold <value>\n  * <value> is the type's attribute, and holds the actual literal value\n\nExamples:\n  TFT_LITERAL[TFT_INT32]{1} is the compile-time constant 1.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_LITERAL[<value type>]{<value>}"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Examples: TFT_LITERAL[TFT_INT32]{1} is the compile-time constant 1."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"180\" column=\"8\"><Name>tftLiteral<\/Name><USR>s:4main22Tensorboard_FullTypeIdO10tftLiteralyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Literal types describe compile-time constant values. Literal types may also participate in dependent types.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_LITERAL[<rawHTML><![CDATA[<value type>]]><\/rawHTML>]{<rawHTML><![CDATA[<value>]]><\/rawHTML>}<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<value type>]]><\/rawHTML> may be any concrete type compatible that can hold <rawHTML><![CDATA[<value>]]><\/rawHTML><\/Para><\/Item><Item><Para><rawHTML><![CDATA[<value>]]><\/rawHTML> is the type’s attribute, and holds the actual literal value<\/Para><\/Item><\/List-Bullet><Para>Examples: TFT_LITERAL[TFT_INT32]{1} is the compile-time constant 1.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 180,
                "key.doc.name" : "tftLiteral",
                "key.doc.type" : "Other",
                "key.doclength" : 437,
                "key.docoffset" : 6655,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftLiteral<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 180,
                "key.modulename" : "main",
                "key.name" : "tftLiteral",
                "key.namelength" : 10,
                "key.nameoffset" : 7099,
                "key.offset" : 7099,
                "key.parsed_declaration" : "case tftLiteral",
                "key.parsed_scope.end" : 180,
                "key.parsed_scope.start" : 180,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO10tftLiteralyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 12,
            "key.offset" : 7221,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftBool<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The bool element type.\nTODO(mdan): Quantized types, legacy representations (e.g. ref)",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"184\" column=\"8\"><Name>tftBool<\/Name><USR>s:4main22Tensorboard_FullTypeIdO7tftBoolyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The bool element type. TODO(mdan): Quantized types, legacy representations (e.g. ref)<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 184,
                "key.doc.name" : "tftBool",
                "key.doc.type" : "Other",
                "key.doclength" : 96,
                "key.docoffset" : 7123,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftBool<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 7,
                "key.line" : 184,
                "key.modulename" : "main",
                "key.name" : "tftBool",
                "key.namelength" : 7,
                "key.nameoffset" : 7226,
                "key.offset" : 7226,
                "key.parsed_declaration" : "case tftBool",
                "key.parsed_scope.end" : 184,
                "key.parsed_scope.start" : 184,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO7tftBoolyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 7275,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftUint8<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Integer element types.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"187\" column=\"8\"><Name>tftUint8<\/Name><USR>s:4main22Tensorboard_FullTypeIdO8tftUint8yA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Integer element types.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 187,
                "key.doc.name" : "tftUint8",
                "key.doc.type" : "Other",
                "key.doclength" : 27,
                "key.docoffset" : 7246,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftUint8<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 187,
                "key.modulename" : "main",
                "key.name" : "tftUint8",
                "key.namelength" : 8,
                "key.nameoffset" : 7280,
                "key.offset" : 7280,
                "key.parsed_declaration" : "case tftUint8",
                "key.parsed_scope.end" : 187,
                "key.parsed_scope.start" : 187,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftUint8yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 7300,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftUint16<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftUint16<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 188,
                "key.modulename" : "main",
                "key.name" : "tftUint16",
                "key.namelength" : 9,
                "key.nameoffset" : 7305,
                "key.offset" : 7305,
                "key.parsed_declaration" : "case tftUint16",
                "key.parsed_scope.end" : 188,
                "key.parsed_scope.start" : 188,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftUint16yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 7326,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftUint32<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftUint32<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 189,
                "key.modulename" : "main",
                "key.name" : "tftUint32",
                "key.namelength" : 9,
                "key.nameoffset" : 7331,
                "key.offset" : 7331,
                "key.parsed_declaration" : "case tftUint32",
                "key.parsed_scope.end" : 189,
                "key.parsed_scope.start" : 189,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftUint32yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 7352,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftUint64<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftUint64<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 190,
                "key.modulename" : "main",
                "key.name" : "tftUint64",
                "key.namelength" : 9,
                "key.nameoffset" : 7357,
                "key.offset" : 7357,
                "key.parsed_declaration" : "case tftUint64",
                "key.parsed_scope.end" : 190,
                "key.parsed_scope.start" : 190,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftUint64yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 12,
            "key.offset" : 7378,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftInt8<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftInt8<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 7,
                "key.line" : 191,
                "key.modulename" : "main",
                "key.name" : "tftInt8",
                "key.namelength" : 7,
                "key.nameoffset" : 7383,
                "key.offset" : 7383,
                "key.parsed_declaration" : "case tftInt8",
                "key.parsed_scope.end" : 191,
                "key.parsed_scope.start" : 191,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO7tftInt8yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 7402,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftInt16<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftInt16<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 192,
                "key.modulename" : "main",
                "key.name" : "tftInt16",
                "key.namelength" : 8,
                "key.nameoffset" : 7407,
                "key.offset" : 7407,
                "key.parsed_declaration" : "case tftInt16",
                "key.parsed_scope.end" : 192,
                "key.parsed_scope.start" : 192,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftInt16yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 7427,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftInt32<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftInt32<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 193,
                "key.modulename" : "main",
                "key.name" : "tftInt32",
                "key.namelength" : 8,
                "key.nameoffset" : 7432,
                "key.offset" : 7432,
                "key.parsed_declaration" : "case tftInt32",
                "key.parsed_scope.end" : 193,
                "key.parsed_scope.start" : 193,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftInt32yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 7452,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftInt64<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftInt64<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 194,
                "key.modulename" : "main",
                "key.name" : "tftInt64",
                "key.namelength" : 8,
                "key.nameoffset" : 7457,
                "key.offset" : 7457,
                "key.parsed_declaration" : "case tftInt64",
                "key.parsed_scope.end" : 194,
                "key.parsed_scope.start" : 194,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftInt64yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 12,
            "key.offset" : 7514,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftHalf<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Floating-point element types.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"197\" column=\"8\"><Name>tftHalf<\/Name><USR>s:4main22Tensorboard_FullTypeIdO7tftHalfyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Floating-point element types.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 197,
                "key.doc.name" : "tftHalf",
                "key.doc.type" : "Other",
                "key.doclength" : 34,
                "key.docoffset" : 7478,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftHalf<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 7,
                "key.line" : 197,
                "key.modulename" : "main",
                "key.name" : "tftHalf",
                "key.namelength" : 7,
                "key.nameoffset" : 7519,
                "key.offset" : 7519,
                "key.parsed_declaration" : "case tftHalf",
                "key.parsed_scope.end" : 197,
                "key.parsed_scope.start" : 197,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO7tftHalfyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.offset" : 7538,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftFloat<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftFloat<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 198,
                "key.modulename" : "main",
                "key.name" : "tftFloat",
                "key.namelength" : 8,
                "key.nameoffset" : 7543,
                "key.offset" : 7543,
                "key.parsed_declaration" : "case tftFloat",
                "key.parsed_scope.end" : 198,
                "key.parsed_scope.start" : 198,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO8tftFloatyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 7563,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftDouble<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftDouble<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 199,
                "key.modulename" : "main",
                "key.name" : "tftDouble",
                "key.namelength" : 9,
                "key.nameoffset" : 7568,
                "key.offset" : 7568,
                "key.parsed_declaration" : "case tftDouble",
                "key.parsed_scope.end" : 199,
                "key.parsed_scope.start" : 199,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftDoubleyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.offset" : 7589,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftBfloat16<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftBfloat16<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.line" : 200,
                "key.modulename" : "main",
                "key.name" : "tftBfloat16",
                "key.namelength" : 11,
                "key.nameoffset" : 7594,
                "key.offset" : 7594,
                "key.parsed_declaration" : "case tftBfloat16",
                "key.parsed_scope.end" : 200,
                "key.parsed_scope.start" : 200,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO11tftBfloat16yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.offset" : 7711,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftComplex64<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Complex element types.\nTODO(mdan): Represent as TFT_COMPLEX[TFT_DOUBLE] instead?",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"204\" column=\"8\"><Name>tftComplex64<\/Name><USR>s:4main22Tensorboard_FullTypeIdO12tftComplex64yA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Complex element types. TODO(mdan): Represent as TFT_COMPLEX[TFT_DOUBLE] instead?<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 204,
                "key.doc.name" : "tftComplex64",
                "key.doc.type" : "Other",
                "key.doclength" : 91,
                "key.docoffset" : 7618,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftComplex64<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.line" : 204,
                "key.modulename" : "main",
                "key.name" : "tftComplex64",
                "key.namelength" : 12,
                "key.nameoffset" : 7716,
                "key.offset" : 7716,
                "key.parsed_declaration" : "case tftComplex64",
                "key.parsed_scope.end" : 204,
                "key.parsed_scope.start" : 204,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO12tftComplex64yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 18,
            "key.offset" : 7740,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftComplex128<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftComplex128<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 13,
                "key.line" : 205,
                "key.modulename" : "main",
                "key.name" : "tftComplex128",
                "key.namelength" : 13,
                "key.nameoffset" : 7745,
                "key.offset" : 7745,
                "key.parsed_declaration" : "case tftComplex128",
                "key.parsed_scope.end" : 205,
                "key.parsed_scope.start" : 205,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO13tftComplex128yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 7802,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftString<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The string element type.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"208\" column=\"8\"><Name>tftString<\/Name><USR>s:4main22Tensorboard_FullTypeIdO9tftStringyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The string element type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 208,
                "key.doc.name" : "tftString",
                "key.doc.type" : "Other",
                "key.doclength" : 29,
                "key.docoffset" : 7771,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftString<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 208,
                "key.modulename" : "main",
                "key.name" : "tftString",
                "key.namelength" : 9,
                "key.nameoffset" : 7807,
                "key.offset" : 7807,
                "key.parsed_declaration" : "case tftString",
                "key.parsed_scope.end" : 208,
                "key.parsed_scope.start" : 208,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftStringyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.offset" : 8956,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftDataset<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "Datasets created by tf.data ops and APIs. Datasets have generator\/iterable\nsemantics, that is, one can construct an iterator from them. Like\nArray, they are considered to return elements that can be described\nby a single type. Unlike Array, they do not support random access or\nmutation, and can potentially produce an infinite number of elements.\nA datasets can produce logical structures (e.g. multiple elements). This\nis expressed using TFT_PRODUCT.\n\n\nParametrization: TFT_ARRAY[<element type>].\n  * <element type> may be a concrete type or a type symbol. It represents\n    the data type of the elements produced by the dataset.\n\nExamples:\n  TFT_DATSET[TFT_TENSOR[TFT_INT32]] is a Dataset producing single int32\n    Tensors of unknown shape.\n  TFT_DATSET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT32]] is\n    a Dataset producing pairs of Tensors, one integer and one float.\nNote: The high ID number is to prepare for the eventuality that Datasets\nwill be supported by user types in the future.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_ARRAY[<element type>]."
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Para" : "Examples: TFT_DATSET[TFT_TENSOR[TFT_INT32]] is a Dataset producing single int32 Tensors of unknown shape. TFT_DATSET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT32]] is a Dataset producing pairs of Tensors, one integer and one float. Note: The high ID number is to prepare for the eventuality that Datasets will be supported by user types in the future."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"230\" column=\"8\"><Name>tftDataset<\/Name><USR>s:4main22Tensorboard_FullTypeIdO10tftDatasetyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Datasets created by tf.data ops and APIs. Datasets have generator\/iterable semantics, that is, one can construct an iterator from them. Like Array, they are considered to return elements that can be described by a single type. Unlike Array, they do not support random access or mutation, and can potentially produce an infinite number of elements. A datasets can produce logical structures (e.g. multiple elements). This is expressed using TFT_PRODUCT.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_ARRAY[<rawHTML><![CDATA[<element type>]]><\/rawHTML>].<\/Para><List-Bullet><Item><Para><rawHTML><![CDATA[<element type>]]><\/rawHTML> may be a concrete type or a type symbol. It represents the data type of the elements produced by the dataset.<\/Para><\/Item><\/List-Bullet><Para>Examples: TFT_DATSET[TFT_TENSOR[TFT_INT32]] is a Dataset producing single int32 Tensors of unknown shape. TFT_DATSET[TFT_PRODUCT[TFT_TENSOR[TFT_INT32], TFT_TENSOR[TFT_FLOAT32]] is a Dataset producing pairs of Tensors, one integer and one float. Note: The high ID number is to prepare for the eventuality that Datasets will be supported by user types in the future.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 230,
                "key.doc.name" : "tftDataset",
                "key.doc.type" : "Other",
                "key.doclength" : 1125,
                "key.docoffset" : 7829,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftDataset<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 230,
                "key.modulename" : "main",
                "key.name" : "tftDataset",
                "key.namelength" : 10,
                "key.nameoffset" : 8961,
                "key.offset" : 8961,
                "key.parsed_declaration" : "case tftDataset",
                "key.parsed_scope.end" : 230,
                "key.parsed_scope.start" : 230,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO10tftDatasetyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.offset" : 9100,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftRagged<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "A ragged tensor created by tf.ragged ops and APIs.\n\nParametrization: TFT_RAGGED[<element_type>].",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_RAGGED[<element_type>]."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"235\" column=\"8\"><Name>tftRagged<\/Name><USR>s:4main22Tensorboard_FullTypeIdO9tftRaggedyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>A ragged tensor created by tf.ragged ops and APIs.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_RAGGED[&lt;element_type&gt;].<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 235,
                "key.doc.name" : "tftRagged",
                "key.doc.type" : "Other",
                "key.doclength" : 112,
                "key.docoffset" : 8986,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftRagged<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.line" : 235,
                "key.modulename" : "main",
                "key.name" : "tftRagged",
                "key.namelength" : 9,
                "key.nameoffset" : 9105,
                "key.offset" : 9105,
                "key.parsed_declaration" : "case tftRagged",
                "key.parsed_scope.end" : 235,
                "key.parsed_scope.start" : 235,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO9tftRaggedyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.offset" : 9607,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftMutexLock<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "A mutex lock tensor, produced by tf.raw_ops.MutexLock.\nUnlike strict execution models, where ownership of a lock is denoted by\n\"running after the lock has been acquired\", in non-strict mode, lock\nownership is in the true sense: \"the op argument representing the lock is\navailable\".\nMutex locks are the dynamic counterpart of control dependencies.\nTODO(mdan): Properly document this thing.\n\nParametrization: TFT_MUTEX_LOCK[].",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Parametrization: TFT_MUTEX_LOCK[]."
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"246\" column=\"8\"><Name>tftMutexLock<\/Name><USR>s:4main22Tensorboard_FullTypeIdO12tftMutexLockyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>A mutex lock tensor, produced by tf.raw_ops.MutexLock. Unlike strict execution models, where ownership of a lock is denoted by “running after the lock has been acquired”, in non-strict mode, lock ownership is in the true sense: “the op argument representing the lock is available”. Mutex locks are the dynamic counterpart of control dependencies. TODO(mdan): Properly document this thing.<\/Para><\/Abstract><Discussion><Para>Parametrization: TFT_MUTEX_LOCK[].<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 246,
                "key.doc.name" : "tftMutexLock",
                "key.doc.type" : "Other",
                "key.doclength" : 476,
                "key.docoffset" : 9129,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftMutexLock<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.line" : 246,
                "key.modulename" : "main",
                "key.name" : "tftMutexLock",
                "key.namelength" : 12,
                "key.nameoffset" : 9612,
                "key.offset" : 9612,
                "key.parsed_declaration" : "case tftMutexLock",
                "key.parsed_scope.end" : 246,
                "key.parsed_scope.start" : 246,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO12tftMutexLockyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 21,
            "key.offset" : 9915,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case tftLegacyVariant<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 8,
                "key.doc.comment" : "The equivalent of a Tensor with DT_VARIANT dtype, kept here to simplify\ntranslation. This type should not normally appear after type inference.\nNote that LEGACY_VARIANT != ANY: TENSOR[INT32] is a subtype of ANY, but is\nnot a subtype of LEGACY_VARIANT.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"252\" column=\"8\"><Name>tftLegacyVariant<\/Name><USR>s:4main22Tensorboard_FullTypeIdO16tftLegacyVariantyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The equivalent of a Tensor with DT_VARIANT dtype, kept here to simplify translation. This type should not normally appear after type inference. Note that LEGACY_VARIANT != ANY: TENSOR[INT32] is a subtype of ANY, but is not a subtype of LEGACY_VARIANT.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 252,
                "key.doc.name" : "tftLegacyVariant",
                "key.doc.type" : "Other",
                "key.doclength" : 274,
                "key.docoffset" : 9639,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>tftLegacyVariant<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 16,
                "key.line" : 252,
                "key.modulename" : "main",
                "key.name" : "tftLegacyVariant",
                "key.namelength" : 16,
                "key.nameoffset" : 9920,
                "key.offset" : 9920,
                "key.parsed_declaration" : "case tftLegacyVariant",
                "key.parsed_scope.end" : 252,
                "key.parsed_scope.start" : 252,
                "key.reusingastcontext" : false,
                "key.typename" : "(Tensorboard_FullTypeId.Type) -> Tensorboard_FullTypeId",
                "key.typeusr" : "$sy4main22Tensorboard_FullTypeIdOACmcD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO16tftLegacyVariantyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 22,
            "key.offset" : 9950,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case UNRECOGNIZED(<Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                "key.column" : 8,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>UNRECOGNIZED<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 17,
                "key.line" : 253,
                "key.modulename" : "main",
                "key.name" : "UNRECOGNIZED(_:)",
                "key.namelength" : 17,
                "key.nameoffset" : 9955,
                "key.offset" : 9955,
                "key.parsed_declaration" : "case UNRECOGNIZED(Int)",
                "key.parsed_scope.end" : 253,
                "key.parsed_scope.start" : 253,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main22Tensorboard_FullTypeIdO12UNRECOGNIZED33_2093C02B6C75DA1D2AD141260D569941LLXeF"
              }
            ]
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init()<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 9984,
            "key.column" : 3,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 33,
            "key.line" : 255,
            "key.modulename" : "main",
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 9976,
            "key.offset" : 9976,
            "key.parsed_declaration" : "init()",
            "key.parsed_scope.end" : 257,
            "key.parsed_scope.start" : 255,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4main22Tensorboard_FullTypeIdO8rawValueACSgSi_tcfc\">init(rawValue:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "(Tensorboard_FullTypeId.Type) -> () -> Tensorboard_FullTypeId",
            "key.typeusr" : "$s4main22Tensorboard_FullTypeIdOycD",
            "key.usr" : "s:4main22Tensorboard_FullTypeIdOACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init?(rawValue: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.bodylength" : 1075,
            "key.bodyoffset" : 10035,
            "key.column" : 3,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>rawValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1098,
            "key.line" : 259,
            "key.modulename" : "main",
            "key.name" : "init(rawValue:)",
            "key.namelength" : 20,
            "key.nameoffset" : 10013,
            "key.offset" : 10013,
            "key.parsed_declaration" : "init?(rawValue: Int)",
            "key.parsed_scope.end" : 294,
            "key.parsed_scope.start" : 259,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4main22Tensorboard_FullTypeIdOACycfc\">init()<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(Tensorboard_FullTypeId.Type) -> (Int) -> Tensorboard_FullTypeId?",
            "key.typeusr" : "$s8rawValue4main22Tensorboard_FullTypeIdOSgSi_tcD",
            "key.usr" : "s:4main22Tensorboard_FullTypeIdO8rawValueACSgSi_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var rawValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 1067,
            "key.bodyoffset" : 11134,
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 1087,
            "key.line" : 296,
            "key.modulename" : "main",
            "key.name" : "rawValue",
            "key.namelength" : 8,
            "key.nameoffset" : 11119,
            "key.offset" : 11115,
            "key.parsed_declaration" : "var rawValue: Int",
            "key.parsed_scope.end" : 331,
            "key.parsed_scope.start" : 296,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main22Tensorboard_FullTypeIdO8rawValueSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let allCases: [<Type usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/Type>]<\/Declaration>",
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "static var allCases: Self.AllCases { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>allCases<\/Name><USR>s:s12CaseIterableP8allCases03AllD0QzvpZ<\/USR><Declaration>static var allCases: Self.AllCases { get }<\/Declaration><CommentParts><Abstract><Para>A collection of all values of this type.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>CaseIterable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "allCases",
            "key.doc.type" : "Other",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allCases<\/decl.name>: <decl.var.type>[<ref.enum usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/ref.enum>]<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 556,
            "key.line" : 334,
            "key.modulename" : "main",
            "key.name" : "allCases",
            "key.namelength" : 8,
            "key.nameoffset" : 12288,
            "key.offset" : 12277,
            "key.overrides" : [
              {
                "key.usr" : "s:s12CaseIterableP8allCases03AllD0QzvpZ"
              }
            ],
            "key.parsed_declaration" : "static let allCases: [Tensorboard_FullTypeId] = [\n  .tftUnset,\n  .tftVar,\n  .tftAny,\n  .tftProduct,\n  .tftNamed,\n  .tftForEach,\n  .tftCallable,\n  .tftTensor,\n  .tftArray,\n  .tftOptional,\n  .tftLiteral,\n  .tftBool,\n  .tftUint8,\n  .tftUint16,\n  .tftUint32,\n  .tftUint64,\n  .tftInt8,\n  .tftInt16,\n  .tftInt32,\n  .tftInt64,\n  .tftHalf,\n  .tftFloat,\n  .tftDouble,\n  .tftBfloat16,\n  .tftComplex64,\n  .tftComplex128,\n  .tftString,\n  .tftDataset,\n  .tftRagged,\n  .tftMutexLock,\n  .tftLegacyVariant,\n]",
            "key.parsed_scope.end" : 334,
            "key.parsed_scope.start" : 334,
            "key.reusingastcontext" : false,
            "key.typename" : "[Tensorboard_FullTypeId]",
            "key.typeusr" : "$sSay4main22Tensorboard_FullTypeIdOGD",
            "key.usr" : "s:s12CaseIterableP8allCases03AllD0QzvpZ"
          }
        ],
        "key.typename" : "Tensorboard_FullTypeId.Type",
        "key.typeusr" : "$s4main22Tensorboard_FullTypeIdOmD",
        "key.usr" : "s:4main22Tensorboard_FullTypeIdO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct Tensorboard_FullTypeDef : <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 1681,
        "key.bodyoffset" : 13165,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 8,
        "key.doc.comment" : "Highly experimental and very likely to change.\nThis encoding uses tags instead of dedicated messages for regularity. In\nparticular the encoding imposes no restrictions on what the parameters of any\ntype should be, which in particular needs to be true for type symbols.",
        "key.doc.declaration" : "struct Tensorboard_FullTypeDef : Sendable",
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"374\" column=\"8\"><Name>Tensorboard_FullTypeDef<\/Name><USR>s:4main23Tensorboard_FullTypeDefV<\/USR><Declaration>struct Tensorboard_FullTypeDef : Sendable<\/Declaration><CommentParts><Abstract><Para>Highly experimental and very likely to change. This encoding uses tags instead of dedicated messages for regularity. In particular the encoding imposes no restrictions on what the parameters of any type should be, which in particular needs to be true for type symbols.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 374,
        "key.doc.name" : "Tensorboard_FullTypeDef",
        "key.doc.type" : "Class",
        "key.doclength" : 285,
        "key.docoffset" : 12838,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 13155
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Tensorboard_FullTypeDef<\/decl.name> : <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Sendable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1724,
        "key.line" : 374,
        "key.modulename" : "main",
        "key.name" : "Tensorboard_FullTypeDef",
        "key.namelength" : 23,
        "key.nameoffset" : 13130,
        "key.offset" : 13123,
        "key.parsed_declaration" : "struct Tensorboard_FullTypeDef: Sendable",
        "key.parsed_scope.end" : 423,
        "key.parsed_scope.start" : 374,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var typeID: <Type usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 7,
            "key.doc.comment" : "The principal type represented by this object. This may be a concrete type\n(Tensor, Dataset) a type variable (used for dependent types) a type\nsymbol (Any, Union). See FullTypeId for details.",
            "key.doc.declaration" : "var typeID: Tensorboard_FullTypeId",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"382\" column=\"7\"><Name>typeID<\/Name><USR>s:4main23Tensorboard_FullTypeDefV6typeIDAA0b1_cD2IdOvp<\/USR><Declaration>var typeID: Tensorboard_FullTypeId<\/Declaration><CommentParts><Abstract><Para>The principal type represented by this object. This may be a concrete type (Tensor, Dataset) a type variable (used for dependent types) a type symbol (Any, Union). See FullTypeId for details.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 382,
            "key.doc.name" : "typeID",
            "key.doc.type" : "Other",
            "key.doclength" : 208,
            "key.docoffset" : 13367,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>typeID<\/decl.name>: <decl.var.type><ref.enum usr=\"s:4main22Tensorboard_FullTypeIdO\">Tensorboard_FullTypeId<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.line" : 382,
            "key.modulename" : "main",
            "key.name" : "typeID",
            "key.namelength" : 6,
            "key.nameoffset" : 13581,
            "key.offset" : 13577,
            "key.parsed_declaration" : "var typeID: Tensorboard_FullTypeId = .tftUnset",
            "key.parsed_scope.end" : 382,
            "key.parsed_scope.start" : 382,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Tensorboard_FullTypeId",
            "key.typeusr" : "$s4main22Tensorboard_FullTypeIdOD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV6typeIDAA0b1_cD2IdOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var args: [<Type usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/Type>]<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>args<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 40,
            "key.line" : 384,
            "key.modulename" : "main",
            "key.name" : "args",
            "key.namelength" : 4,
            "key.nameoffset" : 13631,
            "key.offset" : 13627,
            "key.parsed_declaration" : "var args: [Tensorboard_FullTypeDef] = []",
            "key.parsed_scope.end" : 384,
            "key.parsed_scope.start" : 384,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[Tensorboard_FullTypeDef]",
            "key.typeusr" : "$sSay4main23Tensorboard_FullTypeDefVGD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV4argsSayACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var attr: <Type usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/Type>.<Type usr=\"s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO\">OneOf_Attr<\/Type>?<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 7,
            "key.doc.comment" : "Literal values of this type object, if the the type admits one.\nFor example, a type variable admits a string attribute - its name.\nShape-related types may admit int attributes - their static shape values.\nFields for more data types to be added as needed.",
            "key.doc.declaration" : "var attr: Tensorboard_FullTypeDef.OneOf_Attr?",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"390\" column=\"7\"><Name>attr<\/Name><USR>s:4main23Tensorboard_FullTypeDefV4attrAC10OneOf_AttrOSgvp<\/USR><Declaration>var attr: Tensorboard_FullTypeDef.OneOf_Attr?<\/Declaration><CommentParts><Abstract><Para>Literal values of this type object, if the the type admits one. For example, a type variable admits a string attribute - its name. Shape-related types may admit int attributes - their static shape values. Fields for more data types to be added as needed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 390,
            "key.doc.name" : "attr",
            "key.doc.type" : "Other",
            "key.doclength" : 277,
            "key.docoffset" : 13671,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>attr<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/ref.struct>.<ref.enum usr=\"s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO\">OneOf_Attr<\/ref.enum>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 390,
            "key.modulename" : "main",
            "key.name" : "attr",
            "key.namelength" : 4,
            "key.nameoffset" : 13954,
            "key.offset" : 13950,
            "key.parsed_declaration" : "var attr: Tensorboard_FullTypeDef.OneOf_Attr? = nil",
            "key.parsed_scope.end" : 390,
            "key.parsed_scope.start" : 390,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Tensorboard_FullTypeDef.OneOf_Attr?",
            "key.typeusr" : "$s4main23Tensorboard_FullTypeDefV10OneOf_AttrOSgD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV4attrAC10OneOf_AttrOSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var s: <Type usr=\"s:SS\">String<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 114,
            "key.bodyoffset" : 14020,
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>s<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 130,
            "key.line" : 392,
            "key.modulename" : "main",
            "key.name" : "s",
            "key.namelength" : 1,
            "key.nameoffset" : 14009,
            "key.offset" : 14005,
            "key.parsed_declaration" : "var s: String",
            "key.parsed_scope.end" : 398,
            "key.parsed_scope.start" : 392,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV1sSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var i: <Type usr=\"s:s5Int64V\">Int64<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 107,
            "key.bodyoffset" : 14229,
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 7,
            "key.doc.comment" : "TODO(mdan): list\/tensor, map? Need to reconcile with TFT_RECORD, etc.",
            "key.doc.declaration" : "var i: Int64 { get set }",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"401\" column=\"7\"><Name>i<\/Name><USR>s:4main23Tensorboard_FullTypeDefV1is5Int64Vvp<\/USR><Declaration>var i: Int64 { get set }<\/Declaration><CommentParts><Abstract><Para>TODO(mdan): list\/tensor, map? Need to reconcile with TFT_RECORD, etc.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 401,
            "key.doc.name" : "i",
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 14139,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>i<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 122,
            "key.line" : 401,
            "key.modulename" : "main",
            "key.name" : "i",
            "key.namelength" : 1,
            "key.nameoffset" : 14219,
            "key.offset" : 14215,
            "key.parsed_declaration" : "var i: Int64",
            "key.parsed_scope.end" : 407,
            "key.parsed_scope.start" : 401,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Int64",
            "key.typeusr" : "$ss5Int64VD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV1is5Int64Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var unknownFields: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>unknownFields<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 409,
            "key.modulename" : "main",
            "key.name" : "unknownFields",
            "key.namelength" : 13,
            "key.nameoffset" : 14345,
            "key.offset" : 14341,
            "key.parsed_declaration" : "var unknownFields = SwiftProtobuf.UnknownStorage()",
            "key.parsed_scope.end" : 409,
            "key.parsed_scope.start" : 409,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV13unknownFieldsXevp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/Type>.OneOf_Attr : <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
            "key.bodylength" : 119,
            "key.bodyoffset" : 14712,
            "key.column" : 8,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 8,
            "key.doc.comment" : "Literal values of this type object, if the the type admits one.\nFor example, a type variable admits a string attribute - its name.\nShape-related types may admit int attributes - their static shape values.\nFields for more data types to be added as needed.",
            "key.doc.declaration" : "enum main.Tensorboard_FullTypeDef.OneOf_Attr : Equatable, Sendable",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"415\" column=\"8\"><Name>OneOf_Attr<\/Name><USR>s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO<\/USR><Declaration>enum main.Tensorboard_FullTypeDef.OneOf_Attr : Equatable, Sendable<\/Declaration><CommentParts><Abstract><Para>Literal values of this type object, if the the type admits one. For example, a type variable admits a string attribute - its name. Shape-related types may admit int attributes - their static shape values. Fields for more data types to be added as needed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 415,
            "key.doc.name" : "OneOf_Attr",
            "key.doc.type" : "Other",
            "key.doclength" : 277,
            "key.docoffset" : 14395,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 9,
                "key.offset" : 14691
              },
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 14702
              }
            ],
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.struct usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/ref.struct>.<decl.name>OneOf_Attr<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Equatable"
              },
              {
                "key.name" : "Sendable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 158,
            "key.line" : 415,
            "key.modulename" : "main",
            "key.name" : "OneOf_Attr",
            "key.namelength" : 10,
            "key.nameoffset" : 14679,
            "key.offset" : 14674,
            "key.parsed_declaration" : "enum OneOf_Attr: Equatable, Sendable",
            "key.parsed_scope.end" : 420,
            "key.parsed_scope.start" : 415,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.offset" : 14717,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case s(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.column" : 10,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>s<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.line" : 416,
                    "key.modulename" : "main",
                    "key.name" : "s(_:)",
                    "key.namelength" : 9,
                    "key.nameoffset" : 14722,
                    "key.offset" : 14722,
                    "key.parsed_declaration" : "case s(String)",
                    "key.parsed_scope.end" : 416,
                    "key.parsed_scope.start" : 416,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(Tensorboard_FullTypeDef.OneOf_Attr.Type) -> (String) -> Tensorboard_FullTypeDef.OneOf_Attr",
                    "key.typeusr" : "$sy4main23Tensorboard_FullTypeDefV10OneOf_AttrOSScAEmcD",
                    "key.usr" : "s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO1syAESScAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.offset" : 14814,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case i(<Type usr=\"s:s5Int64V\">Int64<\/Type>)<\/Declaration>",
                    "key.column" : 10,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "TODO(mdan): list\/tensor, map? Need to reconcile with TFT_RECORD, etc.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"418\" column=\"10\"><Name>i(_:)<\/Name><USR>s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO1iyAEs5Int64VcAEmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>TODO(mdan): list\/tensor, map? Need to reconcile with TFT_RECORD, etc.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 418,
                    "key.doc.name" : "i(_:)",
                    "key.doc.type" : "Other",
                    "key.doclength" : 74,
                    "key.docoffset" : 14736,
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>i<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.line" : 418,
                    "key.modulename" : "main",
                    "key.name" : "i(_:)",
                    "key.namelength" : 8,
                    "key.nameoffset" : 14819,
                    "key.offset" : 14819,
                    "key.parsed_declaration" : "case i(Int64)",
                    "key.parsed_scope.end" : 418,
                    "key.parsed_scope.start" : 418,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(Tensorboard_FullTypeDef.OneOf_Attr.Type) -> (Int64) -> Tensorboard_FullTypeDef.OneOf_Attr",
                    "key.typeusr" : "$sy4main23Tensorboard_FullTypeDefV10OneOf_AttrOs5Int64VcAEmcD",
                    "key.usr" : "s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO1iyAEs5Int64VcAEmF"
                  }
                ]
              }
            ],
            "key.typename" : "Tensorboard_FullTypeDef.OneOf_Attr.Type",
            "key.typeusr" : "$s4main23Tensorboard_FullTypeDefV10OneOf_AttrOmD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV10OneOf_AttrO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init()<\/Declaration>",
            "key.bodylength" : 0,
            "key.bodyoffset" : 14844,
            "key.column" : 3,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 9,
            "key.line" : 422,
            "key.modulename" : "main",
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 14836,
            "key.offset" : 14836,
            "key.parsed_declaration" : "init()",
            "key.parsed_scope.end" : 422,
            "key.parsed_scope.start" : 422,
            "key.reusingastcontext" : false,
            "key.typename" : "(Tensorboard_FullTypeDef.Type) -> () -> Tensorboard_FullTypeDef",
            "key.typeusr" : "$s4main23Tensorboard_FullTypeDefVycD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefVACycfc"
          }
        ],
        "key.typename" : "Tensorboard_FullTypeDef.Type",
        "key.typeusr" : "$s4main23Tensorboard_FullTypeDefVmD",
        "key.usr" : "s:4main23Tensorboard_FullTypeDefV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 65,
        "key.name" : "MARK: - Code below here is support for the SwiftProtobuf runtime.",
        "key.offset" : 14852
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>fileprivate let _protobuf_package: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 14919
          }
        ],
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>_protobuf_package<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 37,
        "key.line" : 427,
        "key.modulename" : "main",
        "key.name" : "_protobuf_package",
        "key.namelength" : 17,
        "key.nameoffset" : 14935,
        "key.offset" : 14931,
        "key.parsed_declaration" : "fileprivate let _protobuf_package = \"tensorboard\"",
        "key.parsed_scope.end" : 427,
        "key.parsed_scope.start" : 427,
        "key.reusingastcontext" : false,
        "key.typename" : "String",
        "key.typeusr" : "$sSSD",
        "key.usr" : "s:4main17_protobuf_package33_2093C02B6C75DA1D2AD141260D569941LLSSvp"
      },
      {
        "key.annotated_decl" : "<Declaration>enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.<Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type><\/Declaration>",
        "key.bodylength" : 1222,
        "key.bodyoffset" : 15039,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 6,
        "key.doc.declaration" : "enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.CaseIterable",
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"25\" column=\"6\"><Name>Tensorboard_FullTypeId<\/Name><USR>s:4main22Tensorboard_FullTypeIdO<\/USR><Declaration>enum Tensorboard_FullTypeId : SwiftProtobuf.Enum, Swift.CaseIterable<\/Declaration><CommentParts><Abstract><Para>DISABLED.IfChange Experimental. Represents the complete type information of a TensorFlow value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 25,
        "key.doc.name" : "Tensorboard_FullTypeId",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 15004
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tensorboard_FullTypeId<\/decl.name> : SwiftProtobuf.Enum, Swift.<ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "SwiftProtobuf._ProtoNameProviding"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1292,
        "key.line" : 25,
        "key.modulename" : "main",
        "key.name" : "Tensorboard_FullTypeId",
        "key.namelength" : 22,
        "key.nameoffset" : 14980,
        "key.offset" : 14970,
        "key.parsed_declaration" : "extension Tensorboard_FullTypeId: SwiftProtobuf._ProtoNameProviding",
        "key.parsed_scope.end" : 463,
        "key.parsed_scope.start" : 429,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>static let _protobuf_nameMap: SwiftProtobuf._NameMap<\/Declaration>",
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>_protobuf_nameMap<\/decl.name>: <decl.var.type>SwiftProtobuf._NameMap<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 1218,
            "key.line" : 430,
            "key.modulename" : "main",
            "key.name" : "_protobuf_nameMap",
            "key.namelength" : 17,
            "key.nameoffset" : 15053,
            "key.offset" : 15042,
            "key.parsed_declaration" : "static let _protobuf_nameMap: SwiftProtobuf._NameMap = [\n  0: .same(proto: \"TFT_UNSET\"),\n  1: .same(proto: \"TFT_VAR\"),\n  2: .same(proto: \"TFT_ANY\"),\n  3: .same(proto: \"TFT_PRODUCT\"),\n  4: .same(proto: \"TFT_NAMED\"),\n  20: .same(proto: \"TFT_FOR_EACH\"),\n  100: .same(proto: \"TFT_CALLABLE\"),\n  200: .same(proto: \"TFT_BOOL\"),\n  201: .same(proto: \"TFT_UINT8\"),\n  202: .same(proto: \"TFT_UINT16\"),\n  203: .same(proto: \"TFT_UINT32\"),\n  204: .same(proto: \"TFT_UINT64\"),\n  205: .same(proto: \"TFT_INT8\"),\n  206: .same(proto: \"TFT_INT16\"),\n  207: .same(proto: \"TFT_INT32\"),\n  208: .same(proto: \"TFT_INT64\"),\n  209: .same(proto: \"TFT_HALF\"),\n  210: .same(proto: \"TFT_FLOAT\"),\n  211: .same(proto: \"TFT_DOUBLE\"),\n  212: .same(proto: \"TFT_COMPLEX64\"),\n  213: .same(proto: \"TFT_COMPLEX128\"),\n  214: .same(proto: \"TFT_STRING\"),\n  215: .same(proto: \"TFT_BFLOAT16\"),\n  1000: .same(proto: \"TFT_TENSOR\"),\n  1001: .same(proto: \"TFT_ARRAY\"),\n  1002: .same(proto: \"TFT_OPTIONAL\"),\n  1003: .same(proto: \"TFT_LITERAL\"),\n  10102: .same(proto: \"TFT_DATASET\"),\n  10103: .same(proto: \"TFT_RAGGED\"),\n  10202: .same(proto: \"TFT_MUTEX_LOCK\"),\n  10203: .same(proto: \"TFT_LEGACY_VARIANT\"),\n]",
            "key.parsed_scope.end" : 430,
            "key.parsed_scope.start" : 430,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main22Tensorboard_FullTypeIdO17_protobuf_nameMapXevpZ"
          }
        ],
        "key.typename" : "Tensorboard_FullTypeId.Type",
        "key.typeusr" : "$s4main22Tensorboard_FullTypeIdOmD",
        "key.usr" : "s:4main22Tensorboard_FullTypeIdO"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Tensorboard_FullTypeDef : <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 2672,
        "key.bodyoffset" : 16399,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 8,
        "key.doc.declaration" : "struct Tensorboard_FullTypeDef : Sendable",
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift\" line=\"374\" column=\"8\"><Name>Tensorboard_FullTypeDef<\/Name><USR>s:4main23Tensorboard_FullTypeDefV<\/USR><Declaration>struct Tensorboard_FullTypeDef : Sendable<\/Declaration><CommentParts><Abstract><Para>Highly experimental and very likely to change. This encoding uses tags instead of dedicated messages for regularity. In particular the encoding imposes no restrictions on what the parameters of any type should be, which in particular needs to be true for type symbols.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 374,
        "key.doc.name" : "Tensorboard_FullTypeDef",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 16299
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 40,
            "key.offset" : 16322
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 16364
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Tensorboard_FullTypeDef<\/decl.name> : <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "SwiftProtobuf.Message"
          },
          {
            "key.name" : "SwiftProtobuf._MessageImplementationBase"
          },
          {
            "key.name" : "SwiftProtobuf._ProtoNameProviding"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2808,
        "key.line" : 374,
        "key.modulename" : "main",
        "key.name" : "Tensorboard_FullTypeDef",
        "key.namelength" : 23,
        "key.nameoffset" : 16274,
        "key.offset" : 16264,
        "key.parsed_declaration" : "extension Tensorboard_FullTypeDef: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding",
        "key.parsed_scope.end" : 535,
        "key.parsed_scope.start" : 465,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>static let protoMessageName: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>protoMessageName<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 72,
            "key.line" : 466,
            "key.modulename" : "main",
            "key.name" : "protoMessageName",
            "key.namelength" : 16,
            "key.nameoffset" : 16413,
            "key.offset" : 16402,
            "key.parsed_declaration" : "static let protoMessageName: String = _protobuf_package + \".FullTypeDef\"",
            "key.parsed_scope.end" : 466,
            "key.parsed_scope.start" : 466,
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV16protoMessageNameSSvpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>static let _protobuf_nameMap: SwiftProtobuf._NameMap<\/Declaration>",
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>_protobuf_nameMap<\/decl.name>: <decl.var.type>SwiftProtobuf._NameMap<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 177,
            "key.line" : 467,
            "key.modulename" : "main",
            "key.name" : "_protobuf_nameMap",
            "key.namelength" : 17,
            "key.nameoffset" : 16488,
            "key.offset" : 16477,
            "key.parsed_declaration" : "static let _protobuf_nameMap: SwiftProtobuf._NameMap = [\n  1: .standard(proto: \"type_id\"),\n  2: .same(proto: \"args\"),\n  3: .same(proto: \"s\"),\n  4: .same(proto: \"i\"),\n]",
            "key.parsed_scope.end" : 467,
            "key.parsed_scope.start" : 467,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV17_protobuf_nameMapXevpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>mutating func decodeMessage&lt;D&gt;(decoder: inout <Type usr=\"s:4main23Tensorboard_FullTypeDefV13decodeMessage7decoderyxz_tKlF1DL_xmfp\">D<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 16658
              }
            ],
            "key.bodylength" : 996,
            "key.bodyoffset" : 16738,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decodeMessage<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4main23Tensorboard_FullTypeDefV13decodeMessage7decoderyxz_tKlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>decoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.generic_type_param usr=\"s:4main23Tensorboard_FullTypeDefV13decodeMessage7decoderyxz_tKlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1068,
            "key.line" : 474,
            "key.modulename" : "main",
            "key.name" : "decodeMessage(decoder:)",
            "key.namelength" : 57,
            "key.nameoffset" : 16672,
            "key.offset" : 16667,
            "key.parsed_declaration" : "mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws",
            "key.parsed_scope.end" : 501,
            "key.parsed_scope.start" : 474,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : SwiftProtobuf.Decoder<\/Declaration>",
                "key.column" : 31,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 21,
                    "key.offset" : 16689
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint>SwiftProtobuf.Decoder<\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "SwiftProtobuf.Decoder"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 24,
                "key.line" : 474,
                "key.modulename" : "main",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 16686,
                "key.offset" : 16686,
                "key.parsed_declaration" : "mutating func decodeMessage<D: SwiftProtobuf.Decoder",
                "key.parsed_scope.end" : 474,
                "key.parsed_scope.start" : 474,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:4main23Tensorboard_FullTypeDefV13decodeMessage7decoderyxz_tKlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D> (inout Tensorboard_FullTypeDef) -> (inout D) throws -> ()",
            "key.typeusr" : "$s7decoderyxz_tKcluD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV13decodeMessage7decoderyxz_tKlF"
          },
          {
            "key.annotated_decl" : "<Declaration>func traverse&lt;V&gt;(visitor: inout <Type usr=\"s:4main23Tensorboard_FullTypeDefV8traverse7visitoryxz_tKlF1VL_xmfp\">V<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 962,
            "key.bodyoffset" : 17805,
            "key.column" : 8,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4main23Tensorboard_FullTypeDefV8traverse7visitoryxz_tKlF1VL_xmfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>visitor<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.generic_type_param usr=\"s:4main23Tensorboard_FullTypeDefV8traverse7visitoryxz_tKlF1VL_xmfp\">V<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1029,
            "key.line" : 503,
            "key.modulename" : "main",
            "key.name" : "traverse(visitor:)",
            "key.namelength" : 52,
            "key.nameoffset" : 17744,
            "key.offset" : 17739,
            "key.parsed_declaration" : "func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws",
            "key.parsed_scope.end" : 526,
            "key.parsed_scope.start" : 503,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>V : SwiftProtobuf.Visitor<\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 21,
                    "key.offset" : 17756
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint>SwiftProtobuf.Visitor<\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "SwiftProtobuf.Visitor"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 24,
                "key.line" : 503,
                "key.modulename" : "main",
                "key.name" : "V",
                "key.namelength" : 1,
                "key.nameoffset" : 17753,
                "key.offset" : 17753,
                "key.parsed_declaration" : "func traverse<V: SwiftProtobuf.Visitor",
                "key.parsed_scope.end" : 503,
                "key.parsed_scope.start" : 503,
                "key.reusingastcontext" : false,
                "key.typename" : "V.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:4main23Tensorboard_FullTypeDefV8traverse7visitoryxz_tKlF1VL_xmfp"
              }
            ],
            "key.typename" : "<V> (Tensorboard_FullTypeDef) -> (inout V) throws -> ()",
            "key.typeusr" : "$s7visitoryxz_tKcluD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV8traverse7visitoryxz_tKlF"
          },
          {
            "key.annotated_decl" : "<Declaration>static func == (lhs: <Type usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/Type>, rhs: <Type usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 213,
            "key.bodyoffset" : 18856,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/tensorboard\/proto-generated\/full_type.pb.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main23Tensorboard_FullTypeDefV\">Tensorboard_FullTypeDef<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 298,
            "key.line" : 528,
            "key.modulename" : "main",
            "key.name" : "==(_:_:)",
            "key.namelength" : 62,
            "key.nameoffset" : 18784,
            "key.offset" : 18772,
            "key.parsed_declaration" : "static func ==(lhs: Tensorboard_FullTypeDef, rhs: Tensorboard_FullTypeDef) -> Bool",
            "key.parsed_scope.end" : 534,
            "key.parsed_scope.start" : 528,
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(Tensorboard_FullTypeDef.Type) -> (Tensorboard_FullTypeDef, Tensorboard_FullTypeDef) -> Bool",
            "key.typeusr" : "$sySb4main23Tensorboard_FullTypeDefV_ACtcD",
            "key.usr" : "s:4main23Tensorboard_FullTypeDefV2eeoiySbAC_ACtFZ"
          }
        ],
        "key.typename" : "Tensorboard_FullTypeDef.Type",
        "key.typeusr" : "$s4main23Tensorboard_FullTypeDefVmD",
        "key.usr" : "s:4main23Tensorboard_FullTypeDefV"
      }
    ]
  }
}
