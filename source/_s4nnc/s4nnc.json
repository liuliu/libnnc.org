[
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 8548,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 2034,
          "key.bodyoffset": 48,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2069,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 24,
          "key.offset": 14,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 56,
          "key.parsed_scope.start": 3,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;S&gt;(to tensors: <Type usr=\"s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1SL_xmfp\">S</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 268
                }
              ],
              "key.bodylength": 1309,
              "key.bodyoffset": 397,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensors.\n\n - Parameters:\n   - to: The source tensors to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<S>(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph.AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"11\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF</USR><Declaration>public func backward&lt;S&gt;(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensors.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensors to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 11,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensors to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 214,
              "key.docoffset": 51,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1SL_xmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1SL_xmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1432,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 280,
              "key.offset": 275,
              "key.parsed_declaration": "public func backward<S: Sequence>(to tensors: S, streamContext: StreamContext? = nil)\nwhere S.Element: DynamicGraph.AnyTensor",
              "key.parsed_scope.end": 44,
              "key.parsed_scope.start": 11,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyAE_AA06StreamI0CSgtF\">backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 292
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 289,
                  "key.offset": 289,
                  "key.parsed_declaration": "public func backward<S: Sequence",
                  "key.parsed_scope.end": 11,
                  "key.parsed_scope.start": 11,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1SL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 406,
                  "key.offset": 402,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 13,
                  "key.parsed_scope.start": 13,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradients: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradients</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 44,
                  "key.name": "gradients",
                  "key.namelength": 9,
                  "key.nameoffset": 436,
                  "key.offset": 432,
                  "key.parsed_declaration": "var gradients = graph.gradients(for: [self])",
                  "key.parsed_scope.end": 14,
                  "key.parsed_scope.start": 14,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF9gradientsL_SayAEGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradientsSet: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SO\">ObjectIdentifier</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradientsSet</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct>&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 62,
                  "key.name": "gradientsSet",
                  "key.namelength": 12,
                  "key.nameoffset": 485,
                  "key.offset": 481,
                  "key.parsed_declaration": "var gradientsSet = Set(gradients.map { ObjectIdentifier($0) })",
                  "key.parsed_scope.end": 15,
                  "key.parsed_scope.start": 15,
                  "key.typename": "Set<ObjectIdentifier>",
                  "key.typeusr": "$sShySOGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF12gradientsSetL_ShySOGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 72,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 741,
                  "key.offset": 737,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = gradients.map { $0._tensor }",
                  "key.parsed_scope.end": 22,
                  "key.parsed_scope.start": 22,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 818,
                  "key.offset": 814,
                  "key.parsed_declaration": "let inputSize = Int32(_inputs.count)",
                  "key.parsed_scope.end": 23,
                  "key.parsed_scope.start": 23,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF9inputSizeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 859,
                  "key.offset": 855,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: _inputs.count)",
                  "key.parsed_scope.end": 24,
                  "key.parsed_scope.start": 24,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 1219,
                  "key.offset": 1215,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 33,
                  "key.parsed_scope.start": 33,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF01_hI0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var f: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>f</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 48,
                  "key.name": "f",
                  "key.namelength": 1,
                  "key.nameoffset": 1292,
                  "key.offset": 1288,
                  "key.parsed_declaration": "var f: ccv_nnc_tensor_variable_t? = self._tensor",
                  "key.parsed_scope.end": 34,
                  "key.parsed_scope.start": 34,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1fL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var g: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>g</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 54,
                  "key.name": "g",
                  "key.namelength": 1,
                  "key.nameoffset": 1345,
                  "key.offset": 1341,
                  "key.parsed_declaration": "var g: ccv_nnc_tensor_variable_t? = self.grad?._tensor",
                  "key.parsed_scope.end": 35,
                  "key.parsed_scope.start": 35,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF1gL_Xevp"
                }
              ],
              "key.typename": "<S where S : Sequence, S.Element : DynamicGraph.AnyTensor> (DynamicGraph.AnyTensor) -> (S, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyx_4main06StreamC0CSgtcSTRzAC12DynamicGraphC9AnyTensorC7ElementRczluD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward(to tensor: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1926
                }
              ],
              "key.bodylength": 60,
              "key.bodyoffset": 2020,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensor.\n\n - Parameters:\n   - to: The source tensor to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"53\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyAE_AA06StreamI0CSgtF</USR><Declaration>public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensor.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensor to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 53,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensor to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 212,
              "key.docoffset": 1711,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 148,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 80,
              "key.nameoffset": 1938,
              "key.offset": 1933,
              "key.parsed_declaration": "public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)",
              "key.parsed_scope.end": 55,
              "key.parsed_scope.start": 53,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyx_AA06StreamI0CSgtSTRzAE7ElementRczlF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph.AnyTensor</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(DynamicGraph.AnyTensor) -> (DynamicGraph.AnyTensor, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContexty4main12DynamicGraphC9AnyTensorC_AC06StreamC0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC8backward2to13streamContextyAE_AA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 2077,
          "key.bodyoffset": 2115,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2108,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 2095,
          "key.offset": 2085,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 110,
          "key.parsed_scope.start": 58,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;S&gt;(to tensors: <Type usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1SL_qd__mfp\">S</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element : <Type usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2335
                }
              ],
              "key.bodylength": 1332,
              "key.bodyoffset": 2463,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensors.\n\n - Parameters:\n   - to: The source tensors to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<S>(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph_AnyGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"66\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF</USR><Declaration>public func backward&lt;S&gt;(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph_AnyGroup</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensors.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensors to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 66,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensors to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 214,
              "key.docoffset": 2118,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.protocol usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1454,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 2347,
              "key.offset": 2342,
              "key.parsed_declaration": "public func backward<S: Sequence>(to tensors: S, streamContext: StreamContext? = nil)\nwhere S.Element: DynamicGraph.AnyGroup",
              "key.parsed_scope.end": 96,
              "key.parsed_scope.start": 66,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lF\">backward&lt;Group&gt;(to: Group, streamContext: StreamContext? = nil) where Group : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 2359
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 2356,
                  "key.offset": 2356,
                  "key.parsed_declaration": "public func backward<S: Sequence",
                  "key.parsed_scope.end": 66,
                  "key.parsed_scope.start": 66,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1SL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 2516,
                  "key.offset": 2512,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 69,
                  "key.parsed_scope.start": 69,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradients: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradients</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 53,
                  "key.name": "gradients",
                  "key.namelength": 9,
                  "key.nameoffset": 2557,
                  "key.offset": 2553,
                  "key.parsed_declaration": "var gradients = graph.gradients(for: underlyingArray)",
                  "key.parsed_scope.end": 70,
                  "key.parsed_scope.start": 70,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF9gradientsL_SayAC0J6TensorCGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradientsSet: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SO\">ObjectIdentifier</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradientsSet</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct>&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 62,
                  "key.name": "gradientsSet",
                  "key.namelength": 12,
                  "key.nameoffset": 2615,
                  "key.offset": 2611,
                  "key.parsed_declaration": "var gradientsSet = Set(gradients.map { ObjectIdentifier($0) })",
                  "key.parsed_scope.end": 71,
                  "key.parsed_scope.start": 71,
                  "key.typename": "Set<ObjectIdentifier>",
                  "key.typeusr": "$sShySOGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF12gradientsSetL_ShySOGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 2895,
                  "key.offset": 2891,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 78,
                  "key.parsed_scope.start": 78,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 72,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 2925,
                  "key.offset": 2921,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = gradients.map { $0._tensor }",
                  "key.parsed_scope.end": 79,
                  "key.parsed_scope.start": 79,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 3002,
                  "key.offset": 2998,
                  "key.parsed_declaration": "let inputSize = Int32(_inputs.count)",
                  "key.parsed_scope.end": 80,
                  "key.parsed_scope.start": 80,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF9inputSizeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 3043,
                  "key.offset": 3039,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: _inputs.count)",
                  "key.parsed_scope.end": 81,
                  "key.parsed_scope.start": 81,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 3403,
                  "key.offset": 3399,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 90,
                  "key.parsed_scope.start": 90,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF01_gH0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let f: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>f</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 77,
                  "key.name": "f",
                  "key.namelength": 1,
                  "key.nameoffset": 3476,
                  "key.offset": 3472,
                  "key.parsed_declaration": "let f: [ccv_nnc_tensor_variable_t?] = self.underlyingArray.map { $0._tensor }",
                  "key.parsed_scope.end": 91,
                  "key.parsed_scope.start": 91,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1fL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let g: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>g</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 83,
                  "key.name": "g",
                  "key.namelength": 1,
                  "key.nameoffset": 3558,
                  "key.offset": 3554,
                  "key.parsed_declaration": "let g: [ccv_nnc_tensor_variable_t?] = self.underlyingArray.map { $0.grad?._tensor }",
                  "key.parsed_scope.end": 92,
                  "key.parsed_scope.start": 92,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF1gL_Xevp"
                }
              ],
              "key.typename": "<Element, S where Element : DynamicGraph.AnyTensor, S : Sequence, S.Element : DynamicGraph_AnyGroup> (DynamicGraph.Group<Element>) -> (S, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyqd___4main06StreamC0CSgtcSTRd__AC21DynamicGraph_AnyGroup7ElementRpd__luD",
              "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;Group&gt;(to tensor: <Type usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lFADL_qd__mfp\">Group</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where Group : <Type usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4015
                }
              ],
              "key.bodylength": 60,
              "key.bodyoffset": 4130,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensor.\n\n - Parameters:\n   - to: The source tensor to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<Group>(to tensor: Group, streamContext: StreamContext? = nil) where Group : main.DynamicGraph_AnyGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"105\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lF</USR><Declaration>public func backward&lt;Group&gt;(to tensor: Group, streamContext: StreamContext? = nil) where Group : main.DynamicGraph_AnyGroup</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensor.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensor to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 105,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensor to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 212,
              "key.docoffset": 3800,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lFADL_qd__mfp\"><decl.generic_type_param.name>Group</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lFADL_qd__mfp\">Group</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Group : <ref.protocol usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 169,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 101,
              "key.nameoffset": 4027,
              "key.offset": 4022,
              "key.parsed_declaration": "public func backward<Group: DynamicGraph.AnyGroup>(\n  to tensor: Group, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 109,
              "key.parsed_scope.start": 105,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtSTRd__AA0bc4_AnyD07ElementRpd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Group : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 21,
                      "key.offset": 4043
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Group</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 28,
                  "key.name": "Group",
                  "key.namelength": 5,
                  "key.nameoffset": 4036,
                  "key.offset": 4036,
                  "key.parsed_declaration": "public func backward<Group: DynamicGraph.AnyGroup",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 105,
                  "key.typename": "Group.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lFADL_qd__mfp"
                }
              ],
              "key.typename": "<Element, Group where Element : DynamicGraph.AnyTensor, Group : DynamicGraph_AnyGroup> (DynamicGraph.Group<Element>) -> (Group, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyqd___4main06StreamC0CSgtcAC21DynamicGraph_AnyGroupRd__luD",
              "key.usr": "s:4main12DynamicGraphC5GroupV8backward2to13streamContextyqd___AA06StreamH0CSgtAA0bc4_AnyD0Rd__lF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 2030,
          "key.bodyoffset": 4255,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2091,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 4205,
          "key.offset": 4195,
          "key.parsed_declaration": "extension Collection where Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 165,
          "key.parsed_scope.start": 112,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;S&gt;(to tensors: <Type usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1SL_qd__mfp\">S</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4475
                }
              ],
              "key.bodylength": 1305,
              "key.bodyoffset": 4604,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensors.\n\n - Parameters:\n   - to: The source tensors to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<S>(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph.AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"120\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF</USR><Declaration>public func backward&lt;S&gt;(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensors.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensors to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 120,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensors to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 214,
              "key.docoffset": 4258,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1428,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 4487,
              "key.offset": 4482,
              "key.parsed_declaration": "public func backward<S: Sequence>(to tensors: S, streamContext: StreamContext? = nil)\nwhere S.Element: DynamicGraph.AnyTensor",
              "key.parsed_scope.end": 153,
              "key.parsed_scope.start": 120,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyAE_AA06StreamJ0CSgtF\">backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph_AnyGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF\">backward&lt;Group&gt;(to: Group, streamContext: StreamContext? = nil) where Group : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 4499
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.groupname": "Collection",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 4496,
                  "key.offset": 4496,
                  "key.parsed_declaration": "public func backward<S: Sequence",
                  "key.parsed_scope.end": 120,
                  "key.parsed_scope.start": 120,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1SL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 29,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 4646,
                  "key.offset": 4642,
                  "key.parsed_declaration": "let graph = self.first!.graph",
                  "key.parsed_scope.end": 123,
                  "key.parsed_scope.start": 123,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 4738,
                  "key.offset": 4734,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 127,
                  "key.parsed_scope.start": 127,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradients: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradients</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 42,
                  "key.name": "gradients",
                  "key.namelength": 9,
                  "key.nameoffset": 4768,
                  "key.offset": 4764,
                  "key.parsed_declaration": "var gradients = graph.gradients(for: self)",
                  "key.parsed_scope.end": 128,
                  "key.parsed_scope.start": 128,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF9gradientsL_SayAEGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradientsSet: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SO\">ObjectIdentifier</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradientsSet</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct>&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 62,
                  "key.name": "gradientsSet",
                  "key.namelength": 12,
                  "key.nameoffset": 4815,
                  "key.offset": 4811,
                  "key.parsed_declaration": "var gradientsSet = Set(gradients.map { ObjectIdentifier($0) })",
                  "key.parsed_scope.end": 129,
                  "key.parsed_scope.start": 129,
                  "key.typename": "Set<ObjectIdentifier>",
                  "key.typeusr": "$sShySOGD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF12gradientsSetL_ShySOGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 72,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 5071,
                  "key.offset": 5067,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = gradients.map { $0._tensor }",
                  "key.parsed_scope.end": 136,
                  "key.parsed_scope.start": 136,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 5148,
                  "key.offset": 5144,
                  "key.parsed_declaration": "let inputSize = Int32(_inputs.count)",
                  "key.parsed_scope.end": 137,
                  "key.parsed_scope.start": 137,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF9inputSizeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 5189,
                  "key.offset": 5185,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: _inputs.count)",
                  "key.parsed_scope.end": 138,
                  "key.parsed_scope.start": 138,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 5549,
                  "key.offset": 5545,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 147,
                  "key.parsed_scope.start": 147,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF01_iJ0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let f: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>f</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 61,
                  "key.name": "f",
                  "key.namelength": 1,
                  "key.nameoffset": 5622,
                  "key.offset": 5618,
                  "key.parsed_declaration": "let f: [ccv_nnc_tensor_variable_t?] = self.map { $0._tensor }",
                  "key.parsed_scope.end": 148,
                  "key.parsed_scope.start": 148,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1fL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let g: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>g</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 67,
                  "key.name": "g",
                  "key.namelength": 1,
                  "key.nameoffset": 5688,
                  "key.offset": 5684,
                  "key.parsed_declaration": "let g: [ccv_nnc_tensor_variable_t?] = self.map { $0.grad?._tensor }",
                  "key.parsed_scope.end": 149,
                  "key.parsed_scope.start": 149,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF1gL_Xevp"
                }
              ],
              "key.typename": "<Self, S where Self : Collection, S : Sequence, Self.Element : DynamicGraph.AnyTensor, S.Element : DynamicGraph.AnyTensor> (Self) -> (S, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyqd___4main06StreamC0CSgtcSTRd__AC12DynamicGraphC9AnyTensorC7ElementRcd__luD",
              "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward(to tensor: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6129
                }
              ],
              "key.bodylength": 60,
              "key.bodyoffset": 6223,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensor.\n\n - Parameters:\n   - to: The source tensor to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"162\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyAE_AA06StreamJ0CSgtF</USR><Declaration>public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensor.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensor to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 162,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensor to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 212,
              "key.docoffset": 5914,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 148,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 80,
              "key.nameoffset": 6141,
              "key.offset": 6136,
              "key.parsed_declaration": "public func backward(to tensor: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)",
              "key.parsed_scope.end": 164,
              "key.parsed_scope.start": 162,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph.AnyTensor</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph_AnyGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF\">backward&lt;Group&gt;(to: Group, streamContext: StreamContext? = nil) where Group : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element : DynamicGraph.AnyTensor> (Self) -> (DynamicGraph.AnyTensor, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContexty4main12DynamicGraphC9AnyTensorC_AC06StreamC0CSgtcD",
              "key.usr": "s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyAE_AA06StreamJ0CSgtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 2199,
          "key.bodyoffset": 6347,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2259,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 6298,
          "key.offset": 6288,
          "key.parsed_declaration": "extension Collection where Element: DynamicGraph.AnyGroup",
          "key.parsed_scope.end": 224,
          "key.parsed_scope.start": 167,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;S&gt;(to tensors: <Type usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1SL_qd__mfp\">S</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element : <Type usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6567
                }
              ],
              "key.bodylength": 1454,
              "key.bodyoffset": 6695,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensors.\n\n - Parameters:\n   - to: The source tensors to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<S>(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph_AnyGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"175\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF</USR><Declaration>public func backward&lt;S&gt;(to tensors: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : main.DynamicGraph_AnyGroup</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensors.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensors to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 175,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensors to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 214,
              "key.docoffset": 6350,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.protocol usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1576,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 6579,
              "key.offset": 6574,
              "key.parsed_declaration": "public func backward<S: Sequence>(to tensors: S, streamContext: StreamContext? = nil)\nwhere S.Element: DynamicGraph.AnyGroup",
              "key.parsed_scope.end": 210,
              "key.parsed_scope.start": 175,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph.AnyTensor</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyAE_AA06StreamJ0CSgtF\">backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF\">backward&lt;Group&gt;(to: Group, streamContext: StreamContext? = nil) where Group : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 6591
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.groupname": "Collection",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 6588,
                  "key.offset": 6588,
                  "key.parsed_declaration": "public func backward<S: Sequence",
                  "key.parsed_scope.end": 175,
                  "key.parsed_scope.start": 175,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1SL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 40,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 6737,
                  "key.offset": 6733,
                  "key.parsed_declaration": "let graph = self.first!.untyped[0].graph",
                  "key.parsed_scope.end": 178,
                  "key.parsed_scope.start": 178,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF5graphL_AA0bC0Cvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 6885,
                  "key.offset": 6881,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 184,
                  "key.parsed_scope.start": 184,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradients: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradients</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 65,
                  "key.name": "gradients",
                  "key.namelength": 9,
                  "key.nameoffset": 6915,
                  "key.offset": 6911,
                  "key.parsed_declaration": "var gradients = graph.gradients(for: self.flatMap { $0.untyped })",
                  "key.parsed_scope.end": 185,
                  "key.parsed_scope.start": 185,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF9gradientsL_SayAA0bC0C0D6TensorCGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradientsSet: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SO\">ObjectIdentifier</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradientsSet</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct>&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 62,
                  "key.name": "gradientsSet",
                  "key.namelength": 12,
                  "key.nameoffset": 6985,
                  "key.offset": 6981,
                  "key.parsed_declaration": "var gradientsSet = Set(gradients.map { ObjectIdentifier($0) })",
                  "key.parsed_scope.end": 186,
                  "key.parsed_scope.start": 186,
                  "key.typename": "Set<ObjectIdentifier>",
                  "key.typeusr": "$sShySOGD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF12gradientsSetL_ShySOGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 72,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 7265,
                  "key.offset": 7261,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = gradients.map { $0._tensor }",
                  "key.parsed_scope.end": 193,
                  "key.parsed_scope.start": 193,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 7342,
                  "key.offset": 7338,
                  "key.parsed_declaration": "let inputSize = Int32(_inputs.count)",
                  "key.parsed_scope.end": 194,
                  "key.parsed_scope.start": 194,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF9inputSizeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 7383,
                  "key.offset": 7379,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: _inputs.count)",
                  "key.parsed_scope.end": 195,
                  "key.parsed_scope.start": 195,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 7743,
                  "key.offset": 7739,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 204,
                  "key.parsed_scope.start": 204,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF01_iJ0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let f: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>f</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 84,
                  "key.name": "f",
                  "key.namelength": 1,
                  "key.nameoffset": 7816,
                  "key.offset": 7812,
                  "key.parsed_declaration": "let f: [ccv_nnc_tensor_variable_t?] = self.flatMap { $0.untyped.map { $0._tensor } }",
                  "key.parsed_scope.end": 205,
                  "key.parsed_scope.start": 205,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1fL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let g: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>g</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 90,
                  "key.name": "g",
                  "key.namelength": 1,
                  "key.nameoffset": 7905,
                  "key.offset": 7901,
                  "key.parsed_declaration": "let g: [ccv_nnc_tensor_variable_t?] = self.flatMap { $0.untyped.map { $0.grad?._tensor } }",
                  "key.parsed_scope.end": 206,
                  "key.parsed_scope.start": 206,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF1gL_Xevp"
                }
              ],
              "key.typename": "<Self, S where Self : Collection, S : Sequence, Self.Element : DynamicGraph_AnyGroup, S.Element : DynamicGraph_AnyGroup> (Self) -> (S, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyqd___4main06StreamC0CSgtcSTRd__AC21DynamicGraph_AnyGroup7ElementRpd__luD",
              "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func backward&lt;Group&gt;(to tensor: <Type usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF0E0L_qd__mfp\">Group</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where Group : <Type usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8369
                }
              ],
              "key.bodylength": 60,
              "key.bodyoffset": 8484,
              "key.doc.column": 15,
              "key.doc.comment": " Compute gradients from this tensor to the source tensor.\n\n - Parameters:\n   - to: The source tensor to this tensor.\n   - streamContext: The stream context to perform such operation.",
              "key.doc.declaration": "public func backward<Group>(to tensor: Group, streamContext: StreamContext? = nil) where Group : main.DynamicGraph_AnyGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift\" line=\"219\" column=\"15\"><Name>backward(to:streamContext:)</Name><USR>s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF</USR><Declaration>public func backward&lt;Group&gt;(to tensor: Group, streamContext: StreamContext? = nil) where Group : main.DynamicGraph_AnyGroup</Declaration><CommentParts><Abstract><Para>Compute gradients from this tensor to the source tensor.</Para></Abstract><Parameters><Parameter><Name>to</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The source tensor to this tensor.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to perform such operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 219,
              "key.doc.name": "backward(to:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The source tensor to this tensor."
                    }
                  ],
                  "name": "to"
                },
                {
                  "discussion": [
                    {
                      "Para": "The stream context to perform such operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 212,
              "key.docoffset": 8154,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>backward</decl.name>&lt;<decl.generic_type_param usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF0E0L_qd__mfp\"><decl.generic_type_param.name>Group</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF0E0L_qd__mfp\">Group</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Group : <ref.protocol usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 169,
              "key.name": "backward(to:streamContext:)",
              "key.namelength": 101,
              "key.nameoffset": 8381,
              "key.offset": 8376,
              "key.parsed_declaration": "public func backward<Group: DynamicGraph.AnyGroup>(\n  to tensor: Group, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 223,
              "key.parsed_scope.start": 219,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AeFRcd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph.AnyTensor</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA12DynamicGraphC9AnyTensorC7ElementRczrlE8backward2to13streamContextyAE_AA06StreamJ0CSgtF\">backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext? = nil)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtSTRd__AabCRpd__lF\">backward&lt;S&gt;(to: S, streamContext: StreamContext? = nil) where S : Sequence, S.Element : DynamicGraph_AnyGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Group : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 21,
                      "key.offset": 8397
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/AutoGrad.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Group</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.groupname": "Collection",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 28,
                  "key.name": "Group",
                  "key.namelength": 5,
                  "key.nameoffset": 8390,
                  "key.offset": 8390,
                  "key.parsed_declaration": "public func backward<Group: DynamicGraph.AnyGroup",
                  "key.parsed_scope.end": 219,
                  "key.parsed_scope.start": 219,
                  "key.typename": "Group.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF0E0L_qd__mfp"
                }
              ],
              "key.typename": "<Self, Group where Self : Collection, Group : DynamicGraph_AnyGroup, Self.Element : DynamicGraph_AnyGroup> (Self) -> (Group, StreamContext?) -> ()",
              "key.typeusr": "$s2to13streamContextyqd___4main06StreamC0CSgtcAC21DynamicGraph_AnyGroupRd__luD",
              "key.usr": "s:Sl4mainAA21DynamicGraph_AnyGroup7ElementRpzrlE8backward2to13streamContextyqd___AA06StreamJ0CSgtAaBRd__lF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 25415,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 2807,
          "key.bodyoffset": 55,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2829,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 44,
          "key.offset": 34,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 77,
          "key.parsed_scope.start": 5,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init?(fromCSV filePath: <Type usr=\"s:SS\">String</Type>, automaticUseHeader: <Type usr=\"s:Sb\">Bool</Type> = true, delimiter: <Type usr=\"s:SS\">String</Type> = &quot;,&quot;, quotation: <Type usr=\"s:SS\">String</Type> = &quot;\\&quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 444
                }
              ],
              "key.bodylength": 2280,
              "key.bodyoffset": 580,
              "key.doc.column": 10,
              "key.doc.comment": " Load CSV file into dataframe. This may use multi-threads when available.\n\n - Parameters:\n   - fromCSV: The file path for the CSV file.\n   - automaticUseHeader: Whether the first line will be the header or not.\n   - delimiter: What's the delimiter for the CSV file, default ,\n   - quotation: What's the quotation mark for the CSV file, default \"",
              "key.doc.declaration": "public init?(fromCSV filePath: String, automaticUseHeader: Bool = true, delimiter: String = \",\", quotation: String = \"\\\"\")",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"15\" column=\"10\"><Name>init(fromCSV:automaticUseHeader:delimiter:quotation:)</Name><USR>s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc</USR><Declaration>public init?(fromCSV filePath: String, automaticUseHeader: Bool = true, delimiter: String = &quot;,&quot;, quotation: String = &quot;\\&quot;&quot;)</Declaration><CommentParts><Abstract><Para>Load CSV file into dataframe. This may use multi-threads when available.</Para></Abstract><Parameters><Parameter><Name>fromCSV</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The file path for the CSV file.</Para></Discussion></Parameter><Parameter><Name>automaticUseHeader</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether the first line will be the header or not.</Para></Discussion></Parameter><Parameter><Name>delimiter</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>What’s the delimiter for the CSV file, default ,</Para></Discussion></Parameter><Parameter><Name>quotation</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>What’s the quotation mark for the CSV file, default “</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 15,
              "key.doc.name": "init(fromCSV:automaticUseHeader:delimiter:quotation:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The file path for the CSV file."
                    }
                  ],
                  "name": "fromCSV"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether the first line will be the header or not."
                    }
                  ],
                  "name": "automaticUseHeader"
                },
                {
                  "discussion": [
                    {
                      "Para": "What’s the delimiter for the CSV file, default ,"
                    }
                  ],
                  "name": "delimiter"
                },
                {
                  "discussion": [
                    {
                      "Para": "What’s the quotation mark for the CSV file, default “"
                    }
                  ],
                  "name": "quotation"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 383,
              "key.docoffset": 58,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>fromCSV</decl.var.parameter.argument_label> <decl.var.parameter.name>filePath</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>automaticUseHeader</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delimiter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;,&quot;</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>quotation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;\\&quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 2410,
              "key.name": "init(fromCSV:automaticUseHeader:delimiter:quotation:)",
              "key.namelength": 127,
              "key.nameoffset": 451,
              "key.offset": 451,
              "key.parsed_declaration": "public init?(\n  fromCSV filePath: String, automaticUseHeader: Bool = true, delimiter: String = \",\",\n  quotation: String = \"\\\"\"\n)",
              "key.parsed_scope.end": 76,
              "key.parsed_scope.start": 15,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc\">init(dataframe:columnProperties:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc\">init(from:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc\">init(dataframe:properties:size:repeating:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc\">init(dataframe:property:size:sample:outputType:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc\">init(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var columnSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "columnSize",
                  "key.namelength": 10,
                  "key.nameoffset": 589,
                  "key.offset": 585,
                  "key.parsed_declaration": "var columnSize: Int32 = 0",
                  "key.parsed_scope.end": 19,
                  "key.parsed_scope.start": 19,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc10columnSizeL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let fileHandle: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fileHandle</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 37,
                  "key.name": "fileHandle",
                  "key.namelength": 10,
                  "key.nameoffset": 619,
                  "key.offset": 615,
                  "key.parsed_declaration": "let fileHandle = fopen(filePath, \"r\")",
                  "key.parsed_scope.end": 20,
                  "key.parsed_scope.start": 20,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc10fileHandleL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _delimiter: <Type usr=\"s:SS\">String</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_delimiter</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "_delimiter",
                  "key.namelength": 10,
                  "key.nameoffset": 775,
                  "key.offset": 771,
                  "key.parsed_declaration": "var _delimiter = delimiter",
                  "key.parsed_scope.end": 24,
                  "key.parsed_scope.start": 24,
                  "key.typename": "String",
                  "key.typeusr": "$sSSD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc01_I0L_SSvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let delim: <Type usr=\"s:s5CChara\">CChar</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>delim</decl.name>: <decl.var.type><ref.typealias usr=\"s:s5CChara\">CChar</ref.typealias></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 82,
                  "key.name": "delim",
                  "key.namelength": 5,
                  "key.nameoffset": 806,
                  "key.offset": 802,
                  "key.parsed_declaration": "let delim = _delimiter.withUTF8 { $0.withMemoryRebound(to: CChar.self) { $0[0] } }",
                  "key.parsed_scope.end": 25,
                  "key.parsed_scope.start": 25,
                  "key.typename": "Int8",
                  "key.typeusr": "$ss4Int8VD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc5delimL_s4Int8Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _quotation: <Type usr=\"s:SS\">String</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_quotation</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "_quotation",
                  "key.namelength": 10,
                  "key.nameoffset": 893,
                  "key.offset": 889,
                  "key.parsed_declaration": "var _quotation = quotation",
                  "key.parsed_scope.end": 26,
                  "key.parsed_scope.start": 26,
                  "key.typename": "String",
                  "key.typeusr": "$sSSD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc01_J0L_SSvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let quote: <Type usr=\"s:s5CChara\">CChar</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>quote</decl.name>: <decl.var.type><ref.typealias usr=\"s:s5CChara\">CChar</ref.typealias></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 82,
                  "key.name": "quote",
                  "key.namelength": 5,
                  "key.nameoffset": 924,
                  "key.offset": 920,
                  "key.parsed_declaration": "let quote = _quotation.withUTF8 { $0.withMemoryRebound(to: CChar.self) { $0[0] } }",
                  "key.parsed_scope.end": 27,
                  "key.parsed_scope.start": 27,
                  "key.typename": "Int8",
                  "key.typeusr": "$ss4Int8VD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc5quoteL_s4Int8Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let dataframe_: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe_</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 169,
                  "key.name": "dataframe_",
                  "key.namelength": 10,
                  "key.nameoffset": 1011,
                  "key.offset": 1007,
                  "key.parsed_declaration": "let dataframe_ = ccv_cnnp_dataframe_from_csv_new(\n  fileHandle, Int32(CCV_CNNP_DATAFRAME_CSV_FILE), 0, delim, quote, (automaticUseHeader ? 1 : 0),\n  &columnSize)",
                  "key.parsed_scope.end": 28,
                  "key.parsed_scope.start": 28,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc10dataframe_L_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 1371,
                  "key.offset": 1367,
                  "key.parsed_declaration": "var columnProperties = [String: ColumnProperty]()",
                  "key.parsed_scope.end": 39,
                  "key.parsed_scope.start": 39,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV16columnPropertiesSDySSAC14ColumnPropertyVGvp\">columnProperties</RelatedName>"
                    }
                  ],
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc16columnPropertiesL_SDySSAC14ColumnPropertyVGvp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (String, Bool, String, String) -> DataFrame?",
              "key.typeusr": "$s7fromCSV18automaticUseHeader9delimiter9quotation4main9DataFrameVSgSS_SbS2StcD",
              "key.usr": "s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1531,
          "key.bodyoffset": 2906,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1553,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 2895,
          "key.offset": 2885,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 113,
          "key.parsed_scope.start": 81,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>init(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>?)</Declaration>",
              "key.bodylength": 1439,
              "key.bodyoffset": 2996,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1527,
              "key.name": "init(dataframe:properties:size:repeating:)",
              "key.namelength": 85,
              "key.nameoffset": 2909,
              "key.offset": 2909,
              "key.parsed_declaration": "init(dataframe: _DataFrame, properties: [ColumnProperty], size: Int, repeating: Int?)",
              "key.parsed_scope.end": 112,
              "key.parsed_scope.start": 82,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc\">init(dataframe:columnProperties:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc\">init(from:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc\">init(fromCSV:automaticUseHeader:delimiter:quotation:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc\">init(dataframe:property:size:sample:outputType:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc\">init(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 3005,
                  "key.offset": 3001,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 83,
                  "key.parsed_scope.start": 83,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV10_dataframeAA01_bC0Cvp\">_dataframe</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc01_D0L_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let columnSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>columnSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 47,
                  "key.name": "columnSize",
                  "key.namelength": 10,
                  "key.nameoffset": 3046,
                  "key.offset": 3042,
                  "key.parsed_declaration": "let columnSize: Int32 = Int32(properties.count)",
                  "key.parsed_scope.end": 84,
                  "key.parsed_scope.start": 84,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc10columnSizeL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let indices: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>indices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 57,
                  "key.name": "indices",
                  "key.namelength": 7,
                  "key.nameoffset": 3098,
                  "key.offset": 3094,
                  "key.parsed_declaration": "let indices: [Int32] = properties.map { Int32($0.index) }",
                  "key.parsed_scope.end": 85,
                  "key.parsed_scope.start": 85,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc7indicesL_Says5Int32VGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let combined: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>combined</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 159,
                  "key.name": "combined",
                  "key.namelength": 8,
                  "key.nameoffset": 3160,
                  "key.offset": 3156,
                  "key.parsed_declaration": "let combined = ccv_cnnp_dataframe_combine_new(\n  _dataframe, indices, columnSize, Int32(size), Int32(repeating ?? 1),\n  Int32(CCV_TENSOR_FORMAT_NCHW))!",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc8combinedL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 3324,
                  "key.offset": 3320,
                  "key.parsed_declaration": "var columnProperties = [String: ColumnProperty]()",
                  "key.parsed_scope.end": 89,
                  "key.parsed_scope.start": 89,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV16columnPropertiesSDySSAC14ColumnPropertyVGvp\">columnProperties</RelatedName>"
                    }
                  ],
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc16columnPropertiesL_SDySSAKGvp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, [DataFrame.ColumnProperty], Int, Int?) -> DataFrame",
              "key.typeusr": "$s9dataframe10properties4size9repeating4main9DataFrameVAE01_fG0C_SayAG14ColumnPropertyVGS2iSgtcD",
              "key.usr": "s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 692,
          "key.bodyoffset": 4475,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 728,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 4450,
          "key.offset": 4440,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 134,
          "key.parsed_scope.start": 115,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func combine(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4747
                }
              ],
              "key.bodylength": 350,
              "key.bodyoffset": 4815,
              "key.doc.column": 15,
              "key.doc.comment": " Combine tensors into one tensor. This is useful for GPU batching.\n\n - Parameters:\n   - size: How many tensors to group together.\n   - repeating: How many new columns to be created.\n - Returns: A new dataframe with combined tensors.",
              "key.doc.declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"124\" column=\"15\"><Name>combine(size:repeating:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV7combine4size9repeatingACSi_SiSgtF</USR><Declaration>public func combine(size: Int, repeating: Int? = nil) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Combine tensors into one tensor. This is useful for GPU batching.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many tensors to group together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many new columns to be created.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe with combined tensors.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 124,
              "key.doc.name": "combine(size:repeating:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many tensors to group together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "How many new columns to be created."
                    }
                  ],
                  "name": "repeating"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe with combined tensors."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 266,
              "key.docoffset": 4478,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>combine</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 412,
              "key.name": "combine(size:repeating:)",
              "key.namelength": 41,
              "key.nameoffset": 4759,
              "key.offset": 4754,
              "key.parsed_declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.parsed_scope.end": 133,
              "key.parsed_scope.start": 124,
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries) -> (Int, Int?) -> DataFrame",
              "key.typeusr": "$s4size9repeating4main9DataFrameVSi_SiSgtcD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV7combine4size9repeatingACSi_SiSgtF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 489,
          "key.bodyoffset": 5228,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 548,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 5180,
          "key.offset": 5170,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element: AnyTensor",
          "key.parsed_scope.end": 149,
          "key.parsed_scope.start": 136,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func combine(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5500
                }
              ],
              "key.bodylength": 147,
              "key.bodyoffset": 5568,
              "key.doc.column": 15,
              "key.doc.comment": " Combine tensors into one tensor. This is useful for GPU batching.\n\n - Parameters:\n   - size: How many tensors to group together.\n   - repeating: How many new columns to be created.\n - Returns: A new dataframe with combined tensors.",
              "key.doc.declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"145\" column=\"15\"><Name>combine(size:repeating:)</Name><USR>s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE7combine4size9repeatingACSi_SiSgtF</USR><Declaration>public func combine(size: Int, repeating: Int? = nil) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Combine tensors into one tensor. This is useful for GPU batching.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many tensors to group together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many new columns to be created.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe with combined tensors.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 145,
              "key.doc.name": "combine(size:repeating:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many tensors to group together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "How many new columns to be created."
                    }
                  ],
                  "name": "repeating"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe with combined tensors."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 266,
              "key.docoffset": 5231,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>combine</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "combine(size:repeating:)",
              "key.namelength": 41,
              "key.nameoffset": 5512,
              "key.offset": 5507,
              "key.parsed_declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.parsed_scope.end": 148,
              "key.parsed_scope.start": 145,
              "key.substructure": [],
              "key.typename": "<Element where Element : AnyTensor> (DataFrame.TypedSeries<Element>) -> (Int, Int?) -> DataFrame",
              "key.typeusr": "$s4size9repeating4main9DataFrameVSi_SiSgtcD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE7combine4size9repeatingACSi_SiSgtF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct ManyUntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 530,
          "key.bodyoffset": 5759,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 570,
          "key.name": "DataFrame.ManyUntypedSeries",
          "key.namelength": 27,
          "key.nameoffset": 5730,
          "key.offset": 5720,
          "key.parsed_declaration": "extension DataFrame.ManyUntypedSeries",
          "key.parsed_scope.end": 166,
          "key.parsed_scope.start": 151,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func combine(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6031
                }
              ],
              "key.bodylength": 188,
              "key.bodyoffset": 6099,
              "key.doc.column": 15,
              "key.doc.comment": " Combine tensors into one tensor. This is useful for GPU batching.\n\n - Parameters:\n   - size: How many tensors to group together.\n   - repeating: How many new columns to be created.\n - Returns: A new dataframe with combined tensors.",
              "key.doc.declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"160\" column=\"15\"><Name>combine(size:repeating:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV7combine4size9repeatingACSi_SiSgtF</USR><Declaration>public func combine(size: Int, repeating: Int? = nil) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Combine tensors into one tensor. This is useful for GPU batching.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many tensors to group together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many new columns to be created.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe with combined tensors.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 160,
              "key.doc.name": "combine(size:repeating:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many tensors to group together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "How many new columns to be created."
                    }
                  ],
                  "name": "repeating"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe with combined tensors."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 266,
              "key.docoffset": 5762,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>combine</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "combine(size:repeating:)",
              "key.namelength": 41,
              "key.nameoffset": 6043,
              "key.offset": 6038,
              "key.parsed_declaration": "public func combine(size: Int, repeating: Int? = nil) -> DataFrame",
              "key.parsed_scope.end": 165,
              "key.parsed_scope.start": 160,
              "key.substructure": [],
              "key.typename": "(DataFrame.ManyUntypedSeries) -> (Int, Int?) -> DataFrame",
              "key.typeusr": "$s4size9repeating4main9DataFrameVSi_SiSgtcD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV7combine4size9repeatingACSi_SiSgtF"
            }
          ],
          "key.typename": "DataFrame.ManyUntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV17ManyUntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1837,
          "key.bodyoffset": 6336,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1859,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 6325,
          "key.offset": 6315,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 211,
          "key.parsed_scope.start": 170,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToLoadImage(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 1690,
              "key.bodyoffset": 6481,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToLoadImage</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1833,
              "key.name": "addToLoadImage(_:_:_:_:)",
              "key.namelength": 110,
              "key.nameoffset": 6351,
              "key.offset": 6339,
              "key.parsed_declaration": "static func addToLoadImage(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 210,
              "key.parsed_scope.start": 171,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 6490,
                  "key.offset": 6486,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 174,
                  "key.parsed_scope.start": 174,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV14addToLoadImageyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let pathIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pathIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 1501,
                  "key.name": "pathIndex",
                  "key.namelength": 9,
                  "key.nameoffset": 6533,
                  "key.offset": 6529,
                  "key.parsed_declaration": "let pathIndex = ccv_cnnp_dataframe_map(\n  _dataframe,\n  { input, _, row_size, data, context, _ in\n    guard let input = input else { return }\n    guard let data = data else { return }\n    let inputData = input[0]!\n    for i in 0..<Int(row_size) {\n      var path = Unmanaged<AnyObject>.fromOpaque(inputData[i]!).takeUnretainedValue() as! String\n      if let container = data[i] {\n        let string = container.assumingMemoryBound(\n          to: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>>.self)[0]\n        string.deallocate()\n        container.deallocate()\n      }\n      let utf8: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>> = path.withUTF8 {\n        let string = UnsafeMutablePointer<UInt8>.allocate(capacity: $0.count + 1)\n        string.initialize(from: $0.baseAddress!, count: $0.count)\n        // null-terminated\n        (string + $0.count).initialize(to: 0)\n        let container = UnsafeMutablePointer<UnsafeMutablePointer<UInt8>>.allocate(capacity: 1)\n        container.initialize(to: string)\n        return container\n      }\n      (data + i).initialize(to: utf8)\n    }\n  }, 0,\n  { container, _ in\n    guard let container = container else { return }\n    let string = container.assumingMemoryBound(\n      to: UnsafeMutablePointer<UnsafeMutablePointer<UInt8>>.self)[0]\n    string.deallocate()\n    container.deallocate()\n  }, &inputIndex, 1, nil, nil, nil)",
                  "key.parsed_scope.end": 175,
                  "key.parsed_scope.start": 175,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV14addToLoadImageyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ9pathIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 73,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 8039,
                  "key.offset": 8035,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_read_image(_dataframe, pathIndex, 0, name)",
                  "key.parsed_scope.end": 208,
                  "key.parsed_scope.start": 208,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV14addToLoadImageyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV14addToLoadImageyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 389,
          "key.bodyoffset": 8211,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 425,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 8186,
          "key.offset": 8176,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 222,
          "key.parsed_scope.start": 213,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toLoadImage() -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8305
                }
              ],
              "key.bodylength": 239,
              "key.bodyoffset": 8359,
              "key.doc.column": 15,
              "key.doc.comment": "Load images into tensors. It is expected to be called from a column with file paths.",
              "key.doc.declaration": "public func toLoadImage() -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"215\" column=\"15\"><Name>toLoadImage()</Name><USR>s:4main9DataFrameV13UntypedSeriesV11toLoadImageAEyF</USR><Declaration>public func toLoadImage() -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Load images into tensors. It is expected to be called from a column with file paths.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 215,
              "key.doc.name": "toLoadImage()",
              "key.doc.type": "Function",
              "key.doclength": 89,
              "key.docoffset": 8214,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toLoadImage</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 287,
              "key.name": "toLoadImage()",
              "key.namelength": 13,
              "key.nameoffset": 8317,
              "key.offset": 8312,
              "key.parsed_declaration": "public func toLoadImage() -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 221,
              "key.parsed_scope.start": 215,
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries) -> () -> DataFrame.UntypedSeries",
              "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVycD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV11toLoadImageAEyF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 281,
          "key.bodyoffset": 8660,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 339,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 8613,
          "key.offset": 8603,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element == String",
          "key.parsed_scope.end": 230,
          "key.parsed_scope.start": 224,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toLoadImage() -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8754
                }
              ],
              "key.bodylength": 131,
              "key.bodyoffset": 8808,
              "key.doc.column": 15,
              "key.doc.comment": "Load images into tensors. It is expected to be called from a column with file paths.",
              "key.doc.declaration": "public func toLoadImage() -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"226\" column=\"15\"><Name>toLoadImage()</Name><USR>s:4main9DataFrameV11TypedSeriesVAASSRszlE11toLoadImageAC07UntypedE0VyF</USR><Declaration>public func toLoadImage() -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Load images into tensors. It is expected to be called from a column with file paths.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 226,
              "key.doc.name": "toLoadImage()",
              "key.doc.type": "Function",
              "key.doclength": 89,
              "key.docoffset": 8663,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toLoadImage</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 179,
              "key.name": "toLoadImage()",
              "key.namelength": 13,
              "key.nameoffset": 8766,
              "key.offset": 8761,
              "key.parsed_declaration": "public func toLoadImage() -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 229,
              "key.parsed_scope.start": 226,
              "key.substructure": [],
              "key.typename": "<Element where Element == String> (DataFrame.TypedSeries<Element>) -> () -> DataFrame.UntypedSeries",
              "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVycD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVAASSRszlE11toLoadImageAC07UntypedE0VyF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>final class OneHotParams</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 8964
            }
          ],
          "key.bodylength": 256,
          "key.bodyoffset": 8990,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneHotParams</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 277,
          "key.name": "OneHotParams",
          "key.namelength": 12,
          "key.nameoffset": 8976,
          "key.offset": 8970,
          "key.parsed_declaration": "final class OneHotParams",
          "key.parsed_scope.end": 245,
          "key.parsed_scope.start": 234,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 22,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 8997,
              "key.offset": 8993,
              "key.parsed_declaration": "let dataType: DataType",
              "key.parsed_scope.end": 235,
              "key.parsed_scope.start": 235,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:4main12OneHotParamsC8dataTypeAA04DataF0Ovp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 14,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 9022,
              "key.offset": 9018,
              "key.parsed_declaration": "let count: Int",
              "key.parsed_scope.end": 236,
              "key.parsed_scope.start": 236,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main12OneHotParamsC5countSivp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let onval: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "onval",
              "key.namelength": 5,
              "key.nameoffset": 9039,
              "key.offset": 9035,
              "key.parsed_declaration": "let onval: Float",
              "key.parsed_scope.end": 237,
              "key.parsed_scope.start": 237,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12OneHotParamsC5onvalSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let offval: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 17,
              "key.name": "offval",
              "key.namelength": 6,
              "key.nameoffset": 9058,
              "key.offset": 9054,
              "key.parsed_declaration": "let offval: Float",
              "key.parsed_scope.end": 238,
              "key.parsed_scope.start": 238,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12OneHotParamsC6offvalSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type>, count: <Type usr=\"s:Si\">Int</Type>, onval: <Type usr=\"s:Sf\">Float</Type>, offval: <Type usr=\"s:Sf\">Float</Type>)</Declaration>",
              "key.bodylength": 103,
              "key.bodyoffset": 9141,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 171,
              "key.name": "init(dataType:count:onval:offval:)",
              "key.namelength": 65,
              "key.nameoffset": 9074,
              "key.offset": 9074,
              "key.parsed_declaration": "init(dataType: DataType, count: Int, onval: Float, offval: Float)",
              "key.parsed_scope.end": 244,
              "key.parsed_scope.start": 239,
              "key.substructure": [],
              "key.typename": "(OneHotParams.Type) -> (DataType, Int, Float, Float) -> OneHotParams",
              "key.typeusr": "$s8dataType5count5onval6offval4main12OneHotParamsCAE04DataB0O_SiS2ftcD",
              "key.usr": "s:4main12OneHotParamsC8dataType5count5onval6offvalAcA04DataF0O_SiS2ftcfc"
            }
          ],
          "key.typename": "OneHotParams.Type",
          "key.typeusr": "$s4main12OneHotParamsCmD",
          "key.usr": "s:4main12OneHotParamsC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1393,
          "key.bodyoffset": 9270,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1415,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 9259,
          "key.offset": 9249,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 279,
          "key.parsed_scope.start": 247,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToOneHot(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 1242,
              "key.bodyoffset": 9419,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToOneHot</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1389,
              "key.name": "addToOneHot(_:_:_:_:)",
              "key.namelength": 114,
              "key.nameoffset": 9285,
              "key.offset": 9273,
              "key.parsed_declaration": "static func addToOneHot(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 278,
              "key.parsed_scope.start": 248,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 9428,
                  "key.offset": 9424,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 251,
                  "key.parsed_scope.start": 251,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV11addToOneHotyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let oneHotParams: <Type usr=\"s:4main12OneHotParamsC\">OneHotParams</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>oneHotParams</decl.name>: <decl.var.type><ref.class usr=\"s:4main12OneHotParamsC\">OneHotParams</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 43,
                  "key.name": "oneHotParams",
                  "key.namelength": 12,
                  "key.nameoffset": 9471,
                  "key.offset": 9467,
                  "key.parsed_declaration": "let oneHotParams = params! as! OneHotParams",
                  "key.parsed_scope.end": 252,
                  "key.parsed_scope.start": 252,
                  "key.typename": "OneHotParams",
                  "key.typeusr": "$s4main12OneHotParamsCD",
                  "key.usr": "s:4main9DataFrameV11addToOneHotyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ03oneG6ParamsL_AA0fgM0Cvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let intIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 870,
                  "key.name": "intIndex",
                  "key.namelength": 8,
                  "key.nameoffset": 9519,
                  "key.offset": 9515,
                  "key.parsed_declaration": "let intIndex = ccv_cnnp_dataframe_map(\n  _dataframe,\n  { input, _, row_size, data, context, _ in\n    guard let input = input else { return }\n    guard let data = data else { return }\n    let inputData = input[0]!\n    for i in 0..<Int(row_size) {\n      let int = Unmanaged<AnyObject>.fromOpaque(inputData[i]!).takeUnretainedValue() as! Int\n      if let container = data[i] {\n        container.assumingMemoryBound(to: Int32.self).initialize(to: Int32(int))\n      } else {\n        let container = UnsafeMutablePointer<Int32>.allocate(capacity: 1)\n        container.initialize(to: Int32(int))\n        (data + i).initialize(to: container)\n      }\n    }\n  }, 0,\n  { container, _ in\n    guard let container = container else { return }\n    container.deallocate()\n  }, &inputIndex, 1, nil, nil, nil)",
                  "key.parsed_scope.end": 253,
                  "key.parsed_scope.start": 253,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV11addToOneHotyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ8intIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 208,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 10394,
                  "key.offset": 10390,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_one_hot(\n  _dataframe, intIndex, 0, Int32(oneHotParams.count), oneHotParams.onval, oneHotParams.offval,\n  oneHotParams.dataType.toC, Int32(CCV_TENSOR_FORMAT_NCHW), name)",
                  "key.parsed_scope.end": 274,
                  "key.parsed_scope.start": 274,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV11addToOneHotyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV11addToOneHotyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 584,
          "key.bodyoffset": 10701,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 620,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 10676,
          "key.offset": 10666,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 295,
          "key.parsed_scope.start": 281,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toOneHot&lt;Element&gt;(_ dataType: <Type usr=\"s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF7ElementL_xmfp\">Element</Type>.Type, count: <Type usr=\"s:Si\">Int</Type>, onval: <Type usr=\"s:Sf\">Float</Type> = 1, offval: <Type usr=\"s:Sf\">Float</Type> = 0) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10786
                }
              ],
              "key.bodylength": 341,
              "key.bodyoffset": 10942,
              "key.doc.column": 15,
              "key.doc.comment": "Create one-hot tensors. It is expected to be called from a column with Int.",
              "key.doc.declaration": "public func toOneHot<Element>(_ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0) -> DataFrame.UntypedSeries where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"283\" column=\"15\"><Name>toOneHot(_:count:onval:offval:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF</USR><Declaration>public func toOneHot&lt;Element&gt;(_ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0) -&gt; DataFrame.UntypedSeries where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create one-hot tensors. It is expected to be called from a column with Int.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 283,
              "key.doc.name": "toOneHot(_:count:onval:offval:)",
              "key.doc.type": "Function",
              "key.doclength": 80,
              "key.docoffset": 10704,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toOneHot</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dataType</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 491,
              "key.name": "toOneHot(_:count:onval:offval:)",
              "key.namelength": 115,
              "key.nameoffset": 10798,
              "key.offset": 10793,
              "key.parsed_declaration": "public func toOneHot<Element: TensorNumeric>(\n  _ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 294,
              "key.parsed_scope.start": 283,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 10816
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 10807,
                  "key.offset": 10807,
                  "key.parsed_declaration": "public func toOneHot<Element: TensorNumeric",
                  "key.parsed_scope.end": 283,
                  "key.parsed_scope.start": 283,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DataFrame.UntypedSeries) -> (Element.Type, Int, Float, Float) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s_5count5onval6offval4main9DataFrameV13UntypedSeriesVxm_SiS2ftcAD13TensorNumericRzluD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV8toOneHot_5count5onval6offvalAExm_SiS2ftAA13TensorNumericRzlF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 433,
          "key.bodyoffset": 11342,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 488,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 11298,
          "key.offset": 11288,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element == Int",
          "key.parsed_scope.end": 307,
          "key.parsed_scope.start": 297,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toOneHot&lt;Element&gt;(_ dataType: <Type usr=\"s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF7ElementL_qd__mfp\">Element</Type>.Type, count: <Type usr=\"s:Si\">Int</Type>, onval: <Type usr=\"s:Sf\">Float</Type> = 1, offval: <Type usr=\"s:Sf\">Float</Type> = 0) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11427
                }
              ],
              "key.bodylength": 190,
              "key.bodyoffset": 11583,
              "key.doc.column": 15,
              "key.doc.comment": "Create one-hot tensors. It is expected to be called from a column with Int.",
              "key.doc.declaration": "public func toOneHot<Element>(_ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0) -> DataFrame.UntypedSeries where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"299\" column=\"15\"><Name>toOneHot(_:count:onval:offval:)</Name><USR>s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF</USR><Declaration>public func toOneHot&lt;Element&gt;(_ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0) -&gt; DataFrame.UntypedSeries where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create one-hot tensors. It is expected to be called from a column with Int.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 299,
              "key.doc.name": "toOneHot(_:count:onval:offval:)",
              "key.doc.type": "Function",
              "key.doclength": 80,
              "key.docoffset": 11345,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toOneHot</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF7ElementL_qd__mfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dataType</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF7ElementL_qd__mfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 340,
              "key.name": "toOneHot(_:count:onval:offval:)",
              "key.namelength": 115,
              "key.nameoffset": 11439,
              "key.offset": 11434,
              "key.parsed_declaration": "public func toOneHot<Element: TensorNumeric>(\n  _ dataType: Element.Type, count: Int, onval: Float = 1, offval: Float = 0\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 306,
              "key.parsed_scope.start": 299,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 11457
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 11448,
                  "key.offset": 11448,
                  "key.parsed_declaration": "public func toOneHot<Element: TensorNumeric",
                  "key.parsed_scope.end": 299,
                  "key.parsed_scope.start": 299,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF7ElementL_qd__mfp"
                }
              ],
              "key.typename": "<Element, Element where Element == Int, Element : TensorNumeric> (DataFrame.TypedSeries<Element>) -> (Element.Type, Int, Float, Float) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s_5count5onval6offval4main9DataFrameV13UntypedSeriesVqd__m_SiS2ftcAD13TensorNumericRd__luD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVAASiRszlE8toOneHot_5count5onval6offvalAC07UntypedE0Vqd__m_SiS2ftAA13TensorNumericRd__lF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 565,
          "key.bodyoffset": 11823,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 587,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 11812,
          "key.offset": 11802,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 323,
          "key.parsed_scope.start": 311,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToOneGPU(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 414,
              "key.bodyoffset": 11972,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToOneGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 561,
              "key.name": "addToOneGPU(_:_:_:_:)",
              "key.namelength": 114,
              "key.nameoffset": 11838,
              "key.offset": 11826,
              "key.parsed_declaration": "static func addToOneGPU(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 322,
              "key.parsed_scope.start": 312,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 11981,
                  "key.offset": 11977,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 315,
                  "key.parsed_scope.start": 315,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tupleIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 79,
                  "key.name": "tupleIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 12024,
                  "key.offset": 12020,
                  "key.parsed_declaration": "let tupleIndex = ccv_cnnp_dataframe_make_tuple(_dataframe, &inputIndex, 1, nil)",
                  "key.parsed_scope.end": 316,
                  "key.parsed_scope.start": 316,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10tupleIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let ordinal: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ordinal</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 29,
                  "key.name": "ordinal",
                  "key.namelength": 7,
                  "key.nameoffset": 12108,
                  "key.offset": 12104,
                  "key.parsed_declaration": "let ordinal = params! as! Int",
                  "key.parsed_scope.end": 317,
                  "key.parsed_scope.start": 317,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ7ordinalL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let copyIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>copyIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "copyIndex",
                  "key.namelength": 9,
                  "key.nameoffset": 12142,
                  "key.offset": 12138,
                  "key.parsed_declaration": "let copyIndex = ccv_cnnp_dataframe_copy_to_gpu(\n  _dataframe, tupleIndex, 0, 1, Int32(ordinal), nil)",
                  "key.parsed_scope.end": 318,
                  "key.parsed_scope.start": 318,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ9copyIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 76,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 12251,
                  "key.offset": 12247,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_extract_tuple(_dataframe, copyIndex, 0, name)",
                  "key.parsed_scope.end": 320,
                  "key.parsed_scope.start": 320,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV11addToOneGPUyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 404,
          "key.bodyoffset": 12426,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 440,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 12401,
          "key.offset": 12391,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 334,
          "key.parsed_scope.start": 325,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toGPU(_ ordinal: <Type usr=\"s:Si\">Int</Type> = 0) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12509
                }
              ],
              "key.bodylength": 253,
              "key.bodyoffset": 12575,
              "key.doc.column": 15,
              "key.doc.comment": "Copy tensor to GPU. It is expected to be called from a column of tensors.",
              "key.doc.declaration": "public func toGPU(_ ordinal: Int = 0) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"327\" column=\"15\"><Name>toGPU(_:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV5toGPUyAESiF</USR><Declaration>public func toGPU(_ ordinal: Int = 0) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Copy tensor to GPU. It is expected to be called from a column of tensors.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 327,
              "key.doc.name": "toGPU(_:)",
              "key.doc.type": "Function",
              "key.doclength": 78,
              "key.docoffset": 12429,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ordinal</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 313,
              "key.name": "toGPU(_:)",
              "key.namelength": 25,
              "key.nameoffset": 12521,
              "key.offset": 12516,
              "key.parsed_declaration": "public func toGPU(_ ordinal: Int = 0) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 333,
              "key.parsed_scope.start": 327,
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries) -> (Int) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVSicD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV5toGPUyAESiF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 296,
          "key.bodyoffset": 12891,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 355,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 12843,
          "key.offset": 12833,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element: AnyTensor",
          "key.parsed_scope.end": 342,
          "key.parsed_scope.start": 336,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toGPU(_ ordinal: <Type usr=\"s:Si\">Int</Type> = 0) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12974
                }
              ],
              "key.bodylength": 145,
              "key.bodyoffset": 13040,
              "key.doc.column": 15,
              "key.doc.comment": "Copy tensor to GPU. It is expected to be called from a column of tensors.",
              "key.doc.declaration": "public func toGPU(_ ordinal: Int = 0) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"338\" column=\"15\"><Name>toGPU(_:)</Name><USR>s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE5toGPUyAC07UntypedE0VSiF</USR><Declaration>public func toGPU(_ ordinal: Int = 0) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Copy tensor to GPU. It is expected to be called from a column of tensors.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 338,
              "key.doc.name": "toGPU(_:)",
              "key.doc.type": "Function",
              "key.doclength": 78,
              "key.docoffset": 12894,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ordinal</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 205,
              "key.name": "toGPU(_:)",
              "key.namelength": 25,
              "key.nameoffset": 12986,
              "key.offset": 12981,
              "key.parsed_declaration": "public func toGPU(_ ordinal: Int = 0) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 341,
              "key.parsed_scope.start": 338,
              "key.substructure": [],
              "key.typename": "<Element where Element : AnyTensor> (DataFrame.TypedSeries<Element>) -> (Int) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVSicD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE5toGPUyAC07UntypedE0VSiF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 202,
          "key.bodyoffset": 13211,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 224,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 13200,
          "key.offset": 13190,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 350,
          "key.parsed_scope.start": 344,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct ManyUntypedSeriesTensorResult</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13310
                }
              ],
              "key.bodylength": 56,
              "key.bodyoffset": 13355,
              "key.doc.column": 17,
              "key.doc.comment": "Result represent a tuple of tensors that you can access either by name or by tuple index.",
              "key.doc.declaration": "public struct ManyUntypedSeriesTensorResult",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"346\" column=\"17\"><Name>ManyUntypedSeriesTensorResult</Name><USR>s:4main9DataFrameV29ManyUntypedSeriesTensorResultV</USR><Declaration>public struct ManyUntypedSeriesTensorResult</Declaration><CommentParts><Abstract><Para>Result represent a tuple of tensors that you can access either by name or by tuple index.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 346,
              "key.doc.name": "ManyUntypedSeriesTensorResult",
              "key.doc.type": "Class",
              "key.doclength": 94,
              "key.docoffset": 13214,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeriesTensorResult</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 95,
              "key.name": "ManyUntypedSeriesTensorResult",
              "key.namelength": 29,
              "key.nameoffset": 13324,
              "key.offset": 13317,
              "key.parsed_declaration": "public struct ManyUntypedSeriesTensorResult",
              "key.parsed_scope.end": 349,
              "key.parsed_scope.start": 346,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var index: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 13364,
                  "key.offset": 13360,
                  "key.parsed_declaration": "var index: Int",
                  "key.parsed_scope.end": 347,
                  "key.parsed_scope.start": 347,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultV5indexSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var namedIndex: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:Si\">Int</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>namedIndex</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 29,
                  "key.name": "namedIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 13383,
                  "key.offset": 13379,
                  "key.parsed_declaration": "var namedIndex: [String: Int]",
                  "key.parsed_scope.end": 348,
                  "key.parsed_scope.start": 348,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[String : Int]",
                  "key.typeusr": "$sSDySSSiGD",
                  "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultV10namedIndexSDySSSiGvp"
                }
              ],
              "key.typename": "DataFrame.ManyUntypedSeriesTensorResult.Type",
              "key.typeusr": "$s4main9DataFrameV29ManyUntypedSeriesTensorResultVmD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultV"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 399,
          "key.bodyoffset": 13437,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 421,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 13426,
          "key.offset": 13416,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 361,
          "key.parsed_scope.start": 352,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func extractTensorTuple(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 241,
              "key.bodyoffset": 13593,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extractTensorTuple</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 395,
              "key.name": "extractTensorTuple(_:_:_:_:)",
              "key.namelength": 121,
              "key.nameoffset": 13452,
              "key.offset": 13440,
              "key.parsed_declaration": "static func extractTensorTuple(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 360,
              "key.parsed_scope.start": 353,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 13602,
                  "key.offset": 13598,
                  "key.parsed_declaration": "let inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 356,
                  "key.parsed_scope.start": 356,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV18extractTensorTupleyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tupleIndex: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "tupleIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 13645,
                  "key.offset": 13641,
                  "key.parsed_declaration": "let tupleIndex = params! as! Int",
                  "key.parsed_scope.end": 357,
                  "key.parsed_scope.start": 357,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV18extractTensorTupleyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10tupleIndexL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 93,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 13682,
                  "key.offset": 13678,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_extract_tuple(_dataframe, inputIndex, Int32(tupleIndex), name)",
                  "key.parsed_scope.end": 358,
                  "key.parsed_scope.start": 358,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV18extractTensorTupleyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV18extractTensorTupleyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct ManyUntypedSeriesTensorResult</Declaration>",
          "key.bodylength": 601,
          "key.bodyoffset": 13890,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct ManyUntypedSeriesTensorResult",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"346\" column=\"17\"><Name>ManyUntypedSeriesTensorResult</Name><USR>s:4main9DataFrameV29ManyUntypedSeriesTensorResultV</USR><Declaration>public struct ManyUntypedSeriesTensorResult</Declaration><CommentParts><Abstract><Para>Result represent a tuple of tensors that you can access either by name or by tuple index.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 346,
          "key.doc.name": "ManyUntypedSeriesTensorResult",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeriesTensorResult</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 653,
          "key.name": "DataFrame.ManyUntypedSeriesTensorResult",
          "key.namelength": 39,
          "key.nameoffset": 13849,
          "key.offset": 13839,
          "key.parsed_declaration": "extension DataFrame.ManyUntypedSeriesTensorResult",
          "key.parsed_scope.end": 376,
          "key.parsed_scope.start": 363,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13893
                }
              ],
              "key.bodylength": 231,
              "key.bodyoffset": 13952,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 284,
              "key.name": "subscript(_:)",
              "key.namelength": 23,
              "key.nameoffset": 13900,
              "key.offset": 13900,
              "key.parsed_declaration": "public subscript(name: String) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 369,
              "key.parsed_scope.start": 364,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSicip\">subscript(_:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(String) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVSScD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSScip"
            },
            {
              "key.annotated_decl": "<Declaration>let tupleIndex: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 34,
              "key.name": "tupleIndex",
              "key.namelength": 10,
              "key.nameoffset": 13961,
              "key.offset": 13957,
              "key.parsed_declaration": "let tupleIndex = namedIndex[name]!",
              "key.parsed_scope.end": 365,
              "key.parsed_scope.start": 365,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSScig10tupleIndexL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "property",
              "key.namelength": 8,
              "key.nameoffset": 14000,
              "key.offset": 13996,
              "key.parsed_declaration": "let property = DataFrame.ColumnProperty(index: index, type: .tensor)",
              "key.parsed_scope.end": 366,
              "key.parsed_scope.start": 366,
              "key.typename": "DataFrame.ColumnProperty",
              "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSScig8propertyL_AC14ColumnPropertyVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(tupleIndex: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14187
                }
              ],
              "key.bodylength": 240,
              "key.bodyoffset": 14249,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>tupleIndex</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 296,
              "key.name": "subscript(_:)",
              "key.namelength": 26,
              "key.nameoffset": 14194,
              "key.offset": 14194,
              "key.parsed_declaration": "public subscript(tupleIndex: Int) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 375,
              "key.parsed_scope.start": 370,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSScip\">subscript(_:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Int) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVSicD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSicip"
            },
            {
              "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "property",
              "key.namelength": 8,
              "key.nameoffset": 14306,
              "key.offset": 14302,
              "key.parsed_declaration": "let property = DataFrame.ColumnProperty(index: index, type: .tensor)",
              "key.parsed_scope.end": 372,
              "key.parsed_scope.start": 372,
              "key.typename": "DataFrame.ColumnProperty",
              "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
              "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultVyAC0eF0VSicig8propertyL_AC14ColumnPropertyVvp"
            }
          ],
          "key.typename": "DataFrame.ManyUntypedSeriesTensorResult.Type",
          "key.typeusr": "$s4main9DataFrameV29ManyUntypedSeriesTensorResultVmD",
          "key.usr": "s:4main9DataFrameV29ManyUntypedSeriesTensorResultV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct ManyUntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 834,
          "key.bodyoffset": 14533,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 874,
          "key.name": "DataFrame.ManyUntypedSeries",
          "key.namelength": 27,
          "key.nameoffset": 14504,
          "key.offset": 14494,
          "key.parsed_declaration": "extension DataFrame.ManyUntypedSeries",
          "key.parsed_scope.end": 396,
          "key.parsed_scope.start": 378,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toGPU(_ ordinal: <Type usr=\"s:Si\">Int</Type> = 0) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV29ManyUntypedSeriesTensorResultV\">ManyUntypedSeriesTensorResult</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14536
                }
              ],
              "key.bodylength": 747,
              "key.bodyoffset": 14618,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ordinal</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV29ManyUntypedSeriesTensorResultV\">ManyUntypedSeriesTensorResult</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 823,
              "key.name": "toGPU(_:)",
              "key.namelength": 25,
              "key.nameoffset": 14548,
              "key.offset": 14543,
              "key.parsed_declaration": "public func toGPU(_ ordinal: Int = 0) -> DataFrame.ManyUntypedSeriesTensorResult",
              "key.parsed_scope.end": 395,
              "key.parsed_scope.start": 379,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let inputIndex: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 51,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 14711,
                  "key.offset": 14707,
                  "key.parsed_declaration": "let inputIndex = properties.map { Int32($0.index) }",
                  "key.parsed_scope.end": 383,
                  "key.parsed_scope.start": 383,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF10inputIndexL_Says5Int32VGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 14767,
                  "key.offset": 14763,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 384,
                  "key.parsed_scope.start": 384,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF10_dataframeL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tupleIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 107,
                  "key.name": "tupleIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 14808,
                  "key.offset": 14804,
                  "key.parsed_declaration": "let tupleIndex = ccv_cnnp_dataframe_make_tuple(\n  _dataframe, inputIndex, Int32(inputIndex.count), nil)",
                  "key.parsed_scope.end": 385,
                  "key.parsed_scope.start": 385,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF10tupleIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let copyIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>copyIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 126,
                  "key.name": "copyIndex",
                  "key.namelength": 9,
                  "key.nameoffset": 14920,
                  "key.offset": 14916,
                  "key.parsed_declaration": "let copyIndex = ccv_cnnp_dataframe_copy_to_gpu(\n  _dataframe, tupleIndex, 0, Int32(inputIndex.count), Int32(ordinal), nil)",
                  "key.parsed_scope.end": 387,
                  "key.parsed_scope.start": 387,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF9copyIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var namedIndex: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:Si\">Int</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>namedIndex</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "namedIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 15051,
                  "key.offset": 15047,
                  "key.parsed_declaration": "var namedIndex = [String: Int]()",
                  "key.parsed_scope.end": 389,
                  "key.parsed_scope.start": 389,
                  "key.typename": "[String : Int]",
                  "key.typeusr": "$sSDySSSiGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF10namedIndexL_SDySSSiGvp"
                }
              ],
              "key.typename": "(DataFrame.ManyUntypedSeries) -> (Int) -> DataFrame.ManyUntypedSeriesTensorResult",
              "key.typeusr": "$sy4main9DataFrameV29ManyUntypedSeriesTensorResultVSicD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5toGPUyAC0deF12TensorResultVSiF"
            }
          ],
          "key.typename": "DataFrame.ManyUntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV17ManyUntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>final class OneSquaredParams</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 15393
            }
          ],
          "key.bodylength": 172,
          "key.bodyoffset": 15423,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneSquaredParams</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 197,
          "key.name": "OneSquaredParams",
          "key.namelength": 16,
          "key.nameoffset": 15405,
          "key.offset": 15399,
          "key.parsed_declaration": "final class OneSquaredParams",
          "key.parsed_scope.end": 407,
          "key.parsed_scope.start": 400,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let variableLength: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>variableLength</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 24,
              "key.name": "variableLength",
              "key.namelength": 14,
              "key.nameoffset": 15430,
              "key.offset": 15426,
              "key.parsed_declaration": "let variableLength: Bool",
              "key.parsed_scope.end": 401,
              "key.parsed_scope.start": 401,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main16OneSquaredParamsC14variableLengthSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let maxLength: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxLength</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 18,
              "key.name": "maxLength",
              "key.namelength": 9,
              "key.nameoffset": 15457,
              "key.offset": 15453,
              "key.parsed_declaration": "let maxLength: Int",
              "key.parsed_scope.end": 402,
              "key.parsed_scope.start": 402,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16OneSquaredParamsC9maxLengthSivp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(variableLength: <Type usr=\"s:Sb\">Bool</Type>, maxLength: <Type usr=\"s:Si\">Int</Type>)</Declaration>",
              "key.bodylength": 75,
              "key.bodyoffset": 15518,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>variableLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 120,
              "key.name": "init(variableLength:maxLength:)",
              "key.namelength": 42,
              "key.nameoffset": 15474,
              "key.offset": 15474,
              "key.parsed_declaration": "init(variableLength: Bool, maxLength: Int)",
              "key.parsed_scope.end": 406,
              "key.parsed_scope.start": 403,
              "key.substructure": [],
              "key.typename": "(OneSquaredParams.Type) -> (Bool, Int) -> OneSquaredParams",
              "key.typeusr": "$s14variableLength03maxB04main16OneSquaredParamsCSb_SitcD",
              "key.usr": "s:4main16OneSquaredParamsC14variableLength03maxF0ACSb_Sitcfc"
            }
          ],
          "key.typename": "OneSquaredParams.Type",
          "key.typeusr": "$s4main16OneSquaredParamsCmD",
          "key.usr": "s:4main16OneSquaredParamsC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 570,
          "key.bodyoffset": 15619,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 592,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 15608,
          "key.offset": 15598,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 421,
          "key.parsed_scope.start": 409,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToOneSquared(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 415,
              "key.bodyoffset": 15772,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToOneSquared</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 566,
              "key.name": "addToOneSquared(_:_:_:_:)",
              "key.namelength": 118,
              "key.nameoffset": 15634,
              "key.offset": 15622,
              "key.parsed_declaration": "static func addToOneSquared(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 420,
              "key.parsed_scope.start": 410,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 15781,
                  "key.offset": 15777,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 413,
                  "key.parsed_scope.start": 413,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV15addToOneSquaredyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let oneSquareParams: <Type usr=\"s:4main16OneSquaredParamsC\">OneSquaredParams</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>oneSquareParams</decl.name>: <decl.var.type><ref.class usr=\"s:4main16OneSquaredParamsC\">OneSquaredParams</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 50,
                  "key.name": "oneSquareParams",
                  "key.namelength": 15,
                  "key.nameoffset": 15824,
                  "key.offset": 15820,
                  "key.parsed_declaration": "let oneSquareParams = params! as! OneSquaredParams",
                  "key.parsed_scope.end": 414,
                  "key.parsed_scope.start": 414,
                  "key.typename": "OneSquaredParams",
                  "key.typeusr": "$s4main16OneSquaredParamsCD",
                  "key.usr": "s:4main9DataFrameV15addToOneSquaredyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ15oneSquareParamsL_AA0fgN0Cvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tupleIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 167,
                  "key.name": "tupleIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 15879,
                  "key.offset": 15875,
                  "key.parsed_declaration": "let tupleIndex = ccv_cnnp_dataframe_one_squared(\n  _dataframe, &inputIndex, 1, oneSquareParams.variableLength ? 1 : 0,\n  Int32(oneSquareParams.maxLength), nil)",
                  "key.parsed_scope.end": 415,
                  "key.parsed_scope.start": 415,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV15addToOneSquaredyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10tupleIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 77,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 16051,
                  "key.offset": 16047,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_extract_tuple(_dataframe, tupleIndex, 0, name)",
                  "key.parsed_scope.end": 418,
                  "key.parsed_scope.start": 418,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV15addToOneSquaredyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV15addToOneSquaredyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 434,
          "key.bodyoffset": 16227,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 470,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 16202,
          "key.offset": 16192,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 434,
          "key.parsed_scope.start": 423,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toOneSquared(maxLength: <Type usr=\"s:Si\">Int</Type>, variableLength: <Type usr=\"s:Sb\">Bool</Type> = true) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16230
                }
              ],
              "key.bodylength": 331,
              "key.bodyoffset": 16328,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toOneSquared</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>maxLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variableLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 423,
              "key.name": "toOneSquared(maxLength:variableLength:)",
              "key.namelength": 57,
              "key.nameoffset": 16242,
              "key.offset": 16237,
              "key.parsed_declaration": "public func toOneSquared(maxLength: Int, variableLength: Bool = true) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 433,
              "key.parsed_scope.start": 424,
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries) -> (Int, Bool) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s9maxLength08variableB04main9DataFrameV13UntypedSeriesVSi_SbtcD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV12toOneSquared9maxLength08variableJ0AESi_SbtF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 326,
          "key.bodyoffset": 16722,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 385,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 16674,
          "key.offset": 16664,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element: AnyTensor",
          "key.parsed_scope.end": 444,
          "key.parsed_scope.start": 436,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toOneSquared(maxLength: <Type usr=\"s:Si\">Int</Type>, variableLength: <Type usr=\"s:Sb\">Bool</Type> = true) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16725
                }
              ],
              "key.bodylength": 223,
              "key.bodyoffset": 16823,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toOneSquared</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>maxLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variableLength</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 315,
              "key.name": "toOneSquared(maxLength:variableLength:)",
              "key.namelength": 57,
              "key.nameoffset": 16737,
              "key.offset": 16732,
              "key.parsed_declaration": "public func toOneSquared(maxLength: Int, variableLength: Bool = true) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 443,
              "key.parsed_scope.start": 437,
              "key.substructure": [],
              "key.typename": "<Element where Element : AnyTensor> (DataFrame.TypedSeries<Element>) -> (Int, Bool) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s9maxLength08variableB04main9DataFrameV13UntypedSeriesVSi_SbtcD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE12toOneSquared9maxLength08variableL0AC07UntypedE0VSi_SbtF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 561,
          "key.bodyoffset": 17092,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 583,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 17081,
          "key.offset": 17071,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 459,
          "key.parsed_scope.start": 448,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToTruncate(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 408,
              "key.bodyoffset": 17243,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToTruncate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 557,
              "key.name": "addToTruncate(_:_:_:_:)",
              "key.namelength": 116,
              "key.nameoffset": 17107,
              "key.offset": 17095,
              "key.parsed_declaration": "static func addToTruncate(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 458,
              "key.parsed_scope.start": 449,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let otherProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>otherProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "otherProperty",
                  "key.namelength": 13,
                  "key.nameoffset": 17252,
                  "key.offset": 17248,
                  "key.parsed_declaration": "let otherProperty = (params! as! Wrapped<ColumnProperty>).value",
                  "key.parsed_scope.end": 452,
                  "key.parsed_scope.start": 452,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ05otherH0L_AFvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 17320,
                  "key.offset": 17316,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 453,
                  "key.parsed_scope.start": 453,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var truncateIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>truncateIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 46,
                  "key.name": "truncateIndex",
                  "key.namelength": 13,
                  "key.nameoffset": 17363,
                  "key.offset": 17359,
                  "key.parsed_declaration": "var truncateIndex = Int32(otherProperty.index)",
                  "key.parsed_scope.end": 454,
                  "key.parsed_scope.start": 454,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ13truncateIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tupleIndex: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tupleIndex</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 96,
                  "key.name": "tupleIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 17414,
                  "key.offset": 17410,
                  "key.parsed_declaration": "let tupleIndex = ccv_cnnp_dataframe_truncate(_dataframe, &inputIndex, 1, &truncateIndex, 1, nil)",
                  "key.parsed_scope.end": 455,
                  "key.parsed_scope.start": 455,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10tupleIndexL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 77,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 17515,
                  "key.offset": 17511,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_extract_tuple(_dataframe, tupleIndex, 0, name)",
                  "key.parsed_scope.end": 456,
                  "key.parsed_scope.start": 456,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV13addToTruncateyAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 905,
          "key.bodyoffset": 17691,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 941,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 17666,
          "key.offset": 17656,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 485,
          "key.parsed_scope.start": 461,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toTruncate(_ other: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17694
                }
              ],
              "key.bodylength": 368,
              "key.bodyoffset": 17779,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toTruncate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 447,
              "key.name": "toTruncate(_:)",
              "key.namelength": 44,
              "key.nameoffset": 17706,
              "key.offset": 17701,
              "key.parsed_declaration": "public func toTruncate(_ other: DataFrame.UntypedSeries) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 472,
              "key.parsed_scope.start": 462,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF\">toTruncate&lt;Element&gt;(_: DataFrame.TypedSeries&lt;Element&gt;) -&gt; DataFrame.UntypedSeries where Element : AnyTensor</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries) -> (DataFrame.UntypedSeries) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVAEcD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV10toTruncateyA2EF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toTruncate&lt;Element&gt;(_ other: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</Type>&lt;<Type usr=\"s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF7ElementL_xmfp\">Element</Type>&gt;) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where Element : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 18152
                }
              ],
              "key.bodylength": 324,
              "key.bodyoffset": 18270,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toTruncate</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 436,
              "key.name": "toTruncate(_:)",
              "key.namelength": 71,
              "key.nameoffset": 18164,
              "key.offset": 18159,
              "key.parsed_declaration": "public func toTruncate<Element: AnyTensor>(_ other: DataFrame.TypedSeries<Element>)\n  -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 484,
              "key.parsed_scope.start": 474,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesV10toTruncateyA2EF\">toTruncate(_: DataFrame.UntypedSeries) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 9,
                      "key.offset": 18184
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "AnyTensor"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 18,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 18175,
                  "key.offset": 18175,
                  "key.parsed_declaration": "public func toTruncate<Element: AnyTensor",
                  "key.parsed_scope.end": 474,
                  "key.parsed_scope.start": 474,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : AnyTensor> (DataFrame.UntypedSeries) -> (DataFrame.TypedSeries<Element>) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVAC05TypedE0Vy_xGcAA9AnyTensorRzluD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV10toTruncateyAeC05TypedE0Vy_xGAA9AnyTensorRzlF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 771,
          "key.bodyoffset": 18657,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 830,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 18609,
          "key.offset": 18599,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element: AnyTensor",
          "key.parsed_scope.end": 505,
          "key.parsed_scope.start": 487,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toTruncate(_ other: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 18660
                }
              ],
              "key.bodylength": 333,
              "key.bodyoffset": 18745,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toTruncate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 412,
              "key.name": "toTruncate(_:)",
              "key.namelength": 44,
              "key.nameoffset": 18672,
              "key.offset": 18667,
              "key.parsed_declaration": "public func toTruncate(_ other: DataFrame.UntypedSeries) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 496,
              "key.parsed_scope.start": 488,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF\">toTruncate&lt;OtherElement&gt;(_: DataFrame.TypedSeries&lt;OtherElement&gt;) -&gt; DataFrame.UntypedSeries where OtherElement : AnyTensor</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : AnyTensor> (DataFrame.TypedSeries<Element>) -> (DataFrame.UntypedSeries) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVAEcD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAIF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toTruncate&lt;OtherElement&gt;(_ other: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</Type>&lt;<Type usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF12OtherElementL_qd__mfp\">OtherElement</Type>&gt;) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where OtherElement : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19082
                }
              ],
              "key.bodylength": 216,
              "key.bodyoffset": 19210,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toTruncate</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF12OtherElementL_qd__mfp\"><decl.generic_type_param.name>OtherElement</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF12OtherElementL_qd__mfp\">OtherElement</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>OtherElement : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 338,
              "key.name": "toTruncate(_:)",
              "key.namelength": 81,
              "key.nameoffset": 19094,
              "key.offset": 19089,
              "key.parsed_declaration": "public func toTruncate<OtherElement: AnyTensor>(_ other: DataFrame.TypedSeries<OtherElement>)\n  -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 504,
              "key.parsed_scope.start": 497,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAIF\">toTruncate(_: DataFrame.UntypedSeries) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>OtherElement : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 9,
                      "key.offset": 19119
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>OtherElement</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "AnyTensor"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 23,
                  "key.name": "OtherElement",
                  "key.namelength": 12,
                  "key.nameoffset": 19105,
                  "key.offset": 19105,
                  "key.parsed_declaration": "public func toTruncate<OtherElement: AnyTensor",
                  "key.parsed_scope.end": 497,
                  "key.parsed_scope.start": 497,
                  "key.typename": "OtherElement.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF12OtherElementL_qd__mfp"
                }
              ],
              "key.typename": "<Element, OtherElement where Element : AnyTensor, OtherElement : AnyTensor> (DataFrame.TypedSeries<Element>) -> (DataFrame.TypedSeries<OtherElement>) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVAC05TypedE0Vy_qd__GcAA9AnyTensorRd__luD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE10toTruncateyAC07UntypedE0VAEy_qd__GAaFRd__lF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum ImageJitter</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 19455
            }
          ],
          "key.bodylength": 683,
          "key.bodyoffset": 19480,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ImageJitter</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 702,
          "key.name": "ImageJitter",
          "key.namelength": 11,
          "key.nameoffset": 19467,
          "key.offset": 19462,
          "key.parsed_declaration": "public enum ImageJitter",
          "key.parsed_scope.end": 544,
          "key.parsed_scope.start": 509,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.Size</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19483
                }
              ],
              "key.bodylength": 131,
              "key.bodyoffset": 19503,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<decl.name>Size</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 145,
              "key.name": "Size",
              "key.namelength": 4,
              "key.nameoffset": 19497,
              "key.offset": 19490,
              "key.parsed_declaration": "public struct Size",
              "key.parsed_scope.end": 517,
              "key.parsed_scope.start": 510,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var rows: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rows</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 13,
                  "key.name": "rows",
                  "key.namelength": 4,
                  "key.nameoffset": 19512,
                  "key.offset": 19508,
                  "key.parsed_declaration": "var rows: Int",
                  "key.parsed_scope.end": 511,
                  "key.parsed_scope.start": 511,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO4SizeV4rowsSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var cols: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cols</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 13,
                  "key.name": "cols",
                  "key.namelength": 4,
                  "key.nameoffset": 19530,
                  "key.offset": 19526,
                  "key.parsed_declaration": "var cols: Int",
                  "key.parsed_scope.end": 512,
                  "key.parsed_scope.start": 512,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO4SizeV4colsSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(rows: <Type usr=\"s:Si\">Int</Type>, cols: <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 19544
                    }
                  ],
                  "key.bodylength": 51,
                  "key.bodyoffset": 19579,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rows</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cols</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 80,
                  "key.name": "init(rows:cols:)",
                  "key.namelength": 26,
                  "key.nameoffset": 19551,
                  "key.offset": 19551,
                  "key.parsed_declaration": "public init(rows: Int, cols: Int)",
                  "key.parsed_scope.end": 516,
                  "key.parsed_scope.start": 513,
                  "key.substructure": [],
                  "key.typename": "(ImageJitter.Size.Type) -> (Int, Int) -> ImageJitter.Size",
                  "key.typeusr": "$s4rows4cols4main11ImageJitterO4SizeVSi_SitcD",
                  "key.usr": "s:4main11ImageJitterO4SizeV4rows4colsAESi_Sitcfc"
                }
              ],
              "key.typename": "ImageJitter.Size.Type",
              "key.typeusr": "$s4main11ImageJitterO4SizeVmD",
              "key.usr": "s:4main11ImageJitterO4SizeV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.Resize</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19638
                }
              ],
              "key.bodylength": 191,
              "key.bodyoffset": 19660,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<decl.name>Resize</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 207,
              "key.name": "Resize",
              "key.namelength": 6,
              "key.nameoffset": 19652,
              "key.offset": 19645,
              "key.parsed_declaration": "public struct Resize",
              "key.parsed_scope.end": 527,
              "key.parsed_scope.start": 518,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var min: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>min</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 12,
                  "key.name": "min",
                  "key.namelength": 3,
                  "key.nameoffset": 19669,
                  "key.offset": 19665,
                  "key.parsed_declaration": "var min: Int",
                  "key.parsed_scope.end": 519,
                  "key.parsed_scope.start": 519,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO6ResizeV3minSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var max: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>max</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 12,
                  "key.name": "max",
                  "key.namelength": 3,
                  "key.nameoffset": 19686,
                  "key.offset": 19682,
                  "key.parsed_declaration": "var max: Int",
                  "key.parsed_scope.end": 520,
                  "key.parsed_scope.start": 520,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO6ResizeV3maxSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var roundup: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>roundup</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 16,
                  "key.name": "roundup",
                  "key.namelength": 7,
                  "key.nameoffset": 19703,
                  "key.offset": 19699,
                  "key.parsed_declaration": "var roundup: Int",
                  "key.parsed_scope.end": 521,
                  "key.parsed_scope.start": 521,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO6ResizeV7roundupSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(min: <Type usr=\"s:Si\">Int</Type>, max: <Type usr=\"s:Si\">Int</Type>, roundup: <Type usr=\"s:Si\">Int</Type> = 0)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 19720
                    }
                  ],
                  "key.bodylength": 76,
                  "key.bodyoffset": 19771,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>roundup</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 121,
                  "key.name": "init(min:max:roundup:)",
                  "key.namelength": 42,
                  "key.nameoffset": 19727,
                  "key.offset": 19727,
                  "key.parsed_declaration": "public init(min: Int, max: Int, roundup: Int = 0)",
                  "key.parsed_scope.end": 526,
                  "key.parsed_scope.start": 522,
                  "key.substructure": [],
                  "key.typename": "(ImageJitter.Resize.Type) -> (Int, Int, Int) -> ImageJitter.Resize",
                  "key.typeusr": "$s3min3max7roundup4main11ImageJitterO6ResizeVSi_S2itcD",
                  "key.usr": "s:4main11ImageJitterO6ResizeV3min3max7roundupAESi_S2itcfc"
                }
              ],
              "key.typename": "ImageJitter.Resize.Type",
              "key.typeusr": "$s4main11ImageJitterO6ResizeVmD",
              "key.usr": "s:4main11ImageJitterO6ResizeV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.Offset</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19855
                }
              ],
              "key.bodylength": 107,
              "key.bodyoffset": 19877,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<decl.name>Offset</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 123,
              "key.name": "Offset",
              "key.namelength": 6,
              "key.nameoffset": 19869,
              "key.offset": 19862,
              "key.parsed_declaration": "public struct Offset",
              "key.parsed_scope.end": 535,
              "key.parsed_scope.start": 528,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var x: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 10,
                  "key.name": "x",
                  "key.namelength": 1,
                  "key.nameoffset": 19886,
                  "key.offset": 19882,
                  "key.parsed_declaration": "var x: Int",
                  "key.parsed_scope.end": 529,
                  "key.parsed_scope.start": 529,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO6OffsetV1xSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var y: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 10,
                  "key.name": "y",
                  "key.namelength": 1,
                  "key.nameoffset": 19901,
                  "key.offset": 19897,
                  "key.parsed_declaration": "var y: Int",
                  "key.parsed_scope.end": 530,
                  "key.parsed_scope.start": 530,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main11ImageJitterO6OffsetV1ySivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(x: <Type usr=\"s:Si\">Int</Type>, y: <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 19912
                    }
                  ],
                  "key.bodylength": 39,
                  "key.bodyoffset": 19941,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 62,
                  "key.name": "init(x:y:)",
                  "key.namelength": 20,
                  "key.nameoffset": 19919,
                  "key.offset": 19919,
                  "key.parsed_declaration": "public init(x: Int, y: Int)",
                  "key.parsed_scope.end": 534,
                  "key.parsed_scope.start": 531,
                  "key.substructure": [],
                  "key.typename": "(ImageJitter.Offset.Type) -> (Int, Int) -> ImageJitter.Offset",
                  "key.typeusr": "$s1x1y4main11ImageJitterO6OffsetVSi_SitcD",
                  "key.usr": "s:4main11ImageJitterO6OffsetV1x1yAESi_Sitcfc"
                }
              ],
              "key.typename": "ImageJitter.Offset.Type",
              "key.typeusr": "$s4main11ImageJitterO6OffsetVmD",
              "key.usr": "s:4main11ImageJitterO6OffsetV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.Normalize</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19988
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 20013,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<decl.name>Normalize</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 167,
              "key.name": "Normalize",
              "key.namelength": 9,
              "key.nameoffset": 20002,
              "key.offset": 19995,
              "key.parsed_declaration": "public struct Normalize",
              "key.parsed_scope.end": 543,
              "key.parsed_scope.start": 536,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var mean: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>mean</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 17,
                  "key.name": "mean",
                  "key.namelength": 4,
                  "key.nameoffset": 20022,
                  "key.offset": 20018,
                  "key.parsed_declaration": "var mean: [Float]",
                  "key.parsed_scope.end": 537,
                  "key.parsed_scope.start": 537,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[Float]",
                  "key.typeusr": "$sSaySfGD",
                  "key.usr": "s:4main11ImageJitterO9NormalizeV4meanSaySfGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var std: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>std</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 16,
                  "key.name": "std",
                  "key.namelength": 3,
                  "key.nameoffset": 20044,
                  "key.offset": 20040,
                  "key.parsed_declaration": "var std: [Float]",
                  "key.parsed_scope.end": 538,
                  "key.parsed_scope.start": 538,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[Float]",
                  "key.typeusr": "$sSaySfGD",
                  "key.usr": "s:4main11ImageJitterO9NormalizeV3stdSaySfGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(mean: [<Type usr=\"s:Sf\">Float</Type>], std: [<Type usr=\"s:Sf\">Float</Type>] = [])</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 20061
                    }
                  ],
                  "key.bodylength": 49,
                  "key.bodyoffset": 20108,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>mean</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>std</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.parameter.type> = []</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 90,
                  "key.name": "init(mean:std:)",
                  "key.namelength": 38,
                  "key.nameoffset": 20068,
                  "key.offset": 20068,
                  "key.parsed_declaration": "public init(mean: [Float], std: [Float] = [])",
                  "key.parsed_scope.end": 542,
                  "key.parsed_scope.start": 539,
                  "key.substructure": [],
                  "key.typename": "(ImageJitter.Normalize.Type) -> ([Float], [Float]) -> ImageJitter.Normalize",
                  "key.typeusr": "$s4mean3std4main11ImageJitterO9NormalizeVSaySfG_AHtcD",
                  "key.usr": "s:4main11ImageJitterO9NormalizeV4mean3stdAESaySfG_AHtcfc"
                }
              ],
              "key.typename": "ImageJitter.Normalize.Type",
              "key.typeusr": "$s4main11ImageJitterO9NormalizeVmD",
              "key.usr": "s:4main11ImageJitterO9NormalizeV"
            }
          ],
          "key.typename": "ImageJitter.Type",
          "key.typeusr": "$s4main11ImageJitterOmD",
          "key.usr": "s:4main11ImageJitterO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>final class ImageJitterParams</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 20165
            }
          ],
          "key.bodylength": 2499,
          "key.bodyoffset": 20196,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ImageJitterParams</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 2525,
          "key.name": "ImageJitterParams",
          "key.namelength": 17,
          "key.nameoffset": 20177,
          "key.offset": 20171,
          "key.parsed_declaration": "final class ImageJitterParams",
          "key.parsed_scope.end": 628,
          "key.parsed_scope.start": 545,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let contrast: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contrast</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 19,
              "key.name": "contrast",
              "key.namelength": 8,
              "key.nameoffset": 20203,
              "key.offset": 20199,
              "key.parsed_declaration": "let contrast: Float",
              "key.parsed_scope.end": 546,
              "key.parsed_scope.start": 546,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main17ImageJitterParamsC8contrastSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let saturation: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>saturation</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 21,
              "key.name": "saturation",
              "key.namelength": 10,
              "key.nameoffset": 20225,
              "key.offset": 20221,
              "key.parsed_declaration": "let saturation: Float",
              "key.parsed_scope.end": 547,
              "key.parsed_scope.start": 547,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main17ImageJitterParamsC10saturationSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let brightness: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>brightness</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 21,
              "key.name": "brightness",
              "key.namelength": 10,
              "key.nameoffset": 20249,
              "key.offset": 20245,
              "key.parsed_declaration": "let brightness: Float",
              "key.parsed_scope.end": 548,
              "key.parsed_scope.start": 548,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main17ImageJitterParamsC10brightnessSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let lighting: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lighting</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 19,
              "key.name": "lighting",
              "key.namelength": 8,
              "key.nameoffset": 20273,
              "key.offset": 20269,
              "key.parsed_declaration": "let lighting: Float",
              "key.parsed_scope.end": 549,
              "key.parsed_scope.start": 549,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main17ImageJitterParamsC8lightingSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let aspectRatio: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>aspectRatio</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 22,
              "key.name": "aspectRatio",
              "key.namelength": 11,
              "key.nameoffset": 20295,
              "key.offset": 20291,
              "key.parsed_declaration": "let aspectRatio: Float",
              "key.parsed_scope.end": 550,
              "key.parsed_scope.start": 550,
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main17ImageJitterParamsC11aspectRatioSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let symmetric: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>symmetric</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 19,
              "key.name": "symmetric",
              "key.namelength": 9,
              "key.nameoffset": 20320,
              "key.offset": 20316,
              "key.parsed_declaration": "let symmetric: Bool",
              "key.parsed_scope.end": 551,
              "key.parsed_scope.start": 551,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main17ImageJitterParamsC9symmetricSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let seed: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>seed</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 13,
              "key.name": "seed",
              "key.namelength": 4,
              "key.nameoffset": 20342,
              "key.offset": 20338,
              "key.parsed_declaration": "let seed: Int",
              "key.parsed_scope.end": 552,
              "key.parsed_scope.start": 552,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main17ImageJitterParamsC4seedSivp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let centerCrop: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>centerCrop</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 20,
              "key.name": "centerCrop",
              "key.namelength": 10,
              "key.nameoffset": 20358,
              "key.offset": 20354,
              "key.parsed_declaration": "let centerCrop: Bool",
              "key.parsed_scope.end": 553,
              "key.parsed_scope.start": 553,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main17ImageJitterParamsC10centerCropSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let size: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO4SizeV\">Size</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO4SizeV\">Size</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 26,
              "key.name": "size",
              "key.namelength": 4,
              "key.nameoffset": 20381,
              "key.offset": 20377,
              "key.parsed_declaration": "let size: ImageJitter.Size",
              "key.parsed_scope.end": 554,
              "key.parsed_scope.start": 554,
              "key.typename": "ImageJitter.Size",
              "key.typeusr": "$s4main11ImageJitterO4SizeVD",
              "key.usr": "s:4main17ImageJitterParamsC4sizeAA0bC0O4SizeVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let resize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6ResizeV\">Resize</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>resize</decl.name>: <decl.var.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6ResizeV\">Resize</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 30,
              "key.name": "resize",
              "key.namelength": 6,
              "key.nameoffset": 20410,
              "key.offset": 20406,
              "key.parsed_declaration": "let resize: ImageJitter.Resize",
              "key.parsed_scope.end": 555,
              "key.parsed_scope.start": 555,
              "key.typename": "ImageJitter.Resize",
              "key.typeusr": "$s4main11ImageJitterO6ResizeVD",
              "key.usr": "s:4main17ImageJitterParamsC6resizeAA0bC0O6ResizeVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let offset: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6OffsetV\">Offset</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6OffsetV\">Offset</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 30,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 20443,
              "key.offset": 20439,
              "key.parsed_declaration": "let offset: ImageJitter.Offset",
              "key.parsed_scope.end": 556,
              "key.parsed_scope.start": 556,
              "key.typename": "ImageJitter.Offset",
              "key.typeusr": "$s4main11ImageJitterO6OffsetVD",
              "key.usr": "s:4main17ImageJitterParamsC6offsetAA0bC0O6OffsetVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let normalize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>normalize</decl.name>: <decl.var.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 36,
              "key.name": "normalize",
              "key.namelength": 9,
              "key.nameoffset": 20476,
              "key.offset": 20472,
              "key.parsed_declaration": "let normalize: ImageJitter.Normalize",
              "key.parsed_scope.end": 557,
              "key.parsed_scope.start": 557,
              "key.typename": "ImageJitter.Normalize",
              "key.typeusr": "$s4main11ImageJitterO9NormalizeVD",
              "key.usr": "s:4main17ImageJitterParamsC9normalizeAA0bC0O9NormalizeVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 22,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 20515,
              "key.offset": 20511,
              "key.parsed_declaration": "let dataType: DataType",
              "key.parsed_scope.end": 558,
              "key.parsed_scope.start": 558,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:4main17ImageJitterParamsC8dataTypeAA04DataF0Ovp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(contrast: <Type usr=\"s:Sf\">Float</Type>, saturation: <Type usr=\"s:Sf\">Float</Type>, brightness: <Type usr=\"s:Sf\">Float</Type>, lighting: <Type usr=\"s:Sf\">Float</Type>, aspectRatio: <Type usr=\"s:Sf\">Float</Type>, symmetric: <Type usr=\"s:Sb\">Bool</Type>, seed: <Type usr=\"s:Si\">Int</Type>, centerCrop: <Type usr=\"s:Sb\">Bool</Type>, size: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO4SizeV\">Size</Type>, resize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6ResizeV\">Resize</Type>, offset: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6OffsetV\">Offset</Type>, normalize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</Type>, dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type>)</Declaration>",
              "key.bodylength": 378,
              "key.bodyoffset": 20835,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>contrast</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>saturation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>brightness</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>lighting</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>aspectRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>symmetric</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>seed</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>centerCrop</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO4SizeV\">Size</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>resize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6ResizeV\">Resize</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6OffsetV\">Offset</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>normalize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 677,
              "key.name": "init(contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:size:resize:offset:normalize:dataType:)",
              "key.namelength": 296,
              "key.nameoffset": 20537,
              "key.offset": 20537,
              "key.parsed_declaration": "init(\n  contrast: Float, saturation: Float, brightness: Float, lighting: Float, aspectRatio: Float,\n  symmetric: Bool, seed: Int, centerCrop: Bool, size: ImageJitter.Size,\n  resize: ImageJitter.Resize, offset: ImageJitter.Offset, normalize: ImageJitter.Normalize,\n  dataType: DataType\n)",
              "key.parsed_scope.end": 579,
              "key.parsed_scope.start": 560,
              "key.substructure": [],
              "key.typename": "(ImageJitterParams.Type) -> (Float, Float, Float, Float, Float, Bool, Int, Bool, ImageJitter.Size, ImageJitter.Resize, ImageJitter.Offset, ImageJitter.Normalize, DataType) -> ImageJitterParams",
              "key.typeusr": "$s8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop4size6resize6offset9normalize8dataType4main17ImageJitterParamsCSf_S4fSbSiSbAN0rS0O4SizeVAR6ResizeVAR6OffsetVAR9NormalizeVAN04DataP0OtcD",
              "key.usr": "s:4main17ImageJitterParamsC8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop4size6resize6offset9normalize8dataTypeACSf_S4fSbSiSbAA0bC0O4SizeVAR6ResizeVAR6OffsetVAR9NormalizeVAA04DataT0Otcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var toC: ccv_cnnp_random_jitter_t { get }</Declaration>",
              "key.bodylength": 1440,
              "key.bodyoffset": 21253,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toC</decl.name>: <decl.var.type>ccv_cnnp_random_jitter_t</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 1476,
              "key.name": "toC",
              "key.namelength": 3,
              "key.nameoffset": 21222,
              "key.offset": 21218,
              "key.parsed_declaration": "var toC: ccv_cnnp_random_jitter_t",
              "key.parsed_scope.end": 627,
              "key.parsed_scope.start": 581,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main17ImageJitterParamsC3toCXevp"
            },
            {
              "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 39,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 21262,
              "key.offset": 21258,
              "key.parsed_declaration": "var params = ccv_cnnp_random_jitter_t()",
              "key.parsed_scope.end": 582,
              "key.parsed_scope.start": 582,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main17ImageJitterParamsC3toCXevg6paramsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let mean: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mean</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "mean",
              "key.namelength": 4,
              "key.nameoffset": 21881,
              "key.offset": 21877,
              "key.parsed_declaration": "let mean = normalize.mean",
              "key.parsed_scope.end": 598,
              "key.parsed_scope.start": 598,
              "key.typename": "[Float]",
              "key.typeusr": "$sSaySfGD",
              "key.usr": "s:4main17ImageJitterParamsC3toCXevg4meanL_SaySfGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let std: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>std</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 23,
              "key.name": "std",
              "key.namelength": 3,
              "key.nameoffset": 22290,
              "key.offset": 22286,
              "key.parsed_declaration": "let std = normalize.std",
              "key.parsed_scope.end": 612,
              "key.parsed_scope.start": 612,
              "key.typename": "[Float]",
              "key.typeusr": "$sSaySfGD",
              "key.usr": "s:4main17ImageJitterParamsC3toCXevg3stdL_SaySfGvp"
            }
          ],
          "key.typename": "ImageJitterParams.Type",
          "key.typeusr": "$s4main17ImageJitterParamsCmD",
          "key.usr": "s:4main17ImageJitterParamsC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 467,
          "key.bodyoffset": 22719,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 489,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 22708,
          "key.offset": 22698,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 640,
          "key.parsed_scope.start": 630,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>static func addToImageJitter(_ _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, _ property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, _ name: <Type usr=\"s:SS\">String</Type>, _ params: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 311,
              "key.bodyoffset": 22873,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToImageJitter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>_dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>property</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>params</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 463,
              "key.name": "addToImageJitter(_:_:_:_:)",
              "key.namelength": 119,
              "key.nameoffset": 22734,
              "key.offset": 22722,
              "key.parsed_declaration": "static func addToImageJitter(\n  _ _dataframe: OpaquePointer, _ property: ColumnProperty, _ name: String, _ params: AnyObject?\n) -> ColumnProperty",
              "key.parsed_scope.end": 639,
              "key.parsed_scope.start": 631,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 22882,
                  "key.offset": 22878,
                  "key.parsed_declaration": "let inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 634,
                  "key.parsed_scope.start": 634,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV16addToImageJitteryAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let imageJitterParams: <Type usr=\"s:4main17ImageJitterParamsC\">ImageJitterParams</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageJitterParams</decl.name>: <decl.var.type><ref.class usr=\"s:4main17ImageJitterParamsC\">ImageJitterParams</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 53,
                  "key.name": "imageJitterParams",
                  "key.namelength": 17,
                  "key.nameoffset": 22925,
                  "key.offset": 22921,
                  "key.parsed_declaration": "let imageJitterParams = params! as! ImageJitterParams",
                  "key.parsed_scope.end": 635,
                  "key.parsed_scope.start": 635,
                  "key.typename": "ImageJitterParams",
                  "key.typeusr": "$s4main17ImageJitterParamsCD",
                  "key.usr": "s:4main9DataFrameV16addToImageJitteryAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ05imageG6ParamsL_AA0fgM0Cvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 142,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 22983,
                  "key.offset": 22979,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_image_random_jitter(\n  _dataframe, inputIndex, imageJitterParams.dataType.toC, imageJitterParams.toC, name)",
                  "key.parsed_scope.end": 636,
                  "key.parsed_scope.start": 636,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV16addToImageJitteryAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty",
              "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_AESSyXlSgtcD",
              "key.usr": "s:4main9DataFrameV16addToImageJitteryAC14ColumnPropertyVs13OpaquePointerV_AFSSyXlSgtFZ"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 1118,
          "key.bodyoffset": 23224,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1154,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 23199,
          "key.offset": 23189,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 664,
          "key.parsed_scope.start": 642,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toImageJitter&lt;Element&gt;(_ ofType: <Type usr=\"s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF7ElementL_xmfp\">Element</Type>.Type, size: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO4SizeV\">Size</Type>, resize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6ResizeV\">Resize</Type>, contrast: <Type usr=\"s:Sf\">Float</Type> = 0, saturation: <Type usr=\"s:Sf\">Float</Type> = 0, brightness: <Type usr=\"s:Sf\">Float</Type> = 0, lighting: <Type usr=\"s:Sf\">Float</Type> = 0, aspectRatio: <Type usr=\"s:Sf\">Float</Type> = 0, symmetric: <Type usr=\"s:Sb\">Bool</Type> = false, seed: <Type usr=\"s:Si\">Int</Type> = 0, centerCrop: <Type usr=\"s:Sb\">Bool</Type> = false, offset: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6OffsetV\">Offset</Type> = ImageJitter.Offset(x: 0, y: 0), normalize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</Type> = ImageJitter.Normalize(mean: [])) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23269
                }
              ],
              "key.bodylength": 586,
              "key.bodyoffset": 23754,
              "key.doc.column": 15,
              "key.doc.comment": "Apply some jitter to loaded images.",
              "key.doc.declaration": "public func toImageJitter<Element>(_ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0, saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0, symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false, offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0), normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])) -> DataFrame.UntypedSeries where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"644\" column=\"15\"><Name>toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF</USR><Declaration>public func toImageJitter&lt;Element&gt;(_ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0, saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0, symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false, offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0), normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])) -&gt; DataFrame.UntypedSeries where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Apply some jitter to loaded images.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 644,
              "key.doc.name": "toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)",
              "key.doc.type": "Function",
              "key.doclength": 40,
              "key.docoffset": 23227,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageJitter</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ofType</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO4SizeV\">Size</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>resize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6ResizeV\">Resize</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>contrast</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>saturation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>brightness</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>lighting</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>aspectRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>symmetric</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>seed</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>centerCrop</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6OffsetV\">Offset</ref.struct></decl.var.parameter.type> = ImageJitter.Offset(x: 0, y: 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>normalize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</ref.struct></decl.var.parameter.type> = ImageJitter.Normalize(mean: [])</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1065,
              "key.name": "toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)",
              "key.namelength": 444,
              "key.nameoffset": 23281,
              "key.offset": 23276,
              "key.parsed_declaration": "public func toImageJitter<Element: TensorNumeric>(\n  _ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0,\n  saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0,\n  symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false,\n  offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0),\n  normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 663,
              "key.parsed_scope.start": 644,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 23304
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 23295,
                  "key.offset": 23295,
                  "key.parsed_declaration": "public func toImageJitter<Element: TensorNumeric",
                  "key.parsed_scope.end": 644,
                  "key.parsed_scope.start": 644,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DataFrame.UntypedSeries) -> (Element.Type, ImageJitter.Size, ImageJitter.Resize, Float, Float, Float, Float, Float, Bool, Int, Bool, ImageJitter.Offset, ImageJitter.Normalize) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalize4main9DataFrameV13UntypedSeriesVxm_AM11ImageJitterO4SizeVAS6ResizeVS5fSbSiSbAS6OffsetVAS9NormalizeVtcAM13TensorNumericRzluD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAExm_AA0gH0O4SizeVAT6ResizeVS5fSbSiSbAT6OffsetVAT9NormalizeVtAA13TensorNumericRzlF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 1010,
          "key.bodyoffset": 24403,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1069,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 24355,
          "key.offset": 24345,
          "key.parsed_declaration": "extension DataFrame.TypedSeries where Element: AnyTensor",
          "key.parsed_scope.end": 685,
          "key.parsed_scope.start": 666,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toImageJitter&lt;Element&gt;(_ ofType: <Type usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF7ElementL_qd__mfp\">Element</Type>.Type, size: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO4SizeV\">Size</Type>, resize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6ResizeV\">Resize</Type>, contrast: <Type usr=\"s:Sf\">Float</Type> = 0, saturation: <Type usr=\"s:Sf\">Float</Type> = 0, brightness: <Type usr=\"s:Sf\">Float</Type> = 0, lighting: <Type usr=\"s:Sf\">Float</Type> = 0, aspectRatio: <Type usr=\"s:Sf\">Float</Type> = 0, symmetric: <Type usr=\"s:Sb\">Bool</Type> = false, seed: <Type usr=\"s:Si\">Int</Type> = 0, centerCrop: <Type usr=\"s:Sb\">Bool</Type> = false, offset: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO6OffsetV\">Offset</Type> = ImageJitter.Offset(x: 0, y: 0), normalize: <Type usr=\"s:4main11ImageJitterO\">ImageJitter</Type>.<Type usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</Type> = ImageJitter.Normalize(mean: [])) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 24448
                }
              ],
              "key.bodylength": 478,
              "key.bodyoffset": 24933,
              "key.doc.column": 15,
              "key.doc.comment": "Apply some jitter to loaded images.",
              "key.doc.declaration": "public func toImageJitter<Element>(_ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0, saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0, symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false, offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0), normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])) -> DataFrame.UntypedSeries where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift\" line=\"668\" column=\"15\"><Name>toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)</Name><USR>s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF</USR><Declaration>public func toImageJitter&lt;Element&gt;(_ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0, saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0, symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false, offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0), normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])) -&gt; DataFrame.UntypedSeries where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Apply some jitter to loaded images.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 668,
              "key.doc.name": "toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)",
              "key.doc.type": "Function",
              "key.doclength": 40,
              "key.docoffset": 24406,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageJitter</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF7ElementL_qd__mfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ofType</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF7ElementL_qd__mfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO4SizeV\">Size</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>resize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6ResizeV\">Resize</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>contrast</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>saturation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>brightness</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>lighting</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>aspectRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>symmetric</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>seed</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>centerCrop</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO6OffsetV\">Offset</ref.struct></decl.var.parameter.type> = ImageJitter.Offset(x: 0, y: 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>normalize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main11ImageJitterO\">ImageJitter</ref.enum>.<ref.struct usr=\"s:4main11ImageJitterO9NormalizeV\">Normalize</ref.struct></decl.var.parameter.type> = ImageJitter.Normalize(mean: [])</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 957,
              "key.name": "toImageJitter(_:size:resize:contrast:saturation:brightness:lighting:aspectRatio:symmetric:seed:centerCrop:offset:normalize:)",
              "key.namelength": 444,
              "key.nameoffset": 24460,
              "key.offset": 24455,
              "key.parsed_declaration": "public func toImageJitter<Element: TensorNumeric>(\n  _ ofType: Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float = 0,\n  saturation: Float = 0, brightness: Float = 0, lighting: Float = 0, aspectRatio: Float = 0,\n  symmetric: Bool = false, seed: Int = 0, centerCrop: Bool = false,\n  offset: ImageJitter.Offset = ImageJitter.Offset(x: 0, y: 0),\n  normalize: ImageJitter.Normalize = ImageJitter.Normalize(mean: [])\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 684,
              "key.parsed_scope.start": 668,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 24483
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 24474,
                  "key.offset": 24474,
                  "key.parsed_declaration": "public func toImageJitter<Element: TensorNumeric",
                  "key.parsed_scope.end": 668,
                  "key.parsed_scope.start": 668,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF7ElementL_qd__mfp"
                }
              ],
              "key.typename": "<Element, Element where Element : AnyTensor, Element : TensorNumeric> (DataFrame.TypedSeries<Element>) -> (Element.Type, ImageJitter.Size, ImageJitter.Resize, Float, Float, Float, Float, Float, Bool, Int, Bool, ImageJitter.Offset, ImageJitter.Normalize) -> DataFrame.UntypedSeries",
              "key.typeusr": "$s_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalize4main9DataFrameV13UntypedSeriesVqd__m_AM11ImageJitterO4SizeVAS6ResizeVS5fSbSiSbAS6OffsetVAS9NormalizeVtcAM13TensorNumericRd__luD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesVA2A9AnyTensorRzlE13toImageJitter_4size6resize8contrast10saturation10brightness8lighting11aspectRatio9symmetric4seed10centerCrop6offset9normalizeAC07UntypedE0Vqd__m_AA0iJ0O4SizeVAW6ResizeVS5fSbSiSbAW6OffsetVAW9NormalizeVtAA0G7NumericRd__lF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 26008,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 7368,
          "key.bodyoffset": 55,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 7390,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 44,
          "key.offset": 34,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 183,
          "key.parsed_scope.start": 5,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>final class WrappedSampler</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 58
                }
              ],
              "key.bodylength": 696,
              "key.bodyoffset": 86,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>WrappedSampler</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 719,
              "key.name": "WrappedSampler",
              "key.namelength": 14,
              "key.nameoffset": 70,
              "key.offset": 64,
              "key.parsed_declaration": "final class WrappedSampler",
              "key.parsed_scope.end": 29,
              "key.parsed_scope.start": 6,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 28,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 95,
                  "key.offset": 91,
                  "key.parsed_declaration": "let property: ColumnProperty",
                  "key.parsed_scope.end": 7,
                  "key.parsed_scope.start": 7,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC8propertyAC14ColumnPropertyVvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 13,
                  "key.name": "size",
                  "key.namelength": 4,
                  "key.nameoffset": 128,
                  "key.offset": 124,
                  "key.parsed_declaration": "let size: Int",
                  "key.parsed_scope.end": 8,
                  "key.parsed_scope.start": 8,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC4sizeSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let repeating: <Type usr=\"s:Si\">Int</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>repeating</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 19,
                  "key.name": "repeating",
                  "key.namelength": 9,
                  "key.nameoffset": 146,
                  "key.offset": 142,
                  "key.parsed_declaration": "let repeating: Int?",
                  "key.parsed_scope.end": 9,
                  "key.parsed_scope.start": 9,
                  "key.typename": "Int?",
                  "key.typeusr": "$sSiSgD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC9repeatingSiSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let sample: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sample</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 38,
                  "key.name": "sample",
                  "key.namelength": 6,
                  "key.nameoffset": 170,
                  "key.offset": 166,
                  "key.parsed_declaration": "let sample: ([AnyObject]) -> AnyObject",
                  "key.parsed_scope.end": 10,
                  "key.parsed_scope.start": 10,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC6sampleyyXlSayyXlGcvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputType</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 43,
                  "key.name": "outputType",
                  "key.namelength": 10,
                  "key.nameoffset": 213,
                  "key.offset": 209,
                  "key.parsed_declaration": "let outputType: ColumnProperty.PropertyType",
                  "key.parsed_scope.end": 11,
                  "key.parsed_scope.start": 11,
                  "key.typename": "DataFrame.ColumnProperty.PropertyType",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC10outputTypeAC14ColumnPropertyV0iG0Ovp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var tensors: [<Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type> : <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type>]?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensors</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct> : <ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class>]?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 47,
                  "key.name": "tensors",
                  "key.namelength": 7,
                  "key.nameoffset": 261,
                  "key.offset": 257,
                  "key.parsed_declaration": "var tensors: [OpaquePointer: AnyTensorStorage]?",
                  "key.parsed_scope.end": 12,
                  "key.parsed_scope.start": 12,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[OpaquePointer : AnyTensorStorage]?",
                  "key.typeusr": "$sSDys13OpaquePointerV4main16AnyTensorStorageCGSgD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC7tensorsSDys13OpaquePointerVAA16AnyTensorStorageCGSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>?, sample: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
                  "key.bodylength": 304,
                  "key.bodyoffset": 474,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sample</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 470,
                  "key.name": "init(property:size:repeating:sample:outputType:)",
                  "key.namelength": 163,
                  "key.nameoffset": 309,
                  "key.offset": 309,
                  "key.parsed_declaration": "init(\n  property: ColumnProperty, size: Int, repeating: Int?,\n  sample: @escaping ([AnyObject]) -> AnyObject, outputType: ColumnProperty.PropertyType\n)",
                  "key.parsed_scope.end": 28,
                  "key.parsed_scope.start": 13,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.WrappedSampler.Type) -> (DataFrame.ColumnProperty, Int, Int?, @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> DataFrame.WrappedSampler",
                  "key.typeusr": "$s8property4size9repeating6sample10outputType4main9DataFrameV14WrappedSamplerCAH14ColumnPropertyV_S2iSgyXlSayyXlGcAL0mF0OtcD",
                  "key.usr": "s:4main9DataFrameV14WrappedSamplerC8property4size9repeating6sample10outputTypeAeC14ColumnPropertyV_S2iSgyXlSayyXlGcAL0mK0Otcfc"
                }
              ],
              "key.typename": "DataFrame.WrappedSampler.Type",
              "key.typeusr": "$s4main9DataFrameV14WrappedSamplerCmD",
              "key.usr": "s:4main9DataFrameV14WrappedSamplerC"
            },
            {
              "key.annotated_decl": "<Declaration>static func sample(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, size: <Type usr=\"s:Si\">Int</Type>, sample: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>) -&gt; <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.bodylength": 2312,
              "key.bodyoffset": 1041,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sample</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 2509,
              "key.name": "sample(dataframe:property:size:sample:outputType:)",
              "key.namelength": 165,
              "key.nameoffset": 857,
              "key.offset": 845,
              "key.parsed_declaration": "static func sample(\n  dataframe: _DataFrame, property: ColumnProperty, size: Int,\n  sample: @escaping ([AnyObject]) -> AnyObject, outputType: ColumnProperty.PropertyType\n) -> OpaquePointer",
              "key.parsed_scope.end": 90,
              "key.parsed_scope.start": 31,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV6sample9dataframe8property4size9repeatingAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAO0nJ0OtFZ\">sample(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 1050,
                  "key.offset": 1046,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 35,
                  "key.parsed_scope.start": 35,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV10_dataframeAA01_bC0Cvp\">_dataframe</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4sizeAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAN0mI0OtFZ01_E0L_AJvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 33,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 1091,
                  "key.offset": 1087,
                  "key.parsed_declaration": "let index = Int32(property.index)",
                  "key.parsed_scope.end": 36,
                  "key.parsed_scope.start": 36,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4sizeAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAN0mI0OtFZ5indexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampler: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14WrappedSamplerC\">WrappedSampler</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampler</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.class usr=\"s:4main9DataFrameV14WrappedSamplerC\">WrappedSampler</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 123,
                  "key.name": "sampler",
                  "key.namelength": 7,
                  "key.nameoffset": 1129,
                  "key.offset": 1125,
                  "key.parsed_declaration": "let sampler = WrappedSampler(\n  property: property, size: size, repeating: nil, sample: sample, outputType: outputType)",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "DataFrame.WrappedSampler",
                  "key.typeusr": "$s4main9DataFrameV14WrappedSamplerCD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4sizeAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAN0mI0OtFZ7samplerL_AC14WrappedSamplerCvp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, DataFrame.ColumnProperty, Int, @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> OpaquePointer",
              "key.typeusr": "$s9dataframe8property4size6sample10outputTypes13OpaquePointerV4main10_DataFrameC_AH0jK0V14ColumnPropertyVSiyXlSayyXlGcAN0mF0OtcD",
              "key.usr": "s:4main9DataFrameV6sample9dataframe8property4sizeAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAN0mI0OtFZ"
            },
            {
              "key.annotated_decl": "<Declaration>init(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, size: <Type usr=\"s:Si\">Int</Type>, sample: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
              "key.bodylength": 507,
              "key.bodyoffset": 3522,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sample</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 673,
              "key.name": "init(dataframe:property:size:sample:outputType:)",
              "key.namelength": 163,
              "key.nameoffset": 3357,
              "key.offset": 3357,
              "key.parsed_declaration": "init(\n  dataframe: _DataFrame, property: ColumnProperty, size: Int,\n  sample: @escaping ([AnyObject]) -> AnyObject, outputType: ColumnProperty.PropertyType\n)",
              "key.parsed_scope.end": 104,
              "key.parsed_scope.start": 91,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc\">init(dataframe:columnProperties:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc\">init(from:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc\">init(fromCSV:automaticUseHeader:delimiter:quotation:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc\">init(dataframe:properties:size:repeating:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc\">init(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 3531,
                  "key.offset": 3527,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 95,
                  "key.parsed_scope.start": 95,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV10_dataframeAA01_bC0Cvp\">_dataframe</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc01_D0L_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampled: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampled</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 126,
                  "key.name": "sampled",
                  "key.namelength": 7,
                  "key.nameoffset": 3572,
                  "key.offset": 3568,
                  "key.parsed_declaration": "let sampled = Self.sample(\n  dataframe: dataframe, property: property, size: size, sample: sample, outputType: outputType)",
                  "key.parsed_scope.end": 96,
                  "key.parsed_scope.start": 96,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc7sampledL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let name: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 77,
                  "key.name": "name",
                  "key.namelength": 4,
                  "key.nameoffset": 3733,
                  "key.offset": 3729,
                  "key.parsed_declaration": "let name = ccv_cnnp_dataframe_column_name(_dataframe, Int32(property.index))!",
                  "key.parsed_scope.end": 99,
                  "key.parsed_scope.start": 99,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc4nameL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let columnProperties: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 90,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 3815,
                  "key.offset": 3811,
                  "key.parsed_declaration": "let columnProperties = [String(cString: name): ColumnProperty(index: 0, type: outputType)]",
                  "key.parsed_scope.end": 100,
                  "key.parsed_scope.start": 100,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV16columnPropertiesSDySSAC14ColumnPropertyVGvp\">columnProperties</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc16columnPropertiesL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, DataFrame.ColumnProperty, Int, @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> DataFrame",
              "key.typeusr": "$s9dataframe8property4size6sample10outputType4main9DataFrameVAF01_hI0C_AH14ColumnPropertyVSiyXlSayyXlGcAL0kF0OtcD",
              "key.usr": "s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc"
            },
            {
              "key.annotated_decl": "<Declaration>static func sample(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>, sample: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>) -&gt; <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.bodylength": 2088,
              "key.bodyoffset": 4245,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sample</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 2301,
              "key.name": "sample(dataframe:property:size:repeating:sample:outputType:)",
              "key.namelength": 181,
              "key.nameoffset": 4045,
              "key.offset": 4033,
              "key.parsed_declaration": "static func sample(\n  dataframe: _DataFrame, property: ColumnProperty, size: Int, repeating: Int,\n  sample: @escaping ([AnyObject]) -> AnyObject, outputType: ColumnProperty.PropertyType\n) -> OpaquePointer",
              "key.parsed_scope.end": 158,
              "key.parsed_scope.start": 105,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV6sample9dataframe8property4sizeAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAN0mI0OtFZ\">sample(dataframe:property:size:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 4254,
                  "key.offset": 4250,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 109,
                  "key.parsed_scope.start": 109,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV10_dataframeAA01_bC0Cvp\">_dataframe</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4size9repeatingAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAO0nJ0OtFZ01_E0L_AKvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 33,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 4295,
                  "key.offset": 4291,
                  "key.parsed_declaration": "let index = Int32(property.index)",
                  "key.parsed_scope.end": 110,
                  "key.parsed_scope.start": 110,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4size9repeatingAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAO0nJ0OtFZ5indexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampler: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14WrappedSamplerC\">WrappedSampler</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampler</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.class usr=\"s:4main9DataFrameV14WrappedSamplerC\">WrappedSampler</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 126,
                  "key.name": "sampler",
                  "key.namelength": 7,
                  "key.nameoffset": 4333,
                  "key.offset": 4329,
                  "key.parsed_declaration": "let sampler = WrappedSampler(\n  property: property, size: size, repeating: repeating, sample: sample, outputType: .object)",
                  "key.parsed_scope.end": 111,
                  "key.parsed_scope.start": 111,
                  "key.typename": "DataFrame.WrappedSampler",
                  "key.typeusr": "$s4main9DataFrameV14WrappedSamplerCD",
                  "key.usr": "s:4main9DataFrameV6sample9dataframe8property4size9repeatingAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAO0nJ0OtFZ7samplerL_AC14WrappedSamplerCvp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, DataFrame.ColumnProperty, Int, Int, @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> OpaquePointer",
              "key.typeusr": "$s9dataframe8property4size9repeating6sample10outputTypes13OpaquePointerV4main10_DataFrameC_AI0kL0V14ColumnPropertyVS2iyXlSayyXlGcAO0nG0OtcD",
              "key.usr": "s:4main9DataFrameV6sample9dataframe8property4size9repeatingAD10outputTypes13OpaquePointerVAA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAO0nJ0OtFZ"
            },
            {
              "key.annotated_decl": "<Declaration>init(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>, sample: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
              "key.bodylength": 852,
              "key.bodyoffset": 6569,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sample</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1034,
              "key.name": "init(dataframe:property:size:repeating:sample:outputType:)",
              "key.namelength": 179,
              "key.nameoffset": 6388,
              "key.offset": 6388,
              "key.parsed_declaration": "init(\n  dataframe: _DataFrame, property: ColumnProperty, size: Int, repeating: Int,\n  sample: @escaping ([AnyObject]) -> AnyObject, outputType: ColumnProperty.PropertyType\n)",
              "key.parsed_scope.end": 182,
              "key.parsed_scope.start": 160,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc\">init(dataframe:columnProperties:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc\">init(from:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc\">init(fromCSV:automaticUseHeader:delimiter:quotation:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc\">init(dataframe:properties:size:repeating:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc\">init(dataframe:property:size:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let sampled: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampled</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 154,
                  "key.name": "sampled",
                  "key.namelength": 7,
                  "key.nameoffset": 6610,
                  "key.offset": 6606,
                  "key.parsed_declaration": "let sampled = Self.sample(\n  dataframe: dataframe, property: property, size: size, repeating: repeating, sample: sample,\n  outputType: outputType)",
                  "key.parsed_scope.end": 165,
                  "key.parsed_scope.start": 165,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc7sampledL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 6769,
                  "key.offset": 6765,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 168,
                  "key.parsed_scope.start": 168,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV10_dataframeAA01_bC0Cvp\">_dataframe</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc01_D0L_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 6810,
                  "key.offset": 6806,
                  "key.parsed_declaration": "var columnProperties = [String: ColumnProperty]()",
                  "key.parsed_scope.end": 169,
                  "key.parsed_scope.start": 169,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV16columnPropertiesSDySSAC14ColumnPropertyVGvp\">columnProperties</RelatedName>"
                    }
                  ],
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc16columnPropertiesL_SDySSAMGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let name: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 94,
                  "key.name": "name",
                  "key.namelength": 4,
                  "key.nameoffset": 6894,
                  "key.offset": 6890,
                  "key.parsed_declaration": "let name = String(cString: ccv_cnnp_dataframe_column_name(_dataframe, Int32(property.index))!)",
                  "key.parsed_scope.end": 171,
                  "key.parsed_scope.start": 171,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc4nameL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let mainProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mainProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "mainProperty",
                  "key.namelength": 12,
                  "key.nameoffset": 6993,
                  "key.offset": 6989,
                  "key.parsed_declaration": "let mainProperty = ColumnProperty(index: 0, type: .object)",
                  "key.parsed_scope.end": 172,
                  "key.parsed_scope.start": 172,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc0aL0L_AMvp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, DataFrame.ColumnProperty, Int, Int, @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> DataFrame",
              "key.typeusr": "$s9dataframe8property4size9repeating6sample10outputType4main9DataFrameVAG01_iJ0C_AI14ColumnPropertyVS2iyXlSayyXlGcAM0lG0OtcD",
              "key.usr": "s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 1977,
          "key.bodyoffset": 7461,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2013,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 7436,
          "key.offset": 7426,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 233,
          "key.parsed_scope.start": 185,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func sample&lt;T, U&gt;(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil, sampler: @escaping ([<Type usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1TL_xmfp\">T</Type>]) -&gt; <Type usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1UL_q_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7800
                }
              ],
              "key.bodylength": 1526,
              "key.bodyoffset": 7910,
              "key.doc.column": 15,
              "key.doc.comment": " Sample existing column to create a new dataframe.\n\n - Parameters:\n   - size: How many rows to be sampled together.\n   - repeating: Will we repeat the sampling to create more columns?\n   - sampler: The sampling function, for example, averaging, max, first, last etc.\n - Returns: A new dataframe.",
              "key.doc.declaration": "public func sample<T, U>(size: Int, repeating: Int? = nil, sampler: @escaping ([T]) -> U) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift\" line=\"195\" column=\"15\"><Name>sample(size:repeating:sampler:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF</USR><Declaration>public func sample&lt;T, U&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([T]) -&gt; U) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Sample existing column to create a new dataframe.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many rows to be sampled together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Will we repeat the sampling to create more columns?</Para></Discussion></Parameter><Parameter><Name>sampler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sampling function, for example, averaging, max, first, last etc.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 195,
              "key.doc.name": "sample(size:repeating:sampler:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many rows to be sampled together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "Will we repeat the sampling to create more columns?"
                    }
                  ],
                  "name": "repeating"
                },
                {
                  "discussion": [
                    {
                      "Para": "The sampling function, for example, averaging, max, first, last etc."
                    }
                  ],
                  "name": "sampler"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 333,
              "key.docoffset": 7464,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sampler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1TL_xmfp\">T</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1630,
              "key.name": "sample(size:repeating:sampler:)",
              "key.namelength": 77,
              "key.nameoffset": 7812,
              "key.offset": 7807,
              "key.parsed_declaration": "public func sample<T, U>(size: Int, repeating: Int? = nil, sampler: @escaping ([T]) -> U)\n  -> DataFrame",
              "key.parsed_scope.end": 232,
              "key.parsed_scope.start": 195,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 7819,
                  "key.offset": 7819,
                  "key.parsed_declaration": "public func sample<T",
                  "key.parsed_scope.end": 195,
                  "key.parsed_scope.start": 195,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 7822,
                  "key.offset": 7822,
                  "key.parsed_declaration": "public func sample<T, U",
                  "key.parsed_scope.end": 195,
                  "key.parsed_scope.start": 195,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedSampler: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedSampler</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 110,
                  "key.name": "wrappedSampler",
                  "key.namelength": 14,
                  "key.nameoffset": 8122,
                  "key.offset": 8118,
                  "key.parsed_declaration": "let wrappedSampler = { (obj: [AnyObject]) -> AnyObject in\n  return sampler(obj as! [T]) as AnyObject\n}",
                  "key.parsed_scope.end": 204,
                  "key.parsed_scope.start": 204,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF14wrappedSamplerL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<T, U> (DataFrame.UntypedSeries) -> (Int, Int?, @escaping ([T]) -> U) -> DataFrame",
              "key.typeusr": "$s4size9repeating7sampler4main9DataFrameVSi_SiSgq_SayxGctcr0_luD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq_SayxGctr0_lF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : DataSeries</Declaration>",
          "key.bodylength": 1783,
          "key.bodyoffset": 9474,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1817,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 9451,
          "key.offset": 9441,
          "key.parsed_declaration": "extension DataFrame.TypedSeries",
          "key.parsed_scope.end": 277,
          "key.parsed_scope.start": 235,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func sample&lt;U&gt;(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil, sampler: @escaping ([<Type usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</Type>]) -&gt; <Type usr=\"s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF1UL_qd__mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9813
                }
              ],
              "key.bodylength": 1329,
              "key.bodyoffset": 9926,
              "key.doc.column": 15,
              "key.doc.comment": " Sample existing column to create a new dataframe.\n\n - Parameters:\n   - size: How many rows to be sampled together.\n   - repeating: Will we repeat the sampling to create more columns?\n   - sampler: The sampling function, for example, averaging, max, first, last etc.\n - Returns: A new dataframe.",
              "key.doc.declaration": "public func sample<U>(size: Int, repeating: Int? = nil, sampler: @escaping ([Element]) -> U) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift\" line=\"245\" column=\"15\"><Name>sample(size:repeating:sampler:)</Name><USR>s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF</USR><Declaration>public func sample&lt;U&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([Element]) -&gt; U) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Sample existing column to create a new dataframe.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many rows to be sampled together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Will we repeat the sampling to create more columns?</Para></Discussion></Parameter><Parameter><Name>sampler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sampling function, for example, averaging, max, first, last etc.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 245,
              "key.doc.name": "sample(size:repeating:sampler:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many rows to be sampled together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "Will we repeat the sampling to create more columns?"
                    }
                  ],
                  "name": "repeating"
                },
                {
                  "discussion": [
                    {
                      "Para": "The sampling function, for example, averaging, max, first, last etc."
                    }
                  ],
                  "name": "sampler"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 333,
              "key.docoffset": 9477,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF1UL_qd__mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sampler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF1UL_qd__mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1436,
              "key.name": "sample(size:repeating:sampler:)",
              "key.namelength": 80,
              "key.nameoffset": 9825,
              "key.offset": 9820,
              "key.parsed_declaration": "public func sample<U>(size: Int, repeating: Int? = nil, sampler: @escaping ([Element]) -> U)\n  -> DataFrame",
              "key.parsed_scope.end": 276,
              "key.parsed_scope.start": 245,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 9832,
                  "key.offset": 9832,
                  "key.parsed_declaration": "public func sample<U",
                  "key.parsed_scope.end": 245,
                  "key.parsed_scope.start": 245,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF1UL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedSampler: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedSampler</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 116,
                  "key.name": "wrappedSampler",
                  "key.namelength": 14,
                  "key.nameoffset": 9935,
                  "key.offset": 9931,
                  "key.parsed_declaration": "let wrappedSampler = { (obj: [AnyObject]) -> AnyObject in\n  return sampler(obj as! [Element]) as AnyObject\n}",
                  "key.parsed_scope.end": 248,
                  "key.parsed_scope.start": 248,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF14wrappedSamplerL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<Element, U> (DataFrame.TypedSeries<Element>) -> (Int, Int?, @escaping ([Element]) -> U) -> DataFrame",
              "key.typeusr": "$s4size9repeating7sampler4main9DataFrameVSi_SiSgqd__SayxGctcluD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesV6sample4size9repeating7samplerACSi_SiSgqd__SayxGctlF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct ManyUntypedSeries : DataSeries</Declaration>",
          "key.bodylength": 14707,
          "key.bodyoffset": 11299,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeries</decl.name> : DataSeries</decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 14747,
          "key.name": "DataFrame.ManyUntypedSeries",
          "key.namelength": 27,
          "key.nameoffset": 11270,
          "key.offset": 11260,
          "key.parsed_declaration": "extension DataFrame.ManyUntypedSeries",
          "key.parsed_scope.end": 561,
          "key.parsed_scope.start": 279,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func sample&lt;C0, C1, U0, U1&gt;(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil, sampler: @escaping ([(<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C1L_q_mfp\">C1</Type>)]) -&gt; (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U0L_q0_mfp\">U0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U1L_q1_mfp\">U1</Type>)) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11639
                }
              ],
              "key.bodylength": 3398,
              "key.bodyoffset": 11775,
              "key.doc.column": 15,
              "key.doc.comment": " Sample existing columns to create a new dataframe.\n\n - Parameters:\n   - size: How many rows to be sampled together.\n   - repeating: Will we repeat the sampling to create more columns?\n   - sampler: The sampling function, for example, averaging, max, first, last etc.\n - Returns: A new dataframe.",
              "key.doc.declaration": "public func sample<C0, C1, U0, U1>(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1)]) -> (U0, U1)) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift\" line=\"289\" column=\"15\"><Name>sample(size:repeating:sampler:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF</USR><Declaration>public func sample&lt;C0, C1, U0, U1&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1)]) -&gt; (U0, U1)) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Sample existing columns to create a new dataframe.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many rows to be sampled together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Will we repeat the sampling to create more columns?</Para></Discussion></Parameter><Parameter><Name>sampler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sampling function, for example, averaging, max, first, last etc.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 289,
              "key.doc.name": "sample(size:repeating:sampler:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many rows to be sampled together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "Will we repeat the sampling to create more columns?"
                    }
                  ],
                  "name": "repeating"
                },
                {
                  "discussion": [
                    {
                      "Para": "The sampling function, for example, averaging, max, first, last etc."
                    }
                  ],
                  "name": "sampler"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 334,
              "key.docoffset": 11302,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U0L_q0_mfp\"><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U1L_q1_mfp\"><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sampler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C0L_xmfp\">C0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C1L_q_mfp\">C1</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U0L_q0_mfp\">U0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U1L_q1_mfp\">U1</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 3528,
              "key.name": "sample(size:repeating:sampler:)",
              "key.namelength": 109,
              "key.nameoffset": 11651,
              "key.offset": 11646,
              "key.parsed_declaration": "public func sample<C0, C1, U0, U1>(\n  size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1)]) -> (U0, U1)\n) -> DataFrame",
              "key.parsed_scope.end": 357,
              "key.parsed_scope.start": 289,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF\">sample&lt;C0, C1, C2, U0, U1, U2&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2)]) -&gt; (U0, U1, U2)) -&gt; DataFrame</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF\">sample&lt;C0, C1, C2, C3, U0, U1, U2, U3&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2, C3)]) -&gt; (U0, U1, U2, U3)) -&gt; DataFrame</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 11658,
                  "key.offset": 11658,
                  "key.parsed_declaration": "public func sample<C0",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 11662,
                  "key.offset": 11662,
                  "key.parsed_declaration": "public func sample<C0, C1",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U0",
                  "key.namelength": 2,
                  "key.nameoffset": 11666,
                  "key.offset": 11666,
                  "key.parsed_declaration": "public func sample<C0, C1, U0",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "U0.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U0L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U1",
                  "key.namelength": 2,
                  "key.nameoffset": 11670,
                  "key.offset": 11670,
                  "key.parsed_declaration": "public func sample<C0, C1, U0, U1",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "U1.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF2U1L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedSampler: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedSampler</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 117,
                  "key.name": "wrappedSampler",
                  "key.namelength": 14,
                  "key.nameoffset": 11824,
                  "key.offset": 11820,
                  "key.parsed_declaration": "let wrappedSampler = { (obj: [AnyObject]) -> AnyObject in\n  return sampler(obj as! [(C0, C1)]) as AnyObject\n}",
                  "key.parsed_scope.end": 293,
                  "key.parsed_scope.start": 293,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF14wrappedSamplerL_yyXlSayyXlGcvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 223,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 11946,
                  "key.offset": 11942,
                  "key.parsed_declaration": "let property = DataFrame.add(\n  to: dataframe.dataframe,\n  multimap: { input in\n    return (input[0] as! C0, input[1] as! C1) as AnyObject\n  }, properties: properties, outputType: .object, name: \"makeTuple\")",
                  "key.parsed_scope.end": 296,
                  "key.parsed_scope.start": 296,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF8propertyL_AC14ColumnPropertyVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampled: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampled</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "sampled",
                  "key.namelength": 7,
                  "key.nameoffset": 12174,
                  "key.offset": 12170,
                  "key.parsed_declaration": "let sampled: OpaquePointer",
                  "key.parsed_scope.end": 301,
                  "key.parsed_scope.start": 301,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF7sampledL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 12594,
                  "key.offset": 12590,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 311,
                  "key.parsed_scope.start": 311,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF10_dataframeL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 12635,
                  "key.offset": 12631,
                  "key.parsed_declaration": "var columnProperties = [String: DataFrame.ColumnProperty]()",
                  "key.parsed_scope.end": 312,
                  "key.parsed_scope.start": 312,
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF16columnPropertiesL_SDySSAC14ColumnPropertyVGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let mainProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mainProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "mainProperty",
                  "key.namelength": 12,
                  "key.nameoffset": 12729,
                  "key.offset": 12725,
                  "key.parsed_declaration": "let mainProperty = DataFrame.ColumnProperty(index: 0, type: .object)",
                  "key.parsed_scope.end": 314,
                  "key.parsed_scope.start": 314,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF0A8PropertyL_AC06ColumnK0Vvp"
                }
              ],
              "key.typename": "<C0, C1, U0, U1> (DataFrame.ManyUntypedSeries) -> (Int, Int?, @escaping ([(C0, C1)]) -> (U0, U1)) -> DataFrame",
              "key.typeusr": "$s4size9repeating7sampler4main9DataFrameVSi_SiSgq0__q1_tSayx_q_tGctcr2_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func sample&lt;C0, C1, C2, U0, U1, U2&gt;(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil, sampler: @escaping ([(<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C2L_q0_mfp\">C2</Type>)]) -&gt; (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U0L_q1_mfp\">U0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U1L_q2_mfp\">U1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U2L_q3_mfp\">U2</Type>)) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15515
                }
              ],
              "key.bodylength": 4403,
              "key.bodyoffset": 15667,
              "key.doc.column": 15,
              "key.doc.comment": " Sample existing columns to create a new dataframe.\n\n - Parameters:\n   - size: How many rows to be sampled together.\n   - repeating: Will we repeat the sampling to create more columns?\n   - sampler: The sampling function, for example, averaging, max, first, last etc.\n - Returns: A new dataframe.",
              "key.doc.declaration": "public func sample<C0, C1, C2, U0, U1, U2>(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2)]) -> (U0, U1, U2)) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift\" line=\"368\" column=\"15\"><Name>sample(size:repeating:sampler:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF</USR><Declaration>public func sample&lt;C0, C1, C2, U0, U1, U2&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2)]) -&gt; (U0, U1, U2)) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Sample existing columns to create a new dataframe.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many rows to be sampled together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Will we repeat the sampling to create more columns?</Para></Discussion></Parameter><Parameter><Name>sampler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sampling function, for example, averaging, max, first, last etc.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 368,
              "key.doc.name": "sample(size:repeating:sampler:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many rows to be sampled together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "Will we repeat the sampling to create more columns?"
                    }
                  ],
                  "name": "repeating"
                },
                {
                  "discussion": [
                    {
                      "Para": "The sampling function, for example, averaging, max, first, last etc."
                    }
                  ],
                  "name": "sampler"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 334,
              "key.docoffset": 15178,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U0L_q1_mfp\"><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U1L_q2_mfp\"><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U2L_q3_mfp\"><decl.generic_type_param.name>U2</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sampler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C0L_xmfp\">C0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C1L_q_mfp\">C1</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C2L_q0_mfp\">C2</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U0L_q1_mfp\">U0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U1L_q2_mfp\">U1</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U2L_q3_mfp\">U2</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 4549,
              "key.name": "sample(size:repeating:sampler:)",
              "key.namelength": 125,
              "key.nameoffset": 15527,
              "key.offset": 15522,
              "key.parsed_declaration": "public func sample<C0, C1, C2, U0, U1, U2>(\n  size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2)]) -> (U0, U1, U2)\n) -> DataFrame",
              "key.parsed_scope.end": 451,
              "key.parsed_scope.start": 368,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF\">sample&lt;C0, C1, U0, U1&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1)]) -&gt; (U0, U1)) -&gt; DataFrame</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF\">sample&lt;C0, C1, C2, C3, U0, U1, U2, U3&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2, C3)]) -&gt; (U0, U1, U2, U3)) -&gt; DataFrame</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 15534,
                  "key.offset": 15534,
                  "key.parsed_declaration": "public func sample<C0",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 15538,
                  "key.offset": 15538,
                  "key.parsed_declaration": "public func sample<C0, C1",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 15542,
                  "key.offset": 15542,
                  "key.parsed_declaration": "public func sample<C0, C1, C2",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U0",
                  "key.namelength": 2,
                  "key.nameoffset": 15546,
                  "key.offset": 15546,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, U0",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "U0.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U0L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U1",
                  "key.namelength": 2,
                  "key.nameoffset": 15550,
                  "key.offset": 15550,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, U0, U1",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "U1.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U1L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U2",
                  "key.namelength": 2,
                  "key.nameoffset": 15554,
                  "key.offset": 15554,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, U0, U1, U2",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "U2.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF2U2L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedSampler: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedSampler</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 121,
                  "key.name": "wrappedSampler",
                  "key.namelength": 14,
                  "key.nameoffset": 15716,
                  "key.offset": 15712,
                  "key.parsed_declaration": "let wrappedSampler = { (obj: [AnyObject]) -> AnyObject in\n  return sampler(obj as! [(C0, C1, C2)]) as AnyObject\n}",
                  "key.parsed_scope.end": 372,
                  "key.parsed_scope.start": 372,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF14wrappedSamplerL_yyXlSayyXlGcvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 240,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 15842,
                  "key.offset": 15838,
                  "key.parsed_declaration": "let property = DataFrame.add(\n  to: dataframe.dataframe,\n  multimap: { input in\n    return (input[0] as! C0, input[1] as! C1, input[2] as! C2) as AnyObject\n  }, properties: properties, outputType: .object, name: \"makeTuple\")",
                  "key.parsed_scope.end": 375,
                  "key.parsed_scope.start": 375,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF8propertyL_AC14ColumnPropertyVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampled: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampled</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "sampled",
                  "key.namelength": 7,
                  "key.nameoffset": 16087,
                  "key.offset": 16083,
                  "key.parsed_declaration": "let sampled: OpaquePointer",
                  "key.parsed_scope.end": 380,
                  "key.parsed_scope.start": 380,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF7sampledL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 16507,
                  "key.offset": 16503,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 390,
                  "key.parsed_scope.start": 390,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF10_dataframeL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 16548,
                  "key.offset": 16544,
                  "key.parsed_declaration": "var columnProperties = [String: DataFrame.ColumnProperty]()",
                  "key.parsed_scope.end": 391,
                  "key.parsed_scope.start": 391,
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF16columnPropertiesL_SDySSAC14ColumnPropertyVGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let mainProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mainProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "mainProperty",
                  "key.namelength": 12,
                  "key.nameoffset": 16642,
                  "key.offset": 16638,
                  "key.parsed_declaration": "let mainProperty = DataFrame.ColumnProperty(index: 0, type: .object)",
                  "key.parsed_scope.end": 393,
                  "key.parsed_scope.start": 393,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF0A8PropertyL_AC06ColumnK0Vvp"
                }
              ],
              "key.typename": "<C0, C1, C2, U0, U1, U2> (DataFrame.ManyUntypedSeries) -> (Int, Int?, @escaping ([(C0, C1, C2)]) -> (U0, U1, U2)) -> DataFrame",
              "key.typeusr": "$s4size9repeating7sampler4main9DataFrameVSi_SiSgq1__q2_q3_tSayx_q_q0_tGctcr4_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func sample&lt;C0, C1, C2, C3, U0, U1, U2, U3&gt;(size: <Type usr=\"s:Si\">Int</Type>, repeating: <Type usr=\"s:Si\">Int</Type>? = nil, sampler: @escaping ([(<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C3L_q1_mfp\">C3</Type>)]) -&gt; (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U0L_q2_mfp\">U0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U1L_q3_mfp\">U1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U2L_q4_mfp\">U2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U3L_q5_mfp\">U3</Type>)) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20412
                }
              ],
              "key.bodylength": 5424,
              "key.bodyoffset": 20580,
              "key.doc.column": 15,
              "key.doc.comment": " Sample existing columns to create a new dataframe.\n\n - Parameters:\n   - size: How many rows to be sampled together.\n   - repeating: Will we repeat the sampling to create more columns?\n   - sampler: The sampling function, for example, averaging, max, first, last etc.\n - Returns: A new dataframe.",
              "key.doc.declaration": "public func sample<C0, C1, C2, C3, U0, U1, U2, U3>(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2, C3)]) -> (U0, U1, U2, U3)) -> DataFrame",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift\" line=\"462\" column=\"15\"><Name>sample(size:repeating:sampler:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF</USR><Declaration>public func sample&lt;C0, C1, C2, C3, U0, U1, U2, U3&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2, C3)]) -&gt; (U0, U1, U2, U3)) -&gt; DataFrame</Declaration><CommentParts><Abstract><Para>Sample existing columns to create a new dataframe.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How many rows to be sampled together.</Para></Discussion></Parameter><Parameter><Name>repeating</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Will we repeat the sampling to create more columns?</Para></Discussion></Parameter><Parameter><Name>sampler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sampling function, for example, averaging, max, first, last etc.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new dataframe.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 462,
              "key.doc.name": "sample(size:repeating:sampler:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How many rows to be sampled together."
                    }
                  ],
                  "name": "size"
                },
                {
                  "discussion": [
                    {
                      "Para": "Will we repeat the sampling to create more columns?"
                    }
                  ],
                  "name": "repeating"
                },
                {
                  "discussion": [
                    {
                      "Para": "The sampling function, for example, averaging, max, first, last etc."
                    }
                  ],
                  "name": "sampler"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new dataframe."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 334,
              "key.docoffset": 20075,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sample</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U0L_q2_mfp\"><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U1L_q3_mfp\"><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U2L_q4_mfp\"><decl.generic_type_param.name>U2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U3L_q5_mfp\"><decl.generic_type_param.name>U3</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>repeating</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sampler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C0L_xmfp\">C0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C1L_q_mfp\">C1</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C2L_q0_mfp\">C2</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C3L_q1_mfp\">C3</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U0L_q2_mfp\">U0</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U1L_q3_mfp\">U1</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U2L_q4_mfp\">U2</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U3L_q5_mfp\">U3</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 5586,
              "key.name": "sample(size:repeating:sampler:)",
              "key.namelength": 141,
              "key.nameoffset": 20424,
              "key.offset": 20419,
              "key.parsed_declaration": "public func sample<C0, C1, C2, C3, U0, U1, U2, U3>(\n  size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2, C3)]) -> (U0, U1, U2, U3)\n) -> DataFrame",
              "key.parsed_scope.end": 560,
              "key.parsed_scope.start": 462,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq0__q1_tSayx_q_tGctr2_lF\">sample&lt;C0, C1, U0, U1&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1)]) -&gt; (U0, U1)) -&gt; DataFrame</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq1__q2_q3_tSayx_q_q0_tGctr4_lF\">sample&lt;C0, C1, C2, U0, U1, U2&gt;(size: Int, repeating: Int? = nil, sampler: @escaping ([(C0, C1, C2)]) -&gt; (U0, U1, U2)) -&gt; DataFrame</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 20431,
                  "key.offset": 20431,
                  "key.parsed_declaration": "public func sample<C0",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 20435,
                  "key.offset": 20435,
                  "key.parsed_declaration": "public func sample<C0, C1",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 20439,
                  "key.offset": 20439,
                  "key.parsed_declaration": "public func sample<C0, C1, C2",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 20443,
                  "key.offset": 20443,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, C3",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U0",
                  "key.namelength": 2,
                  "key.nameoffset": 20447,
                  "key.offset": 20447,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, C3, U0",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "U0.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U0L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U1",
                  "key.namelength": 2,
                  "key.nameoffset": 20451,
                  "key.offset": 20451,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, C3, U0, U1",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "U1.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U1L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U2",
                  "key.namelength": 2,
                  "key.nameoffset": 20455,
                  "key.offset": 20455,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, C3, U0, U1, U2",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "U2.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U2L_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "U3",
                  "key.namelength": 2,
                  "key.nameoffset": 20459,
                  "key.offset": 20459,
                  "key.parsed_declaration": "public func sample<C0, C1, C2, C3, U0, U1, U2, U3",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "U3.Type",
                  "key.typeusr": "$sq5_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF2U3L_q5_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedSampler: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedSampler</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 125,
                  "key.name": "wrappedSampler",
                  "key.namelength": 14,
                  "key.nameoffset": 20629,
                  "key.offset": 20625,
                  "key.parsed_declaration": "let wrappedSampler = { (obj: [AnyObject]) -> AnyObject in\n  return sampler(obj as! [(C0, C1, C2, C3)]) as AnyObject\n}",
                  "key.parsed_scope.end": 466,
                  "key.parsed_scope.start": 466,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF14wrappedSamplerL_yyXlSayyXlGcvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 257,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 20759,
                  "key.offset": 20755,
                  "key.parsed_declaration": "let property = DataFrame.add(\n  to: dataframe.dataframe,\n  multimap: { input in\n    return (input[0] as! C0, input[1] as! C1, input[2] as! C2, input[3] as! C3) as AnyObject\n  }, properties: properties, outputType: .object, name: \"makeTuple\")",
                  "key.parsed_scope.end": 469,
                  "key.parsed_scope.start": 469,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF8propertyL_AC14ColumnPropertyVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sampled: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampled</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "sampled",
                  "key.namelength": 7,
                  "key.nameoffset": 21021,
                  "key.offset": 21017,
                  "key.parsed_declaration": "let sampled: OpaquePointer",
                  "key.parsed_scope.end": 474,
                  "key.parsed_scope.start": 474,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF7sampledL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "_dataframe",
                  "key.namelength": 10,
                  "key.nameoffset": 21441,
                  "key.offset": 21437,
                  "key.parsed_declaration": "let _dataframe = dataframe.dataframe",
                  "key.parsed_scope.end": 484,
                  "key.parsed_scope.start": 484,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF10_dataframeL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "columnProperties",
                  "key.namelength": 16,
                  "key.nameoffset": 21482,
                  "key.offset": 21478,
                  "key.parsed_declaration": "var columnProperties = [String: DataFrame.ColumnProperty]()",
                  "key.parsed_scope.end": 485,
                  "key.parsed_scope.start": 485,
                  "key.typename": "[String : DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF16columnPropertiesL_SDySSAC14ColumnPropertyVGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let mainProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrameCore.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mainProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "mainProperty",
                  "key.namelength": 12,
                  "key.nameoffset": 21576,
                  "key.offset": 21572,
                  "key.parsed_declaration": "let mainProperty = DataFrame.ColumnProperty(index: 0, type: .object)",
                  "key.parsed_scope.end": 487,
                  "key.parsed_scope.start": 487,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF0A8PropertyL_AC06ColumnK0Vvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, U0, U1, U2, U3> (DataFrame.ManyUntypedSeries) -> (Int, Int?, @escaping ([(C0, C1, C2, C3)]) -> (U0, U1, U2, U3)) -> DataFrame",
              "key.typeusr": "$s4size9repeating7sampler4main9DataFrameVSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctcr6_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV6sample4size9repeating7samplerACSi_SiSgq2__q3_q4_q5_tSayx_q_q0_q1_tGctr6_lF"
            }
          ],
          "key.typename": "DataFrame.ManyUntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV17ManyUntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 33232,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DataSeries : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 14
            }
          ],
          "key.bodylength": 115,
          "key.bodyoffset": 52,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 8,
              "key.offset": 42
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DataSeries</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "Sequence"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 147,
          "key.name": "DataSeries",
          "key.namelength": 10,
          "key.nameoffset": 30,
          "key.offset": 21,
          "key.parsed_declaration": "public protocol DataSeries: Sequence",
          "key.parsed_scope.end": 6,
          "key.parsed_scope.start": 3,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>func prefetch(_ i: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prefetch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 54,
              "key.name": "prefetch(_:streamContext:)",
              "key.namelength": 49,
              "key.nameoffset": 60,
              "key.offset": 55,
              "key.parsed_declaration": "func prefetch(_ i: Int, streamContext: StreamContext?)",
              "key.parsed_scope.end": 4,
              "key.parsed_scope.start": 4,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10DataSeriesPAAE8prefetchyySiF\">prefetch(_:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DataSeries> (Self) -> (Int, StreamContext?) -> ()",
              "key.typeusr": "$s_13streamContextySi_4main06StreamB0CSgtcD",
              "key.usr": "s:4main10DataSeriesP8prefetch_13streamContextySi_AA06StreamF0CSgtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>func next(_ streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; <Type usr=\"s:ST7ElementQa\">Element</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:ST7ElementQa\">Element</ref.associatedtype>?</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 54,
              "key.name": "next(_:)",
              "key.namelength": 37,
              "key.nameoffset": 117,
              "key.offset": 112,
              "key.parsed_declaration": "func next(_ streamContext: StreamContext?) -> Element?",
              "key.parsed_scope.end": 5,
              "key.parsed_scope.start": 5,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10DataSeriesPAAE4next7ElementQzSgyF\">next()</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DataSeries> (Self) -> (StreamContext?) -> Self.Element?",
              "key.typeusr": "$sy7ElementQzSg4main13StreamContextCSgcD",
              "key.usr": "s:4main10DataSeriesP4nexty7ElementQzSgAA13StreamContextCSgF"
            }
          ],
          "key.typename": "DataSeries.Protocol",
          "key.typeusr": "$s4main10DataSeries_pmD",
          "key.usr": "s:4main10DataSeriesP"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol DataSeries : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 146,
          "key.bodyoffset": 192,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DataSeries</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 169,
          "key.name": "DataSeries",
          "key.namelength": 10,
          "key.nameoffset": 180,
          "key.offset": 170,
          "key.parsed_declaration": "extension DataSeries",
          "key.parsed_scope.end": 15,
          "key.parsed_scope.start": 8,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func prefetch(_ i: <Type usr=\"s:Si\">Int</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 195
                }
              ],
              "key.bodylength": 44,
              "key.bodyoffset": 227,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prefetch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 70,
              "key.name": "prefetch(_:)",
              "key.namelength": 18,
              "key.nameoffset": 207,
              "key.offset": 202,
              "key.parsed_declaration": "public func prefetch(_ i: Int)",
              "key.parsed_scope.end": 11,
              "key.parsed_scope.start": 9,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10DataSeriesP8prefetch_13streamContextySi_AA06StreamF0CSgtF\">prefetch(_:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DataSeries> (Self) -> (Int) -> ()",
              "key.typeusr": "$syySicD",
              "key.usr": "s:4main10DataSeriesPAAE8prefetchyySiF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func next() -&gt; <Type usr=\"s:ST7ElementQa\">Element</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 275
                }
              ],
              "key.bodylength": 29,
              "key.bodyoffset": 307,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>() -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:ST7ElementQa\">Element</ref.associatedtype>?</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 55,
              "key.name": "next()",
              "key.namelength": 6,
              "key.nameoffset": 287,
              "key.offset": 282,
              "key.parsed_declaration": "public func next() -> Element?",
              "key.parsed_scope.end": 14,
              "key.parsed_scope.start": 12,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10DataSeriesP4nexty7ElementQzSgAA13StreamContextCSgF\">next(_:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DataSeries> (Self) -> () -> Self.Element?",
              "key.typeusr": "$s7ElementQzSgycD",
              "key.usr": "s:4main10DataSeriesPAAE4next7ElementQzSgyF"
            }
          ],
          "key.typename": "DataSeries.Protocol",
          "key.typeusr": "$s4main10DataSeries_pmD",
          "key.usr": "s:4main10DataSeriesP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct DataSeriesIterator&lt;S&gt; : <Type usr=\"s:St\">IteratorProtocol</Type> where S : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 341
            }
          ],
          "key.bodylength": 211,
          "key.bodyoffset": 408,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 16,
              "key.offset": 390
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataSeriesIterator</decl.name>&lt;<decl.generic_type_param usr=\"s:4main18DataSeriesIteratorV1Sxmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:St\">IteratorProtocol</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "IteratorProtocol"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 272,
          "key.name": "DataSeriesIterator",
          "key.namelength": 18,
          "key.nameoffset": 355,
          "key.offset": 348,
          "key.parsed_declaration": "public struct DataSeriesIterator<S: DataSeries>: IteratorProtocol",
          "key.parsed_scope.end": 31,
          "key.parsed_scope.start": 17,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>S : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 10,
                  "key.offset": 377
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DataSeries"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 13,
              "key.name": "S",
              "key.namelength": 1,
              "key.nameoffset": 374,
              "key.offset": 374,
              "key.parsed_declaration": "public struct DataSeriesIterator<S: DataSeries",
              "key.parsed_scope.end": 17,
              "key.parsed_scope.start": 17,
              "key.typename": "S.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main18DataSeriesIteratorV1Sxmfp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</Type>&lt;S&gt;.Element = <Type usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</Type>.<Type usr=\"s:ST7ElementQa\">Element</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 412
                }
              ],
              "key.doc.declaration": "associatedtype Element",
              "key.doc.discussion": [
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Other><Name>Element</Name><USR>s:St7ElementQa</USR><Declaration>associatedtype Element</Declaration><CommentParts><Abstract><Para>The type of element traversed by the iterator.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>IteratorProtocol</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
              "key.doc.name": "Element",
              "key.doc.type": "Other",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</ref.struct>&lt;S&gt;.<decl.name>Element</decl.name> = <ref.generic_type_param usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element</ref.associatedtype></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 29,
              "key.name": "Element",
              "key.namelength": 7,
              "key.nameoffset": 429,
              "key.offset": 419,
              "key.overrides": [
                {
                  "key.usr": "s:St7ElementQa"
                }
              ],
              "key.parsed_declaration": "public typealias Element = S.Element",
              "key.parsed_scope.end": 19,
              "key.parsed_scope.start": 19,
              "key.typename": "S.Element.Type",
              "key.typeusr": "$s7ElementSTQzmD",
              "key.usr": "s:St7ElementQa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private let dataSeries: <Type usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 452
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataSeries</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</ref.generic_type_param></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 17,
              "key.name": "dataSeries",
              "key.namelength": 10,
              "key.nameoffset": 464,
              "key.offset": 460,
              "key.parsed_declaration": "private let dataSeries: S",
              "key.parsed_scope.end": 21,
              "key.parsed_scope.start": 21,
              "key.typename": "S",
              "key.typeusr": "$sxD",
              "key.usr": "s:4main18DataSeriesIteratorV04dataC033_BE3E946B4F69C7561ABEC49508EDD619LLxvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ dataSeries: <Type usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 481
                }
              ],
              "key.bodylength": 36,
              "key.bodyoffset": 511,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dataSeries</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main18DataSeriesIteratorV1Sxmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 60,
              "key.name": "init(_:)",
              "key.namelength": 21,
              "key.nameoffset": 488,
              "key.offset": 488,
              "key.parsed_declaration": "public init(_ dataSeries: S)",
              "key.parsed_scope.end": 25,
              "key.parsed_scope.start": 23,
              "key.substructure": [],
              "key.typename": "<S where S : DataSeries> (DataSeriesIterator<S>.Type) -> (S) -> DataSeriesIterator<S>",
              "key.typeusr": "$sy4main18DataSeriesIteratorVyxGxcD",
              "key.usr": "s:4main18DataSeriesIteratorVyACyxGxcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func next() -&gt; <Type usr=\"s:4main18DataSeriesIteratorV7Elementa\">Element</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 552
                }
              ],
              "key.bodylength": 32,
              "key.bodyoffset": 584,
              "key.doc.declaration": "mutating func next() -> Self.Element?",
              "key.doc.discussion": [
                {
                  "Para": "Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return `nil`."
                },
                {
                  "Para": "You must not call this method if any other copy of this iterator has been advanced with a call to its `next()` method."
                },
                {
                  "Para": "The following example shows how an iterator can be used explicitly to emulate a `for`-`in` loop. First, retrieve a sequence’s iterator, and then call the iterator’s `next()` method until it returns `nil`."
                },
                {
                  "CodeListing": ""
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Function><Name>next()</Name><USR>s:St4next7ElementQzSgyF</USR><Declaration>mutating func next() -&gt; Self.Element?</Declaration><CommentParts><Abstract><Para>Advances to the next element and returns it, or <codeVoice>nil</codeVoice> if no next element exists.</Para></Abstract><ResultDiscussion><Para>The next element in the underlying sequence, if a next element exists; otherwise, <codeVoice>nil</codeVoice>.</Para></ResultDiscussion><Discussion><Para>Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return <codeVoice>nil</codeVoice>.</Para><Para>You must not call this method if any other copy of this iterator has been advanced with a call to its <codeVoice>next()</codeVoice> method.</Para><Para>The following example shows how an iterator can be used explicitly to emulate a <codeVoice>for</codeVoice>-<codeVoice>in</codeVoice> loop. First, retrieve a sequence’s iterator, and then call the iterator’s <codeVoice>next()</codeVoice> method until it returns <codeVoice>nil</codeVoice>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let numbers = [2, 3, 5, 7]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersIterator = numbers.makeIterator()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[while let num = numbersIterator.next() {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(num)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"2\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"3\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"5\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"7\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>IteratorProtocol</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.name": "next()",
              "key.doc.result_discussion": [
                {
                  "Para": "The next element in the underlying sequence, if a next element exists; otherwise, `nil`."
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main18DataSeriesIteratorV7Elementa\">Element</ref.typealias>?</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 58,
              "key.name": "next()",
              "key.namelength": 6,
              "key.nameoffset": 564,
              "key.offset": 559,
              "key.overrides": [
                {
                  "key.usr": "s:St4next7ElementQzSgyF"
                }
              ],
              "key.parsed_declaration": "public func next() -> Element?",
              "key.parsed_scope.end": 29,
              "key.parsed_scope.start": 27,
              "key.substructure": [],
              "key.typename": "<S where S : DataSeries> (DataSeriesIterator<S>) -> () -> S.Element?",
              "key.typeusr": "$s7ElementQzSgycD",
              "key.usr": "s:St4next7ElementQzSgyF"
            }
          ],
          "key.typename": "DataSeriesIterator<S>.Type",
          "key.typeusr": "$s4main18DataSeriesIteratorVyxGmD",
          "key.usr": "s:4main18DataSeriesIteratorV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>final class _DataFrame</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 622
            }
          ],
          "key.bodylength": 596,
          "key.bodyoffset": 646,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>_DataFrame</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 615,
          "key.name": "_DataFrame",
          "key.namelength": 10,
          "key.nameoffset": 634,
          "key.offset": 628,
          "key.parsed_declaration": "final class _DataFrame",
          "key.parsed_scope.end": 59,
          "key.parsed_scope.start": 33,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private let underlying: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 649
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>underlying</decl.name>: <decl.var.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 26,
              "key.name": "underlying",
              "key.namelength": 10,
              "key.nameoffset": 661,
              "key.offset": 657,
              "key.parsed_declaration": "private let underlying: AnyObject?",
              "key.parsed_scope.end": 34,
              "key.parsed_scope.start": 34,
              "key.typename": "AnyObject?",
              "key.typeusr": "$syXlSgD",
              "key.usr": "s:4main10_DataFrameC10underlying33_BE3E946B4F69C7561ABEC49508EDD619LLyXlSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private let parent: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 686
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parent</decl.name>: <decl.var.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "parent",
              "key.namelength": 6,
              "key.nameoffset": 698,
              "key.offset": 694,
              "key.parsed_declaration": "private let parent: _DataFrame?",
              "key.parsed_scope.end": 35,
              "key.parsed_scope.start": 35,
              "key.typename": "_DataFrame?",
              "key.typeusr": "$s4main10_DataFrameCSgD",
              "key.usr": "s:4main10_DataFrameC6parent33_BE3E946B4F69C7561ABEC49508EDD619LLACSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 28,
              "key.name": "dataframe",
              "key.namelength": 9,
              "key.nameoffset": 724,
              "key.offset": 720,
              "key.parsed_declaration": "let dataframe: OpaquePointer",
              "key.parsed_scope.end": 36,
              "key.parsed_scope.start": 36,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main10_DataFrameC9dataframes13OpaquePointerVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, parent: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>? = nil, underlying: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>? = nil)</Declaration>",
              "key.bodylength": 92,
              "key.bodyoffset": 840,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parent</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>underlying</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 182,
              "key.name": "init(dataframe:parent:underlying:)",
              "key.namelength": 87,
              "key.nameoffset": 751,
              "key.offset": 751,
              "key.parsed_declaration": "init(dataframe: OpaquePointer, parent: _DataFrame? = nil, underlying: AnyObject? = nil)",
              "key.parsed_scope.end": 41,
              "key.parsed_scope.start": 37,
              "key.substructure": [],
              "key.typename": "(_DataFrame.Type) -> (OpaquePointer, _DataFrame?, AnyObject?) -> _DataFrame",
              "key.typeusr": "$s9dataframe6parent10underlying4main10_DataFrameCs13OpaquePointerV_AFSgyXlSgtcD",
              "key.usr": "s:4main10_DataFrameC9dataframe6parent10underlyingACs13OpaquePointerV_ACSgyXlSgtcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>func shuffle()</Declaration>",
              "key.bodylength": 152,
              "key.bodyoffset": 953,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shuffle</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 169,
              "key.name": "shuffle()",
              "key.namelength": 9,
              "key.nameoffset": 942,
              "key.offset": 937,
              "key.parsed_declaration": "func shuffle()",
              "key.parsed_scope.end": 50,
              "key.parsed_scope.start": 43,
              "key.substructure": [],
              "key.typename": "(_DataFrame) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main10_DataFrameC7shuffleyyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
              "key.bodylength": 59,
              "key.bodyoffset": 1126,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 76,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 1114,
              "key.offset": 1110,
              "key.parsed_declaration": "var count: Int",
              "key.parsed_scope.end": 54,
              "key.parsed_scope.start": 52,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main10_DataFrameC5countSivp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>deinit</Declaration>",
              "key.bodylength": 42,
              "key.bodyoffset": 1198,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 51,
              "key.name": "deinit",
              "key.namelength": 6,
              "key.nameoffset": 1190,
              "key.offset": 1190,
              "key.parsed_declaration": "deinit",
              "key.parsed_scope.end": 58,
              "key.parsed_scope.start": 56,
              "key.substructure": [],
              "key.typename": "(_DataFrame) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main10_DataFrameCfd"
            }
          ],
          "key.typename": "_DataFrame.Type",
          "key.typeusr": "$s4main10_DataFrameCmD",
          "key.usr": "s:4main10_DataFrameC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1584
            }
          ],
          "key.bodylength": 5634,
          "key.bodyoffset": 1609,
          "key.doc.column": 15,
          "key.doc.comment": "A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular\nDataframe implementation is most useful to implement data feeder pipeline. You need some\ntransformations so some text or images can be transformed into tensors for a model to consume.\nDataframe can be used to implement that pipeline.",
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.doclength": 339,
          "key.docoffset": 1245,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 5653,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 1598,
          "key.offset": 1591,
          "key.parsed_declaration": "public struct DataFrame",
          "key.parsed_scope.end": 225,
          "key.parsed_scope.start": 65,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>final class <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.Wrapped&lt;T&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 1613
                }
              ],
              "key.bodylength": 74,
              "key.bodyoffset": 1637,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<decl.name>Wrapped</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV7WrappedC1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 93,
              "key.name": "Wrapped",
              "key.namelength": 7,
              "key.nameoffset": 1625,
              "key.offset": 1619,
              "key.parsed_declaration": "final class Wrapped<T>",
              "key.parsed_scope.end": 72,
              "key.parsed_scope.start": 67,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 1633,
                  "key.offset": 1633,
                  "key.parsed_declaration": "final class Wrapped<T",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 67,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV7WrappedC1Txmfp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let value: <Type usr=\"s:4main9DataFrameV7WrappedC1Txmfp\">T</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>value</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:4main9DataFrameV7WrappedC1Txmfp\">T</ref.generic_type_param></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 12,
                  "key.name": "value",
                  "key.namelength": 5,
                  "key.nameoffset": 1646,
                  "key.offset": 1642,
                  "key.parsed_declaration": "let value: T",
                  "key.parsed_scope.end": 68,
                  "key.parsed_scope.start": 68,
                  "key.typename": "T",
                  "key.typeusr": "$sxD",
                  "key.usr": "s:4main9DataFrameV7WrappedC5valuexvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(_ value: <Type usr=\"s:4main9DataFrameV7WrappedC1Txmfp\">T</Type>)</Declaration>",
                  "key.bodylength": 30,
                  "key.bodyoffset": 1677,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV7WrappedC1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 49,
                  "key.name": "init(_:)",
                  "key.namelength": 16,
                  "key.nameoffset": 1659,
                  "key.offset": 1659,
                  "key.parsed_declaration": "init(_ value: T)",
                  "key.parsed_scope.end": 71,
                  "key.parsed_scope.start": 69,
                  "key.substructure": [],
                  "key.typename": "<T> (DataFrame.Wrapped<T>.Type) -> (T) -> DataFrame.Wrapped<T>",
                  "key.typeusr": "$sy4main9DataFrameV7WrappedCy_xGxcD",
                  "key.usr": "s:4main9DataFrameV7WrappedCyAEy_xGxcfc"
                }
              ],
              "key.typename": "DataFrame.Wrapped<T>.Type",
              "key.typeusr": "$s4main9DataFrameV7WrappedCy_xGmD",
              "key.usr": "s:4main9DataFrameV7WrappedC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>struct <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.ColumnProperty</Declaration>",
              "key.bodylength": 115,
              "key.bodyoffset": 1739,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<decl.name>ColumnProperty</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 139,
              "key.name": "ColumnProperty",
              "key.namelength": 14,
              "key.nameoffset": 1723,
              "key.offset": 1716,
              "key.parsed_declaration": "struct ColumnProperty",
              "key.parsed_scope.end": 81,
              "key.parsed_scope.start": 74,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>enum <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.PropertyType</Declaration>",
                  "key.bodylength": 41,
                  "key.bodyoffset": 1763,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<decl.name>PropertyType</decl.name></decl.enum>",
                  "key.kind": "source.lang.swift.decl.enum",
                  "key.length": 61,
                  "key.name": "PropertyType",
                  "key.namelength": 12,
                  "key.nameoffset": 1749,
                  "key.offset": 1744,
                  "key.parsed_declaration": "enum PropertyType",
                  "key.parsed_scope.end": 78,
                  "key.parsed_scope.start": 75,
                  "key.substructure": [
                    {
                      "key.kind": "source.lang.swift.decl.enumcase",
                      "key.length": 11,
                      "key.namelength": 0,
                      "key.nameoffset": 0,
                      "key.offset": 1770,
                      "key.substructure": [
                        {
                          "key.accessibility": "source.lang.swift.accessibility.internal",
                          "key.annotated_decl": "<Declaration>case object</Declaration>",
                          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                          "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>object</decl.name></decl.enumelement>",
                          "key.kind": "source.lang.swift.decl.enumelement",
                          "key.length": 6,
                          "key.name": "object",
                          "key.namelength": 6,
                          "key.nameoffset": 1775,
                          "key.offset": 1775,
                          "key.parsed_declaration": "case object",
                          "key.parsed_scope.end": 76,
                          "key.parsed_scope.start": 76,
                          "key.typename": "(DataFrame.ColumnProperty.PropertyType.Type) -> DataFrame.ColumnProperty.PropertyType",
                          "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyV0E4TypeOAGmcD",
                          "key.usr": "s:4main9DataFrameV14ColumnPropertyV0E4TypeO6objectyA2GmF"
                        }
                      ]
                    },
                    {
                      "key.kind": "source.lang.swift.decl.enumcase",
                      "key.length": 11,
                      "key.namelength": 0,
                      "key.nameoffset": 0,
                      "key.offset": 1788,
                      "key.substructure": [
                        {
                          "key.accessibility": "source.lang.swift.accessibility.internal",
                          "key.annotated_decl": "<Declaration>case tensor</Declaration>",
                          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                          "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>tensor</decl.name></decl.enumelement>",
                          "key.kind": "source.lang.swift.decl.enumelement",
                          "key.length": 6,
                          "key.name": "tensor",
                          "key.namelength": 6,
                          "key.nameoffset": 1793,
                          "key.offset": 1793,
                          "key.parsed_declaration": "case tensor",
                          "key.parsed_scope.end": 77,
                          "key.parsed_scope.start": 77,
                          "key.typename": "(DataFrame.ColumnProperty.PropertyType.Type) -> DataFrame.ColumnProperty.PropertyType",
                          "key.typeusr": "$sy4main9DataFrameV14ColumnPropertyV0E4TypeOAGmcD",
                          "key.usr": "s:4main9DataFrameV14ColumnPropertyV0E4TypeO6tensoryA2GmF"
                        }
                      ]
                    }
                  ],
                  "key.typename": "DataFrame.ColumnProperty.PropertyType.Type",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOmD",
                  "key.usr": "s:4main9DataFrameV14ColumnPropertyV0E4TypeO"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var index: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 1814,
                  "key.offset": 1810,
                  "key.parsed_declaration": "var index: Int",
                  "key.parsed_scope.end": 79,
                  "key.parsed_scope.start": 79,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV14ColumnPropertyV5indexSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var type: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 22,
                  "key.name": "type",
                  "key.namelength": 4,
                  "key.nameoffset": 1833,
                  "key.offset": 1829,
                  "key.parsed_declaration": "var type: PropertyType",
                  "key.parsed_scope.end": 80,
                  "key.parsed_scope.start": 80,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "DataFrame.ColumnProperty.PropertyType",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOD",
                  "key.usr": "s:4main9DataFrameV14ColumnPropertyV4typeAE0E4TypeOvp"
                }
              ],
              "key.typename": "DataFrame.ColumnProperty.Type",
              "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVmD",
              "key.usr": "s:4main9DataFrameV14ColumnPropertyV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnProperties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 46,
              "key.name": "columnProperties",
              "key.namelength": 16,
              "key.nameoffset": 1863,
              "key.offset": 1859,
              "key.parsed_declaration": "var columnProperties: [String: ColumnProperty]",
              "key.parsed_scope.end": 83,
              "key.parsed_scope.start": 83,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "[String : DataFrame.ColumnProperty]",
              "key.typeusr": "$sSDySS4main9DataFrameV14ColumnPropertyVGD",
              "key.usr": "s:4main9DataFrameV16columnPropertiesSDySSAC14ColumnPropertyVGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var columns: [<Type usr=\"s:SS\">String</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1965
                }
              ],
              "key.bodylength": 43,
              "key.bodyoffset": 1995,
              "key.doc.column": 14,
              "key.doc.comment": "List of columns within this dataframe.",
              "key.doc.declaration": "public var columns: [String] { get }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"88\" column=\"14\"><Name>columns</Name><USR>s:4main9DataFrameV7columnsSaySSGvp</USR><Declaration>public var columns: [String] { get }</Declaration><CommentParts><Abstract><Para>List of columns within this dataframe.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 88,
              "key.doc.name": "columns",
              "key.doc.type": "Other",
              "key.doclength": 53,
              "key.docoffset": 1909,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columns</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 67,
              "key.name": "columns",
              "key.namelength": 7,
              "key.nameoffset": 1976,
              "key.offset": 1972,
              "key.parsed_declaration": "public var columns: [String]",
              "key.parsed_scope.end": 90,
              "key.parsed_scope.start": 88,
              "key.typename": "[String]",
              "key.typeusr": "$sSaySSGD",
              "key.usr": "s:4main9DataFrameV7columnsSaySSGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let _dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_dataframe</decl.name>: <decl.var.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 26,
              "key.name": "_dataframe",
              "key.namelength": 10,
              "key.nameoffset": 2047,
              "key.offset": 2043,
              "key.parsed_declaration": "let _dataframe: _DataFrame",
              "key.parsed_scope.end": 92,
              "key.parsed_scope.start": 92,
              "key.typename": "_DataFrame",
              "key.typeusr": "$s4main10_DataFrameCD",
              "key.usr": "s:4main9DataFrameV10_dataframeAA01_bC0Cvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>, columnProperties: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>])</Declaration>",
              "key.bodylength": 111,
              "key.bodyoffset": 2146,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>columnProperties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 185,
              "key.name": "init(dataframe:columnProperties:)",
              "key.namelength": 71,
              "key.nameoffset": 2073,
              "key.offset": 2073,
              "key.parsed_declaration": "init(dataframe: _DataFrame, columnProperties: [String: ColumnProperty])",
              "key.parsed_scope.end": 98,
              "key.parsed_scope.start": 94,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc\">init(from:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc\">init(fromCSV:automaticUseHeader:delimiter:quotation:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc\">init(dataframe:properties:size:repeating:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc\">init(dataframe:property:size:sample:outputType:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc\">init(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(DataFrame.Type) -> (_DataFrame, [String : DataFrame.ColumnProperty]) -> DataFrame",
              "key.typeusr": "$s9dataframe16columnProperties4main9DataFrameVAC01_eF0C_SDySSAE14ColumnPropertyVGtcD",
              "key.usr": "s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init&lt;S&gt;(from sequence: <Type usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc1SL_xmfp\">S</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;0&quot;) where S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2330
                }
              ],
              "key.bodylength": 2197,
              "key.bodyoffset": 2394,
              "key.doc.column": 10,
              "key.doc.comment": "Initialize a dataframe from a sequence of objects.",
              "key.doc.declaration": "public init<S>(from sequence: S, name: String = \"0\") where S : Sequence",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"103\" column=\"10\"><Name>init(from:name:)</Name><USR>s:4main9DataFrameV4from4nameACx_SStcSTRzlufc</USR><Declaration>public init&lt;S&gt;(from sequence: S, name: String = &quot;0&quot;) where S : Sequence</Declaration><CommentParts><Abstract><Para>Initialize a dataframe from a sequence of objects.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 103,
              "key.doc.name": "init(from:name:)",
              "key.doc.type": "Function",
              "key.doclength": 65,
              "key.docoffset": 2262,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc1SL_xmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV4from4nameACx_SStcSTRzlufc1SL_xmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;0&quot;</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 2255,
              "key.name": "init(from:name:)",
              "key.namelength": 55,
              "key.nameoffset": 2337,
              "key.offset": 2337,
              "key.parsed_declaration": "public init<S: Sequence>(from sequence: S, name: String = \"0\")",
              "key.parsed_scope.end": 151,
              "key.parsed_scope.start": 103,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe16columnPropertiesAcA01_bC0C_SDySSAC14ColumnPropertyVGtcfc\">init(dataframe:columnProperties:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV7fromCSV18automaticUseHeader9delimiter9quotationACSgSS_SbS2Stcfc\">init(fromCSV:automaticUseHeader:delimiter:quotation:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe10properties4size9repeatingAcA01_bC0C_SayAC14ColumnPropertyVGS2iSgtcfc\">init(dataframe:properties:size:repeating:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVSiyXlSayyXlGcAL0kI0Otcfc\">init(dataframe:property:size:sample:outputType:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV9dataframe8property4size9repeating6sample10outputTypeAcA01_bC0C_AC14ColumnPropertyVS2iyXlSayyXlGcAM0lJ0Otcfc\">init(dataframe:property:size:repeating:sample:outputType:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 2345
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 2342,
                  "key.offset": 2342,
                  "key.parsed_declaration": "public init<S: Sequence",
                  "key.parsed_scope.end": 103,
                  "key.parsed_scope.start": 103,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc1SL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let underlying: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</Type>&lt;[<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>underlying</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.class usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</ref.class>&lt;[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 56,
                  "key.name": "underlying",
                  "key.namelength": 10,
                  "key.nameoffset": 2439,
                  "key.offset": 2435,
                  "key.parsed_declaration": "let underlying = Wrapped(Array(sequence) as [AnyObject])",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 105,
                  "key.typename": "DataFrame.Wrapped<[AnyObject]>",
                  "key.typeusr": "$s4main9DataFrameV7WrappedCy_SayyXlGGD",
                  "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc10underlyingL_AC7WrappedCy_SayyXlGGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var column_data: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>column_data</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 42,
                  "key.name": "column_data",
                  "key.namelength": 11,
                  "key.nameoffset": 2500,
                  "key.offset": 2496,
                  "key.parsed_declaration": "var column_data = ccv_cnnp_column_data_t()",
                  "key.parsed_scope.end": 106,
                  "key.parsed_scope.start": 106,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc11column_dataL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let propertyType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>propertyType</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 45,
                  "key.name": "propertyType",
                  "key.namelength": 12,
                  "key.nameoffset": 2547,
                  "key.offset": 2543,
                  "key.parsed_declaration": "let propertyType: ColumnProperty.PropertyType",
                  "key.parsed_scope.end": 107,
                  "key.parsed_scope.start": 107,
                  "key.typename": "DataFrame.ColumnProperty.PropertyType",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOD",
                  "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc12propertyTypeL_AC14ColumnPropertyV0iG0Ovp"
                },
                {
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 280,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 4162,
                  "key.offset": 4158,
                  "key.parsed_declaration": "let dataframe: OpaquePointer = name.withCString {\n  column_data.name = UnsafeMutablePointer<Int8>(mutating: $0)\n  column_data.context = Unmanaged.passRetained(underlying).toOpaque()\n  return ccv_cnnp_dataframe_new(&column_data, 1, Int32(underlying.value.count))!\n}",
                  "key.parsed_scope.end": 144,
                  "key.parsed_scope.start": 144,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc9dataframeL_s13OpaquePointerVvp"
                }
              ],
              "key.typename": "<S where S : Sequence> (DataFrame.Type) -> (S, String) -> DataFrame",
              "key.typeusr": "$s4from4name4main9DataFrameVx_SStcSTRzluD",
              "key.usr": "s:4main9DataFrameV4from4nameACx_SStcSTRzlufc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public mutating func shuffle()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 4643
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4636
                }
              ],
              "key.bodylength": 28,
              "key.bodyoffset": 4668,
              "key.doc.column": 24,
              "key.doc.comment": "Shuffle the dataframe.",
              "key.doc.declaration": "public mutating func shuffle()",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"156\" column=\"24\"><Name>shuffle()</Name><USR>s:4main9DataFrameV7shuffleyyF</USR><Declaration>public mutating func shuffle()</Declaration><CommentParts><Abstract><Para>Shuffle the dataframe.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 156,
              "key.doc.name": "shuffle()",
              "key.doc.type": "Function",
              "key.doclength": 37,
              "key.docoffset": 4596,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shuffle</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 45,
              "key.name": "shuffle()",
              "key.namelength": 9,
              "key.nameoffset": 4657,
              "key.offset": 4652,
              "key.parsed_declaration": "public mutating func shuffle()",
              "key.parsed_scope.end": 158,
              "key.parsed_scope.start": 156,
              "key.substructure": [],
              "key.typename": "(inout DataFrame) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main9DataFrameV7shuffleyyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(firstIndex: <Type usr=\"s:SS\">String</Type>, secondIndex: <Type usr=\"s:SS\">String</Type>, indices: <Type usr=\"s:SS\">String</Type>...) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4701
                }
              ],
              "key.bodylength": 401,
              "key.bodyoffset": 4803,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>firstIndex</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>secondIndex</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 497,
              "key.name": "subscript(_:_:_:)",
              "key.namelength": 70,
              "key.nameoffset": 4708,
              "key.offset": 4708,
              "key.parsed_declaration": "public subscript(firstIndex: String, secondIndex: String, indices: String...) -> ManyUntypedSeries",
              "key.parsed_scope.end": 170,
              "key.parsed_scope.start": 160,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC13UntypedSeriesVSgSScip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip\">subscript(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(String, String, String...) -> DataFrame.ManyUntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV17ManyUntypedSeriesVSS_S2SdtcD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcip"
            },
            {
              "key.annotated_decl": "<Declaration>var properties: [<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>properties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "properties",
              "key.namelength": 10,
              "key.nameoffset": 4812,
              "key.offset": 4808,
              "key.parsed_declaration": "var properties = [ColumnProperty]()",
              "key.parsed_scope.end": 162,
              "key.parsed_scope.start": 162,
              "key.typename": "[DataFrame.ColumnProperty]",
              "key.typeusr": "$sSay4main9DataFrameV14ColumnPropertyVGD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcig10propertiesL_SayAC14ColumnPropertyVGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let rowCount: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rowCount</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 65,
              "key.name": "rowCount",
              "key.namelength": 8,
              "key.nameoffset": 5042,
              "key.offset": 5038,
              "key.parsed_declaration": "let rowCount = ccv_cnnp_dataframe_row_count(_dataframe.dataframe)",
              "key.parsed_scope.end": 168,
              "key.parsed_scope.start": 168,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcig8rowCountL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript&lt;S&gt;(indices: <Type usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip1SL_xmfp\">S</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</Type> where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element == <Type usr=\"s:SS\">String</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5209
                }
              ],
              "key.bodylength": 263,
              "key.bodyoffset": 5299,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip1SL_xmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip1SL_xmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element == <ref.struct usr=\"s:SS\">String</ref.struct></decl.generic_type_requirement> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 347,
              "key.name": "subscript(_:)",
              "key.namelength": 34,
              "key.nameoffset": 5216,
              "key.offset": 5216,
              "key.parsed_declaration": "public subscript<S: Sequence>(indices: S) -> ManyUntypedSeries where S.Element == String",
              "key.parsed_scope.end": 177,
              "key.parsed_scope.start": 172,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC13UntypedSeriesVSgSScip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip\">subscript(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 5229
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 5226,
                  "key.offset": 5226,
                  "key.parsed_declaration": "public subscript<S: Sequence",
                  "key.parsed_scope.end": 172,
                  "key.parsed_scope.start": 172,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip1SL_xmfp"
                }
              ],
              "key.typename": "<S where S : Sequence, S.Element == String> (S) -> DataFrame.ManyUntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV17ManyUntypedSeriesVxcSTRzSS7ElementRtzluD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip"
            },
            {
              "key.annotated_decl": "<Declaration>let properties: [<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>properties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 54,
              "key.name": "properties",
              "key.namelength": 10,
              "key.nameoffset": 5308,
              "key.offset": 5304,
              "key.parsed_declaration": "let properties = indices.map { columnProperties[$0]! }",
              "key.parsed_scope.end": 173,
              "key.parsed_scope.start": 173,
              "key.typename": "[DataFrame.ColumnProperty]",
              "key.typeusr": "$sSay4main9DataFrameV14ColumnPropertyVGD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluig10propertiesL_SayAC14ColumnPropertyVGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let rowCount: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rowCount</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 65,
              "key.name": "rowCount",
              "key.namelength": 8,
              "key.nameoffset": 5400,
              "key.offset": 5396,
              "key.parsed_declaration": "let rowCount = ccv_cnnp_dataframe_row_count(_dataframe.dataframe)",
              "key.parsed_scope.end": 175,
              "key.parsed_scope.start": 175,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluig8rowCountL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(index: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type>? { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5567
                }
              ],
              "key.bodylength": 1184,
              "key.bodyoffset": 5618,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct>?</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 1229,
              "key.name": "subscript(_:)",
              "key.namelength": 24,
              "key.nameoffset": 5574,
              "key.offset": 5574,
              "key.parsed_declaration": "public subscript(index: String) -> UntypedSeries?",
              "key.parsed_scope.end": 209,
              "key.parsed_scope.start": 179,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip\">subscript(_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "(String) -> DataFrame.UntypedSeries?",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVSgSScD",
              "key.usr": "s:4main9DataFrameVyAC13UntypedSeriesVSgSScip"
            },
            {
              "key.annotated_decl": "<Declaration>let rowCount: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rowCount</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 65,
              "key.name": "rowCount",
              "key.namelength": 8,
              "key.nameoffset": 5730,
              "key.offset": 5726,
              "key.parsed_declaration": "let rowCount = ccv_cnnp_dataframe_row_count(_dataframe.dataframe)",
              "key.parsed_scope.end": 184,
              "key.parsed_scope.start": 184,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9DataFrameVyAC13UntypedSeriesVSgSScig8rowCountL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript&lt;Element&gt;(index: <Type usr=\"s:SS\">String</Type>, type: <Type usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp\">Element</Type>.Type = Element.self) -&gt; <Type usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</Type>&lt;<Type usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp\">Element</Type>&gt; { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6807
                }
              ],
              "key.bodylength": 217,
              "key.bodyoffset": 6916,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type> = Element.self</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 320,
              "key.name": "subscript(_:_:)",
              "key.namelength": 68,
              "key.nameoffset": 6814,
              "key.offset": 6814,
              "key.parsed_declaration": "public subscript<Element>(index: String, type: Element.Type = Element.self) -> TypedSeries<\n  Element\n>",
              "key.parsed_scope.end": 217,
              "key.parsed_scope.start": 211,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVSS_S2Sdtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC17ManyUntypedSeriesVxcSTRzSS7ElementRtzluip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameVyAC13UntypedSeriesVSgSScip\">subscript(_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 7,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 6824,
                  "key.offset": 6824,
                  "key.parsed_declaration": "public subscript<Element",
                  "key.parsed_scope.end": 211,
                  "key.parsed_scope.start": 211,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element> (String, Element.Type) -> DataFrame.TypedSeries<Element>",
              "key.typeusr": "$sy4main9DataFrameV11TypedSeriesVy_xGSS_xmtcluD",
              "key.usr": "s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluip"
            },
            {
              "key.annotated_decl": "<Declaration>let columnProperty: <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>columnProperty</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 45,
              "key.name": "columnProperty",
              "key.namelength": 14,
              "key.nameoffset": 6925,
              "key.offset": 6921,
              "key.parsed_declaration": "let columnProperty = columnProperties[index]!",
              "key.parsed_scope.end": 214,
              "key.parsed_scope.start": 214,
              "key.typename": "DataFrame.ColumnProperty",
              "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
              "key.usr": "s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluig14columnPropertyL_AC06ColumnG0Vvp"
            },
            {
              "key.annotated_decl": "<Declaration>let rowCount: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rowCount</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 65,
              "key.name": "rowCount",
              "key.namelength": 8,
              "key.nameoffset": 6975,
              "key.offset": 6971,
              "key.parsed_declaration": "let rowCount = ccv_cnnp_dataframe_row_count(_dataframe.dataframe)",
              "key.parsed_scope.end": 215,
              "key.parsed_scope.start": 215,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9DataFrameVyAC11TypedSeriesVy_xGSS_xmtcluig8rowCountL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7187
                }
              ],
              "key.bodylength": 31,
              "key.bodyoffset": 7210,
              "key.doc.column": 14,
              "key.doc.comment": "How many rows in the dataframe.",
              "key.doc.declaration": "public var count: Int { get }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"222\" column=\"14\"><Name>count</Name><USR>s:4main9DataFrameV5countSivp</USR><Declaration>public var count: Int { get }</Declaration><CommentParts><Abstract><Para>How many rows in the dataframe.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 222,
              "key.doc.name": "count",
              "key.doc.type": "Other",
              "key.doclength": 46,
              "key.docoffset": 7138,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 48,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 7198,
              "key.offset": 7194,
              "key.parsed_declaration": "public var count: Int",
              "key.parsed_scope.end": 224,
              "key.parsed_scope.start": 222,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main9DataFrameV5countSivp"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 747,
          "key.bodyoffset": 7267,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 769,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 7256,
          "key.offset": 7246,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 252,
          "key.parsed_scope.start": 227,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>final class _Iterator</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 7270
                }
              ],
              "key.bodylength": 719,
              "key.bodyoffset": 7293,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>_Iterator</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 737,
              "key.name": "_Iterator",
              "key.namelength": 9,
              "key.nameoffset": 7282,
              "key.offset": 7276,
              "key.parsed_declaration": "final class _Iterator",
              "key.parsed_scope.end": 251,
              "key.parsed_scope.start": 228,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let properties: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 7298
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>properties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 23,
                  "key.name": "properties",
                  "key.namelength": 10,
                  "key.nameoffset": 7310,
                  "key.offset": 7306,
                  "key.parsed_declaration": "private let properties: [Int32]",
                  "key.parsed_scope.end": 229,
                  "key.parsed_scope.start": 229,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC10properties33_BE3E946B4F69C7561ABEC49508EDD619LLSays5Int32VGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 7334
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 28,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 7346,
                  "key.offset": 7342,
                  "key.parsed_declaration": "private let dataframe: OpaquePointer",
                  "key.parsed_scope.end": 230,
                  "key.parsed_scope.start": 230,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC9dataframe33_BE3E946B4F69C7561ABEC49508EDD619LLs13OpaquePointerVvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private var _iterator: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 7375
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_iterator</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 29,
                  "key.name": "_iterator",
                  "key.namelength": 9,
                  "key.nameoffset": 7387,
                  "key.offset": 7383,
                  "key.parsed_declaration": "private var _iterator: OpaquePointer?",
                  "key.parsed_scope.end": 231,
                  "key.parsed_scope.start": 231,
                  "key.setter_accessibility": "source.lang.swift.accessibility.private",
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC9_iterator33_BE3E946B4F69C7561ABEC49508EDD619LLs13OpaquePointerVSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var iterator: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type> { get }</Declaration>",
                  "key.bodylength": 232,
                  "key.bodyoffset": 7446,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>iterator</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 262,
                  "key.name": "iterator",
                  "key.namelength": 8,
                  "key.nameoffset": 7421,
                  "key.offset": 7417,
                  "key.parsed_declaration": "var iterator: OpaquePointer",
                  "key.parsed_scope.end": 239,
                  "key.parsed_scope.start": 232,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC8iterators13OpaquePointerVvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(properties: [<Type usr=\"s:s5Int32V\">Int32</Type>], dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
                  "key.bodylength": 73,
                  "key.bodyoffset": 7737,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 127,
                  "key.name": "init(properties:dataframe:)",
                  "key.namelength": 51,
                  "key.nameoffset": 7684,
                  "key.offset": 7684,
                  "key.parsed_declaration": "init(properties: [Int32], dataframe: OpaquePointer)",
                  "key.parsed_scope.end": 243,
                  "key.parsed_scope.start": 240,
                  "key.substructure": [],
                  "key.typename": "(DataFrame._Iterator.Type) -> ([Int32], OpaquePointer) -> DataFrame._Iterator",
                  "key.typeusr": "$s10properties9dataframe4main9DataFrameV9_IteratorCSays5Int32VG_s13OpaquePointerVtcD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC10properties9dataframeAESays5Int32VG_s13OpaquePointerVtcfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>func setZero()</Declaration>",
                  "key.bodylength": 59,
                  "key.bodyoffset": 7832,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setZero</decl.name>()</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 76,
                  "key.name": "setZero()",
                  "key.namelength": 9,
                  "key.nameoffset": 7821,
                  "key.offset": 7816,
                  "key.parsed_declaration": "func setZero()",
                  "key.parsed_scope.end": 246,
                  "key.parsed_scope.start": 244,
                  "key.substructure": [],
                  "key.typename": "(DataFrame._Iterator) -> () -> ()",
                  "key.typeusr": "$syycD",
                  "key.usr": "s:4main9DataFrameV9_IteratorC7setZeroyyF"
                },
                {
                  "key.annotated_decl": "<Declaration>deinit</Declaration>",
                  "key.bodylength": 103,
                  "key.bodyoffset": 7905,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 112,
                  "key.name": "deinit",
                  "key.namelength": 6,
                  "key.nameoffset": 7897,
                  "key.offset": 7897,
                  "key.parsed_declaration": "deinit",
                  "key.parsed_scope.end": 250,
                  "key.parsed_scope.start": 247,
                  "key.substructure": [],
                  "key.typename": "(DataFrame._Iterator) -> () -> ()",
                  "key.typeusr": "$syycD",
                  "key.usr": "s:4main9DataFrameV9_IteratorCfd"
                }
              ],
              "key.typename": "DataFrame._Iterator.Type",
              "key.typeusr": "$s4main9DataFrameV9_IteratorCmD",
              "key.usr": "s:4main9DataFrameV9_IteratorC"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>enum UntypedSeriesAction</Declaration>",
          "key.bodylength": 493,
          "key.bodyoffset": 8043,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>UntypedSeriesAction</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 520,
          "key.name": "UntypedSeriesAction",
          "key.namelength": 19,
          "key.nameoffset": 8022,
          "key.offset": 8017,
          "key.parsed_declaration": "enum UntypedSeriesAction",
          "key.parsed_scope.end": 268,
          "key.parsed_scope.start": 254,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 13,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8058,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case iterator</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>iterator</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 8,
                  "key.name": "iterator",
                  "key.namelength": 8,
                  "key.nameoffset": 8063,
                  "key.offset": 8063,
                  "key.parsed_declaration": "case iterator",
                  "key.parsed_scope.end": 256,
                  "key.parsed_scope.start": 256,
                  "key.typename": "(UntypedSeriesAction.Type) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO8iteratoryA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 22,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8086,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case scalar(<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scalar</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 17,
                  "key.name": "scalar(_:)",
                  "key.namelength": 17,
                  "key.nameoffset": 8091,
                  "key.offset": 8091,
                  "key.parsed_declaration": "case scalar(AnyObject)",
                  "key.parsed_scope.end": 258,
                  "key.parsed_scope.start": 258,
                  "key.substructure": [],
                  "key.typename": "(UntypedSeriesAction.Type) -> (AnyObject) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOyXlcACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO6scalaryACyXlcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 45,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8111,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case sequence(<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</Type>&lt;[<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]&gt;)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sequence</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.class usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</ref.class>&lt;[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]&gt;</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 40,
                  "key.name": "sequence(_:)",
                  "key.namelength": 40,
                  "key.nameoffset": 8116,
                  "key.offset": 8116,
                  "key.parsed_declaration": "case sequence(DataFrame.Wrapped<[AnyObject]>)",
                  "key.parsed_scope.end": 259,
                  "key.parsed_scope.start": 259,
                  "key.substructure": [],
                  "key.typename": "(UntypedSeriesAction.Type) -> (DataFrame.Wrapped<[AnyObject]>) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOAA9DataFrameV7WrappedCy_SayyXlGGcACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO8sequenceyAcA9DataFrameV7WrappedCy_SayyXlGGcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 104,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8159,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case map(<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>map</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 99,
                  "key.name": "map(_:_:_:)",
                  "key.namelength": 99,
                  "key.nameoffset": 8164,
                  "key.offset": 8164,
                  "key.parsed_declaration": "case map(\n  DataFrame.ColumnProperty, (AnyObject) -> AnyObject, DataFrame.ColumnProperty.PropertyType)",
                  "key.parsed_scope.end": 260,
                  "key.parsed_scope.start": 260,
                  "key.substructure": [],
                  "key.typename": "(UntypedSeriesAction.Type) -> (DataFrame.ColumnProperty, @escaping (AnyObject) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOAA9DataFrameV14ColumnPropertyV_yXlyXlcAG0H4TypeOtcACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO3mapyAcA9DataFrameV14ColumnPropertyV_yXlyXlcAH0I4TypeOtcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 113,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8266,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case multimap([<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>multimap</decl.name>(<decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 108,
                  "key.name": "multimap(_:_:_:)",
                  "key.namelength": 108,
                  "key.nameoffset": 8271,
                  "key.offset": 8271,
                  "key.parsed_declaration": "case multimap(\n  [DataFrame.ColumnProperty], ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType)",
                  "key.parsed_scope.end": 262,
                  "key.parsed_scope.start": 262,
                  "key.substructure": [],
                  "key.typename": "(UntypedSeriesAction.Type) -> ([DataFrame.ColumnProperty], @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOSayAA9DataFrameV14ColumnPropertyVG_yXlSayyXlGcAG0H4TypeOtcACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO8multimapyACSayAA9DataFrameV14ColumnPropertyVG_yXlSayyXlGcAH0I4TypeOtcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 153,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 8382,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>case native(<Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, (<Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, <Type usr=\"s:SS\">String</Type>, <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>native</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 148,
                  "key.name": "native(_:_:_:)",
                  "key.namelength": 148,
                  "key.nameoffset": 8387,
                  "key.offset": 8387,
                  "key.parsed_declaration": "case native(\n  DataFrame.ColumnProperty,\n  (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty,\n  AnyObject?)",
                  "key.parsed_scope.end": 264,
                  "key.parsed_scope.start": 264,
                  "key.substructure": [],
                  "key.typename": "(UntypedSeriesAction.Type) -> (DataFrame.ColumnProperty, @escaping (OpaquePointer, DataFrame.ColumnProperty, String, AnyObject?) -> DataFrame.ColumnProperty, AnyObject?) -> UntypedSeriesAction",
                  "key.typeusr": "$sy4main19UntypedSeriesActionOAA9DataFrameV14ColumnPropertyV_AGs13OpaquePointerV_AGSSyXlSgtcAJtcACmcD",
                  "key.usr": "s:4main19UntypedSeriesActionO6nativeyAcA9DataFrameV14ColumnPropertyV_AHs13OpaquePointerV_AHSSyXlSgtcAKtcACmF"
                }
              ]
            }
          ],
          "key.typename": "UntypedSeriesAction.Type",
          "key.typeusr": "$s4main19UntypedSeriesActionOmD",
          "key.usr": "s:4main19UntypedSeriesActionO"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 2137,
          "key.bodyoffset": 8560,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2159,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 8549,
          "key.offset": 8539,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 351,
          "key.parsed_scope.start": 270,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct UntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8564
                }
              ],
              "key.bodylength": 2090,
              "key.bodyoffset": 8605,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 10,
                  "key.offset": 8593
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
              "key.inheritedtypes": [
                {
                  "key.name": "DataSeries"
                }
              ],
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 2125,
              "key.name": "UntypedSeries",
              "key.namelength": 13,
              "key.nameoffset": 8578,
              "key.offset": 8571,
              "key.parsed_declaration": "public struct UntypedSeries: DataSeries",
              "key.parsed_scope.end": 350,
              "key.parsed_scope.start": 272,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type>.Element</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 8611
                    }
                  ],
                  "key.doc.declaration": "associatedtype Element where Self.Element == Self.Iterator.Element",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Element</Name><USR>s:ST7ElementQa</USR><Declaration>associatedtype Element where Self.Element == Self.Iterator.Element</Declaration><CommentParts><Abstract><Para>A type representing the sequence’s elements.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Element",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct>.<decl.name>Element</decl.name></decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 29,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 8628,
                  "key.offset": 8618,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST7ElementQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Element = AnyObject",
                  "key.parsed_scope.end": 274,
                  "key.parsed_scope.start": 274,
                  "key.typename": "AnyObject.Protocol",
                  "key.typeusr": "$syXlmD",
                  "key.usr": "s:ST7ElementQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func makeIterator() -&gt; <Type usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</Type>&lt;<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type>&gt;</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 8653
                    }
                  ],
                  "key.bodylength": 159,
                  "key.bodyoffset": 8718,
                  "key.doc.declaration": "func makeIterator() -> Self.Iterator",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Function><Name>makeIterator()</Name><USR>s:ST12makeIterator0B0QzyF</USR><Declaration>func makeIterator() -&gt; Self.Iterator</Declaration><CommentParts><Abstract><Para>Returns an iterator over the elements of this sequence.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
                  "key.doc.name": "makeIterator()",
                  "key.doc.type": "Function",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>makeIterator</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</ref.struct>&lt;<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct>&gt;</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 218,
                  "key.name": "makeIterator()",
                  "key.namelength": 14,
                  "key.nameoffset": 8665,
                  "key.offset": 8660,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST12makeIterator0B0QzyF"
                    }
                  ],
                  "key.parsed_declaration": "public func makeIterator() -> DataSeriesIterator<UntypedSeries>",
                  "key.parsed_scope.end": 284,
                  "key.parsed_scope.start": 276,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.UntypedSeries) -> () -> DataSeriesIterator<DataFrame.UntypedSeries>",
                  "key.typeusr": "$s4main18DataSeriesIteratorVyAA0B5FrameV07UntypedC0VGycD",
                  "key.usr": "s:ST12makeIterator0B0QzyF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func prefetch(_ i: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 8884
                    }
                  ],
                  "key.bodylength": 188,
                  "key.bodyoffset": 8947,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prefetch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 245,
                  "key.name": "prefetch(_:streamContext:)",
                  "key.namelength": 49,
                  "key.nameoffset": 8896,
                  "key.offset": 8891,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP8prefetch_13streamContextySi_AA06StreamF0CSgtF"
                    }
                  ],
                  "key.parsed_declaration": "public func prefetch(_ i: Int, streamContext: StreamContext?)",
                  "key.parsed_scope.end": 293,
                  "key.parsed_scope.start": 286,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.UntypedSeries) -> (Int, StreamContext?) -> ()",
                  "key.typeusr": "$s_13streamContextySi_4main06StreamB0CSgtcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV8prefetch_13streamContextySi_AA06StreamH0CSgtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func next(_ streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 9142
                    }
                  ],
                  "key.bodylength": 691,
                  "key.bodyoffset": 9207,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>?</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 750,
                  "key.name": "next(_:)",
                  "key.namelength": 37,
                  "key.nameoffset": 9154,
                  "key.offset": 9149,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP4nexty7ElementQzSgAA13StreamContextCSgF"
                    }
                  ],
                  "key.parsed_declaration": "public func next(_ streamContext: StreamContext?) -> AnyObject?",
                  "key.parsed_scope.end": 317,
                  "key.parsed_scope.start": 295,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.UntypedSeries) -> (StreamContext?) -> AnyObject?",
                  "key.typeusr": "$syyXlSg4main13StreamContextCSgcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV4nextyyXlSgAA13StreamContextCSgF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var underestmiatedCount: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 9905
                    }
                  ],
                  "key.bodylength": 24,
                  "key.bodyoffset": 9942,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>underestmiatedCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 55,
                  "key.name": "underestmiatedCount",
                  "key.namelength": 19,
                  "key.nameoffset": 9916,
                  "key.offset": 9912,
                  "key.parsed_declaration": "public var underestmiatedCount: Int",
                  "key.parsed_scope.end": 321,
                  "key.parsed_scope.start": 319,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV19underestmiatedCountSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 9973
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "count",
                  "key.namelength": 5,
                  "key.nameoffset": 9984,
                  "key.offset": 9980,
                  "key.parsed_declaration": "public let count: Int",
                  "key.parsed_scope.end": 323,
                  "key.parsed_scope.start": 323,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV5countSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 29,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 10004,
                  "key.offset": 10000,
                  "key.parsed_declaration": "let property: ColumnProperty?",
                  "key.parsed_scope.end": 325,
                  "key.parsed_scope.start": 325,
                  "key.typename": "DataFrame.ColumnProperty?",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVSgD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV8propertyAC14ColumnPropertyVSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 26,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 10038,
                  "key.offset": 10034,
                  "key.parsed_declaration": "let dataframe: _DataFrame?",
                  "key.parsed_scope.end": 326,
                  "key.parsed_scope.start": 326,
                  "key.typename": "_DataFrame?",
                  "key.typeusr": "$s4main10_DataFrameCSgD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV9dataframeAA01_bC0CSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate let action: <Type usr=\"s:4main19UntypedSeriesActionO\">UntypedSeriesAction</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 10066
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>action</decl.name>: <decl.var.type><ref.enum usr=\"s:4main19UntypedSeriesActionO\">UntypedSeriesAction</ref.enum></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 31,
                  "key.name": "action",
                  "key.namelength": 6,
                  "key.nameoffset": 10082,
                  "key.offset": 10078,
                  "key.parsed_declaration": "fileprivate let action: UntypedSeriesAction",
                  "key.parsed_scope.end": 328,
                  "key.parsed_scope.start": 328,
                  "key.typename": "UntypedSeriesAction",
                  "key.typeusr": "$s4main19UntypedSeriesActionOD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV6action33_BE3E946B4F69C7561ABEC49508EDD619LLAA0dE6ActionOvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate let name: <Type usr=\"s:SS\">String</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 10114
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 17,
                  "key.name": "name",
                  "key.namelength": 4,
                  "key.nameoffset": 10130,
                  "key.offset": 10126,
                  "key.parsed_declaration": "fileprivate let name: String?",
                  "key.parsed_scope.end": 329,
                  "key.parsed_scope.start": 329,
                  "key.typename": "String?",
                  "key.typeusr": "$sSSSgD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV4name33_BE3E946B4F69C7561ABEC49508EDD619LLSSSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let iterator: <Type usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 10149
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>iterator</decl.name>: <decl.var.type><ref.class usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</ref.class>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 24,
                  "key.name": "iterator",
                  "key.namelength": 8,
                  "key.nameoffset": 10161,
                  "key.offset": 10157,
                  "key.parsed_declaration": "private let iterator: _Iterator?",
                  "key.parsed_scope.end": 331,
                  "key.parsed_scope.start": 331,
                  "key.typename": "DataFrame._Iterator?",
                  "key.typeusr": "$s4main9DataFrameV9_IteratorCSgD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV8iterator33_BE3E946B4F69C7561ABEC49508EDD619LLAC9_IteratorCSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate init(count: <Type usr=\"s:Si\">Int</Type>, name: <Type usr=\"s:SS\">String</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 10187
                    }
                  ],
                  "key.bodylength": 238,
                  "key.bodyoffset": 10280,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 320,
                  "key.name": "init(count:name:property:dataframe:)",
                  "key.namelength": 79,
                  "key.nameoffset": 10199,
                  "key.offset": 10199,
                  "key.parsed_declaration": "fileprivate init(count: Int, name: String, property: ColumnProperty, dataframe: _DataFrame)",
                  "key.parsed_scope.end": 340,
                  "key.parsed_scope.start": 333,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesVyAeA0dE6ActionOcfc\">init(_:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DataFrame.UntypedSeries.Type) -> (Int, String, DataFrame.ColumnProperty, _DataFrame) -> DataFrame.UntypedSeries",
                  "key.typeusr": "$s5count4name8property9dataframe4main9DataFrameV13UntypedSeriesVSi_SSAG14ColumnPropertyVAE01_fG0CtcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV5count4name8property9dataframeAESi_SSAC14ColumnPropertyVAA01_bC0Ctc33_BE3E946B4F69C7561ABEC49508EDD619Llfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(_ action: <Type usr=\"s:4main19UntypedSeriesActionO\">UntypedSeriesAction</Type>)</Declaration>",
                  "key.bodylength": 129,
                  "key.bodyoffset": 10562,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>action</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main19UntypedSeriesActionO\">UntypedSeriesAction</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 167,
                  "key.name": "init(_:)",
                  "key.namelength": 35,
                  "key.nameoffset": 10525,
                  "key.offset": 10525,
                  "key.parsed_declaration": "init(_ action: UntypedSeriesAction)",
                  "key.parsed_scope.end": 349,
                  "key.parsed_scope.start": 342,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesV5count4name8property9dataframeAESi_SSAC14ColumnPropertyVAA01_bC0Ctc33_BE3E946B4F69C7561ABEC49508EDD619Llfc\">init(count:name:property:dataframe:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DataFrame.UntypedSeries.Type) -> (UntypedSeriesAction) -> DataFrame.UntypedSeries",
                  "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVAA0dE6ActionOcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesVyAeA0dE6ActionOcfc"
                }
              ],
              "key.typename": "DataFrame.UntypedSeries.Type",
              "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1820,
          "key.bodyoffset": 10721,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1842,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 10710,
          "key.offset": 10700,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 410,
          "key.parsed_scope.start": 353,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct ManyUntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10724
                }
              ],
              "key.bodylength": 1770,
              "key.bodyoffset": 10769,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 10,
                  "key.offset": 10757
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
              "key.inheritedtypes": [
                {
                  "key.name": "DataSeries"
                }
              ],
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 1809,
              "key.name": "ManyUntypedSeries",
              "key.namelength": 17,
              "key.nameoffset": 10738,
              "key.offset": 10731,
              "key.parsed_declaration": "public struct ManyUntypedSeries: DataSeries",
              "key.parsed_scope.end": 409,
              "key.parsed_scope.start": 354,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</Type>.Element = [<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 10775
                    }
                  ],
                  "key.doc.declaration": "associatedtype Element where Self.Element == Self.Iterator.Element",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Element</Name><USR>s:ST7ElementQa</USR><Declaration>associatedtype Element where Self.Element == Self.Iterator.Element</Declaration><CommentParts><Abstract><Para>A type representing the sequence’s elements.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Element",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</ref.struct>.<decl.name>Element</decl.name> = [<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 31,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 10792,
                  "key.offset": 10782,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST7ElementQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Element = [AnyObject]",
                  "key.parsed_scope.end": 356,
                  "key.parsed_scope.start": 356,
                  "key.typename": "[AnyObject].Type",
                  "key.typeusr": "$sSayyXlGmD",
                  "key.usr": "s:ST7ElementQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func makeIterator() -&gt; <Type usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</Type>&lt;<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</Type>&gt;</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 10819
                    }
                  ],
                  "key.bodylength": 68,
                  "key.bodyoffset": 10888,
                  "key.doc.declaration": "func makeIterator() -> Self.Iterator",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Function><Name>makeIterator()</Name><USR>s:ST12makeIterator0B0QzyF</USR><Declaration>func makeIterator() -&gt; Self.Iterator</Declaration><CommentParts><Abstract><Para>Returns an iterator over the elements of this sequence.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
                  "key.doc.name": "makeIterator()",
                  "key.doc.type": "Function",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>makeIterator</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</ref.struct>&lt;<ref.struct usr=\"s:4main9DataFrameV17ManyUntypedSeriesV\">ManyUntypedSeries</ref.struct>&gt;</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 131,
                  "key.name": "makeIterator()",
                  "key.namelength": 14,
                  "key.nameoffset": 10831,
                  "key.offset": 10826,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST12makeIterator0B0QzyF"
                    }
                  ],
                  "key.parsed_declaration": "public func makeIterator() -> DataSeriesIterator<ManyUntypedSeries>",
                  "key.parsed_scope.end": 361,
                  "key.parsed_scope.start": 358,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.ManyUntypedSeries) -> () -> DataSeriesIterator<DataFrame.ManyUntypedSeries>",
                  "key.typeusr": "$s4main18DataSeriesIteratorVyAA0B5FrameV011ManyUntypedC0VGycD",
                  "key.usr": "s:ST12makeIterator0B0QzyF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func prefetch(_ i: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 10963
                    }
                  ],
                  "key.bodylength": 97,
                  "key.bodyoffset": 11026,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prefetch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 154,
                  "key.name": "prefetch(_:streamContext:)",
                  "key.namelength": 49,
                  "key.nameoffset": 10975,
                  "key.offset": 10970,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP8prefetch_13streamContextySi_AA06StreamF0CSgtF"
                    }
                  ],
                  "key.parsed_declaration": "public func prefetch(_ i: Int, streamContext: StreamContext?)",
                  "key.parsed_scope.end": 365,
                  "key.parsed_scope.start": 363,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.ManyUntypedSeries) -> (Int, StreamContext?) -> ()",
                  "key.typeusr": "$s_13streamContextySi_4main06StreamB0CSgtcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV8prefetch_13streamContextySi_AA06StreamI0CSgtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func next(_ streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 11130
                    }
                  ],
                  "key.bodylength": 834,
                  "key.bodyoffset": 11197,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]?</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 895,
                  "key.name": "next(_:)",
                  "key.namelength": 37,
                  "key.nameoffset": 11142,
                  "key.offset": 11137,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP4nexty7ElementQzSgAA13StreamContextCSgF"
                    }
                  ],
                  "key.parsed_declaration": "public func next(_ streamContext: StreamContext?) -> [AnyObject]?",
                  "key.parsed_scope.end": 389,
                  "key.parsed_scope.start": 367,
                  "key.substructure": [
                    {
                      "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 28,
                      "key.name": "count",
                      "key.namelength": 5,
                      "key.nameoffset": 11208,
                      "key.offset": 11204,
                      "key.parsed_declaration": "let count = properties.count",
                      "key.parsed_scope.end": 368,
                      "key.parsed_scope.start": 368,
                      "key.related_decls": [
                        {
                          "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV5countSivp\">count</RelatedName>"
                        }
                      ],
                      "key.typename": "Int",
                      "key.typeusr": "$sSiD",
                      "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV4nextySayyXlGSgAA13StreamContextCSgF5countL_Sivp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>let data: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type>?&gt;</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct>?&gt;</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 83,
                      "key.name": "data",
                      "key.namelength": 4,
                      "key.nameoffset": 11243,
                      "key.offset": 11239,
                      "key.parsed_declaration": "let data = UnsafeMutablePointer<UnsafeMutableRawPointer?>.allocate(capacity: count)",
                      "key.parsed_scope.end": 369,
                      "key.parsed_scope.start": 369,
                      "key.typename": "UnsafeMutablePointer<UnsafeMutableRawPointer?>",
                      "key.typeusr": "$sSpySvSgGD",
                      "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV4nextySayyXlGSgAA13StreamContextCSgF4dataL_SpySvSgGvp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>let retval: &lt;&lt;error type&gt;&gt;</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retval</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 113,
                      "key.name": "retval",
                      "key.namelength": 6,
                      "key.nameoffset": 11333,
                      "key.offset": 11329,
                      "key.parsed_declaration": "let retval = ccv_cnnp_dataframe_iter_next(\n  iterator.iterator, data, Int32(count), streamContext?._stream)",
                      "key.parsed_scope.end": 370,
                      "key.parsed_scope.start": 370,
                      "key.typename": "<<error type>>",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV4nextySayyXlGSgAA13StreamContextCSgF6retvalL_Xevp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>var columnData: [<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>columnData</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 30,
                      "key.name": "columnData",
                      "key.namelength": 10,
                      "key.nameoffset": 11497,
                      "key.offset": 11493,
                      "key.parsed_declaration": "var columnData = [AnyObject]()",
                      "key.parsed_scope.end": 373,
                      "key.parsed_scope.start": 373,
                      "key.typename": "[AnyObject]",
                      "key.typeusr": "$sSayyXlGD",
                      "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV4nextySayyXlGSgAA13StreamContextCSgF06columnB0L_AGvp"
                    }
                  ],
                  "key.typename": "(DataFrame.ManyUntypedSeries) -> (StreamContext?) -> [AnyObject]?",
                  "key.typeusr": "$sySayyXlGSg4main13StreamContextCSgcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV4nextySayyXlGSgAA13StreamContextCSgF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var underestmiatedCount: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12038
                    }
                  ],
                  "key.bodylength": 24,
                  "key.bodyoffset": 12075,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>underestmiatedCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 55,
                  "key.name": "underestmiatedCount",
                  "key.namelength": 19,
                  "key.nameoffset": 12049,
                  "key.offset": 12045,
                  "key.parsed_declaration": "public var underestmiatedCount: Int",
                  "key.parsed_scope.end": 393,
                  "key.parsed_scope.start": 391,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV19underestmiatedCountSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12106
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "count",
                  "key.namelength": 5,
                  "key.nameoffset": 12117,
                  "key.offset": 12113,
                  "key.parsed_declaration": "public let count: Int",
                  "key.parsed_scope.end": 395,
                  "key.parsed_scope.start": 395,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5countSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>properties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 32,
                  "key.name": "properties",
                  "key.namelength": 10,
                  "key.nameoffset": 12137,
                  "key.offset": 12133,
                  "key.parsed_declaration": "let properties: [ColumnProperty]",
                  "key.parsed_scope.end": 397,
                  "key.parsed_scope.start": 397,
                  "key.typename": "[DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSay4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV10propertiesSayAC14ColumnPropertyVGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 25,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 12174,
                  "key.offset": 12170,
                  "key.parsed_declaration": "let dataframe: _DataFrame",
                  "key.parsed_scope.end": 398,
                  "key.parsed_scope.start": 398,
                  "key.typename": "_DataFrame",
                  "key.typeusr": "$s4main10_DataFrameCD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV9dataframeAA01_bC0Cvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let iterator: <Type usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 12201
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>iterator</decl.name>: <decl.var.type><ref.class usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 23,
                  "key.name": "iterator",
                  "key.namelength": 8,
                  "key.nameoffset": 12213,
                  "key.offset": 12209,
                  "key.parsed_declaration": "private let iterator: _Iterator",
                  "key.parsed_scope.end": 400,
                  "key.parsed_scope.start": 400,
                  "key.typename": "DataFrame._Iterator",
                  "key.typeusr": "$s4main9DataFrameV9_IteratorCD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV8iterator33_BE3E946B4F69C7561ABEC49508EDD619LLAC9_IteratorCvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate init(count: <Type usr=\"s:Si\">Int</Type>, properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 12238
                    }
                  ],
                  "key.bodylength": 214,
                  "key.bodyoffset": 12321,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 286,
                  "key.name": "init(count:properties:dataframe:)",
                  "key.namelength": 69,
                  "key.nameoffset": 12250,
                  "key.offset": 12250,
                  "key.parsed_declaration": "fileprivate init(count: Int, properties: [ColumnProperty], dataframe: _DataFrame)",
                  "key.parsed_scope.end": 408,
                  "key.parsed_scope.start": 402,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.ManyUntypedSeries.Type) -> (Int, [DataFrame.ColumnProperty], _DataFrame) -> DataFrame.ManyUntypedSeries",
                  "key.typeusr": "$s5count10properties9dataframe4main9DataFrameV17ManyUntypedSeriesVSi_SayAF14ColumnPropertyVGAD01_eF0CtcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV5count10properties9dataframeAESi_SayAC14ColumnPropertyVGAA01_bC0Ctc33_BE3E946B4F69C7561ABEC49508EDD619Llfc"
                }
              ],
              "key.typename": "DataFrame.ManyUntypedSeries.Type",
              "key.typeusr": "$s4main9DataFrameV17ManyUntypedSeriesVmD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1511,
          "key.bodyoffset": 12565,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1533,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 12554,
          "key.offset": 12544,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 462,
          "key.parsed_scope.start": 412,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12568
                }
              ],
              "key.bodylength": 1458,
              "key.bodyoffset": 12616,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 10,
                  "key.offset": 12604
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
              "key.inheritedtypes": [
                {
                  "key.name": "DataSeries"
                }
              ],
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 1500,
              "key.name": "TypedSeries",
              "key.namelength": 11,
              "key.nameoffset": 12582,
              "key.offset": 12575,
              "key.parsed_declaration": "public struct TypedSeries<Element>: DataSeries",
              "key.parsed_scope.end": 461,
              "key.parsed_scope.start": 413,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 7,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 12594,
                  "key.offset": 12594,
                  "key.parsed_declaration": "public struct TypedSeries<Element",
                  "key.parsed_scope.end": 413,
                  "key.parsed_scope.start": 413,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV7Elementxmfp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</Type>&lt;Element&gt;.Element = <Type usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12622
                    }
                  ],
                  "key.doc.declaration": "associatedtype Element where Self.Element == Self.Iterator.Element",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Element</Name><USR>s:ST7ElementQa</USR><Declaration>associatedtype Element where Self.Element == Self.Iterator.Element</Declaration><CommentParts><Abstract><Para>A type representing the sequence’s elements.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Element",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</ref.struct>&lt;Element&gt;.<decl.name>Element</decl.name> = <ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</ref.generic_type_param></decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 27,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 12639,
                  "key.offset": 12629,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST7ElementQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Element = Element",
                  "key.parsed_scope.end": 415,
                  "key.parsed_scope.start": 415,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</RelatedName>"
                    }
                  ],
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:ST7ElementQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func makeIterator() -&gt; <Type usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</Type>&lt;<Type usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</Type>&gt;</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12662
                    }
                  ],
                  "key.bodylength": 68,
                  "key.bodyoffset": 12725,
                  "key.doc.declaration": "func makeIterator() -> Self.Iterator",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Function><Name>makeIterator()</Name><USR>s:ST12makeIterator0B0QzyF</USR><Declaration>func makeIterator() -&gt; Self.Iterator</Declaration><CommentParts><Abstract><Para>Returns an iterator over the elements of this sequence.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
                  "key.doc.name": "makeIterator()",
                  "key.doc.type": "Function",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>makeIterator</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:4main18DataSeriesIteratorV\">DataSeriesIterator</ref.struct>&lt;<ref.struct usr=\"s:4main9DataFrameV11TypedSeriesV\">TypedSeries</ref.struct>&gt;</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 125,
                  "key.name": "makeIterator()",
                  "key.namelength": 14,
                  "key.nameoffset": 12674,
                  "key.offset": 12669,
                  "key.overrides": [
                    {
                      "key.usr": "s:ST12makeIterator0B0QzyF"
                    }
                  ],
                  "key.parsed_declaration": "public func makeIterator() -> DataSeriesIterator<TypedSeries>",
                  "key.parsed_scope.end": 420,
                  "key.parsed_scope.start": 417,
                  "key.substructure": [],
                  "key.typename": "<Element> (DataFrame.TypedSeries<Element>) -> () -> DataSeriesIterator<DataFrame.TypedSeries<Element>>",
                  "key.typeusr": "$s4main18DataSeriesIteratorVyAA0B5FrameV05TypedC0Vy_xGGycD",
                  "key.usr": "s:ST12makeIterator0B0QzyF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func prefetch(_ i: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12800
                    }
                  ],
                  "key.bodylength": 97,
                  "key.bodyoffset": 12863,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prefetch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 154,
                  "key.name": "prefetch(_:streamContext:)",
                  "key.namelength": 49,
                  "key.nameoffset": 12812,
                  "key.offset": 12807,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP8prefetch_13streamContextySi_AA06StreamF0CSgtF"
                    }
                  ],
                  "key.parsed_declaration": "public func prefetch(_ i: Int, streamContext: StreamContext?)",
                  "key.parsed_scope.end": 424,
                  "key.parsed_scope.start": 422,
                  "key.substructure": [],
                  "key.typename": "<Element> (DataFrame.TypedSeries<Element>) -> (Int, StreamContext?) -> ()",
                  "key.typeusr": "$s_13streamContextySi_4main06StreamB0CSgtcD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV8prefetch_13streamContextySi_AA06StreamH0CSgtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func next(_ streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; <Type usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 12967
                    }
                  ],
                  "key.bodylength": 568,
                  "key.bodyoffset": 13030,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>next</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 625,
                  "key.name": "next(_:)",
                  "key.namelength": 37,
                  "key.nameoffset": 12979,
                  "key.offset": 12974,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main10DataSeriesP4nexty7ElementQzSgAA13StreamContextCSgF"
                    }
                  ],
                  "key.parsed_declaration": "public func next(_ streamContext: StreamContext?) -> Element?",
                  "key.parsed_scope.end": 442,
                  "key.parsed_scope.start": 426,
                  "key.substructure": [
                    {
                      "key.annotated_decl": "<Declaration>var data: <Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type>?</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct>?</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 40,
                      "key.name": "data",
                      "key.namelength": 4,
                      "key.nameoffset": 13041,
                      "key.offset": 13037,
                      "key.parsed_declaration": "var data: UnsafeMutableRawPointer? = nil",
                      "key.parsed_scope.end": 427,
                      "key.parsed_scope.start": 427,
                      "key.typename": "UnsafeMutableRawPointer?",
                      "key.typeusr": "$sSvSgD",
                      "key.usr": "s:4main9DataFrameV11TypedSeriesV4nextyxSgAA13StreamContextCSgF4dataL_SvSgvp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>let retval: &lt;&lt;error type&gt;&gt;</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retval</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 94,
                      "key.name": "retval",
                      "key.namelength": 6,
                      "key.nameoffset": 13088,
                      "key.offset": 13084,
                      "key.parsed_declaration": "let retval = ccv_cnnp_dataframe_iter_next(iterator.iterator, &data, 1, streamContext?._stream)",
                      "key.parsed_scope.end": 428,
                      "key.parsed_scope.start": 428,
                      "key.typename": "<<error type>>",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main9DataFrameV11TypedSeriesV4nextyxSgAA13StreamContextCSgF6retvalL_Xevp"
                    }
                  ],
                  "key.typename": "<Element> (DataFrame.TypedSeries<Element>) -> (StreamContext?) -> Element?",
                  "key.typeusr": "$syxSg4main13StreamContextCSgcD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV4nextyxSgAA13StreamContextCSgF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var underestmiatedCount: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 13605
                    }
                  ],
                  "key.bodylength": 24,
                  "key.bodyoffset": 13642,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>underestmiatedCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 55,
                  "key.name": "underestmiatedCount",
                  "key.namelength": 19,
                  "key.nameoffset": 13616,
                  "key.offset": 13612,
                  "key.parsed_declaration": "public var underestmiatedCount: Int",
                  "key.parsed_scope.end": 446,
                  "key.parsed_scope.start": 444,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV19underestmiatedCountSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 13673
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "count",
                  "key.namelength": 5,
                  "key.nameoffset": 13684,
                  "key.offset": 13680,
                  "key.parsed_declaration": "public let count: Int",
                  "key.parsed_scope.end": 448,
                  "key.parsed_scope.start": 448,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV5countSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 28,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 13704,
                  "key.offset": 13700,
                  "key.parsed_declaration": "let property: ColumnProperty",
                  "key.parsed_scope.end": 450,
                  "key.parsed_scope.start": 450,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV8propertyAC14ColumnPropertyVvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 25,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 13737,
                  "key.offset": 13733,
                  "key.parsed_declaration": "let dataframe: _DataFrame",
                  "key.parsed_scope.end": 451,
                  "key.parsed_scope.start": 451,
                  "key.typename": "_DataFrame",
                  "key.typeusr": "$s4main10_DataFrameCD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV9dataframeAA01_bC0Cvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let iterator: <Type usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 13764
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>iterator</decl.name>: <decl.var.type><ref.class usr=\"s:4main9DataFrameV9_IteratorC\">_Iterator</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 23,
                  "key.name": "iterator",
                  "key.namelength": 8,
                  "key.nameoffset": 13776,
                  "key.offset": 13772,
                  "key.parsed_declaration": "private let iterator: _Iterator",
                  "key.parsed_scope.end": 453,
                  "key.parsed_scope.start": 453,
                  "key.typename": "DataFrame._Iterator",
                  "key.typeusr": "$s4main9DataFrameV9_IteratorCD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV8iterator33_BE3E946B4F69C7561ABEC49508EDD619LLAC9_IteratorCvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate init(count: <Type usr=\"s:Si\">Int</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, dataframe: <Type usr=\"s:4main10_DataFrameC\">_DataFrame</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 13801
                    }
                  ],
                  "key.bodylength": 190,
                  "key.bodyoffset": 13880,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataframe</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main10_DataFrameC\">_DataFrame</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 258,
                  "key.name": "init(count:property:dataframe:)",
                  "key.namelength": 65,
                  "key.nameoffset": 13813,
                  "key.offset": 13813,
                  "key.parsed_declaration": "fileprivate init(count: Int, property: ColumnProperty, dataframe: _DataFrame)",
                  "key.parsed_scope.end": 460,
                  "key.parsed_scope.start": 455,
                  "key.substructure": [],
                  "key.typename": "<Element> (DataFrame.TypedSeries<Element>.Type) -> (Int, DataFrame.ColumnProperty, _DataFrame) -> DataFrame.TypedSeries<Element>",
                  "key.typeusr": "$s5count8property9dataframe4main9DataFrameV11TypedSeriesVy_xGSi_AF14ColumnPropertyVAD01_eF0CtcD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV5count8property9dataframeAEy_xGSi_AC14ColumnPropertyVAA01_bC0Ctc33_BE3E946B4F69C7561ABEC49508EDD619Llfc"
                }
              ],
              "key.typename": "DataFrame.TypedSeries<Element>.Type",
              "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesV"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.bodylength": 155,
          "key.bodyoffset": 14140,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 191,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 14115,
          "key.offset": 14105,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 470,
          "key.parsed_scope.start": 466,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func from(_ scalar: Any) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14143
                }
              ],
              "key.bodylength": 83,
              "key.bodyoffset": 14210,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>from</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>scalar</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 144,
              "key.name": "from(_:)",
              "key.namelength": 19,
              "key.nameoffset": 14162,
              "key.offset": 14150,
              "key.parsed_declaration": "public static func from(_ scalar: Any) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 469,
              "key.parsed_scope.start": 467,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ\">from&lt;S&gt;(_: S) -&gt; DataFrame.UntypedSeries where S : Sequence</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(DataFrame.UntypedSeries.Type) -> (Any) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVypcD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV4fromyAEypFZ"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 1380,
          "key.bodyoffset": 14319,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1402,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 14308,
          "key.offset": 14298,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 506,
          "key.parsed_scope.start": 472,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private mutating func add(from scalar: <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, name: <Type usr=\"s:SS\">String</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 14330
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 14322
                }
              ],
              "key.bodylength": 1310,
              "key.bodyoffset": 14387,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>scalar</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1359,
              "key.name": "add(from:name:)",
              "key.namelength": 41,
              "key.nameoffset": 14344,
              "key.offset": 14339,
              "key.parsed_declaration": "private mutating func add(from scalar: AnyObject, name: String)",
              "key.parsed_scope.end": 505,
              "key.parsed_scope.start": 473,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF\">add(from: Wrapped&lt;[AnyObject]&gt;, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ\">add(to:map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF\">add(map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ\">add(to:multimap:properties:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF\">add(multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 14396,
                  "key.offset": 14392,
                  "key.parsed_declaration": "let dataframe = _dataframe.dataframe",
                  "key.parsed_scope.end": 474,
                  "key.parsed_scope.start": 474,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF9dataframeL_s13OpaquePointerVvp"
                }
              ],
              "key.typename": "(inout DataFrame) -> (AnyObject, String) -> ()",
              "key.typeusr": "$s4from4nameyyXl_SStcD",
              "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.bodylength": 239,
          "key.bodyoffset": 15765,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 275,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 15740,
          "key.offset": 15730,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 515,
          "key.parsed_scope.start": 510,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func from&lt;S&gt;(_ sequence: <Type usr=\"s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ1SL_xmfp\">S</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type> where S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15822
                }
              ],
              "key.bodylength": 100,
              "key.bodyoffset": 15902,
              "key.doc.column": 22,
              "key.doc.comment": "Create a new column from a sequence of objects.",
              "key.doc.declaration": "public static func from<S>(_ sequence: S) -> DataFrame.UntypedSeries where S : Sequence",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"512\" column=\"22\"><Name>from(_:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ</USR><Declaration>public static func from&lt;S&gt;(_ sequence: S) -&gt; DataFrame.UntypedSeries where S : Sequence</Declaration><CommentParts><Abstract><Para>Create a new column from a sequence of objects.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 512,
              "key.doc.name": "from(_:)",
              "key.doc.type": "Function",
              "key.doclength": 52,
              "key.docoffset": 15768,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>from</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ1SL_xmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ1SL_xmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 174,
              "key.name": "from(_:)",
              "key.namelength": 32,
              "key.nameoffset": 15841,
              "key.offset": 15829,
              "key.parsed_declaration": "public static func from<S: Sequence>(_ sequence: S) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 514,
              "key.parsed_scope.start": 512,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV13UntypedSeriesV4fromyAEypFZ\">from(_: Any) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 15849
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 15846,
                  "key.offset": 15846,
                  "key.parsed_declaration": "public static func from<S: Sequence",
                  "key.parsed_scope.end": 512,
                  "key.parsed_scope.start": 512,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ1SL_xmfp"
                }
              ],
              "key.typename": "<S where S : Sequence> (DataFrame.UntypedSeries.Type) -> (S) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVxcSTRzluD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV4fromyAExSTRzlFZ"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 2363,
          "key.bodyoffset": 16028,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2385,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 16017,
          "key.offset": 16007,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 572,
          "key.parsed_scope.start": 517,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private mutating func add(from sequence: <Type usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</Type>&lt;[<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]&gt;, name: <Type usr=\"s:SS\">String</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 16039
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 16031
                }
              ],
              "key.bodylength": 2280,
              "key.bodyoffset": 16109,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main9DataFrameV7WrappedC\">Wrapped</ref.class>&lt;[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 2342,
              "key.name": "add(from:name:)",
              "key.namelength": 54,
              "key.nameoffset": 16053,
              "key.offset": 16048,
              "key.parsed_declaration": "private mutating func add(from sequence: Wrapped<[AnyObject]>, name: String)",
              "key.parsed_scope.end": 571,
              "key.parsed_scope.start": 518,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF\">add(from: AnyObject, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ\">add(to:map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF\">add(map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ\">add(to:multimap:properties:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF\">add(multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataframe</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "dataframe",
                  "key.namelength": 9,
                  "key.nameoffset": 16160,
                  "key.offset": 16156,
                  "key.parsed_declaration": "let dataframe = _dataframe.dataframe",
                  "key.parsed_scope.end": 520,
                  "key.parsed_scope.start": 520,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF9dataframeL_s13OpaquePointerVvp"
                }
              ],
              "key.typename": "(inout DataFrame) -> (DataFrame.Wrapped<[AnyObject]>, String) -> ()",
              "key.typeusr": "$s4from4namey4main9DataFrameV7WrappedCy_SayyXlGG_SStcD",
              "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct UntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.bodylength": 681,
          "key.bodyoffset": 18429,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 717,
          "key.name": "DataFrame.UntypedSeries",
          "key.namelength": 23,
          "key.nameoffset": 18404,
          "key.offset": 18394,
          "key.parsed_declaration": "extension DataFrame.UntypedSeries",
          "key.parsed_scope.end": 588,
          "key.parsed_scope.start": 574,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;T, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1UL_q_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 18514
                }
              ],
              "key.bodylength": 514,
              "key.bodyoffset": 18594,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on an existing column.",
              "key.doc.declaration": "public func map<T, U>(_ mapper: @escaping (T) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"576\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF</USR><Declaration>public func map&lt;T, U&gt;(_ mapper: @escaping (T) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on an existing column.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 576,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 80,
              "key.docoffset": 18432,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 588,
              "key.name": "map(_:)",
              "key.namelength": 39,
              "key.nameoffset": 18526,
              "key.offset": 18521,
              "key.parsed_declaration": "public func map<T, U>(_ mapper: @escaping (T) -> U) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 587,
              "key.parsed_scope.start": 576,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 18530,
                  "key.offset": 18530,
                  "key.parsed_declaration": "public func map<T",
                  "key.parsed_scope.end": 576,
                  "key.parsed_scope.start": 576,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 18533,
                  "key.offset": 18533,
                  "key.parsed_declaration": "public func map<T, U",
                  "key.parsed_scope.end": 576,
                  "key.parsed_scope.start": 576,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 18603,
                  "key.offset": 18599,
                  "key.parsed_declaration": "let wrappedMapper = { (obj: AnyObject) -> AnyObject in\n  return mapper(obj as! T) as AnyObject\n}",
                  "key.parsed_scope.end": 577,
                  "key.parsed_scope.start": 577,
                  "key.typename": "(AnyObject) -> AnyObject",
                  "key.typeusr": "$syyXlyXlcD",
                  "key.usr": "s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF13wrappedMapperL_yyXlyXlcvp"
                }
              ],
              "key.typename": "<T, U> (DataFrame.UntypedSeries) -> (@escaping (T) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq_xccr0_luD",
              "key.usr": "s:4main9DataFrameV13UntypedSeriesV3mapyAEq_xcr0_lF"
            }
          ],
          "key.typename": "DataFrame.UntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV13UntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV13UntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct TypedSeries&lt;Element&gt; : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.bodylength": 688,
          "key.bodyoffset": 19146,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>TypedSeries</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 722,
          "key.name": "DataFrame.TypedSeries",
          "key.namelength": 21,
          "key.nameoffset": 19123,
          "key.offset": 19113,
          "key.parsed_declaration": "extension DataFrame.TypedSeries",
          "key.parsed_scope.end": 604,
          "key.parsed_scope.start": 590,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</Type>) -&gt; <Type usr=\"s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF1UL_qd__mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19231
                }
              ],
              "key.bodylength": 518,
              "key.bodyoffset": 19314,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on an existing column.",
              "key.doc.declaration": "public func map<U>(_ mapper: @escaping (Element) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"592\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF</USR><Declaration>public func map&lt;U&gt;(_ mapper: @escaping (Element) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on an existing column.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 592,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 80,
              "key.docoffset": 19149,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF1UL_qd__mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF1UL_qd__mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 595,
              "key.name": "map(_:)",
              "key.namelength": 42,
              "key.nameoffset": 19243,
              "key.offset": 19238,
              "key.parsed_declaration": "public func map<U>(_ mapper: @escaping (Element) -> U) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 603,
              "key.parsed_scope.start": 592,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 19247,
                  "key.offset": 19247,
                  "key.parsed_declaration": "public func map<U",
                  "key.parsed_scope.end": 592,
                  "key.parsed_scope.start": 592,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF1UL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 110,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 19323,
                  "key.offset": 19319,
                  "key.parsed_declaration": "let wrappedMapper = { (obj: AnyObject) -> AnyObject in\n  return mapper(obj as! Element) as AnyObject\n}",
                  "key.parsed_scope.end": 593,
                  "key.parsed_scope.start": 593,
                  "key.typename": "(AnyObject) -> AnyObject",
                  "key.typeusr": "$syyXlyXlcD",
                  "key.usr": "s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF13wrappedMapperL_yyXlyXlcvp"
                }
              ],
              "key.typename": "<Element, U> (DataFrame.TypedSeries<Element>) -> (@escaping (Element) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVqd__xccluD",
              "key.usr": "s:4main9DataFrameV11TypedSeriesV3mapyAC07UntypedE0Vqd__xclF"
            }
          ],
          "key.typename": "DataFrame.TypedSeries<Element>.Type",
          "key.typeusr": "$s4main9DataFrameV11TypedSeriesVy_xGmD",
          "key.usr": "s:4main9DataFrameV11TypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 3300,
          "key.bodyoffset": 19858,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 3322,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 19847,
          "key.offset": 19837,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 691,
          "key.parsed_scope.start": 606,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private final class WrappedMapper</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 19869
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 19861
                }
              ],
              "key.bodylength": 554,
              "key.bodyoffset": 19896,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>WrappedMapper</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 576,
              "key.name": "WrappedMapper",
              "key.namelength": 13,
              "key.nameoffset": 19881,
              "key.offset": 19875,
              "key.parsed_declaration": "private final class WrappedMapper",
              "key.parsed_scope.end": 626,
              "key.parsed_scope.start": 607,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>property</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 28,
                  "key.name": "property",
                  "key.namelength": 8,
                  "key.nameoffset": 19905,
                  "key.offset": 19901,
                  "key.parsed_declaration": "let property: ColumnProperty",
                  "key.parsed_scope.end": 608,
                  "key.parsed_scope.start": 608,
                  "key.typename": "DataFrame.ColumnProperty",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyVD",
                  "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC8propertyAC14ColumnPropertyVvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let map: (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>map</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 33,
                  "key.name": "map",
                  "key.namelength": 3,
                  "key.nameoffset": 19938,
                  "key.offset": 19934,
                  "key.parsed_declaration": "let map: (AnyObject) -> AnyObject",
                  "key.parsed_scope.end": 609,
                  "key.parsed_scope.start": 609,
                  "key.typename": "(AnyObject) -> AnyObject",
                  "key.typeusr": "$syyXlyXlcD",
                  "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC3mapyyXlyXlcvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputType</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 43,
                  "key.name": "outputType",
                  "key.namelength": 10,
                  "key.nameoffset": 19976,
                  "key.offset": 19972,
                  "key.parsed_declaration": "let outputType: ColumnProperty.PropertyType",
                  "key.parsed_scope.end": 610,
                  "key.parsed_scope.start": 610,
                  "key.typename": "DataFrame.ColumnProperty.PropertyType",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOD",
                  "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC10outputTypeAC14ColumnPropertyV0pN0Ovp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var tensors: [<Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type> : <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type>]?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensors</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct> : <ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class>]?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 47,
                  "key.name": "tensors",
                  "key.namelength": 7,
                  "key.nameoffset": 20024,
                  "key.offset": 20020,
                  "key.parsed_declaration": "var tensors: [OpaquePointer: AnyTensorStorage]?",
                  "key.parsed_scope.end": 611,
                  "key.parsed_scope.start": 611,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[OpaquePointer : AnyTensorStorage]?",
                  "key.typeusr": "$sSDys13OpaquePointerV4main16AnyTensorStorageCGSgD",
                  "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC7tensorsSDys13OpaquePointerVAA16AnyTensorStorageCGSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, map: @escaping (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
                  "key.bodylength": 242,
                  "key.bodyoffset": 20204,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>map</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 375,
                  "key.name": "init(property:map:outputType:)",
                  "key.namelength": 130,
                  "key.nameoffset": 20072,
                  "key.offset": 20072,
                  "key.parsed_declaration": "init(\n  property: ColumnProperty, map: @escaping (AnyObject) -> AnyObject,\n  outputType: ColumnProperty.PropertyType\n)",
                  "key.parsed_scope.end": 625,
                  "key.parsed_scope.start": 612,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.WrappedMapper.Type) -> (DataFrame.ColumnProperty, @escaping (AnyObject) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> DataFrame.WrappedMapper",
                  "key.typeusr": "$s8property3map10outputType4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLCAF14ColumnPropertyV_yXlyXlcAK0rD0OtcD",
                  "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC8property3map10outputTypeAfC14ColumnPropertyV_yXlyXlcAK0rP0Otcfc"
                }
              ],
              "key.typename": "DataFrame.WrappedMapper.Type",
              "key.typeusr": "$s4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLCmD",
              "key.usr": "s:4main9DataFrameV13WrappedMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC"
            },
            {
              "key.annotated_decl": "<Declaration>static func add(to dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, map: @escaping (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>, name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 2199,
              "key.bodyoffset": 20652,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>map</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 2398,
              "key.name": "add(to:map:property:outputType:name:)",
              "key.namelength": 166,
              "key.nameoffset": 20466,
              "key.offset": 20454,
              "key.parsed_declaration": "static func add(\n  to dataframe: OpaquePointer, map: @escaping (AnyObject) -> AnyObject, property: ColumnProperty,\n  outputType: ColumnProperty.PropertyType, name: String\n) -> ColumnProperty",
              "key.parsed_scope.end": 683,
              "key.parsed_scope.start": 627,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF\">add(from: AnyObject, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF\">add(from: Wrapped&lt;[AnyObject]&gt;, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF\">add(map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ\">add(to:multimap:properties:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF\">add(multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var inputIndex: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 20661,
                  "key.offset": 20657,
                  "key.parsed_declaration": "var inputIndex = Int32(property.index)",
                  "key.parsed_scope.end": 631,
                  "key.parsed_scope.start": 631,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ10inputIndexL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 2085,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 20704,
                  "key.offset": 20700,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_map(\n  dataframe,\n  { input, _, row_size, data, context, _ in\n    guard let input = input else { return }\n    guard let data = data else { return }\n    let inputData = input[0]!\n    let wrappedMapper = Unmanaged<WrappedMapper>.fromOpaque(context!).takeUnretainedValue()\n    for i in 0..<Int(row_size) {\n      let object: AnyObject\n      switch wrappedMapper.property.type {\n      case .object:\n        object = Unmanaged<AnyObject>.fromOpaque(inputData[i]!).takeUnretainedValue()\n      case .tensor:\n        object =\n          AnyTensorStorage(\n            inputData[i]!.assumingMemoryBound(to: ccv_nnc_tensor_t.self), selfOwned: false\n          ).toAnyTensor() as AnyObject\n      }\n      let output = wrappedMapper.map(object)\n      switch wrappedMapper.outputType {\n      case .object:\n        if let opaque = data[i] {\n          Unmanaged<AnyObject>.fromOpaque(opaque).release()\n        }\n        (data + i).initialize(to: Unmanaged.passRetained(output).toOpaque())\n      case .tensor:\n        if let opaque = data[i] {\n          wrappedMapper.tensors![OpaquePointer(opaque)] = nil\n        }\n        let tensor = output as! AnyTensor\n        wrappedMapper.tensors![OpaquePointer(tensor.cTensor)] = tensor.storage\n        (data + i).initialize(to: tensor.cTensor)\n      }\n    }\n  }, 0,\n  { object, context in\n    guard let object = object else { return }\n    let wrappedMapper = Unmanaged<WrappedMapper>.fromOpaque(context!).takeUnretainedValue()\n    switch wrappedMapper.outputType {\n    case .object:\n      Unmanaged<AnyObject>.fromOpaque(object).release()\n    case .tensor:\n      wrappedMapper.tensors![OpaquePointer(object)] = nil\n    }\n  }, &inputIndex, 1,\n  Unmanaged.passRetained(WrappedMapper(property: property, map: map, outputType: outputType))\n    .toOpaque(),\n  { mapper in\n    Unmanaged<WrappedMapper>.fromOpaque(mapper!).release()\n  }, name)",
                  "key.parsed_scope.end": 632,
                  "key.parsed_scope.start": 632,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, @escaping (AnyObject) -> AnyObject, DataFrame.ColumnProperty, DataFrame.ColumnProperty.PropertyType, String) -> DataFrame.ColumnProperty",
              "key.typeusr": "$s2to3map8property10outputType4name4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2J0kE0OSStcD",
              "key.usr": "s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private mutating func add(map: @escaping (<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, property: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>, name: <Type usr=\"s:SS\">String</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 22863
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 22855
                }
              ],
              "key.bodylength": 140,
              "key.bodyoffset": 23016,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>map</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>property</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 285,
              "key.name": "add(map:property:outputType:name:)",
              "key.namelength": 137,
              "key.nameoffset": 22877,
              "key.offset": 22872,
              "key.parsed_declaration": "private mutating func add(\n  map: @escaping (AnyObject) -> AnyObject, property: ColumnProperty,\n  outputType: ColumnProperty.PropertyType, name: String\n)",
              "key.parsed_scope.end": 690,
              "key.parsed_scope.start": 684,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF\">add(from: AnyObject, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF\">add(from: Wrapped&lt;[AnyObject]&gt;, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ\">add(to:map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ\">add(to:multimap:properties:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF\">add(multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(inout DataFrame) -> (@escaping (AnyObject) -> AnyObject, DataFrame.ColumnProperty, DataFrame.ColumnProperty.PropertyType, String) -> ()",
              "key.typeusr": "$s3map8property10outputType4nameyyXlyXlc_4main9DataFrameV14ColumnPropertyVAI0jD0OSStcD",
              "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct ManyUntypedSeries : <Type usr=\"s:4main10DataSeriesP\">DataSeries</Type></Declaration>",
          "key.bodylength": 6391,
          "key.bodyoffset": 23200,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ManyUntypedSeries</decl.name> : <ref.protocol usr=\"s:4main10DataSeriesP\">DataSeries</ref.protocol></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 6431,
          "key.name": "DataFrame.ManyUntypedSeries",
          "key.namelength": 27,
          "key.nameoffset": 23171,
          "key.offset": 23161,
          "key.parsed_declaration": "extension DataFrame.ManyUntypedSeries",
          "key.parsed_scope.end": 827,
          "key.parsed_scope.start": 693,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C1L_q_mfp\">C1</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF1UL_q0_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23288
                }
              ],
              "key.bodylength": 419,
              "key.bodyoffset": 23378,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, U>(_ mapper: @escaping (C0, C1) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"695\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF</USR><Declaration>public func map&lt;C0, C1, U&gt;(_ mapper: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 695,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 23203,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF1UL_q0_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF1UL_q0_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 503,
              "key.name": "map(_:)",
              "key.namelength": 49,
              "key.nameoffset": 23300,
              "key.offset": 23295,
              "key.parsed_declaration": "public func map<C0, C1, U>(_ mapper: @escaping (C0, C1) -> U) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 705,
              "key.parsed_scope.start": 695,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 23304,
                  "key.offset": 23304,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 695,
                  "key.parsed_scope.start": 695,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 23308,
                  "key.offset": 23308,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 695,
                  "key.parsed_scope.start": 695,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 23312,
                  "key.offset": 23312,
                  "key.parsed_declaration": "public func map<C0, C1, U",
                  "key.parsed_scope.end": 695,
                  "key.parsed_scope.start": 695,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF1UL_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 23421,
                  "key.offset": 23417,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(objs[0] as! C0, objs[1] as! C1) as AnyObject\n}",
                  "key.parsed_scope.end": 697,
                  "key.parsed_scope.start": 697,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq0_x_q_tccr1_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C2L_q0_mfp\">C2</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF1UL_q1_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23886
                }
              ],
              "key.bodylength": 435,
              "key.bodyoffset": 23984,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, U>(_ mapper: @escaping (C0, C1, C2) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"707\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF</USR><Declaration>public func map&lt;C0, C1, C2, U&gt;(_ mapper: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 707,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 23801,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF1UL_q1_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF1UL_q1_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 527,
              "key.name": "map(_:)",
              "key.namelength": 57,
              "key.nameoffset": 23898,
              "key.offset": 23893,
              "key.parsed_declaration": "public func map<C0, C1, C2, U>(_ mapper: @escaping (C0, C1, C2) -> U) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 717,
              "key.parsed_scope.start": 707,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 23902,
                  "key.offset": 23902,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 707,
                  "key.parsed_scope.start": 707,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 23906,
                  "key.offset": 23906,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 707,
                  "key.parsed_scope.start": 707,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 23910,
                  "key.offset": 23910,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 707,
                  "key.parsed_scope.start": 707,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 23914,
                  "key.offset": 23914,
                  "key.parsed_declaration": "public func map<C0, C1, C2, U",
                  "key.parsed_scope.end": 707,
                  "key.parsed_scope.start": 707,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF1UL_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 144,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 24027,
                  "key.offset": 24023,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(objs[0] as! C0, objs[1] as! C1, objs[2] as! C2) as AnyObject\n}",
                  "key.parsed_scope.end": 709,
                  "key.parsed_scope.start": 709,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq1_x_q_q0_tccr2_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C3L_q1_mfp\">C3</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF1UL_q2_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 24508
                }
              ],
              "key.bodylength": 451,
              "key.bodyoffset": 24620,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, U>(_ mapper: @escaping (C0, C1, C2, C3) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"719\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, U&gt;(_ mapper: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 719,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 24423,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF1UL_q2_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF1UL_q2_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 557,
              "key.name": "map(_:)",
              "key.namelength": 65,
              "key.nameoffset": 24520,
              "key.offset": 24515,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, U>(_ mapper: @escaping (C0, C1, C2, C3) -> U)\n  -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 731,
              "key.parsed_scope.start": 719,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 24524,
                  "key.offset": 24524,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 719,
                  "key.parsed_scope.start": 719,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 24528,
                  "key.offset": 24528,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 719,
                  "key.parsed_scope.start": 719,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 24532,
                  "key.offset": 24532,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 719,
                  "key.parsed_scope.start": 719,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 24536,
                  "key.offset": 24536,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 719,
                  "key.parsed_scope.start": 719,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 24540,
                  "key.offset": 24540,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, U",
                  "key.parsed_scope.end": 719,
                  "key.parsed_scope.start": 719,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF1UL_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 160,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 24663,
                  "key.offset": 24659,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3) as AnyObject\n}",
                  "key.parsed_scope.end": 723,
                  "key.parsed_scope.start": 723,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq2_x_q_q0_q1_tccr3_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C4L_q2_mfp\">C4</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF1UL_q3_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 25160
                }
              ],
              "key.bodylength": 475,
              "key.bodyoffset": 25280,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, U>(_ mapper: @escaping (C0, C1, C2, C3, C4) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"733\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 733,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 25075,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF1UL_q3_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF1UL_q3_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 589,
              "key.name": "map(_:)",
              "key.namelength": 73,
              "key.nameoffset": 25172,
              "key.offset": 25167,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, U>(_ mapper: @escaping (C0, C1, C2, C3, C4) -> U)\n  -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 746,
              "key.parsed_scope.start": 733,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 25176,
                  "key.offset": 25176,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 25180,
                  "key.offset": 25180,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 25184,
                  "key.offset": 25184,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 25188,
                  "key.offset": 25188,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 25192,
                  "key.offset": 25192,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 25196,
                  "key.offset": 25196,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, U",
                  "key.parsed_scope.end": 733,
                  "key.parsed_scope.start": 733,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF1UL_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 184,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 25323,
                  "key.offset": 25319,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4)\n    as AnyObject\n}",
                  "key.parsed_scope.end": 737,
                  "key.parsed_scope.start": 737,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq3_x_q_q0_q1_q2_tccr4_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C4L_q2_mfp\">C4</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C5L_q3_mfp\">C5</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF1UL_q4_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 25844
                }
              ],
              "key.bodylength": 500,
              "key.bodyoffset": 25972,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, C5, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"748\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 748,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 25759,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C5L_q3_mfp\"><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF1UL_q4_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C5L_q3_mfp\">C5</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF1UL_q4_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 622,
              "key.name": "map(_:)",
              "key.namelength": 81,
              "key.nameoffset": 25856,
              "key.offset": 25851,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5) -> U)\n  -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 762,
              "key.parsed_scope.start": 748,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 25860,
                  "key.offset": 25860,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 25864,
                  "key.offset": 25864,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 25868,
                  "key.offset": 25868,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 25872,
                  "key.offset": 25872,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 25876,
                  "key.offset": 25876,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C5</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C5",
                  "key.namelength": 2,
                  "key.nameoffset": 25880,
                  "key.offset": 25880,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "C5.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF2C5L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 25884,
                  "key.offset": 25884,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, U",
                  "key.parsed_scope.end": 748,
                  "key.parsed_scope.start": 748,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF1UL_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 209,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 26015,
                  "key.offset": 26011,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(\n    objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4,\n    objs[5] as! C5) as AnyObject\n}",
                  "key.parsed_scope.end": 752,
                  "key.parsed_scope.start": 752,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, C5, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4, C5) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq4_x_q_q0_q1_q2_q3_tccr5_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C4L_q2_mfp\">C4</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C5L_q3_mfp\">C5</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C6L_q4_mfp\">C6</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF1UL_q5_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 26561
                }
              ],
              "key.bodylength": 516,
              "key.bodyoffset": 26699,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"764\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 764,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 26476,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C5L_q3_mfp\"><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C6L_q4_mfp\"><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF1UL_q5_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C5L_q3_mfp\">C5</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C6L_q4_mfp\">C6</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF1UL_q5_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 648,
              "key.name": "map(_:)",
              "key.namelength": 97,
              "key.nameoffset": 26573,
              "key.offset": 26568,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, U>(\n  _ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6) -> U\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 778,
              "key.parsed_scope.start": 764,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 26577,
                  "key.offset": 26577,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 26581,
                  "key.offset": 26581,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 26585,
                  "key.offset": 26585,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 26589,
                  "key.offset": 26589,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 26593,
                  "key.offset": 26593,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C5</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C5",
                  "key.namelength": 2,
                  "key.nameoffset": 26597,
                  "key.offset": 26597,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C5.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C5L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C6</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C6",
                  "key.namelength": 2,
                  "key.nameoffset": 26601,
                  "key.offset": 26601,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "C6.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF2C6L_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 26605,
                  "key.offset": 26605,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, U",
                  "key.parsed_scope.end": 764,
                  "key.parsed_scope.start": 764,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq5_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF1UL_q5_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 225,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 26742,
                  "key.offset": 26738,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(\n    objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4,\n    objs[5] as! C5, objs[6] as! C6) as AnyObject\n}",
                  "key.parsed_scope.end": 768,
                  "key.parsed_scope.start": 768,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, C5, C6, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4, C5, C6) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq5_x_q_q0_q1_q2_q3_q4_tccr6_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C4L_q2_mfp\">C4</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C5L_q3_mfp\">C5</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C6L_q4_mfp\">C6</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C7L_q5_mfp\">C7</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF1UL_q6_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 27304
                }
              ],
              "key.bodylength": 532,
              "key.bodyoffset": 27450,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"780\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 780,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 27219,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C5L_q3_mfp\"><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C6L_q4_mfp\"><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C7L_q5_mfp\"><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF1UL_q6_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C5L_q3_mfp\">C5</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C6L_q4_mfp\">C6</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C7L_q5_mfp\">C7</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF1UL_q6_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 672,
              "key.name": "map(_:)",
              "key.namelength": 105,
              "key.nameoffset": 27316,
              "key.offset": 27311,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, U>(\n  _ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -> U\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 794,
              "key.parsed_scope.start": 780,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 27320,
                  "key.offset": 27320,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 27324,
                  "key.offset": 27324,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 27328,
                  "key.offset": 27328,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 27332,
                  "key.offset": 27332,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 27336,
                  "key.offset": 27336,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C5</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C5",
                  "key.namelength": 2,
                  "key.nameoffset": 27340,
                  "key.offset": 27340,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C5.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C5L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C6</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C6",
                  "key.namelength": 2,
                  "key.nameoffset": 27344,
                  "key.offset": 27344,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C6.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C6L_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C7</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C7",
                  "key.namelength": 2,
                  "key.nameoffset": 27348,
                  "key.offset": 27348,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "C7.Type",
                  "key.typeusr": "$sq5_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF2C7L_q5_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 27352,
                  "key.offset": 27352,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, U",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq6_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF1UL_q6_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 241,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 27493,
                  "key.offset": 27489,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(\n    objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4,\n    objs[5] as! C5, objs[6] as! C6, objs[7] as! C7) as AnyObject\n}",
                  "key.parsed_scope.end": 784,
                  "key.parsed_scope.start": 784,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, C5, C6, C7, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4, C5, C6, C7) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq6_x_q_q0_q1_q2_q3_q4_q5_tccr7_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C4L_q2_mfp\">C4</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C5L_q3_mfp\">C5</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C6L_q4_mfp\">C6</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C7L_q5_mfp\">C7</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C8L_q6_mfp\">C8</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF1UL_q7_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 28071
                }
              ],
              "key.bodylength": 548,
              "key.bodyoffset": 28225,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"796\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 796,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 27986,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C5L_q3_mfp\"><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C6L_q4_mfp\"><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C7L_q5_mfp\"><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C8L_q6_mfp\"><decl.generic_type_param.name>C8</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF1UL_q7_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C5L_q3_mfp\">C5</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C6L_q4_mfp\">C6</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C7L_q5_mfp\">C7</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C8L_q6_mfp\">C8</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF1UL_q7_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 696,
              "key.name": "map(_:)",
              "key.namelength": 113,
              "key.nameoffset": 28083,
              "key.offset": 28078,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, U>(\n  _ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -> U\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 810,
              "key.parsed_scope.start": 796,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 28087,
                  "key.offset": 28087,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 28091,
                  "key.offset": 28091,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 28095,
                  "key.offset": 28095,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 28099,
                  "key.offset": 28099,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 28103,
                  "key.offset": 28103,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C5</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C5",
                  "key.namelength": 2,
                  "key.nameoffset": 28107,
                  "key.offset": 28107,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C5.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C5L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C6</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C6",
                  "key.namelength": 2,
                  "key.nameoffset": 28111,
                  "key.offset": 28111,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C6.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C6L_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C7</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C7",
                  "key.namelength": 2,
                  "key.nameoffset": 28115,
                  "key.offset": 28115,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C7.Type",
                  "key.typeusr": "$sq5_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C7L_q5_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C8</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C8</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C8",
                  "key.namelength": 2,
                  "key.nameoffset": 28119,
                  "key.offset": 28119,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "C8.Type",
                  "key.typeusr": "$sq6_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF2C8L_q6_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 28123,
                  "key.offset": 28123,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, U",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq7_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF1UL_q7_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 257,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 28268,
                  "key.offset": 28264,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(\n    objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4,\n    objs[5] as! C5, objs[6] as! C6, objs[7] as! C7, objs[8] as! C8) as AnyObject\n}",
                  "key.parsed_scope.end": 800,
                  "key.parsed_scope.start": 800,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, C5, C6, C7, C8, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq7_x_q_q0_q1_q2_q3_q4_q5_q6_tccr8_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_ mapper: @escaping (<Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C0L_xmfp\">C0</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C1L_q_mfp\">C1</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C2L_q0_mfp\">C2</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C3L_q1_mfp\">C3</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C4L_q2_mfp\">C4</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C5L_q3_mfp\">C5</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C6L_q4_mfp\">C6</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C7L_q5_mfp\">C7</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C8L_q6_mfp\">C8</Type>, <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C9L_q7_mfp\">C9</Type>) -&gt; <Type usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF1UL_q8_mfp\">U</Type>) -&gt; <Type usr=\"s:4main9DataFrameV\">DataFrame</Type>.<Type usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 28862
                }
              ],
              "key.bodylength": 565,
              "key.bodyoffset": 29024,
              "key.doc.column": 15,
              "key.doc.comment": "Create a new column by applying some transformations on some existing columns.",
              "key.doc.declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U>(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> U) -> DataFrame.UntypedSeries",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"812\" column=\"15\"><Name>map(_:)</Name><USR>s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF</USR><Declaration>public func map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U&gt;(_ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -&gt; U) -&gt; DataFrame.UntypedSeries</Declaration><CommentParts><Abstract><Para>Create a new column by applying some transformations on some existing columns.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 812,
              "key.doc.name": "map(_:)",
              "key.doc.type": "Function",
              "key.doclength": 83,
              "key.docoffset": 28777,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>map</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C0L_xmfp\"><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C1L_q_mfp\"><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C2L_q0_mfp\"><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C3L_q1_mfp\"><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C4L_q2_mfp\"><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C5L_q3_mfp\"><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C6L_q4_mfp\"><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C7L_q5_mfp\"><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C8L_q6_mfp\"><decl.generic_type_param.name>C8</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C9L_q7_mfp\"><decl.generic_type_param.name>C9</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF1UL_q8_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>mapper</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C0L_xmfp\">C0</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C1L_q_mfp\">C1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C2L_q0_mfp\">C2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C3L_q1_mfp\">C3</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C4L_q2_mfp\">C4</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C5L_q3_mfp\">C5</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C6L_q4_mfp\">C6</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C7L_q5_mfp\">C7</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C8L_q6_mfp\">C8</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C9L_q7_mfp\">C9</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF1UL_q8_mfp\">U</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV\">DataFrame</ref.struct>.<ref.struct usr=\"s:4main9DataFrameV13UntypedSeriesV\">UntypedSeries</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 721,
              "key.name": "map(_:)",
              "key.namelength": 121,
              "key.nameoffset": 28874,
              "key.offset": 28869,
              "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U>(\n  _ mapper: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> U\n) -> DataFrame.UntypedSeries",
              "key.parsed_scope.end": 826,
              "key.parsed_scope.start": 812,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq0_x_q_tcr1_lF\">map&lt;C0, C1, U&gt;(_: @escaping (C0, C1) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq1_x_q_q0_tcr2_lF\">map&lt;C0, C1, C2, U&gt;(_: @escaping (C0, C1, C2) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq2_x_q_q0_q1_tcr3_lF\">map&lt;C0, C1, C2, C3, U&gt;(_: @escaping (C0, C1, C2, C3) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq3_x_q_q0_q1_q2_tcr4_lF\">map&lt;C0, C1, C2, C3, C4, U&gt;(_: @escaping (C0, C1, C2, C3, C4) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq4_x_q_q0_q1_q2_q3_tcr5_lF\">map&lt;C0, C1, C2, C3, C4, C5, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq5_x_q_q0_q1_q2_q3_q4_tcr6_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq6_x_q_q0_q1_q2_q3_q4_q5_tcr7_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq7_x_q_q0_q1_q2_q3_q4_q5_q6_tcr8_lF\">map&lt;C0, C1, C2, C3, C4, C5, C6, C7, C8, U&gt;(_: @escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8) -&gt; U) -&gt; DataFrame.UntypedSeries</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>C0</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C0</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C0",
                  "key.namelength": 2,
                  "key.nameoffset": 28878,
                  "key.offset": 28878,
                  "key.parsed_declaration": "public func map<C0",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C0.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C0L_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C1</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C1</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C1",
                  "key.namelength": 2,
                  "key.nameoffset": 28882,
                  "key.offset": 28882,
                  "key.parsed_declaration": "public func map<C0, C1",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C1.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C1L_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C2</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C2</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C2",
                  "key.namelength": 2,
                  "key.nameoffset": 28886,
                  "key.offset": 28886,
                  "key.parsed_declaration": "public func map<C0, C1, C2",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C2.Type",
                  "key.typeusr": "$sq0_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C2L_q0_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C3</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C3</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C3",
                  "key.namelength": 2,
                  "key.nameoffset": 28890,
                  "key.offset": 28890,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C3.Type",
                  "key.typeusr": "$sq1_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C3L_q1_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C4</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C4</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C4",
                  "key.namelength": 2,
                  "key.nameoffset": 28894,
                  "key.offset": 28894,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C4.Type",
                  "key.typeusr": "$sq2_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C4L_q2_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C5</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C5</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C5",
                  "key.namelength": 2,
                  "key.nameoffset": 28898,
                  "key.offset": 28898,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C5.Type",
                  "key.typeusr": "$sq3_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C5L_q3_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C6</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C6</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C6",
                  "key.namelength": 2,
                  "key.nameoffset": 28902,
                  "key.offset": 28902,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C6.Type",
                  "key.typeusr": "$sq4_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C6L_q4_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C7</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C7</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C7",
                  "key.namelength": 2,
                  "key.nameoffset": 28906,
                  "key.offset": 28906,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C7.Type",
                  "key.typeusr": "$sq5_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C7L_q5_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C8</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C8</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C8",
                  "key.namelength": 2,
                  "key.nameoffset": 28910,
                  "key.offset": 28910,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C8.Type",
                  "key.typeusr": "$sq6_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C8L_q6_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>C9</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>C9</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 2,
                  "key.name": "C9",
                  "key.namelength": 2,
                  "key.nameoffset": 28914,
                  "key.offset": 28914,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "C9.Type",
                  "key.typeusr": "$sq7_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF2C9L_q7_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 28918,
                  "key.offset": 28918,
                  "key.parsed_declaration": "public func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U",
                  "key.parsed_scope.end": 812,
                  "key.parsed_scope.start": 812,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq8_mD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF1UL_q8_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let wrappedMapper: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wrappedMapper</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 273,
                  "key.name": "wrappedMapper",
                  "key.namelength": 13,
                  "key.nameoffset": 29068,
                  "key.offset": 29064,
                  "key.parsed_declaration": "let wrappedMapper = { (objs: [AnyObject]) -> AnyObject in\n  return mapper(\n    objs[0] as! C0, objs[1] as! C1, objs[2] as! C2, objs[3] as! C3, objs[4] as! C4,\n    objs[5] as! C5, objs[6] as! C6, objs[7] as! C7, objs[8] as! C8, objs[9] as! C9) as AnyObject\n}",
                  "key.parsed_scope.end": 816,
                  "key.parsed_scope.start": 816,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF13wrappedMapperL_yyXlSayyXlGcvp"
                }
              ],
              "key.typename": "<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U> (DataFrame.ManyUntypedSeries) -> (@escaping (C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> U) -> DataFrame.UntypedSeries",
              "key.typeusr": "$sy4main9DataFrameV13UntypedSeriesVq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tccr9_luD",
              "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV3mapyAC0eF0Vq8_x_q_q0_q1_q2_q3_q4_q5_q6_q7_tcr9_lF"
            }
          ],
          "key.typename": "DataFrame.ManyUntypedSeries.Type",
          "key.typeusr": "$s4main9DataFrameV17ManyUntypedSeriesVmD",
          "key.usr": "s:4main9DataFrameV17ManyUntypedSeriesV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct DataFrame</Declaration>",
          "key.bodylength": 3615,
          "key.bodyoffset": 29615,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct DataFrame",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift\" line=\"65\" column=\"15\"><Name>DataFrame</Name><USR>s:4main9DataFrameV</USR><Declaration>public struct DataFrame</Declaration><CommentParts><Abstract><Para>A pandas-inspired dataframe. Dataframe is a tabular data representation. This particular Dataframe implementation is most useful to implement data feeder pipeline. You need some transformations so some text or images can be transformed into tensors for a model to consume. Dataframe can be used to implement that pipeline.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 65,
          "key.doc.name": "DataFrame",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>DataFrame</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 3637,
          "key.name": "DataFrame",
          "key.namelength": 9,
          "key.nameoffset": 29604,
          "key.offset": 29594,
          "key.parsed_declaration": "extension DataFrame",
          "key.parsed_scope.end": 921,
          "key.parsed_scope.start": 829,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private final class WrappedManyMapper</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 29626
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 29618
                }
              ],
              "key.bodylength": 570,
              "key.bodyoffset": 29657,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>WrappedManyMapper</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 596,
              "key.name": "WrappedManyMapper",
              "key.namelength": 17,
              "key.nameoffset": 29638,
              "key.offset": 29632,
              "key.parsed_declaration": "private final class WrappedManyMapper",
              "key.parsed_scope.end": 849,
              "key.parsed_scope.start": 830,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>properties</decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 32,
                  "key.name": "properties",
                  "key.namelength": 10,
                  "key.nameoffset": 29666,
                  "key.offset": 29662,
                  "key.parsed_declaration": "let properties: [ColumnProperty]",
                  "key.parsed_scope.end": 831,
                  "key.parsed_scope.start": 831,
                  "key.typename": "[DataFrame.ColumnProperty]",
                  "key.typeusr": "$sSay4main9DataFrameV14ColumnPropertyVGD",
                  "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC10propertiesSayAC14ColumnPropertyVGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let map: ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>map</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 35,
                  "key.name": "map",
                  "key.namelength": 3,
                  "key.nameoffset": 29703,
                  "key.offset": 29699,
                  "key.parsed_declaration": "let map: ([AnyObject]) -> AnyObject",
                  "key.parsed_scope.end": 832,
                  "key.parsed_scope.start": 832,
                  "key.typename": "([AnyObject]) -> AnyObject",
                  "key.typeusr": "$syyXlSayyXlGcD",
                  "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC3mapyyXlSayyXlGcvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputType</decl.name>: <decl.var.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 43,
                  "key.name": "outputType",
                  "key.namelength": 10,
                  "key.nameoffset": 29743,
                  "key.offset": 29739,
                  "key.parsed_declaration": "let outputType: ColumnProperty.PropertyType",
                  "key.parsed_scope.end": 833,
                  "key.parsed_scope.start": 833,
                  "key.typename": "DataFrame.ColumnProperty.PropertyType",
                  "key.typeusr": "$s4main9DataFrameV14ColumnPropertyV0E4TypeOD",
                  "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC10outputTypeAC14ColumnPropertyV0qO0Ovp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var tensors: [<Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type> : <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type>]?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensors</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct> : <ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class>]?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 47,
                  "key.name": "tensors",
                  "key.namelength": 7,
                  "key.nameoffset": 29791,
                  "key.offset": 29787,
                  "key.parsed_declaration": "var tensors: [OpaquePointer: AnyTensorStorage]?",
                  "key.parsed_scope.end": 834,
                  "key.parsed_scope.start": 834,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[OpaquePointer : AnyTensorStorage]?",
                  "key.typeusr": "$sSDys13OpaquePointerV4main16AnyTensorStorageCGSgD",
                  "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC7tensorsSDys13OpaquePointerVAA16AnyTensorStorageCGSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], map: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>)</Declaration>",
                  "key.bodylength": 246,
                  "key.bodyoffset": 29977,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>map</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 385,
                  "key.name": "init(properties:map:outputType:)",
                  "key.namelength": 136,
                  "key.nameoffset": 29839,
                  "key.offset": 29839,
                  "key.parsed_declaration": "init(\n  properties: [ColumnProperty], map: @escaping ([AnyObject]) -> AnyObject,\n  outputType: ColumnProperty.PropertyType\n)",
                  "key.parsed_scope.end": 848,
                  "key.parsed_scope.start": 835,
                  "key.substructure": [],
                  "key.typename": "(DataFrame.WrappedManyMapper.Type) -> ([DataFrame.ColumnProperty], @escaping ([AnyObject]) -> AnyObject, DataFrame.ColumnProperty.PropertyType) -> DataFrame.WrappedManyMapper",
                  "key.typeusr": "$s10properties3map10outputType4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLCSayAF14ColumnPropertyVG_yXlSayyXlGcAK0sD0OtcD",
                  "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC10properties3map10outputTypeAFSayAC14ColumnPropertyVG_yXlSayyXlGcAK0sQ0Otcfc"
                }
              ],
              "key.typename": "DataFrame.WrappedManyMapper.Type",
              "key.typeusr": "$s4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLCmD",
              "key.usr": "s:4main9DataFrameV17WrappedManyMapper33_BE3E946B4F69C7561ABEC49508EDD619LLC"
            },
            {
              "key.annotated_decl": "<Declaration>static func add(to dataframe: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, multimap: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>, name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type></Declaration>",
              "key.bodylength": 2452,
              "key.bodyoffset": 30440,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>dataframe</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>multimap</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 2662,
              "key.name": "add(to:multimap:properties:outputType:name:)",
              "key.namelength": 177,
              "key.nameoffset": 30243,
              "key.offset": 30231,
              "key.parsed_declaration": "static func add(\n  to dataframe: OpaquePointer, multimap: @escaping ([AnyObject]) -> AnyObject,\n  properties: [ColumnProperty], outputType: ColumnProperty.PropertyType, name: String\n) -> ColumnProperty",
              "key.parsed_scope.end": 912,
              "key.parsed_scope.start": 850,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF\">add(from: AnyObject, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF\">add(from: Wrapped&lt;[AnyObject]&gt;, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ\">add(to:map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF\">add(map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF\">add(multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let inputIndex: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputIndex</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 51,
                  "key.name": "inputIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 30449,
                  "key.offset": 30445,
                  "key.parsed_declaration": "let inputIndex = properties.map { Int32($0.index) }",
                  "key.parsed_scope.end": 854,
                  "key.parsed_scope.start": 854,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ10inputIndexL_Says5Int32VGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let index: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 2325,
                  "key.name": "index",
                  "key.namelength": 5,
                  "key.nameoffset": 30505,
                  "key.offset": 30501,
                  "key.parsed_declaration": "let index = ccv_cnnp_dataframe_map(\n  dataframe,\n  { input, _, row_size, data, context, _ in\n    guard let input = input else { return }\n    guard let data = data else { return }\n    let wrappedManyMapper = Unmanaged<WrappedManyMapper>.fromOpaque(context!)\n      .takeUnretainedValue()\n    for i in 0..<Int(row_size) {\n      var objects = [AnyObject]()\n      for (j, property) in wrappedManyMapper.properties.enumerated() {\n        let object: AnyObject\n        switch property.type {\n        case .object:\n          object = Unmanaged<AnyObject>.fromOpaque(input[j]![i]!).takeUnretainedValue()\n        case .tensor:\n          object =\n            AnyTensorStorage(\n              input[j]![i]!.assumingMemoryBound(to: ccv_nnc_tensor_t.self), selfOwned: false\n            ).toAnyTensor() as AnyObject\n        }\n        objects.append(object)\n      }\n      let output = wrappedManyMapper.map(objects)\n      switch wrappedManyMapper.outputType {\n      case .object:\n        if let opaque = data[i] {\n          Unmanaged<AnyObject>.fromOpaque(opaque).release()\n        }\n        (data + i).initialize(to: Unmanaged.passRetained(output).toOpaque())\n      case .tensor:\n        if let opaque = data[i] {\n          wrappedManyMapper.tensors![OpaquePointer(opaque)] = nil\n        }\n        let tensor = output as! AnyTensor\n        wrappedManyMapper.tensors![OpaquePointer(tensor.cTensor)] = tensor.storage\n        (data + i).initialize(to: tensor.cTensor)\n      }\n    }\n  }, 0,\n  { object, context in\n    guard let object = object else { return }\n    let wrappedManyMapper = Unmanaged<WrappedManyMapper>.fromOpaque(context!)\n      .takeUnretainedValue()\n    switch wrappedManyMapper.outputType {\n    case .object:\n      Unmanaged<AnyObject>.fromOpaque(object).release()\n    case .tensor:\n      wrappedManyMapper.tensors![OpaquePointer(object)] = nil\n    }\n  }, inputIndex, Int32(inputIndex.count),\n  Unmanaged.passRetained(\n    WrappedManyMapper(properties: properties, map: multimap, outputType: outputType)\n  ).toOpaque(),\n  { mapper in\n    Unmanaged<WrappedManyMapper>.fromOpaque(mapper!).release()\n  }, name)",
                  "key.parsed_scope.end": 855,
                  "key.parsed_scope.start": 855,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ5indexL_Xevp"
                }
              ],
              "key.typename": "(DataFrame.Type) -> (OpaquePointer, @escaping ([AnyObject]) -> AnyObject, [DataFrame.ColumnProperty], DataFrame.ColumnProperty.PropertyType, String) -> DataFrame.ColumnProperty",
              "key.typeusr": "$s2to8multimap10properties10outputType4name4main9DataFrameV14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAJGAJ0kE0OSStcD",
              "key.usr": "s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private mutating func add(multimap: @escaping ([<Type usr=\"s:s9AnyObjecta\">AnyObject</Type>]) -&gt; <Type usr=\"s:s9AnyObjecta\">AnyObject</Type>, properties: [<Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>], outputType: <Type usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</Type>.<Type usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</Type>, name: <Type usr=\"s:SS\">String</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 32904
                },
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 32896
                }
              ],
              "key.bodylength": 160,
              "key.bodyoffset": 33068,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DataFrame.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>multimap</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s9AnyObjecta\">AnyObject</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>properties</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main9DataFrameV14ColumnPropertyV\">ColumnProperty</ref.struct>.<ref.enum usr=\"s:4main9DataFrameV14ColumnPropertyV0E4TypeO\">PropertyType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 316,
              "key.name": "add(multimap:properties:outputType:name:)",
              "key.namelength": 148,
              "key.nameoffset": 32918,
              "key.offset": 32913,
              "key.parsed_declaration": "private mutating func add(\n  multimap: @escaping ([AnyObject]) -> AnyObject, properties: [ColumnProperty],\n  outputType: ColumnProperty.PropertyType, name: String\n)",
              "key.parsed_scope.end": 920,
              "key.parsed_scope.start": 913,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyyXl_SStF\">add(from: AnyObject, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL4from4nameyAC7WrappedCy_SayyXlGG_SStF\">add(from: Wrapped&lt;[AnyObject]&gt;, name: String)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to3map8property10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlyXlcA2K0lI0OSStFZ\">add(to:map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL3map8property10outputType4nameyyXlyXlc_AC14ColumnPropertyVAK0rO0OSStF\">add(map:property:outputType:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9DataFrameV3add2to8multimap10properties10outputType4nameAC14ColumnPropertyVs13OpaquePointerV_yXlSayyXlGcSayAKGAK0lI0OSStFZ\">add(to:multimap:properties:outputType:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(inout DataFrame) -> (@escaping ([AnyObject]) -> AnyObject, [DataFrame.ColumnProperty], DataFrame.ColumnProperty.PropertyType, String) -> ()",
              "key.typeusr": "$s8multimap10properties10outputType4nameyyXlSayyXlGc_Say4main9DataFrameV14ColumnPropertyVGAJ0jD0OSStcD",
              "key.usr": "s:4main9DataFrameV3add33_BE3E946B4F69C7561ABEC49508EDD619LL8multimap10properties10outputType4nameyyXlSayyXlGc_SayAC14ColumnPropertyVGAL0rO0OSStF"
            }
          ],
          "key.typename": "DataFrame.Type",
          "key.typeusr": "$s4main9DataFrameVmD",
          "key.usr": "s:4main9DataFrameV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 15880,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 136
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 129
            }
          ],
          "key.bodylength": 4913,
          "key.bodyoffset": 162,
          "key.doc.column": 20,
          "key.doc.comment": "A dynamic graph is a workspace for computations. All tensor variables can be tracked\nfrom a dynamic graph.",
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.doclength": 115,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 4934,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 148,
          "key.offset": 142,
          "key.parsed_declaration": "public final class DynamicGraph",
          "key.parsed_scope.end": 173,
          "key.parsed_scope.start": 5,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>._AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 166
                }
              ],
              "key.bodylength": 464,
              "key.bodyoffset": 196,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>_AnyTensor</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 483,
              "key.name": "_AnyTensor",
              "key.namelength": 10,
              "key.nameoffset": 184,
              "key.offset": 178,
              "key.parsed_declaration": "fileprivate class _AnyTensor",
              "key.parsed_scope.end": 28,
              "key.parsed_scope.start": 7,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 23,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 206,
                  "key.offset": 202,
                  "key.parsed_declaration": "let graph: DynamicGraph",
                  "key.parsed_scope.end": 9,
                  "key.parsed_scope.start": 9,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC5graphACvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let _tensor: ccv_nnc_tensor_variable_t</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 38,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 234,
                  "key.offset": 230,
                  "key.parsed_declaration": "let _tensor: ccv_nnc_tensor_variable_t",
                  "key.parsed_scope.end": 10,
                  "key.parsed_scope.start": 10,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC7_tensorXevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let original: Any?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>original</decl.name>: <decl.var.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 18,
                  "key.name": "original",
                  "key.namelength": 8,
                  "key.nameoffset": 277,
                  "key.offset": 273,
                  "key.parsed_declaration": "let original: Any?",
                  "key.parsed_scope.end": 11,
                  "key.parsed_scope.start": 11,
                  "key.typename": "Any?",
                  "key.typeusr": "$sypSgD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC8originalypSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, tensor: ccv_nnc_tensor_variable_t, requiresGrad: <Type usr=\"s:Sb\">Bool</Type> = false, original: Any? = nil)</Declaration>",
                  "key.bodylength": 123,
                  "key.bodyoffset": 427,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tensor</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_tensor_variable_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiresGrad</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>original</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 254,
                  "key.name": "init(graph:tensor:requiresGrad:original:)",
                  "key.namelength": 128,
                  "key.nameoffset": 297,
                  "key.offset": 297,
                  "key.parsed_declaration": "init(\n  graph: DynamicGraph, tensor: ccv_nnc_tensor_variable_t, requiresGrad: Bool = false,\n  original: Any? = nil\n)",
                  "key.parsed_scope.end": 21,
                  "key.parsed_scope.start": 13,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph._AnyTensor.Type) -> (DynamicGraph, <<error type>>, Bool, Any?) -> DynamicGraph._AnyTensor",
                  "key.typeusr": "$syXeXecD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLCyXeXecfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>deinit</Declaration>",
                  "key.bodylength": 63,
                  "key.bodyoffset": 565,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 72,
                  "key.name": "deinit",
                  "key.namelength": 6,
                  "key.nameoffset": 557,
                  "key.offset": 557,
                  "key.parsed_declaration": "deinit",
                  "key.parsed_scope.end": 25,
                  "key.parsed_scope.start": 23,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph._AnyTensor) -> () -> ()",
                  "key.typeusr": "$syycD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLCfd"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var requiresGrad: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiresGrad</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 22,
                  "key.name": "requiresGrad",
                  "key.namelength": 12,
                  "key.nameoffset": 639,
                  "key.offset": 635,
                  "key.parsed_declaration": "var requiresGrad: Bool",
                  "key.parsed_scope.end": 27,
                  "key.parsed_scope.start": 27,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC12requiresGradSbvp"
                }
              ],
              "key.typename": "DynamicGraph._AnyTensor.Type",
              "key.typeusr": "$s4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLCmD",
              "key.usr": "s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 713
                }
              ],
              "key.bodylength": 2084,
              "key.bodyoffset": 737,
              "key.doc.column": 16,
              "key.doc.comment": "A type-erased tensor variable.",
              "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 33,
              "key.doc.name": "AnyTensor",
              "key.doc.type": "Class",
              "key.doclength": 45,
              "key.docoffset": 665,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 2102,
              "key.name": "AnyTensor",
              "key.namelength": 9,
              "key.nameoffset": 726,
              "key.offset": 720,
              "key.parsed_declaration": "public class AnyTensor",
              "key.parsed_scope.end": 106,
              "key.parsed_scope.start": 33,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var grad: <Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 743
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>grad</decl.name>: <decl.var.type><ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 26,
                  "key.name": "grad",
                  "key.namelength": 4,
                  "key.nameoffset": 754,
                  "key.offset": 750,
                  "key.parsed_declaration": "public var grad: AnyTensor? = nil",
                  "key.parsed_scope.end": 35,
                  "key.parsed_scope.start": 35,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "DynamicGraph.AnyTensor?",
                  "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4gradAESgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate let underlying: <Type usr=\"s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC\">_AnyTensor</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 782
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>underlying</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC\">_AnyTensor</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 26,
                  "key.name": "underlying",
                  "key.namelength": 10,
                  "key.nameoffset": 798,
                  "key.offset": 794,
                  "key.parsed_declaration": "fileprivate let underlying: _AnyTensor",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "DynamicGraph._AnyTensor",
                  "key.typeusr": "$s4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLCD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10underlying33_FAF8ACE08B98206F331C715BAA401FC9LLAC01_dE0AGLLCvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type> { get }</Declaration>",
                  "key.bodylength": 18,
                  "key.bodyoffset": 851,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 44,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 830,
                  "key.offset": 826,
                  "key.parsed_declaration": "var graph: DynamicGraph",
                  "key.parsed_scope.end": 39,
                  "key.parsed_scope.start": 39,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC5graphACvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var _tensor: ccv_nnc_tensor_variable_t { get }</Declaration>",
                  "key.bodylength": 20,
                  "key.bodyoffset": 915,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 61,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 879,
                  "key.offset": 875,
                  "key.parsed_declaration": "var _tensor: ccv_nnc_tensor_variable_t",
                  "key.parsed_scope.end": 40,
                  "key.parsed_scope.start": 40,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC7_tensorXevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var requiresGrad: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 942
                    }
                  ],
                  "key.bodylength": 381,
                  "key.bodyoffset": 973,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiresGrad</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 406,
                  "key.name": "requiresGrad",
                  "key.namelength": 12,
                  "key.nameoffset": 953,
                  "key.offset": 949,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main16DynamicGraph_AnyP12requiresGradSbvp"
                    }
                  ],
                  "key.parsed_declaration": "public var requiresGrad: Bool",
                  "key.parsed_scope.end": 55,
                  "key.parsed_scope.start": 42,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC12requiresGradSbvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>required init(graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, tensor: ccv_nnc_tensor_variable_t, requiresGrad: <Type usr=\"s:Sb\">Bool</Type> = false, original: Any? = nil)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.required",
                      "key.length": 8,
                      "key.offset": 1361
                    }
                  ],
                  "key.bodylength": 122,
                  "key.bodyoffset": 1500,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tensor</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_tensor_variable_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>requiresGrad</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>original</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 253,
                  "key.name": "init(graph:tensor:requiresGrad:original:)",
                  "key.namelength": 128,
                  "key.nameoffset": 1370,
                  "key.offset": 1370,
                  "key.parsed_declaration": "required init(\n  graph: DynamicGraph, tensor: ccv_nnc_tensor_variable_t, requiresGrad: Bool = false,\n  original: Any? = nil\n)",
                  "key.parsed_scope.end": 63,
                  "key.parsed_scope.start": 57,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyAeC01_dE033_FAF8ACE08B98206F331C715BAA401FC9LLCcAGLlfc\">init(_: _AnyTensor)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyA2Ecfc\">init(_: AnyTensor)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.AnyTensor.Type) -> (DynamicGraph, <<error type>>, Bool, Any?) -> DynamicGraph.AnyTensor",
                  "key.typeusr": "$syXeXecD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorCyXeXecfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.fileprivate",
                  "key.annotated_decl": "<Declaration>fileprivate init(_ underlying: <Type usr=\"s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC\">_AnyTensor</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.fileprivate",
                      "key.length": 11,
                      "key.offset": 1629
                    }
                  ],
                  "key.bodylength": 40,
                  "key.bodyoffset": 1673,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>underlying</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC10_AnyTensor33_FAF8ACE08B98206F331C715BAA401FC9LLC\">_AnyTensor</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 73,
                  "key.name": "init(_:)",
                  "key.namelength": 30,
                  "key.nameoffset": 1641,
                  "key.offset": 1641,
                  "key.parsed_declaration": "fileprivate init(_ underlying: _AnyTensor)",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 65,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyXeXecfc\">init(graph:tensor:requiresGrad:original:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyA2Ecfc\">init(_: AnyTensor)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.AnyTensor.Type) -> (DynamicGraph._AnyTensor) -> DynamicGraph.AnyTensor",
                  "key.typeusr": "$sy4main12DynamicGraphC9AnyTensorCAC01_dE033_FAF8ACE08B98206F331C715BAA401FC9LLCcD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorCyAeC01_dE033_FAF8ACE08B98206F331C715BAA401FC9LLCcAGLlfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>deinit</Declaration>",
                  "key.bodylength": 87,
                  "key.bodyoffset": 1728,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 96,
                  "key.name": "deinit",
                  "key.namelength": 6,
                  "key.nameoffset": 1720,
                  "key.offset": 1720,
                  "key.parsed_declaration": "deinit",
                  "key.parsed_scope.end": 73,
                  "key.parsed_scope.start": 69,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.AnyTensor) -> () -> ()",
                  "key.typeusr": "$syycD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorCfd"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public required init(_ tensor: <Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.required",
                      "key.length": 8,
                      "key.offset": 1829
                    },
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 1822
                    }
                  ],
                  "key.bodylength": 47,
                  "key.bodyoffset": 1865,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 75,
                  "key.name": "init(_:)",
                  "key.namelength": 25,
                  "key.nameoffset": 1838,
                  "key.offset": 1838,
                  "key.parsed_declaration": "public required init(_ tensor: AnyTensor)",
                  "key.parsed_scope.end": 77,
                  "key.parsed_scope.start": 75,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyXeXecfc\">init(graph:tensor:requiresGrad:original:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorCyAeC01_dE033_FAF8ACE08B98206F331C715BAA401FC9LLCcAGLlfc\">init(_: _AnyTensor)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.AnyTensor.Type) -> (DynamicGraph.AnyTensor) -> DynamicGraph.AnyTensor",
                  "key.typeusr": "$sy4main12DynamicGraphC9AnyTensorCAEcD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorCyA2Ecfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var dimensions: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 1919
                    }
                  ],
                  "key.bodylength": 141,
                  "key.bodyoffset": 1949,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 165,
                  "key.name": "dimensions",
                  "key.namelength": 10,
                  "key.nameoffset": 1930,
                  "key.offset": 1926,
                  "key.parsed_declaration": "public var dimensions: [Int]",
                  "key.parsed_scope.end": 83,
                  "key.parsed_scope.start": 79,
                  "key.typename": "[Int]",
                  "key.typeusr": "$sSaySiGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10dimensionsSaySiGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 1960,
                  "key.offset": 1956,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 80,
                  "key.parsed_scope.start": 80,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10dimensionsSaySiGvg6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let info: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>info</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "info",
                  "key.namelength": 4,
                  "key.nameoffset": 1992,
                  "key.offset": 1988,
                  "key.parsed_declaration": "let info = ccv_nnc_tensor_variable_params(_graph, _tensor)",
                  "key.parsed_scope.end": 81,
                  "key.parsed_scope.start": 81,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10dimensionsSaySiGvg4infoL_Xevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2097
                    }
                  ],
                  "key.bodylength": 154,
                  "key.bodyoffset": 2130,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 181,
                  "key.name": "format",
                  "key.namelength": 6,
                  "key.nameoffset": 2108,
                  "key.offset": 2104,
                  "key.parsed_declaration": "public var format: TensorFormat",
                  "key.parsed_scope.end": 89,
                  "key.parsed_scope.start": 85,
                  "key.typename": "TensorFormat",
                  "key.typeusr": "$s4main12TensorFormatOD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC6formatAA0E6FormatOvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 2141,
                  "key.offset": 2137,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC6formatAA0E6FormatOvg6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let info: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>info</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "info",
                  "key.namelength": 4,
                  "key.nameoffset": 2173,
                  "key.offset": 2169,
                  "key.parsed_declaration": "let info = ccv_nnc_tensor_variable_params(_graph, _tensor)",
                  "key.parsed_scope.end": 87,
                  "key.parsed_scope.start": 87,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC6formatAA0E6FormatOvg4infoL_Xevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var increments: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2291
                    }
                  ],
                  "key.bodylength": 225,
                  "key.bodyoffset": 2321,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 249,
                  "key.name": "increments",
                  "key.namelength": 10,
                  "key.nameoffset": 2302,
                  "key.offset": 2298,
                  "key.parsed_declaration": "public var increments: [Int]",
                  "key.parsed_scope.end": 96,
                  "key.parsed_scope.start": 91,
                  "key.typename": "[Int]",
                  "key.typeusr": "$sSaySiGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 2332,
                  "key.offset": 2328,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 92,
                  "key.parsed_scope.start": 92,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvg6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 2364,
                  "key.offset": 2360,
                  "key.parsed_declaration": "let _streamContext = graph.streamContext?._stream",
                  "key.parsed_scope.end": 93,
                  "key.parsed_scope.start": 93,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvg14_streamContextL_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cTensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 81,
                  "key.name": "cTensor",
                  "key.namelength": 7,
                  "key.nameoffset": 2420,
                  "key.offset": 2416,
                  "key.parsed_declaration": "let cTensor = ccv_nnc_tensor_from_variable_impl(_graph, _tensor, _streamContext)!",
                  "key.parsed_scope.end": 94,
                  "key.parsed_scope.start": 94,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvg01cE0L_Xevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var isConstant: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2680
                    }
                  ],
                  "key.bodylength": 108,
                  "key.bodyoffset": 2709,
                  "key.doc.column": 16,
                  "key.doc.comment": "A constant tensor can only be used as input, you cannot compute gradients\nfor a constant tensor.",
                  "key.doc.declaration": "public var isConstant: Bool { get }",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"102\" column=\"16\"><Name>isConstant</Name><USR>s:4main12DynamicGraphC9AnyTensorC10isConstantSbvp</USR><Declaration>public var isConstant: Bool { get }</Declaration><CommentParts><Abstract><Para>A constant tensor can only be used as input, you cannot compute gradients for a constant tensor.</Para></Abstract></CommentParts></Other>",
                  "key.doc.line": 102,
                  "key.doc.name": "isConstant",
                  "key.doc.type": "Other",
                  "key.doclength": 122,
                  "key.docoffset": 2553,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isConstant</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 131,
                  "key.name": "isConstant",
                  "key.namelength": 10,
                  "key.nameoffset": 2691,
                  "key.offset": 2687,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main16DynamicGraph_AnyP10isConstantSbvp"
                    }
                  ],
                  "key.parsed_declaration": "public var isConstant: Bool",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 102,
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10isConstantSbvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 2720,
                  "key.offset": 2716,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 103,
                  "key.parsed_scope.start": 103,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC10isConstantSbvg6_graphL_s13OpaquePointerVvp"
                }
              ],
              "key.typename": "DynamicGraph.AnyTensor.Type",
              "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 2875
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2868
                }
              ],
              "key.bodylength": 1801,
              "key.bodyoffset": 2930,
              "key.doc.column": 22,
              "key.doc.comment": "A typed tensor variable.",
              "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 111,
              "key.doc.name": "Tensor",
              "key.doc.type": "Class",
              "key.doclength": 39,
              "key.docoffset": 2826,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 9,
                  "key.offset": 2919
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
              "key.inheritedtypes": [
                {
                  "key.name": "AnyTensor"
                }
              ],
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 1851,
              "key.name": "Tensor",
              "key.namelength": 6,
              "key.nameoffset": 2887,
              "key.offset": 2881,
              "key.parsed_declaration": "public final class Tensor<Element: TensorNumeric>: AnyTensor",
              "key.parsed_scope.end": 155,
              "key.parsed_scope.start": 111,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 2903
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 2894,
                  "key.offset": 2894,
                  "key.parsed_declaration": "public final class Tensor<Element: TensorNumeric",
                  "key.parsed_scope.end": 111,
                  "key.parsed_scope.start": 111,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7Elementxmfp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private weak var _rawValue: NNC.AnyTensorStorage?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.weak",
                      "key.length": 4,
                      "key.offset": 3020
                    },
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 3012
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_rawValue</decl.name>: <decl.var.type>NNC.AnyTensorStorage?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 42,
                  "key.name": "_rawValue",
                  "key.namelength": 9,
                  "key.nameoffset": 3029,
                  "key.offset": 3025,
                  "key.parsed_declaration": "private weak var _rawValue: NNC.AnyTensorStorage? = nil",
                  "key.parsed_scope.end": 113,
                  "key.parsed_scope.start": 113,
                  "key.setter_accessibility": "source.lang.swift.accessibility.private",
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC9_rawValue33_FAF8ACE08B98206F331C715BAA401FC9LLXevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var rawValue: NNC.Tensor&lt;Element&gt; { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3153
                    }
                  ],
                  "key.bodylength": 442,
                  "key.bodyoffset": 3195,
                  "key.doc.column": 16,
                  "key.doc.comment": "Get the underlying tensor. If not available, create one.",
                  "key.doc.declaration": "public var rawValue: NNC.Tensor<Element> { get }",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"118\" column=\"16\"><Name>rawValue</Name><USR>s:4main12DynamicGraphC6TensorC8rawValueXevp</USR><Declaration>public var rawValue: NNC.Tensor&lt;Element&gt; { get }</Declaration><CommentParts><Abstract><Para>Get the underlying tensor. If not available, create one.</Para></Abstract></CommentParts></Other>",
                  "key.doc.line": 118,
                  "key.doc.name": "rawValue",
                  "key.doc.type": "Other",
                  "key.doclength": 75,
                  "key.docoffset": 3073,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type>NNC.Tensor&lt;Element&gt;</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 478,
                  "key.name": "rawValue",
                  "key.namelength": 8,
                  "key.nameoffset": 3164,
                  "key.offset": 3160,
                  "key.parsed_declaration": "public var rawValue: NNC.Tensor<Element>",
                  "key.parsed_scope.end": 128,
                  "key.parsed_scope.start": 118,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC8rawValueXevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 3295,
                  "key.offset": 3291,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 122,
                  "key.parsed_scope.start": 122,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC8rawValueXevg6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 3327,
                  "key.offset": 3323,
                  "key.parsed_declaration": "let _streamContext = graph.streamContext?._stream",
                  "key.parsed_scope.end": 123,
                  "key.parsed_scope.start": 123,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC8rawValueXevg14_streamContextL_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 80,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 3383,
                  "key.offset": 3379,
                  "key.parsed_declaration": "let tensor = ccv_nnc_tensor_from_variable_impl(_graph, _tensor, _streamContext)!",
                  "key.parsed_scope.end": 124,
                  "key.parsed_scope.start": 124,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC8rawValueXevg6tensorL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let rawValue: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "rawValue",
                  "key.namelength": 8,
                  "key.nameoffset": 3470,
                  "key.offset": 3466,
                  "key.parsed_declaration": "let rawValue = NNC.AnyTensorStorage(tensor, original: self)",
                  "key.parsed_scope.end": 125,
                  "key.parsed_scope.start": 125,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6TensorC8rawValueXevp\">rawValue</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC8rawValueXevgAFL0_Xevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public subscript(indices: <Type usr=\"s:Si\">Int</Type>...) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type> { get set }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3721
                    }
                  ],
                  "key.bodylength": 960,
                  "key.bodyoffset": 3767,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
                  "key.kind": "source.lang.swift.decl.function.subscript",
                  "key.length": 1000,
                  "key.name": "subscript(_:)",
                  "key.namelength": 26,
                  "key.nameoffset": 3728,
                  "key.offset": 3728,
                  "key.parsed_declaration": "public subscript(indices: Int...) -> Element",
                  "key.parsed_scope.end": 154,
                  "key.parsed_scope.start": 131,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcip\">subscript(_:_:)</RelatedName>"
                    }
                  ],
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.substructure": [],
                  "key.typename": "<Element where Element : TensorNumeric> (Int...) -> Element",
                  "key.typeusr": "$syxSid_tcD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcip"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 3889,
                  "key.offset": 3885,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 136,
                  "key.parsed_scope.start": 136,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcig6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 3923,
                  "key.offset": 3919,
                  "key.parsed_declaration": "let _streamContext = graph.streamContext?._stream",
                  "key.parsed_scope.end": 137,
                  "key.parsed_scope.start": 137,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcig14_streamContextL_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 80,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 3981,
                  "key.offset": 3977,
                  "key.parsed_declaration": "let tensor = ccv_nnc_tensor_from_variable_impl(_graph, _tensor, _streamContext)!",
                  "key.parsed_scope.end": 138,
                  "key.parsed_scope.start": 138,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcig6tensorL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let rawValue: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "rawValue",
                  "key.namelength": 8,
                  "key.nameoffset": 4070,
                  "key.offset": 4066,
                  "key.parsed_declaration": "let rawValue = NNC.AnyTensorStorage(tensor, original: self)",
                  "key.parsed_scope.end": 139,
                  "key.parsed_scope.start": 139,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6TensorC8rawValueXevp\">rawValue</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcig8rawValueL0_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 4368,
                  "key.offset": 4364,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 147,
                  "key.parsed_scope.start": 147,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6_graphs13OpaquePointerVvp\">_graph</RelatedName>"
                    }
                  ],
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcis6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 4402,
                  "key.offset": 4398,
                  "key.parsed_declaration": "let _streamContext = graph.streamContext?._stream",
                  "key.parsed_scope.end": 148,
                  "key.parsed_scope.start": 148,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcis14_streamContextL_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 80,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 4460,
                  "key.offset": 4456,
                  "key.parsed_declaration": "let tensor = ccv_nnc_tensor_from_variable_impl(_graph, _tensor, _streamContext)!",
                  "key.parsed_scope.end": 149,
                  "key.parsed_scope.start": 149,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcis6tensorL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let rawValue: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "rawValue",
                  "key.namelength": 8,
                  "key.nameoffset": 4549,
                  "key.offset": 4545,
                  "key.parsed_declaration": "let rawValue = NNC.AnyTensorStorage(tensor, original: self)",
                  "key.parsed_scope.end": 150,
                  "key.parsed_scope.start": 150,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6TensorC8rawValueXevp\">rawValue</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorCyxSid_tcis8rawValueL0_Xevp"
                }
              ],
              "key.typename": "DynamicGraph.Tensor<Element>.Type",
              "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
              "key.usr": "s:4main12DynamicGraphC6TensorC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 4740,
              "key.offset": 4736,
              "key.parsed_declaration": "let _graph: OpaquePointer",
              "key.parsed_scope.end": 157,
              "key.parsed_scope.start": 157,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main12DynamicGraphC6_graphs13OpaquePointerVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>streamContext</decl.name>: <decl.var.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 39,
              "key.name": "streamContext",
              "key.namelength": 13,
              "key.nameoffset": 4768,
              "key.offset": 4764,
              "key.parsed_declaration": "var streamContext: StreamContext? = nil",
              "key.parsed_scope.end": 158,
              "key.parsed_scope.start": 158,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "StreamContext?",
              "key.typeusr": "$s4main13StreamContextCSgD",
              "key.usr": "s:4main12DynamicGraphC13streamContextAA06StreamE0CSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>struct <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.WeakAnyTensor</Declaration>",
              "key.bodylength": 34,
              "key.bodyoffset": 4829,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>WeakAnyTensor</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 57,
              "key.name": "WeakAnyTensor",
              "key.namelength": 13,
              "key.nameoffset": 4814,
              "key.offset": 4807,
              "key.parsed_declaration": "struct WeakAnyTensor",
              "key.parsed_scope.end": 162,
              "key.parsed_scope.start": 160,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>weak var value: <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.weak",
                      "key.length": 4,
                      "key.offset": 4834
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>value</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 21,
                  "key.name": "value",
                  "key.namelength": 5,
                  "key.nameoffset": 4843,
                  "key.offset": 4839,
                  "key.parsed_declaration": "weak var value: AnyTensor?",
                  "key.parsed_scope.end": 161,
                  "key.parsed_scope.start": 161,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "DynamicGraph.AnyTensor?",
                  "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCSgD",
                  "key.usr": "s:4main12DynamicGraphC13WeakAnyTensorV5valueAC0eF0CSgvp"
                }
              ],
              "key.typename": "DynamicGraph.WeakAnyTensor.Type",
              "key.typeusr": "$s4main12DynamicGraphC13WeakAnyTensorVmD",
              "key.usr": "s:4main12DynamicGraphC13WeakAnyTensorV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var trackGrads: [<Type usr=\"s:SO\">ObjectIdentifier</Type> : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>trackGrads</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct> : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</ref.struct>]</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 52,
              "key.name": "trackGrads",
              "key.namelength": 10,
              "key.nameoffset": 4871,
              "key.offset": 4867,
              "key.parsed_declaration": "var trackGrads = [ObjectIdentifier: WeakAnyTensor]()",
              "key.parsed_scope.end": 163,
              "key.parsed_scope.start": 163,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "[ObjectIdentifier : DynamicGraph.WeakAnyTensor]",
              "key.typeusr": "$sSDySO4main12DynamicGraphC13WeakAnyTensorVGD",
              "key.usr": "s:4main12DynamicGraphC10trackGradsSDySOAC13WeakAnyTensorVGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4923
                }
              ],
              "key.bodylength": 80,
              "key.bodyoffset": 4938,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 89,
              "key.name": "init()",
              "key.namelength": 6,
              "key.nameoffset": 4930,
              "key.offset": 4930,
              "key.parsed_declaration": "public init()",
              "key.parsed_scope.end": 168,
              "key.parsed_scope.start": 165,
              "key.substructure": [],
              "key.typename": "(DynamicGraph.Type) -> () -> DynamicGraph",
              "key.typeusr": "$s4main12DynamicGraphCycD",
              "key.usr": "s:4main12DynamicGraphCACycfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>deinit</Declaration>",
              "key.bodylength": 42,
              "key.bodyoffset": 5031,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 51,
              "key.name": "deinit",
              "key.namelength": 6,
              "key.nameoffset": 5023,
              "key.offset": 5023,
              "key.parsed_declaration": "deinit",
              "key.parsed_scope.end": 172,
              "key.parsed_scope.start": 170,
              "key.substructure": [],
              "key.typename": "(DynamicGraph) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main12DynamicGraphCfd"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 1114,
          "key.bodyoffset": 5102,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1139,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 5088,
          "key.offset": 5078,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 202,
          "key.parsed_scope.start": 175,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>func trackGrad(_ tensor: <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>)</Declaration>",
              "key.bodylength": 113,
              "key.bodyoffset": 5142,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackGrad</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 151,
              "key.name": "trackGrad(_:)",
              "key.namelength": 30,
              "key.nameoffset": 5110,
              "key.offset": 5105,
              "key.parsed_declaration": "func trackGrad(_ tensor: AnyTensor)",
              "key.parsed_scope.end": 179,
              "key.parsed_scope.start": 176,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let weakAnyTensor: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>weakAnyTensor</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 48,
                  "key.name": "weakAnyTensor",
                  "key.namelength": 13,
                  "key.nameoffset": 5151,
                  "key.offset": 5147,
                  "key.parsed_declaration": "let weakAnyTensor = WeakAnyTensor(value: tensor)",
                  "key.parsed_scope.end": 177,
                  "key.parsed_scope.start": 177,
                  "key.typename": "DynamicGraph.WeakAnyTensor",
                  "key.typeusr": "$s4main12DynamicGraphC13WeakAnyTensorVD",
                  "key.usr": "s:4main12DynamicGraphC9trackGradyyAC9AnyTensorCF04weakfG0L_AC04WeakfG0Vvp"
                }
              ],
              "key.typename": "(DynamicGraph) -> (DynamicGraph.AnyTensor) -> ()",
              "key.typeusr": "$syy4main12DynamicGraphC9AnyTensorCcD",
              "key.usr": "s:4main12DynamicGraphC9trackGradyyAC9AnyTensorCF"
            },
            {
              "key.annotated_decl": "<Declaration>func untrackGrad(_ objectIdentifier: <Type usr=\"s:SO\">ObjectIdentifier</Type>)</Declaration>",
              "key.bodylength": 42,
              "key.bodyoffset": 5315,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>untrackGrad</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>objectIdentifier</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SO\">ObjectIdentifier</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 99,
              "key.name": "untrackGrad(_:)",
              "key.namelength": 49,
              "key.nameoffset": 5264,
              "key.offset": 5259,
              "key.parsed_declaration": "func untrackGrad(_ objectIdentifier: ObjectIdentifier)",
              "key.parsed_scope.end": 182,
              "key.parsed_scope.start": 180,
              "key.substructure": [],
              "key.typename": "(DynamicGraph) -> (ObjectIdentifier) -> ()",
              "key.typeusr": "$syySOcD",
              "key.usr": "s:4main12DynamicGraphC11untrackGradyySOF"
            },
            {
              "key.annotated_decl": "<Declaration>func gradients&lt;S&gt;(for tensors: <Type usr=\"s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF1SL_xmfp\">S</Type>) -&gt; [<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>] where S : <Type usr=\"s:ST\">Sequence</Type>, S.Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.bodylength": 766,
              "key.bodyoffset": 5448,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gradients</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF1SL_xmfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF1SL_xmfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 854,
              "key.name": "gradients(for:)",
              "key.namelength": 38,
              "key.nameoffset": 5366,
              "key.offset": 5361,
              "key.parsed_declaration": "func gradients<S: Sequence>(for tensors: S) -> [AnyTensor] where S.Element: AnyTensor",
              "key.parsed_scope.end": 201,
              "key.parsed_scope.start": 183,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 5379
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 5376,
                  "key.offset": 5376,
                  "key.parsed_declaration": "func gradients<S: Sequence",
                  "key.parsed_scope.end": 183,
                  "key.parsed_scope.start": 183,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF1SL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let values: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>values</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 54,
                  "key.name": "values",
                  "key.namelength": 6,
                  "key.nameoffset": 5457,
                  "key.offset": 5453,
                  "key.parsed_declaration": "let values = trackGrads.values.compactMap { $0.value }",
                  "key.parsed_scope.end": 184,
                  "key.parsed_scope.start": 184,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF6valuesL_AHvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var bitmask: [<Type usr=\"s:s6UInt64V\">UInt64</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bitmask</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s6UInt64V\">UInt64</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "bitmask",
                  "key.namelength": 7,
                  "key.nameoffset": 5562,
                  "key.offset": 5558,
                  "key.parsed_declaration": "var bitmask = [UInt64](repeating: 0, count: (values.count + 63) / 64)",
                  "key.parsed_scope.end": 186,
                  "key.parsed_scope.start": 186,
                  "key.typename": "[UInt64]",
                  "key.typeusr": "$sSays6UInt64VGD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF7bitmaskL_Says6UInt64VGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let sources: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sources</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "sources",
                  "key.namelength": 7,
                  "key.nameoffset": 5636,
                  "key.offset": 5632,
                  "key.parsed_declaration": "let sources: [ccv_nnc_tensor_variable_t?] = values.map { $0._tensor }",
                  "key.parsed_scope.end": 187,
                  "key.parsed_scope.start": 187,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF7sourcesL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let destinations: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destinations</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 75,
                  "key.name": "destinations",
                  "key.namelength": 12,
                  "key.nameoffset": 5710,
                  "key.offset": 5706,
                  "key.parsed_declaration": "let destinations: [ccv_nnc_tensor_variable_t?] = tensors.map { $0._tensor }",
                  "key.parsed_scope.end": 188,
                  "key.parsed_scope.start": 188,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF12destinationsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var gradients: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>gradients</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 29,
                  "key.name": "gradients",
                  "key.namelength": 9,
                  "key.nameoffset": 6027,
                  "key.offset": 6023,
                  "key.parsed_declaration": "var gradients = [AnyTensor]()",
                  "key.parsed_scope.end": 194,
                  "key.parsed_scope.start": 194,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF\">gradients(for:)</RelatedName>"
                    }
                  ],
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlFADL_AHvp"
                }
              ],
              "key.typename": "<S where S : Sequence, S.Element : DynamicGraph.AnyTensor> (DynamicGraph) -> (S) -> [DynamicGraph.AnyTensor]",
              "key.typeusr": "$s3forSay4main12DynamicGraphC9AnyTensorCGx_tcSTRzAF7ElementRczluD",
              "key.usr": "s:4main12DynamicGraphC9gradients3forSayAC9AnyTensorCGx_tSTRzAG7ElementRczlF"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 1043,
          "key.bodyoffset": 6243,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1068,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 6229,
          "key.offset": 6219,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 243,
          "key.parsed_scope.start": 204,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public enum LogLevel</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6246
                }
              ],
              "key.bodylength": 231,
              "key.bodyoffset": 6268,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>LogLevel</decl.name></decl.enum>",
              "key.kind": "source.lang.swift.decl.enum",
              "key.length": 247,
              "key.name": "LogLevel",
              "key.namelength": 8,
              "key.nameoffset": 6258,
              "key.offset": 6253,
              "key.parsed_declaration": "public enum LogLevel",
              "key.parsed_scope.end": 214,
              "key.parsed_scope.start": 205,
              "key.substructure": [
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 9,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 6310,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case none</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "No log output (the default).",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"207\" column=\"10\"><Name>none</Name><USR>s:4main12DynamicGraphC8LogLevelO4noneyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>No log output (the default).</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 207,
                      "key.doc.name": "none",
                      "key.doc.type": "Other",
                      "key.doclength": 33,
                      "key.docoffset": 6273,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>none</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 4,
                      "key.name": "none",
                      "key.namelength": 4,
                      "key.nameoffset": 6315,
                      "key.offset": 6315,
                      "key.parsed_declaration": "case none",
                      "key.parsed_scope.end": 207,
                      "key.parsed_scope.start": 207,
                      "key.typename": "(DynamicGraph.LogLevel.Type) -> DynamicGraph.LogLevel",
                      "key.typeusr": "$sy4main12DynamicGraphC8LogLevelOAEmcD",
                      "key.usr": "s:4main12DynamicGraphC8LogLevelO4noneyA2EmF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 12,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 6379,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case verbose</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "Verbose, show all computations and its values.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"209\" column=\"10\"><Name>verbose</Name><USR>s:4main12DynamicGraphC8LogLevelO7verboseyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Verbose, show all computations and its values.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 209,
                      "key.doc.name": "verbose",
                      "key.doc.type": "Other",
                      "key.doclength": 51,
                      "key.docoffset": 6324,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>verbose</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 7,
                      "key.name": "verbose",
                      "key.namelength": 7,
                      "key.nameoffset": 6384,
                      "key.offset": 6384,
                      "key.parsed_declaration": "case verbose",
                      "key.parsed_scope.end": 209,
                      "key.parsed_scope.start": 209,
                      "key.typename": "(DynamicGraph.LogLevel.Type) -> DynamicGraph.LogLevel",
                      "key.typeusr": "$sy4main12DynamicGraphC8LogLevelOAEmcD",
                      "key.usr": "s:4main12DynamicGraphC8LogLevelO7verboseyA2EmF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 9,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 6427,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case info</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "Show all computations.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"211\" column=\"10\"><Name>info</Name><USR>s:4main12DynamicGraphC8LogLevelO4infoyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Show all computations.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 211,
                      "key.doc.name": "info",
                      "key.doc.type": "Other",
                      "key.doclength": 27,
                      "key.docoffset": 6396,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>info</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 4,
                      "key.name": "info",
                      "key.namelength": 4,
                      "key.nameoffset": 6432,
                      "key.offset": 6432,
                      "key.parsed_declaration": "case info",
                      "key.parsed_scope.end": 211,
                      "key.parsed_scope.start": 211,
                      "key.typename": "(DynamicGraph.LogLevel.Type) -> DynamicGraph.LogLevel",
                      "key.typeusr": "$sy4main12DynamicGraphC8LogLevelOAEmcD",
                      "key.usr": "s:4main12DynamicGraphC8LogLevelO4infoyA2EmF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 10,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 6486,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case error</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "Only show errors if encountered any.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"213\" column=\"10\"><Name>error</Name><USR>s:4main12DynamicGraphC8LogLevelO5erroryA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Only show errors if encountered any.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 213,
                      "key.doc.name": "error",
                      "key.doc.type": "Other",
                      "key.doclength": 41,
                      "key.docoffset": 6441,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 5,
                      "key.name": "error",
                      "key.namelength": 5,
                      "key.nameoffset": 6491,
                      "key.offset": 6491,
                      "key.parsed_declaration": "case error",
                      "key.parsed_scope.end": 213,
                      "key.parsed_scope.start": 213,
                      "key.typename": "(DynamicGraph.LogLevel.Type) -> DynamicGraph.LogLevel",
                      "key.typeusr": "$sy4main12DynamicGraphC8LogLevelOAEmcD",
                      "key.usr": "s:4main12DynamicGraphC8LogLevelO5erroryA2EmF"
                    }
                  ]
                }
              ],
              "key.typename": "DynamicGraph.LogLevel.Type",
              "key.typeusr": "$s4main12DynamicGraphC8LogLevelOmD",
              "key.usr": "s:4main12DynamicGraphC8LogLevelO"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var logLevel: <Type usr=\"s:4main12DynamicGraphC8LogLevelO\">LogLevel</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6558
                }
              ],
              "key.bodylength": 695,
              "key.bodyoffset": 6589,
              "key.doc.column": 14,
              "key.doc.comment": "Set the log level on a dynamic graph.",
              "key.doc.declaration": "public var logLevel: LogLevel { get set }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"218\" column=\"14\"><Name>logLevel</Name><USR>s:4main12DynamicGraphC8logLevelAC03LogE0Ovp</USR><Declaration>public var logLevel: LogLevel { get set }</Declaration><CommentParts><Abstract><Para>Set the log level on a dynamic graph.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 218,
              "key.doc.name": "logLevel",
              "key.doc.type": "Other",
              "key.doclength": 52,
              "key.docoffset": 6503,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>logLevel</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12DynamicGraphC8LogLevelO\">LogLevel</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 720,
              "key.name": "logLevel",
              "key.namelength": 8,
              "key.nameoffset": 6569,
              "key.offset": 6565,
              "key.parsed_declaration": "public var logLevel: LogLevel",
              "key.parsed_scope.end": 242,
              "key.parsed_scope.start": 218,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "DynamicGraph.LogLevel",
              "key.typeusr": "$s4main12DynamicGraphC8LogLevelOD",
              "key.usr": "s:4main12DynamicGraphC8logLevelAC03LogE0Ovp"
            },
            {
              "key.annotated_decl": "<Declaration>let cliLevels: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cliLevels</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "cliLevels",
              "key.namelength": 9,
              "key.nameoffset": 6610,
              "key.offset": 6606,
              "key.parsed_declaration": "let cliLevels = ccv_cli_get_output_levels()",
              "key.parsed_scope.end": 220,
              "key.parsed_scope.start": 220,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC8logLevelAC03LogE0Ovg9cliLevelsL_Xevp"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 770,
          "key.bodyoffset": 7313,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 795,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 7299,
          "key.offset": 7289,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 263,
          "key.parsed_scope.start": 245,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct Statistics</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7350
                }
              ],
              "key.bodylength": 180,
              "key.bodyoffset": 7376,
              "key.doc.column": 17,
              "key.doc.comment": "Statistics about the graph.",
              "key.doc.declaration": "public struct Statistics",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"247\" column=\"17\"><Name>Statistics</Name><USR>s:4main12DynamicGraphC10StatisticsV</USR><Declaration>public struct Statistics</Declaration><CommentParts><Abstract><Para>Statistics about the graph.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 247,
              "key.doc.name": "Statistics",
              "key.doc.type": "Class",
              "key.doclength": 32,
              "key.docoffset": 7316,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Statistics</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 200,
              "key.name": "Statistics",
              "key.namelength": 10,
              "key.nameoffset": 7364,
              "key.offset": 7357,
              "key.parsed_declaration": "public struct Statistics",
              "key.parsed_scope.end": 252,
              "key.parsed_scope.start": 247,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var variables: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 7445
                    }
                  ],
                  "key.doc.column": 16,
                  "key.doc.comment": "How many variables (including constants) in this graph.",
                  "key.doc.declaration": "public var variables: Int",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"249\" column=\"16\"><Name>variables</Name><USR>s:4main12DynamicGraphC10StatisticsV9variablesSivp</USR><Declaration>public var variables: Int</Declaration><CommentParts><Abstract><Para>How many variables (including constants) in this graph.</Para></Abstract></CommentParts></Other>",
                  "key.doc.line": 249,
                  "key.doc.name": "variables",
                  "key.doc.type": "Other",
                  "key.doclength": 60,
                  "key.docoffset": 7381,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>variables</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 18,
                  "key.name": "variables",
                  "key.namelength": 9,
                  "key.nameoffset": 7456,
                  "key.offset": 7452,
                  "key.parsed_declaration": "public var variables: Int",
                  "key.parsed_scope.end": 249,
                  "key.parsed_scope.start": 249,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC10StatisticsV9variablesSivp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var computations: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 7525
                    }
                  ],
                  "key.doc.column": 16,
                  "key.doc.comment": "How many computation units in this graph.",
                  "key.doc.declaration": "public var computations: Int",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"251\" column=\"16\"><Name>computations</Name><USR>s:4main12DynamicGraphC10StatisticsV12computationsSivp</USR><Declaration>public var computations: Int</Declaration><CommentParts><Abstract><Para>How many computation units in this graph.</Para></Abstract></CommentParts></Other>",
                  "key.doc.line": 251,
                  "key.doc.name": "computations",
                  "key.doc.type": "Other",
                  "key.doclength": 46,
                  "key.docoffset": 7475,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>computations</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 21,
                  "key.name": "computations",
                  "key.namelength": 12,
                  "key.nameoffset": 7536,
                  "key.offset": 7532,
                  "key.parsed_declaration": "public var computations: Int",
                  "key.parsed_scope.end": 251,
                  "key.parsed_scope.start": 251,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC10StatisticsV12computationsSivp"
                }
              ],
              "key.typename": "DynamicGraph.Statistics.Type",
              "key.typeusr": "$s4main12DynamicGraphC10StatisticsVmD",
              "key.usr": "s:4main12DynamicGraphC10StatisticsV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var statistics: <Type usr=\"s:4main12DynamicGraphC10StatisticsV\">Statistics</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7751
                }
              ],
              "key.bodylength": 295,
              "key.bodyoffset": 7786,
              "key.doc.column": 14,
              "key.doc.comment": "Collect statistics from a dynamic graph. It computes how many variables and computations\nare still tracked. If you have memory leaks, this is useful to track down that.",
              "key.doc.declaration": "public var statistics: Statistics { get }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"257\" column=\"14\"><Name>statistics</Name><USR>s:4main12DynamicGraphC10statisticsAC10StatisticsVvp</USR><Declaration>public var statistics: Statistics { get }</Declaration><CommentParts><Abstract><Para>Collect statistics from a dynamic graph. It computes how many variables and computations are still tracked. If you have memory leaks, this is useful to track down that.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 257,
              "key.doc.name": "statistics",
              "key.doc.type": "Other",
              "key.doclength": 188,
              "key.docoffset": 7560,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>statistics</decl.name>: <decl.var.type><ref.struct usr=\"s:4main12DynamicGraphC10StatisticsV\">Statistics</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 324,
              "key.name": "statistics",
              "key.namelength": 10,
              "key.nameoffset": 7762,
              "key.offset": 7758,
              "key.parsed_declaration": "public var statistics: Statistics",
              "key.parsed_scope.end": 262,
              "key.parsed_scope.start": 257,
              "key.typename": "DynamicGraph.Statistics",
              "key.typeusr": "$s4main12DynamicGraphC10StatisticsVD",
              "key.usr": "s:4main12DynamicGraphC10statisticsAC10StatisticsVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let variables: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>variables</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 93,
              "key.name": "variables",
              "key.namelength": 9,
              "key.nameoffset": 7795,
              "key.offset": 7791,
              "key.parsed_declaration": "let variables = ccv_nnc_dynamic_graph_bookkeeping_count(_graph, Int32(CCV_NNC_SYMBOL_TENSOR))",
              "key.parsed_scope.end": 258,
              "key.parsed_scope.start": 258,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC10statisticsAC10StatisticsVvg9variablesL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let computations: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>computations</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 107,
              "key.name": "computations",
              "key.namelength": 12,
              "key.nameoffset": 7893,
              "key.offset": 7889,
              "key.parsed_declaration": "let computations = ccv_nnc_dynamic_graph_bookkeeping_count(\n  _graph, Int32(CCV_NNC_SYMBOL_GRAPH_EXEC))",
              "key.parsed_scope.end": 259,
              "key.parsed_scope.start": 259,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC10statisticsAC10StatisticsVvg12computationsL_Xevp"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>func == (lhs: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</Type>, rhs: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>",
          "key.bodylength": 34,
          "key.bodyoffset": 8170,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC13WeakAnyTensorV\">WeakAnyTensor</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 119,
          "key.name": "==(_:_:)",
          "key.namelength": 69,
          "key.nameoffset": 8091,
          "key.offset": 8086,
          "key.parsed_declaration": "func == (lhs: DynamicGraph.WeakAnyTensor, rhs: DynamicGraph.WeakAnyTensor) -> Bool",
          "key.parsed_scope.end": 267,
          "key.parsed_scope.start": 265,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main13HashableModelV2eeoiySbAC_ACtFZ\">== (_: HashableModel, _: HashableModel) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(DynamicGraph.WeakAnyTensor, DynamicGraph.WeakAnyTensor) -> Bool",
          "key.typeusr": "$sySb4main12DynamicGraphC13WeakAnyTensorV_AEtcD",
          "key.usr": "s:4main2eeoiySbAA12DynamicGraphC13WeakAnyTensorV_AFtF"
        },
        {
          "key.annotated_decl": "<Declaration>struct <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.WeakAnyTensor</Declaration>",
          "key.bodylength": 138,
          "key.bodyoffset": 8255,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 8,
              "key.offset": 8245
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>WeakAnyTensor</decl.name></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Hashable"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 187,
          "key.name": "DynamicGraph.WeakAnyTensor",
          "key.namelength": 26,
          "key.nameoffset": 8217,
          "key.offset": 8207,
          "key.parsed_declaration": "extension DynamicGraph.WeakAnyTensor: Hashable",
          "key.parsed_scope.end": 274,
          "key.parsed_scope.start": 269,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>func hash(into hasher: inout <Type usr=\"s:s6HasherV\">Hasher</Type>)</Declaration>",
              "key.bodylength": 95,
              "key.bodyoffset": 8296,
              "key.doc.declaration": "func hash(into hasher: inout Hasher)",
              "key.doc.discussion": [
                {
                  "Para": "Implement this method to conform to the `Hashable` protocol. The components used for hashing must be the same as the components compared in your type’s `==` operator implementation. Call `hasher.combine(_:)` with each of these components."
                },
                {
                  "Important": ""
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Function><Name>hash(into:)</Name><USR>s:SH4hash4intoys6HasherVz_tF</USR><Declaration>func hash(into hasher: inout Hasher)</Declaration><CommentParts><Abstract><Para>Hashes the essential components of this value by feeding them into the given hasher.</Para></Abstract><Parameters><Parameter><Name>hasher</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The hasher to use when combining the components of this instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>Implement this method to conform to the <codeVoice>Hashable</codeVoice> protocol. The components used for hashing must be the same as the components compared in your type’s <codeVoice>==</codeVoice> operator implementation. Call <codeVoice>hasher.combine(_:)</codeVoice> with each of these components.</Para><Important><Para>Never call <codeVoice>finalize()</codeVoice> on <codeVoice>hasher</codeVoice>. Doing so may become a compile-time error in the future.</Para></Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.name": "hash(into:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The hasher to use when combining the components of this instance."
                    }
                  ],
                  "name": "hasher"
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hash</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into</decl.var.parameter.argument_label> <decl.var.parameter.name>hasher</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.struct usr=\"s:s6HasherV\">Hasher</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 134,
              "key.name": "hash(into:)",
              "key.namelength": 31,
              "key.nameoffset": 8263,
              "key.offset": 8258,
              "key.overrides": [
                {
                  "key.usr": "s:SH4hash4intoys6HasherVz_tF"
                }
              ],
              "key.parsed_declaration": "func hash(into hasher: inout Hasher)",
              "key.parsed_scope.end": 273,
              "key.parsed_scope.start": 270,
              "key.substructure": [],
              "key.typename": "(DynamicGraph.WeakAnyTensor) -> (inout Hasher) -> ()",
              "key.typeusr": "$s4intoys6HasherVz_tcD",
              "key.usr": "s:SH4hash4intoys6HasherVz_tF"
            }
          ],
          "key.typename": "DynamicGraph.WeakAnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC13WeakAnyTensorVmD",
          "key.usr": "s:4main12DynamicGraphC13WeakAnyTensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 1514,
          "key.bodyoffset": 8430,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1549,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 8406,
          "key.offset": 8396,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 315,
          "key.parsed_scope.start": 276,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">Self</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8434
                }
              ],
              "key.bodylength": 724,
              "key.bodyoffset": 8561,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">Self</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 845,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 8446,
              "key.offset": 8441,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 296,
              "key.parsed_scope.start": 278,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC8reshaped_6offset10incrementsAEXDAA0E15DimensionFormatO_SaySiGSgALtF\">reshaped(_:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 8570,
                  "key.offset": 8566,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 281,
                  "key.parsed_scope.start": 281,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cTensorParams: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensorParams</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 67,
                  "key.name": "cTensorParams",
                  "key.namelength": 13,
                  "key.nameoffset": 8600,
                  "key.offset": 8596,
                  "key.parsed_declaration": "let cTensorParams = ccv_nnc_tensor_variable_params(_graph, _tensor)",
                  "key.parsed_scope.end": 282,
                  "key.parsed_scope.start": 282,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF01cE6ParamsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let device: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>device</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "device",
                  "key.namelength": 6,
                  "key.nameoffset": 8672,
                  "key.offset": 8668,
                  "key.parsed_declaration": "let device = DeviceKind.from(cTensorParams: cTensorParams)",
                  "key.parsed_scope.end": 283,
                  "key.parsed_scope.start": 283,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF6deviceL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let dataType: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "dataType",
                  "key.namelength": 8,
                  "key.nameoffset": 8735,
                  "key.offset": 8731,
                  "key.parsed_declaration": "let dataType = DataType.from(cTensorParams: cTensorParams)",
                  "key.parsed_scope.end": 284,
                  "key.parsed_scope.start": 284,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF8dataTypeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var offset: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 34,
                  "key.name": "offset",
                  "key.namelength": 6,
                  "key.nameoffset": 8798,
                  "key.offset": 8794,
                  "key.parsed_declaration": "var offset = toCDimensions(offset)",
                  "key.parsed_scope.end": 285,
                  "key.parsed_scope.start": 285,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtFAIL0_s5Int32V_A7Ptvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var increments: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 42,
                  "key.name": "increments",
                  "key.namelength": 10,
                  "key.nameoffset": 8837,
                  "key.offset": 8833,
                  "key.parsed_declaration": "var increments = toCDimensions(increments)",
                  "key.parsed_scope.end": 286,
                  "key.parsed_scope.start": 286,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvp\">increments</RelatedName>"
                    }
                  ],
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtFAJL0_s5Int32V_A7Ptvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _alias: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_alias</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 329,
                  "key.name": "_alias",
                  "key.namelength": 6,
                  "key.nameoffset": 8884,
                  "key.offset": 8880,
                  "key.parsed_declaration": "let _alias = withUnsafePointer(to: &offset.0) { offset in\n  withUnsafePointer(to: &increments.0) { increments in\n    ccv_nnc_tensor_variable_alias_new(\n      _graph, _tensor, offset, increments,\n      toCTensorParams(\n        device, dataType: dataType, format: format, dimensions: dimensions))!\n  }\n}",
                  "key.parsed_scope.end": 287,
                  "key.parsed_scope.start": 287,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF6_aliasL_Xevp"
                }
              ],
              "key.typename": "(DynamicGraph.AnyTensor) -> (TensorFormat, [Int], [Int]?, [Int]?) -> Self",
              "key.typeusr": "$s6format10dimensions6offset10increments4main12DynamicGraphC9AnyTensorCXDAE0I6FormatO_SaySiGALSgAMtcD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">Self</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9665
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 9793,
              "key.doc.column": 15,
              "key.doc.comment": " Create a new tensor representing the same variable but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensor with different format but the same underlying variable.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> Self",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"307\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:4main12DynamicGraphC9AnyTensorC8reshaped_6offset10incrementsAEXDAA0E15DimensionFormatO_SaySiGSgALtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; Self</Declaration><CommentParts><Abstract><Para>Create a new tensor representing the same variable but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensor with different format but the same underlying variable.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 307,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensor with different format but the same underlying variable."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 372,
              "key.docoffset": 9290,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">Self</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 270,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 9677,
              "key.offset": 9672,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 313,
              "key.parsed_scope.start": 307,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC8reshaped6format10dimensions6offset10incrementsAEXDAA0E6FormatO_SaySiGAMSgANtF\">reshaped(format:dimensions:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(DynamicGraph.AnyTensor) -> (TensorDimensionFormat, [Int]?, [Int]?) -> Self",
              "key.typeusr": "$s_6offset10increments4main12DynamicGraphC9AnyTensorCXDAC0G15DimensionFormatO_SaySiGSgAKtcD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC8reshaped_6offset10incrementsAEXDAA0E15DimensionFormatO_SaySiGSgALtF"
            }
          ],
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 613,
          "key.bodyoffset": 10006,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 23,
              "key.offset": 9981
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "CustomStringConvertible"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 673,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 9957,
          "key.offset": 9947,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor: CustomStringConvertible",
          "key.parsed_scope.end": 332,
          "key.parsed_scope.start": 317,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10009
                }
              ],
              "key.bodylength": 576,
              "key.bodyoffset": 10041,
              "key.doc.declaration": "var description: String { get }",
              "key.doc.discussion": [
                {
                  "Para": "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
                },
                {
                  "CodeListing": ""
                },
                {
                  "Para": "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Other><Name>description</Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp</USR><Declaration>var description: String { get }</Declaration><CommentParts><Abstract><Para>A textual representation of this instance.</Para></Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)</codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description</codeVoice> property for types that conform to <codeVoice>CustomStringConvertible</codeVoice>:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"(21, 30)\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The conversion of <codeVoice>p</codeVoice> to a string in the assignment to <codeVoice>s</codeVoice> uses the <codeVoice>Point</codeVoice> type’s <codeVoice>description</codeVoice> property.</Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
              "key.doc.name": "description",
              "key.doc.type": "Other",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 602,
              "key.name": "description",
              "key.namelength": 11,
              "key.nameoffset": 10020,
              "key.offset": 10016,
              "key.overrides": [
                {
                  "key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"
                }
              ],
              "key.parsed_declaration": "public var description: String",
              "key.parsed_scope.end": 331,
              "key.parsed_scope.start": 318,
              "key.typename": "String",
              "key.typeusr": "$sSSD",
              "key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 10050,
              "key.offset": 10046,
              "key.parsed_declaration": "let _graph = graph._graph",
              "key.parsed_scope.end": 319,
              "key.parsed_scope.start": 319,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC11descriptionSSvg6_graphL_s13OpaquePointerVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let cTensorParams: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensorParams</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 67,
              "key.name": "cTensorParams",
              "key.namelength": 13,
              "key.nameoffset": 10080,
              "key.offset": 10076,
              "key.parsed_declaration": "let cTensorParams = ccv_nnc_tensor_variable_params(_graph, _tensor)",
              "key.parsed_scope.end": 320,
              "key.parsed_scope.start": 320,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC11descriptionSSvg01cE6ParamsL_Xevp"
            }
          ],
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 4206,
          "key.bodyoffset": 10646,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 4231,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 10632,
          "key.offset": 10622,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 450,
          "key.parsed_scope.start": 334,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func variable() -&gt; <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10757
                }
              ],
              "key.bodylength": 159,
              "key.bodyoffset": 10794,
              "key.doc.column": 15,
              "key.doc.comment": "Create a placeholder variable. It doesn't have shape and can only\nbe used as output.",
              "key.doc.declaration": "public func variable() -> AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"340\" column=\"15\"><Name>variable()</Name><USR>s:4main12DynamicGraphC8variableAC9AnyTensorCyF</USR><Declaration>public func variable() -&gt; AnyTensor</Declaration><CommentParts><Abstract><Para>Create a placeholder variable. It doesn’t have shape and can only be used as output.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 340,
              "key.doc.name": "variable()",
              "key.doc.type": "Function",
              "key.doclength": 104,
              "key.docoffset": 10650,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>variable</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 190,
              "key.name": "variable()",
              "key.namelength": 10,
              "key.nameoffset": 10769,
              "key.offset": 10764,
              "key.parsed_declaration": "public func variable() -> AnyTensor",
              "key.parsed_scope.end": 344,
              "key.parsed_scope.start": 340,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">variable(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">variable(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 76,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 10803,
                  "key.offset": 10799,
                  "key.parsed_declaration": "let _tensor = ccv_nnc_tensor_variable_new_impl(_graph, ccv_nnc_tensor_auto)!",
                  "key.parsed_scope.end": 341,
                  "key.parsed_scope.start": 341,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8variableAC9AnyTensorCyF7_tensorL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 52,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 10884,
                  "key.offset": 10880,
                  "key.parsed_declaration": "let tensor = AnyTensor(graph: self, tensor: _tensor)",
                  "key.parsed_scope.end": 342,
                  "key.parsed_scope.start": 342,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8variableAC9AnyTensorCyF6tensorL_Xevp"
                }
              ],
              "key.typename": "(DynamicGraph) -> () -> DynamicGraph.AnyTensor",
              "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCycD",
              "key.usr": "s:4main12DynamicGraphC8variableAC9AnyTensorCyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func constant() -&gt; <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11065
                }
              ],
              "key.bodylength": 135,
              "key.bodyoffset": 11102,
              "key.doc.column": 15,
              "key.doc.comment": "Create a placeholder constant. It doesn't have shape and can only\nbe used as output.",
              "key.doc.declaration": "public func constant() -> AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"350\" column=\"15\"><Name>constant()</Name><USR>s:4main12DynamicGraphC8constantAC9AnyTensorCyF</USR><Declaration>public func constant() -&gt; AnyTensor</Declaration><CommentParts><Abstract><Para>Create a placeholder constant. It doesn’t have shape and can only be used as output.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 350,
              "key.doc.name": "constant()",
              "key.doc.type": "Function",
              "key.doclength": 104,
              "key.docoffset": 10958,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>constant</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 166,
              "key.name": "constant()",
              "key.namelength": 10,
              "key.nameoffset": 11077,
              "key.offset": 11072,
              "key.parsed_declaration": "public func constant() -> AnyTensor",
              "key.parsed_scope.end": 353,
              "key.parsed_scope.start": 350,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">constant(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">constant(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 76,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 11111,
                  "key.offset": 11107,
                  "key.parsed_declaration": "let _tensor = ccv_nnc_tensor_constant_new_impl(_graph, ccv_nnc_tensor_auto)!",
                  "key.parsed_scope.end": 351,
                  "key.parsed_scope.start": 351,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8constantAC9AnyTensorCyF7_tensorL_Xevp"
                }
              ],
              "key.typename": "(DynamicGraph) -> () -> DynamicGraph.AnyTensor",
              "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCycD",
              "key.usr": "s:4main12DynamicGraphC8constantAC9AnyTensorCyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func variable&lt;Element&gt;(_ tensor: NNC.Tensor&lt;<Type usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</Type>&gt;) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11402
                }
              ],
              "key.bodylength": 548,
              "key.bodyoffset": 11498,
              "key.doc.column": 15,
              "key.doc.comment": " Create a new variable from an existing tensor.\n\n - Parameter tensor: The existing tensor.\n - Returns: Created new tensor variable.",
              "key.doc.declaration": "public func variable<Element>(_ tensor: NNC.Tensor<Element>) -> Tensor<Element> where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"361\" column=\"15\"><Name>variable(_:)</Name><USR>s:4main12DynamicGraphC8variableyXeXeF</USR><Declaration>public func variable&lt;Element&gt;(_ tensor: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create a new variable from an existing tensor.</Para></Abstract><Parameters><Parameter><Name>tensor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The existing tensor.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Created new tensor variable.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 361,
              "key.doc.name": "variable(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The existing tensor."
                    }
                  ],
                  "name": "tensor"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "Created new tensor variable."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 157,
              "key.docoffset": 11242,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>variable</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type>NNC.Tensor&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 638,
              "key.name": "variable(_:)",
              "key.namelength": 63,
              "key.nameoffset": 11414,
              "key.offset": 11409,
              "key.parsed_declaration": "public func variable<Element: TensorNumeric>(_ tensor: NNC.Tensor<Element>) -> Tensor<Element>",
              "key.parsed_scope.end": 373,
              "key.parsed_scope.start": 361,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableAC9AnyTensorCyF\">variable()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">variable(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">variable(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 11432
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 11423,
                  "key.offset": 11423,
                  "key.parsed_declaration": "public func variable<Element: TensorNumeric",
                  "key.parsed_scope.end": 361,
                  "key.parsed_scope.start": 361,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 76,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 11507,
                  "key.offset": 11503,
                  "key.parsed_declaration": "let _tensor = ccv_nnc_tensor_variable_new_impl(_graph, ccv_nnc_tensor_auto)!",
                  "key.parsed_scope.end": 362,
                  "key.parsed_scope.start": 362,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8variableyXeXeF7_tensorL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 11971,
                  "key.offset": 11967,
                  "key.parsed_declaration": "let tensor = Tensor<Element>(graph: self, tensor: _tensor)",
                  "key.parsed_scope.end": 371,
                  "key.parsed_scope.start": 371,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8variableyXeXeF6tensorL0_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (<<error type>>) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC8variableyXeXeF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func constant&lt;Element&gt;(_ tensor: NNC.Tensor&lt;<Type usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</Type>&gt;) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12211
                }
              ],
              "key.bodylength": 524,
              "key.bodyoffset": 12307,
              "key.doc.column": 15,
              "key.doc.comment": " Create a new constant from an existing tensor.\n\n - Parameter tensor: The existing tensor.\n - Returns: Created new tensor constant.",
              "key.doc.declaration": "public func constant<Element>(_ tensor: NNC.Tensor<Element>) -> Tensor<Element> where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"381\" column=\"15\"><Name>constant(_:)</Name><USR>s:4main12DynamicGraphC8constantyXeXeF</USR><Declaration>public func constant&lt;Element&gt;(_ tensor: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create a new constant from an existing tensor.</Para></Abstract><Parameters><Parameter><Name>tensor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The existing tensor.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Created new tensor constant.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 381,
              "key.doc.name": "constant(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The existing tensor."
                    }
                  ],
                  "name": "tensor"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "Created new tensor constant."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 157,
              "key.docoffset": 12051,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>constant</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type>NNC.Tensor&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 614,
              "key.name": "constant(_:)",
              "key.namelength": 63,
              "key.nameoffset": 12223,
              "key.offset": 12218,
              "key.parsed_declaration": "public func constant<Element: TensorNumeric>(_ tensor: NNC.Tensor<Element>) -> Tensor<Element>",
              "key.parsed_scope.end": 392,
              "key.parsed_scope.start": 381,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantAC9AnyTensorCyF\">constant()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">constant(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">constant(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 12241
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 12232,
                  "key.offset": 12232,
                  "key.parsed_declaration": "public func constant<Element: TensorNumeric",
                  "key.parsed_scope.end": 381,
                  "key.parsed_scope.start": 381,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 76,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 12316,
                  "key.offset": 12312,
                  "key.parsed_declaration": "let _tensor = ccv_nnc_tensor_constant_new_impl(_graph, ccv_nnc_tensor_auto)!",
                  "key.parsed_scope.end": 382,
                  "key.parsed_scope.start": 382,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8constantyXeXeF7_tensorL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (<<error type>>) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC8constantyXeXeF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func variable&lt;Element&gt;(_ tensors: [NNC.Tensor&lt;<Type usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</Type>&gt;]) -&gt; <Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</Type>&gt;&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13024
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 13138,
              "key.doc.column": 15,
              "key.doc.comment": " Create a grouped variable from an array of existing tensors.\n\n - Parameter tensors: The array of existing tensors.\n - Returns: Newly created grouped variable.",
              "key.doc.declaration": "public func variable<Element>(_ tensors: [NNC.Tensor<Element>]) -> Group<Tensor<Element>> where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"400\" column=\"15\"><Name>variable(_:)</Name><USR>s:4main12DynamicGraphC8variableyXeXeF</USR><Declaration>public func variable&lt;Element&gt;(_ tensors: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create a grouped variable from an array of existing tensors.</Para></Abstract><Parameters><Parameter><Name>tensors</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The array of existing tensors.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Newly created grouped variable.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 400,
              "key.doc.name": "variable(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The array of existing tensors."
                    }
                  ],
                  "name": "tensors"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "Newly created grouped variable."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 185,
              "key.docoffset": 12836,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>variable</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type>[NNC.Tensor&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 199,
              "key.name": "variable(_:)",
              "key.namelength": 66,
              "key.nameoffset": 13036,
              "key.offset": 13031,
              "key.parsed_declaration": "public func variable<Element: TensorNumeric>(_ tensors: [NNC.Tensor<Element>]) -> Group<\n  Tensor<Element>\n>",
              "key.parsed_scope.end": 405,
              "key.parsed_scope.start": 400,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableAC9AnyTensorCyF\">variable()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">variable(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">variable(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 13054
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 13045,
                  "key.offset": 13045,
                  "key.parsed_declaration": "public func variable<Element: TensorNumeric",
                  "key.parsed_scope.end": 400,
                  "key.parsed_scope.start": 400,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8variableyXeXeF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (<<error type>>) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC8variableyXeXeF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func constant&lt;Element&gt;(_ tensors: [NNC.Tensor&lt;<Type usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</Type>&gt;]) -&gt; <Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</Type>&gt;&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13422
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 13536,
              "key.doc.column": 15,
              "key.doc.comment": " Create a grouped constant from an array of existing tensors.\n\n - Parameter tensors: The array of existing tensors.\n - Returns: Newly created grouped constant.",
              "key.doc.declaration": "public func constant<Element>(_ tensors: [NNC.Tensor<Element>]) -> Group<Tensor<Element>> where Element : main.TensorNumeric",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"413\" column=\"15\"><Name>constant(_:)</Name><USR>s:4main12DynamicGraphC8constantyXeXeF</USR><Declaration>public func constant&lt;Element&gt;(_ tensors: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Create a grouped constant from an array of existing tensors.</Para></Abstract><Parameters><Parameter><Name>tensors</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The array of existing tensors.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Newly created grouped constant.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 413,
              "key.doc.name": "constant(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The array of existing tensors."
                    }
                  ],
                  "name": "tensors"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "Newly created grouped constant."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 185,
              "key.docoffset": 13234,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>constant</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensors</decl.var.parameter.name>: <decl.var.parameter.type>[NNC.Tensor&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 199,
              "key.name": "constant(_:)",
              "key.namelength": 66,
              "key.nameoffset": 13434,
              "key.offset": 13429,
              "key.parsed_declaration": "public func constant<Element: TensorNumeric>(_ tensors: [NNC.Tensor<Element>]) -> Group<\n  Tensor<Element>\n>",
              "key.parsed_scope.end": 418,
              "key.parsed_scope.start": 413,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantAC9AnyTensorCyF\">constant()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">constant(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">constant(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 13452
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 13443,
                  "key.offset": 13443,
                  "key.parsed_declaration": "public func constant<Element: TensorNumeric",
                  "key.parsed_scope.end": 413,
                  "key.parsed_scope.start": 413,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8constantyXeXeF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (<<error type>>) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC8constantyXeXeF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func variable&lt;Element&gt;(_ device: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13632
                }
              ],
              "key.bodylength": 226,
              "key.bodyoffset": 13768,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>variable</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>device</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 356,
              "key.name": "variable(_:format:dimensions:)",
              "key.namelength": 103,
              "key.nameoffset": 13644,
              "key.offset": 13639,
              "key.parsed_declaration": "public func variable<Element: TensorNumeric>(\n  _ device: DeviceKind, format: TensorFormat, dimensions: [Int]\n) -> Tensor<Element>",
              "key.parsed_scope.end": 427,
              "key.parsed_scope.start": 420,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableAC9AnyTensorCyF\">variable()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">variable(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 13662
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 13653,
                  "key.offset": 13653,
                  "key.parsed_declaration": "public func variable<Element: TensorNumeric",
                  "key.parsed_scope.end": 420,
                  "key.parsed_scope.start": 420,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 161,
                  "key.name": "_tensor",
                  "key.namelength": 7,
                  "key.nameoffset": 13777,
                  "key.offset": 13773,
                  "key.parsed_declaration": "let _tensor = ccv_nnc_tensor_variable_new_impl(\n  _graph,\n  toCTensorParams(device, dataType: Element.dataType, format: format, dimensions: dimensions))!",
                  "key.parsed_scope.end": 423,
                  "key.parsed_scope.start": 423,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7_tensorL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (DeviceKind, TensorFormat, [Int]) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s_6format10dimensions4main12DynamicGraphC6TensorCy_xGAC10DeviceKindO_AC0F6FormatOSaySiGtcAC0F7NumericRzluD",
              "key.usr": "s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func constant&lt;Element&gt;(_ device: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13999
                }
              ],
              "key.bodylength": 224,
              "key.bodyoffset": 14135,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>constant</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>device</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 354,
              "key.name": "constant(_:format:dimensions:)",
              "key.namelength": 103,
              "key.nameoffset": 14011,
              "key.offset": 14006,
              "key.parsed_declaration": "public func constant<Element: TensorNumeric>(\n  _ device: DeviceKind, format: TensorFormat, dimensions: [Int]\n) -> Tensor<Element>",
              "key.parsed_scope.end": 436,
              "key.parsed_scope.start": 429,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantAC9AnyTensorCyF\">constant()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF\">constant(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 14029
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 14020,
                  "key.offset": 14020,
                  "key.parsed_declaration": "public func constant<Element: TensorNumeric",
                  "key.parsed_scope.end": 429,
                  "key.parsed_scope.start": 429,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF7ElementL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 160,
                  "key.name": "tensor",
                  "key.namelength": 6,
                  "key.nameoffset": 14144,
                  "key.offset": 14140,
                  "key.parsed_declaration": "let tensor = ccv_nnc_tensor_constant_new_impl(\n  _graph,\n  toCTensorParams(device, dataType: Element.dataType, format: format, dimensions: dimensions))!",
                  "key.parsed_scope.end": 432,
                  "key.parsed_scope.start": 432,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF6tensorL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (DeviceKind, TensorFormat, [Int]) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s_6format10dimensions4main12DynamicGraphC6TensorCy_xGAC10DeviceKindO_AC0F6FormatOSaySiGtcAC0F7NumericRzluD",
              "key.usr": "s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func variable&lt;Element&gt;(_ device: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, _ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14364
                }
              ],
              "key.bodylength": 103,
              "key.bodyoffset": 14501,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>variable</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>device</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 234,
              "key.name": "variable(_:_:)",
              "key.namelength": 104,
              "key.nameoffset": 14376,
              "key.offset": 14371,
              "key.parsed_declaration": "public func variable<Element: TensorNumeric>(\n  _ device: DeviceKind, _ dimensionFormat: TensorDimensionFormat\n) -> Tensor<Element>",
              "key.parsed_scope.end": 442,
              "key.parsed_scope.start": 438,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableAC9AnyTensorCyF\">variable()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variableyXeXeF\">variable&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8variable_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">variable(_:format:dimensions:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 14394
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 14385,
                  "key.offset": 14385,
                  "key.parsed_declaration": "public func variable<Element: TensorNumeric",
                  "key.parsed_scope.end": 438,
                  "key.parsed_scope.start": 438,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (DeviceKind, TensorDimensionFormat) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$sy4main12DynamicGraphC6TensorCy_xGAA10DeviceKindO_AA0D15DimensionFormatOtcAA0D7NumericRzluD",
              "key.usr": "s:4main12DynamicGraphC8variableyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func constant&lt;Element&gt;(_ device: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, _ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\">Element</Type>&gt; where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14609
                }
              ],
              "key.bodylength": 103,
              "key.bodyoffset": 14746,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>constant</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>device</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 234,
              "key.name": "constant(_:_:)",
              "key.namelength": 104,
              "key.nameoffset": 14621,
              "key.offset": 14616,
              "key.parsed_declaration": "public func constant<Element: TensorNumeric>(\n  _ device: DeviceKind, _ dimensionFormat: TensorDimensionFormat\n) -> Tensor<Element>",
              "key.parsed_scope.end": 448,
              "key.parsed_scope.start": 444,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantAC9AnyTensorCyF\">constant()</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: NNC.Tensor&lt;Element&gt;) -&gt; Tensor&lt;Element&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constantyXeXeF\">constant&lt;Element&gt;(_: [NNC.Tensor&lt;Element&gt;]) -&gt; Group&lt;Tensor&lt;Element&gt;&gt; where Element : TensorNumeric</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC8constant_6format10dimensionsAC6TensorCy_xGAA10DeviceKindO_AA0G6FormatOSaySiGtAA0G7NumericRzlF\">constant(_:format:dimensions:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 14639
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 14630,
                  "key.offset": 14630,
                  "key.parsed_declaration": "public func constant<Element: TensorNumeric",
                  "key.parsed_scope.end": 444,
                  "key.parsed_scope.start": 444,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph) -> (DeviceKind, TensorDimensionFormat) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$sy4main12DynamicGraphC6TensorCy_xGAA10DeviceKindO_AA0D15DimensionFormatOtcAA0D7NumericRzluD",
              "key.usr": "s:4main12DynamicGraphC8constantyAC6TensorCy_xGAA10DeviceKindO_AA0E15DimensionFormatOtAA0E7NumericRzlF"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 423,
          "key.bodyoffset": 14879,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 448,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 14865,
          "key.offset": 14855,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 463,
          "key.parsed_scope.start": 452,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func withNoGrad&lt;Result&gt;(_ closure: () throws -&gt; <Type usr=\"s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp\">Result</Type>) rethrows -&gt; <Type usr=\"s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp\">Result</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.rethrows",
                  "key.length": 8,
                  "key.offset": 15130
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15067
                }
              ],
              "key.bodylength": 150,
              "key.bodyoffset": 15150,
              "key.doc.column": 15,
              "key.doc.comment": "Turn off gradient tracking within the given closure. This may be useful during testing, we can\nmake more aggressive optimizations if the gradient tracking is off.",
              "key.doc.declaration": "public func withNoGrad<Result>(_ closure: () throws -> Result) rethrows -> Result",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"457\" column=\"15\"><Name>withNoGrad(_:)</Name><USR>s:4main12DynamicGraphC10withNoGradyxxyKXEKlF</USR><Declaration>public func withNoGrad&lt;Result&gt;(_ closure: () throws -&gt; Result) rethrows -&gt; Result</Declaration><CommentParts><Abstract><Para>Turn off gradient tracking within the given closure. This may be useful during testing, we can make more aggressive optimizations if the gradient tracking is off.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 457,
              "key.doc.name": "withNoGrad(_:)",
              "key.doc.type": "Function",
              "key.doclength": 182,
              "key.docoffset": 14882,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>withNoGrad</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp\"><decl.generic_type_param.name>Result</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>closure</decl.var.parameter.name>: <decl.var.parameter.type>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp\">Result</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>rethrows</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp\">Result</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 227,
              "key.name": "withNoGrad(_:)",
              "key.namelength": 50,
              "key.nameoffset": 15079,
              "key.offset": 15074,
              "key.parsed_declaration": "public func withNoGrad<Result>(_ closure: () throws -> Result) rethrows -> Result",
              "key.parsed_scope.end": 462,
              "key.parsed_scope.start": 457,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Result</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Result</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 6,
                  "key.name": "Result",
                  "key.namelength": 6,
                  "key.nameoffset": 15090,
                  "key.offset": 15090,
                  "key.parsed_declaration": "public func withNoGrad<Result",
                  "key.parsed_scope.end": 457,
                  "key.parsed_scope.start": 457,
                  "key.typename": "Result.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6ResultL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let result: Result</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type>Result</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "result",
                  "key.namelength": 6,
                  "key.nameoffset": 15208,
                  "key.offset": 15204,
                  "key.parsed_declaration": "let result = try closure()",
                  "key.parsed_scope.end": 459,
                  "key.parsed_scope.start": 459,
                  "key.typename": "Result",
                  "key.typeusr": "$sxD",
                  "key.usr": "s:4main12DynamicGraphC10withNoGradyxxyKXEKlF6resultL_xvp"
                }
              ],
              "key.typename": "<Result> (DynamicGraph) -> (() throws -> Result) throws -> Result",
              "key.typeusr": "$syxxyKXEKcluD",
              "key.usr": "s:4main12DynamicGraphC10withNoGradyxxyKXEKlF"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 549,
          "key.bodyoffset": 15329,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 574,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 15315,
          "key.offset": 15305,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 479,
          "key.parsed_scope.start": 465,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func withStream&lt;Result&gt;(_ streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>, _ closure: () throws -&gt; <Type usr=\"s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp\">Result</Type>) rethrows -&gt; <Type usr=\"s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp\">Result</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.rethrows",
                  "key.length": 8,
                  "key.offset": 15734
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15635
                }
              ],
              "key.bodylength": 120,
              "key.bodyoffset": 15756,
              "key.doc.column": 15,
              "key.doc.comment": "Perform operations on a given stream within the closure. Each operation can take a stream context\nparameter, however, that often error-prune. This method make sure all operations within the closure\nwill be dispatched to the given stream context, making it easier to organize.",
              "key.doc.declaration": "public func withStream<Result>(_ streamContext: StreamContext, _ closure: () throws -> Result) rethrows -> Result",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"471\" column=\"15\"><Name>withStream(_:_:)</Name><USR>s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF</USR><Declaration>public func withStream&lt;Result&gt;(_ streamContext: StreamContext, _ closure: () throws -&gt; Result) rethrows -&gt; Result</Declaration><CommentParts><Abstract><Para>Perform operations on a given stream within the closure. Each operation can take a stream context parameter, however, that often error-prune. This method make sure all operations within the closure will be dispatched to the given stream context, making it easier to organize.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 471,
              "key.doc.name": "withStream(_:_:)",
              "key.doc.type": "Function",
              "key.doclength": 300,
              "key.docoffset": 15332,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>withStream</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp\"><decl.generic_type_param.name>Result</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>closure</decl.var.parameter.name>: <decl.var.parameter.type>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp\">Result</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>rethrows</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp\">Result</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 235,
              "key.name": "withStream(_:_:)",
              "key.namelength": 82,
              "key.nameoffset": 15647,
              "key.offset": 15642,
              "key.parsed_declaration": "public func withStream<Result>(_ streamContext: StreamContext, _ closure: () throws -> Result)\n  rethrows -> Result",
              "key.parsed_scope.end": 478,
              "key.parsed_scope.start": 471,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Result</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Result</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 6,
                  "key.name": "Result",
                  "key.namelength": 6,
                  "key.nameoffset": 15658,
                  "key.offset": 15658,
                  "key.parsed_declaration": "public func withStream<Result",
                  "key.parsed_scope.end": 471,
                  "key.parsed_scope.start": 471,
                  "key.typename": "Result.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6ResultL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let result: Result</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type>Result</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 26,
                  "key.name": "result",
                  "key.namelength": 6,
                  "key.nameoffset": 15804,
                  "key.offset": 15800,
                  "key.parsed_declaration": "let result = try closure()",
                  "key.parsed_scope.end": 475,
                  "key.parsed_scope.start": 475,
                  "key.typename": "Result",
                  "key.typeusr": "$sxD",
                  "key.usr": "s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF6resultL_xvp"
                }
              ],
              "key.typename": "<Result> (DynamicGraph) -> (StreamContext, () throws -> Result) throws -> Result",
              "key.typeusr": "$syx4main13StreamContextC_xyKXEtKcluD",
              "key.usr": "s:4main12DynamicGraphC10withStreamyxAA0E7ContextC_xyKXEtKlF"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 25541,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum ReduceOp</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 14
            }
          ],
          "key.bodylength": 23,
          "key.bodyoffset": 36,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ReduceOp</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 39,
          "key.name": "ReduceOp",
          "key.namelength": 8,
          "key.nameoffset": 26,
          "key.offset": 21,
          "key.parsed_declaration": "public enum ReduceOp",
          "key.parsed_scope.end": 6,
          "key.parsed_scope.start": 3,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 8,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 39,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case sum</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sum</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 3,
                  "key.name": "sum",
                  "key.namelength": 3,
                  "key.nameoffset": 44,
                  "key.offset": 44,
                  "key.parsed_declaration": "case sum",
                  "key.parsed_scope.end": 4,
                  "key.parsed_scope.start": 4,
                  "key.typename": "(ReduceOp.Type) -> ReduceOp",
                  "key.typeusr": "$sy4main8ReduceOpOACmcD",
                  "key.usr": "s:4main8ReduceOpO3sumyA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 8,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 50,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case max</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>max</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 3,
                  "key.name": "max",
                  "key.namelength": 3,
                  "key.nameoffset": 55,
                  "key.offset": 55,
                  "key.parsed_declaration": "case max",
                  "key.parsed_scope.end": 5,
                  "key.parsed_scope.start": 5,
                  "key.typename": "(ReduceOp.Type) -> ReduceOp",
                  "key.typeusr": "$sy4main8ReduceOpOACmcD",
                  "key.usr": "s:4main8ReduceOpO3maxyA2CmF"
                }
              ]
            }
          ],
          "key.typename": "ReduceOp.Type",
          "key.typeusr": "$s4main8ReduceOpOmD",
          "key.usr": "s:4main8ReduceOpO"
        },
        {
          "key.annotated_decl": "<Declaration>public enum Functional</Declaration>",
          "key.bodylength": 5266,
          "key.bodyoffset": 84,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Functional</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 5289,
          "key.name": "Functional",
          "key.namelength": 10,
          "key.nameoffset": 72,
          "key.offset": 62,
          "key.parsed_declaration": "extension Functional",
          "key.parsed_scope.end": 139,
          "key.parsed_scope.start": 8,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func sum&lt;T&gt;(_ inputs: <Type usr=\"s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 115
                }
              ],
              "key.bodylength": 347,
              "key.bodyoffset": 234,
              "key.doc.column": 22,
              "key.doc.comment": "Element-wise addition",
              "key.doc.declaration": "public static func sum<T>(_ inputs: T..., streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"10\" column=\"22\"><Name>sum(_:streamContext:)</Name><USR>s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func sum&lt;T&gt;(_ inputs: T..., streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Element-wise addition</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 10,
              "key.doc.name": "sum(_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 26,
              "key.docoffset": 87,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 460,
              "key.name": "sum(_:streamContext:)",
              "key.namelength": 93,
              "key.nameoffset": 134,
              "key.offset": 122,
              "key.parsed_declaration": "public static func sum<T: DynamicGraph.TensorGroup>(\n  _ inputs: T..., streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 20,
              "key.parsed_scope.start": 10,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 141
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 138,
                  "key.offset": 138,
                  "key.parsed_declaration": "public static func sum<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 10,
                  "key.parsed_scope.start": 10,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 279,
                  "key.offset": 275,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 14,
                  "key.parsed_scope.start": 14,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 333,
                  "key.offset": 329,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_EWSUM_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 15,
                  "key.parsed_scope.start": 15,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 159,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 398,
                  "key.offset": 394,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: inputs[0], Array(inputs.suffix(from: 1)),\n  outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 16,
                  "key.parsed_scope.start": 16,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T..., StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxxd_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3sum_13streamContextxxd_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func mul&lt;T&gt;(left: <Type usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, scalar: <Type usr=\"s:s7Float32a\">Float32</Type> = 1, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 630
                }
              ],
              "key.bodylength": 362,
              "key.bodyoffset": 773,
              "key.doc.column": 22,
              "key.doc.comment": "Broadcast element-wise multiplication",
              "key.doc.declaration": "public static func mul<T>(left: T, right: T, scalar: Float32 = 1, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"23\" column=\"22\"><Name>mul(left:right:scalar:streamContext:)</Name><USR>s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func mul&lt;T&gt;(left: T, right: T, scalar: Float32 = 1, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Broadcast element-wise multiplication</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 23,
              "key.doc.name": "mul(left:right:scalar:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 42,
              "key.docoffset": 586,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>mul</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>left</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>right</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:s7Float32a\">Float32</ref.typealias></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 499,
              "key.name": "mul(left:right:scalar:streamContext:)",
              "key.namelength": 117,
              "key.nameoffset": 649,
              "key.offset": 637,
              "key.parsed_declaration": "public static func mul<T: DynamicGraph.TensorGroup>(\n  left: T, right: T, scalar: Float32 = 1, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 34,
              "key.parsed_scope.start": 23,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 656
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 653,
                  "key.offset": 653,
                  "key.parsed_declaration": "public static func mul<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 23,
                  "key.parsed_scope.start": 23,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 782,
                  "key.offset": 778,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 26,
                  "key.parsed_scope.start": 26,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 918,
                  "key.offset": 914,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_MUL_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 29,
                  "key.parsed_scope.start": 29,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 130,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 981,
                  "key.offset": 977,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: left, right, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 30,
                  "key.parsed_scope.start": 30,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, Float, StreamContext?) -> T",
              "key.typeusr": "$s4left5right6scalar13streamContextxx_xSf4main06StreamE0CSgtcAE24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3mul4left5right6scalar13streamContextxx_xSfAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func add&lt;T&gt;(left: <Type usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, leftScalar: <Type usr=\"s:s7Float32a\">Float32</Type> = 1, rightScalar: <Type usr=\"s:s7Float32a\">Float32</Type> = 1, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1178
                }
              ],
              "key.bodylength": 376,
              "key.bodyoffset": 1355,
              "key.doc.column": 22,
              "key.doc.comment": "Broadcast element-wise addition",
              "key.doc.declaration": "public static func add<T>(left: T, right: T, leftScalar: Float32 = 1, rightScalar: Float32 = 1, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"37\" column=\"22\"><Name>add(left:right:leftScalar:rightScalar:streamContext:)</Name><USR>s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func add&lt;T&gt;(left: T, right: T, leftScalar: Float32 = 1, rightScalar: Float32 = 1, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Broadcast element-wise addition</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 37,
              "key.doc.name": "add(left:right:leftScalar:rightScalar:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 36,
              "key.docoffset": 1140,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>left</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>right</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>leftScalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:s7Float32a\">Float32</ref.typealias></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rightScalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:s7Float32a\">Float32</ref.typealias></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 547,
              "key.name": "add(left:right:leftScalar:rightScalar:streamContext:)",
              "key.namelength": 151,
              "key.nameoffset": 1197,
              "key.offset": 1185,
              "key.parsed_declaration": "public static func add<T: DynamicGraph.TensorGroup>(\n  left: T, right: T, leftScalar: Float32 = 1, rightScalar: Float32 = 1,\n  streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 49,
              "key.parsed_scope.start": 37,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 1204
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 1201,
                  "key.offset": 1201,
                  "key.parsed_declaration": "public static func add<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 37,
                  "key.parsed_scope.start": 37,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 1364,
                  "key.offset": 1360,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 41,
                  "key.parsed_scope.start": 41,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 1514,
                  "key.offset": 1510,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_ADD_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 44,
                  "key.parsed_scope.start": 44,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 130,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 1577,
                  "key.offset": 1573,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: left, right, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 45,
                  "key.parsed_scope.start": 45,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, Float, Float, StreamContext?) -> T",
              "key.typeusr": "$s4left5right0A6Scalar0bC013streamContextxx_xS2f4main06StreamE0CSgtcAF24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3add4left5right0D6Scalar0eF013streamContextxx_xS2fAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func log&lt;T&gt;(_ one: <Type usr=\"s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1759
                }
              ],
              "key.bodylength": 268,
              "key.bodyoffset": 1870,
              "key.doc.column": 22,
              "key.doc.comment": "Element-wise log",
              "key.doc.declaration": "public static func log<T>(_ one: T, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"52\" column=\"22\"><Name>log(_:streamContext:)</Name><USR>s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func log&lt;T&gt;(_ one: T, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Element-wise log</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 52,
              "key.doc.name": "log(_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 21,
              "key.docoffset": 1736,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>log</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>one</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 373,
              "key.name": "log(_:streamContext:)",
              "key.namelength": 79,
              "key.nameoffset": 1778,
              "key.offset": 1766,
              "key.parsed_declaration": "public static func log<T: DynamicGraph.TensorGroup>(_ one: T, streamContext: StreamContext? = nil)\n  -> T",
              "key.parsed_scope.end": 60,
              "key.parsed_scope.start": 52,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 1785
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 1782,
                  "key.offset": 1782,
                  "key.parsed_declaration": "public static func log<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 52,
                  "key.parsed_scope.start": 52,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 1879,
                  "key.offset": 1875,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 55,
                  "key.parsed_scope.start": 55,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 1933,
                  "key.offset": 1929,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_EWLOG_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 56,
                  "key.parsed_scope.start": 56,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 116,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 1998,
                  "key.offset": 1994,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: one, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 57,
                  "key.parsed_scope.start": 57,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3log_13streamContextxx_AA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func matmul&lt;T&gt;(left: <Type usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, leftTranspose: (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>) = (0, 0), rightTranspose: (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>) = (0, 0), streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2171
                }
              ],
              "key.bodylength": 518,
              "key.bodyoffset": 2373,
              "key.doc.column": 22,
              "key.doc.comment": "Matrix multiplication",
              "key.doc.declaration": "public static func matmul<T>(left: T, right: T, leftTranspose: (Int, Int) = (0, 0), rightTranspose: (Int, Int) = (0, 0), streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"63\" column=\"22\"><Name>matmul(left:right:leftTranspose:rightTranspose:streamContext:)</Name><USR>s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func matmul&lt;T&gt;(left: T, right: T, leftTranspose: (Int, Int) = (0, 0), rightTranspose: (Int, Int) = (0, 0), streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Matrix multiplication</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 63,
              "key.doc.name": "matmul(left:right:leftTranspose:rightTranspose:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 26,
              "key.docoffset": 2143,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>matmul</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>left</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>right</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>leftTranspose</decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type> = (0, 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rightTranspose</decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type> = (0, 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 714,
              "key.name": "matmul(left:right:leftTranspose:rightTranspose:streamContext:)",
              "key.namelength": 176,
              "key.nameoffset": 2190,
              "key.offset": 2178,
              "key.parsed_declaration": "public static func matmul<T: DynamicGraph.TensorGroup>(\n  left: T, right: T, leftTranspose: (Int, Int) = (0, 0), rightTranspose: (Int, Int) = (0, 0),\n  streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 77,
              "key.parsed_scope.start": 63,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 2200
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 2197,
                  "key.offset": 2197,
                  "key.parsed_declaration": "public static func matmul<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 63,
                  "key.parsed_scope.start": 63,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 2382,
                  "key.offset": 2378,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 67,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 2673,
                  "key.offset": 2669,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_GEMM_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 72,
                  "key.parsed_scope.start": 72,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 130,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 2737,
                  "key.offset": 2733,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: left, right, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 73,
                  "key.parsed_scope.start": 73,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, (Int, Int), (Int, Int), StreamContext?) -> T",
              "key.typeusr": "$s4left5right0A9Transpose0bC013streamContextxx_xSi_SitSi_Sit4main06StreamE0CSgtcAF24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO6matmul4left5right0D9Transpose0eF013streamContextxx_xSi_SitSi_SitAA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func scalmul&lt;T&gt;(left: <Type usr=\"s:Sf\">Float</Type>, right: <Type usr=\"s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2932
                }
              ],
              "key.bodylength": 355,
              "key.bodyoffset": 3062,
              "key.doc.column": 22,
              "key.doc.comment": "Scalar-matrix multiplication.",
              "key.doc.declaration": "public static func scalmul<T>(left: Float, right: T, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"80\" column=\"22\"><Name>scalmul(left:right:streamContext:)</Name><USR>s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func scalmul&lt;T&gt;(left: Float, right: T, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Scalar-matrix multiplication.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 80,
              "key.doc.name": "scalmul(left:right:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 34,
              "key.docoffset": 2896,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>scalmul</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>left</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>right</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 479,
              "key.name": "scalmul(left:right:streamContext:)",
              "key.namelength": 104,
              "key.nameoffset": 2951,
              "key.offset": 2939,
              "key.parsed_declaration": "public static func scalmul<T: DynamicGraph.TensorGroup>(\n  left: Float, right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 90,
              "key.parsed_scope.start": 80,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 2962
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 2959,
                  "key.offset": 2959,
                  "key.parsed_declaration": "public static func scalmul<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 80,
                  "key.parsed_scope.start": 80,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 3071,
                  "key.offset": 3067,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 83,
                  "key.parsed_scope.start": 83,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 65,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 3205,
                  "key.offset": 3201,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SCALAR_MUL_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 118,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 3275,
                  "key.offset": 3271,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: right, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 87,
                  "key.parsed_scope.start": 87,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (Float, T, StreamContext?) -> T",
              "key.typeusr": "$s4left5right13streamContextxSf_x4main06StreamD0CSgtcAD24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO7scalmul4left5right13streamContextxSf_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func copy&lt;T&gt;(from: <Type usr=\"s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, to: <Type usr=\"s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3441
                }
              ],
              "key.bodylength": 231,
              "key.bodyoffset": 3556,
              "key.doc.column": 22,
              "key.doc.comment": "Make a copy.",
              "key.doc.declaration": "public static func copy<T>(from: T, to: T, streamContext: StreamContext? = nil) where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"93\" column=\"22\"><Name>copy(from:to:streamContext:)</Name><USR>s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func copy&lt;T&gt;(from: T, to: T, streamContext: StreamContext? = nil) where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Make a copy.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 93,
              "key.doc.name": "copy(from:to:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 17,
              "key.docoffset": 3422,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>copy</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 340,
              "key.name": "copy(from:to:streamContext:)",
              "key.namelength": 94,
              "key.nameoffset": 3460,
              "key.offset": 3448,
              "key.parsed_declaration": "public static func copy<T: DynamicGraph.TensorGroup>(\n  from: T, to: T, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 99,
              "key.parsed_scope.start": 93,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 3468
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 3465,
                  "key.offset": 3465,
                  "key.parsed_declaration": "public static func copy<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 93,
                  "key.parsed_scope.start": 93,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 3565,
                  "key.offset": 3561,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 96,
                  "key.parsed_scope.start": 96,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 3619,
                  "key.offset": 3615,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_DATA_TRANSFER_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 97,
                  "key.parsed_scope.start": 97,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, StreamContext?) -> ()",
              "key.typeusr": "$s4from2to13streamContextyx_x4main06StreamD0CSgtcAD24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO4copy4from2to13streamContextyx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func indexSelect&lt;T, U&gt;(input: <Type usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp\">T</Type>, index: <Type usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type>, U : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3845
                }
              ],
              "key.bodylength": 337,
              "key.bodyoffset": 4005,
              "key.doc.column": 22,
              "key.doc.comment": "Select input tensor with another index tensor.",
              "key.doc.declaration": "public static func indexSelect<T, U>(input: T, index: U, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup, U : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"102\" column=\"22\"><Name>indexSelect(input:index:streamContext:)</Name><USR>s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ</USR><Declaration>public static func indexSelect&lt;T, U&gt;(input: T, index: U, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup, U : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Select input tensor with another index tensor.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 102,
              "key.doc.name": "indexSelect(input:index:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 51,
              "key.docoffset": 3792,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>indexSelect</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>input</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 491,
              "key.name": "indexSelect(input:index:streamContext:)",
              "key.namelength": 134,
              "key.nameoffset": 3864,
              "key.offset": 3852,
              "key.parsed_declaration": "public static func indexSelect<T: DynamicGraph.TensorGroup, U: DynamicGraph.TensorGroup>(\n  input: T, index: U, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 112,
              "key.parsed_scope.start": 102,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 3879
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 3876,
                  "key.offset": 3876,
                  "key.parsed_declaration": "public static func indexSelect<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 102,
                  "key.parsed_scope.start": 102,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 3908
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 3905,
                  "key.offset": 3905,
                  "key.parsed_declaration": "public static func indexSelect<T: DynamicGraph.TensorGroup, U: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 102,
                  "key.parsed_scope.start": 102,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 4014,
                  "key.offset": 4010,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 105,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 67,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 4115,
                  "key.offset": 4111,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_INDEX_SELECT_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 107,
                  "key.parsed_scope.start": 107,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 131,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4187,
                  "key.offset": 4183,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: input, index, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 108,
                  "key.parsed_scope.start": 108,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_TensorGroup, U : DynamicGraph_TensorGroup> (Functional.Type) -> (T, U, StreamContext?) -> T",
              "key.typeusr": "$s5input5index13streamContextxx_q_4main06StreamD0CSgtcAD24DynamicGraph_TensorGroupRzAdHR_r0_luD",
              "key.usr": "s:4main10FunctionalO11indexSelect5input0C013streamContextxx_q_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzAaKR_r0_lFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func min&lt;T&gt;(_ left: <Type usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4392
                }
              ],
              "key.bodylength": 327,
              "key.bodyoffset": 4518,
              "key.doc.column": 22,
              "key.doc.comment": "Element-wise min for two input tensors",
              "key.doc.declaration": "public static func min<T>(_ left: T, _ right: T, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"115\" column=\"22\"><Name>min(_:_:streamContext:)</Name><USR>s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func min&lt;T&gt;(_ left: T, _ right: T, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Element-wise min for two input tensors</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 115,
              "key.doc.name": "min(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 43,
              "key.docoffset": 4347,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>min</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 447,
              "key.name": "min(_:_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 4411,
              "key.offset": 4399,
              "key.parsed_declaration": "public static func min<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 125,
              "key.parsed_scope.start": 115,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO3minyAA5ModelC2IOCAH_AHtFZ\">min(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 4418
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4415,
                  "key.offset": 4415,
                  "key.parsed_declaration": "public static func min<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 115,
                  "key.parsed_scope.start": 115,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 4527,
                  "key.offset": 4523,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 118,
                  "key.parsed_scope.start": 118,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 4628,
                  "key.offset": 4624,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_MIN_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 120,
                  "key.parsed_scope.start": 120,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 130,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4691,
                  "key.offset": 4687,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: left, right, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 121,
                  "key.parsed_scope.start": 121,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func max&lt;T&gt;(_ left: <Type usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4895
                }
              ],
              "key.bodylength": 327,
              "key.bodyoffset": 5021,
              "key.doc.column": 22,
              "key.doc.comment": "Element-wise max for two input tensors",
              "key.doc.declaration": "public static func max<T>(_ left: T, _ right: T, streamContext: StreamContext? = nil) -> T where T : main.DynamicGraph_TensorGroup",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"128\" column=\"22\"><Name>max(_:_:streamContext:)</Name><USR>s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ</USR><Declaration>public static func max&lt;T&gt;(_ left: T, _ right: T, streamContext: StreamContext? = nil) -&gt; T where T : main.DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Element-wise max for two input tensors</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 128,
              "key.doc.name": "max(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 43,
              "key.docoffset": 4850,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>max</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 447,
              "key.name": "max(_:_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 4914,
              "key.offset": 4902,
              "key.parsed_declaration": "public static func max<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 138,
              "key.parsed_scope.start": 128,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO3maxyAA5ModelC2IOCAH_AHtFZ\">max(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 4921
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4918,
                  "key.offset": 4918,
                  "key.parsed_declaration": "public static func max<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 128,
                  "key.parsed_scope.start": 128,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 5030,
                  "key.offset": 5026,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 131,
                  "key.parsed_scope.start": 131,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 5131,
                  "key.offset": 5127,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_MAX_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 133,
                  "key.parsed_scope.start": 133,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 130,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 5194,
                  "key.offset": 5190,
                  "key.parsed_declaration": "let outputs = exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: left, right, outputSize: 1,\n  streamContext: streamContext)",
                  "key.parsed_scope.end": 134,
                  "key.parsed_scope.start": 134,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ7outputsL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Functional.Type) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ"
            }
          ],
          "key.typename": "Functional.Type",
          "key.typeusr": "$s4main10FunctionalOmD",
          "key.usr": "s:4main10FunctionalO"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 2099,
          "key.bodyoffset": 5384,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2131,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 5363,
          "key.offset": 5353,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 187,
          "key.parsed_scope.start": 141,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(ranges: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt; { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5387
                }
              ],
              "key.bodylength": 1978,
              "key.bodyoffset": 5503,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>ranges</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 2088,
              "key.name": "subscript(_:_:)",
              "key.namelength": 69,
              "key.nameoffset": 5394,
              "key.offset": 5394,
              "key.parsed_declaration": "public subscript(ranges: Range<Int>..., streamContext: StreamContext? = nil)\n  -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 186,
              "key.parsed_scope.start": 142,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC6TensorCyxSid_tcip\">subscript(_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Range<Int>..., StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$sy4main12DynamicGraphC6TensorCy_xGSnySiGd_AA13StreamContextCSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcip"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 5581,
              "key.offset": 5577,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 147,
              "key.parsed_scope.start": 147,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC10dimensionsSaySiGvp\">dimensions</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcig10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 5673,
              "key.offset": 5669,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 149,
              "key.parsed_scope.start": 149,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcig6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let newDimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newDimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "newDimensions",
              "key.namelength": 13,
              "key.nameoffset": 5721,
              "key.offset": 5717,
              "key.parsed_declaration": "let newDimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 150,
              "key.parsed_scope.start": 150,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcig13newDimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 5771,
              "key.offset": 5767,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 151,
              "key.parsed_scope.start": 151,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcig10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 6293,
              "key.offset": 6289,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 163,
              "key.parsed_scope.start": 163,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC10dimensionsSaySiGvp\">dimensions</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 6385,
              "key.offset": 6381,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 165,
              "key.parsed_scope.start": 165,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let newDimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newDimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "newDimensions",
              "key.namelength": 13,
              "key.nameoffset": 6433,
              "key.offset": 6429,
              "key.parsed_declaration": "let newDimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 166,
              "key.parsed_scope.start": 166,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis13newDimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 6483,
              "key.offset": 6479,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 167,
              "key.parsed_scope.start": 167,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let output: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;Element&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;Element&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 122,
              "key.name": "output",
              "key.namelength": 6,
              "key.nameoffset": 6874,
              "key.offset": 6870,
              "key.parsed_declaration": "let output = reshaped(\n  format: v.format, dimensions: newDimensions, offset: offset, increments: increments\n)",
              "key.parsed_scope.end": 174,
              "key.parsed_scope.start": 174,
              "key.typename": "DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis6outputL_AFvp"
            },
            {
              "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 49,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 7003,
              "key.offset": 6999,
              "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
              "key.parsed_scope.end": 177,
              "key.parsed_scope.start": 177,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis6paramsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 71,
              "key.name": "cmd",
              "key.namelength": 3,
              "key.nameoffset": 7059,
              "key.offset": 7055,
              "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_FORMAT_TRANSFORM_FORWARD, nil, params, 0)",
              "key.parsed_scope.end": 178,
              "key.parsed_scope.start": 178,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis3cmdL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 7137,
              "key.offset": 7133,
              "key.parsed_declaration": "let _graph = graph._graph",
              "key.parsed_scope.end": 179,
              "key.parsed_scope.start": 179,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis6_graphL_s13OpaquePointerVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "_streamContext",
              "key.namelength": 14,
              "key.nameoffset": 7169,
              "key.offset": 7165,
              "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
              "key.parsed_scope.end": 180,
              "key.parsed_scope.start": 180,
              "key.typename": "OpaquePointer?",
              "key.typeusr": "$ss13OpaquePointerVSgD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis07_streamF0L_s13OpaquePointerVSgvp"
            },
            {
              "key.annotated_decl": "<Declaration>var _input: ccv_nnc_tensor_variable_t?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 50,
              "key.name": "_input",
              "key.namelength": 6,
              "key.nameoffset": 7244,
              "key.offset": 7240,
              "key.parsed_declaration": "var _input: ccv_nnc_tensor_variable_t? = v._tensor",
              "key.parsed_scope.end": 181,
              "key.parsed_scope.start": 181,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis6_inputL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 56,
              "key.name": "_output",
              "key.namelength": 7,
              "key.nameoffset": 7301,
              "key.offset": 7297,
              "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = output._tensor",
              "key.parsed_scope.end": 182,
              "key.parsed_scope.start": 182,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC6TensorCyAEy_xGSnySiGd_AA13StreamContextCSgtcis7_outputL_Xevp"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 2531,
          "key.bodyoffset": 7554,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2600,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 7496,
          "key.offset": 7486,
          "key.parsed_declaration": "extension DynamicGraph.Group where Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 247,
          "key.parsed_scope.start": 189,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public subscript(ranges: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt; { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7557
                }
              ],
              "key.bodylength": 2411,
              "key.bodyoffset": 7672,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>ranges</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>streamContext</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 2520,
              "key.name": "subscript(_:_:)",
              "key.namelength": 69,
              "key.nameoffset": 7564,
              "key.offset": 7564,
              "key.parsed_declaration": "public subscript(ranges: Range<Int>..., streamContext: StreamContext? = nil)\n  -> DynamicGraph.Group<Element>",
              "key.parsed_scope.end": 246,
              "key.parsed_scope.start": 190,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyxSicip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVys10ArraySliceVyxGSnySiGcip\">subscript(_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (Range<Int>..., StreamContext?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$sy4main12DynamicGraphC5GroupVy_xGSnySiGd_AA13StreamContextCSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcip"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 7750,
              "key.offset": 7746,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 195,
              "key.parsed_scope.start": 195,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcig10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 7842,
              "key.offset": 7838,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 197,
              "key.parsed_scope.start": 197,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcig6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let newDimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newDimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "newDimensions",
              "key.namelength": 13,
              "key.nameoffset": 7890,
              "key.offset": 7886,
              "key.parsed_declaration": "let newDimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 198,
              "key.parsed_scope.start": 198,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcig13newDimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 7940,
              "key.offset": 7936,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 199,
              "key.parsed_scope.start": 199,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcig10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 28,
              "key.name": "graph",
              "key.namelength": 5,
              "key.nameoffset": 8442,
              "key.offset": 8438,
              "key.parsed_declaration": "let graph = untyped[0].graph",
              "key.parsed_scope.end": 211,
              "key.parsed_scope.start": 211,
              "key.typename": "DynamicGraph",
              "key.typeusr": "$s4main12DynamicGraphCD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis5graphL_ACvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 8609,
              "key.offset": 8605,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 216,
              "key.parsed_scope.start": 216,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 8701,
              "key.offset": 8697,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 218,
              "key.parsed_scope.start": 218,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let newDimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newDimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "newDimensions",
              "key.namelength": 13,
              "key.nameoffset": 8749,
              "key.offset": 8745,
              "key.parsed_declaration": "let newDimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 219,
              "key.parsed_scope.start": 219,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis13newDimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 8799,
              "key.offset": 8795,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 220,
              "key.parsed_scope.start": 220,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let outputs: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 123,
              "key.name": "outputs",
              "key.namelength": 7,
              "key.nameoffset": 9190,
              "key.offset": 9186,
              "key.parsed_declaration": "let outputs = reshaped(\n  format: v.format, dimensions: newDimensions, offset: offset, increments: increments\n)",
              "key.parsed_scope.end": 227,
              "key.parsed_scope.start": 227,
              "key.typename": "DynamicGraph.Group<Element>",
              "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis7outputsL_AFvp"
            },
            {
              "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 49,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 9320,
              "key.offset": 9316,
              "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
              "key.parsed_scope.end": 230,
              "key.parsed_scope.start": 230,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis6paramsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 71,
              "key.name": "cmd",
              "key.namelength": 3,
              "key.nameoffset": 9376,
              "key.offset": 9372,
              "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_FORMAT_TRANSFORM_FORWARD, nil, params, 0)",
              "key.parsed_scope.end": 231,
              "key.parsed_scope.start": 231,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis3cmdL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 9454,
              "key.offset": 9450,
              "key.parsed_declaration": "let _graph = graph._graph",
              "key.parsed_scope.end": 232,
              "key.parsed_scope.start": 232,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis6_graphL_s13OpaquePointerVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "_streamContext",
              "key.namelength": 14,
              "key.nameoffset": 9486,
              "key.offset": 9482,
              "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
              "key.parsed_scope.end": 233,
              "key.parsed_scope.start": 233,
              "key.typename": "OpaquePointer?",
              "key.typeusr": "$ss13OpaquePointerVSgD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis07_streamF0L_s13OpaquePointerVSgvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 72,
              "key.name": "_inputs",
              "key.namelength": 7,
              "key.nameoffset": 9561,
              "key.offset": 9557,
              "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = v.untyped.map { $0._tensor }",
              "key.parsed_scope.end": 234,
              "key.parsed_scope.start": 234,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis7_inputsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 98,
              "key.name": "_outputs",
              "key.namelength": 8,
              "key.nameoffset": 9640,
              "key.offset": 9636,
              "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: count)",
              "key.parsed_scope.end": 235,
              "key.parsed_scope.start": 235,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis8_outputsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 29,
              "key.name": "outputSize",
              "key.namelength": 10,
              "key.nameoffset": 9867,
              "key.offset": 9863,
              "key.parsed_declaration": "let outputSize = Int32(count)",
              "key.parsed_scope.end": 240,
              "key.parsed_scope.start": 240,
              "key.typename": "Int32",
              "key.typeusr": "$ss5Int32VD",
              "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcis10outputSizeL_s5Int32Vvp"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 584,
          "key.bodyoffset": 10119,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 616,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 10098,
          "key.offset": 10088,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 262,
          "key.parsed_scope.start": 249,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func transposed(_ axisA: <Type usr=\"s:Si\">Int</Type>, _ axisB: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10159
                }
              ],
              "key.bodylength": 415,
              "key.bodyoffset": 10286,
              "key.doc.column": 15,
              "key.doc.comment": "Transpose from axisA to axisB.",
              "key.doc.declaration": "public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil) -> DynamicGraph.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"251\" column=\"15\"><Name>transposed(_:_:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF</USR><Declaration>public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil) -&gt; DynamicGraph.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Transpose from axisA to axisB.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 251,
              "key.doc.name": "transposed(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 35,
              "key.docoffset": 10122,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisA</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisB</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 536,
              "key.name": "transposed(_:_:streamContext:)",
              "key.namelength": 75,
              "key.nameoffset": 10171,
              "key.offset": 10166,
              "key.parsed_declaration": "public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil)\n  -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 261,
              "key.parsed_scope.start": 251,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 10295,
                  "key.offset": 10291,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 254,
                  "key.parsed_scope.start": 254,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 64,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 10453,
                  "key.offset": 10449,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_TRANSPOSE_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 257,
                  "key.parsed_scope.start": 257,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 10522,
                  "key.offset": 10518,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 258,
                  "key.parsed_scope.start": 258,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Int, Int, StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s__13streamContext4main12DynamicGraphC6TensorCy_xGSi_SiAB06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 582,
          "key.bodyoffset": 10736,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 613,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 10716,
          "key.offset": 10706,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 277,
          "key.parsed_scope.start": 264,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func transposed(_ axisA: <Type usr=\"s:Si\">Int</Type>, _ axisB: <Type usr=\"s:Si\">Int</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10776
                }
              ],
              "key.bodylength": 414,
              "key.bodyoffset": 10902,
              "key.doc.column": 15,
              "key.doc.comment": "Transpose from axisA to axisB.",
              "key.doc.declaration": "public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil) -> DynamicGraph.Group<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"266\" column=\"15\"><Name>transposed(_:_:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF</USR><Declaration>public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil) -&gt; DynamicGraph.Group&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Transpose from axisA to axisB.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 266,
              "key.doc.name": "transposed(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 35,
              "key.docoffset": 10739,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisA</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisB</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 534,
              "key.name": "transposed(_:_:streamContext:)",
              "key.namelength": 75,
              "key.nameoffset": 10788,
              "key.offset": 10783,
              "key.parsed_declaration": "public func transposed(_ axisA: Int, _ axisB: Int, streamContext: StreamContext? = nil)\n  -> DynamicGraph.Group<Element>",
              "key.parsed_scope.end": 276,
              "key.parsed_scope.start": 266,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 10911,
                  "key.offset": 10907,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 269,
                  "key.parsed_scope.start": 269,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 64,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 11069,
                  "key.offset": 11065,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_TRANSPOSE_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 272,
                  "key.parsed_scope.start": 272,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 11138,
                  "key.offset": 11134,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 273,
                  "key.parsed_scope.start": 273,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Int, Int, StreamContext?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$s__13streamContext4main12DynamicGraphC5GroupVy_xGSi_SiAB06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV10transposed__13streamContextAEy_xGSi_SiAA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 668,
          "key.bodyoffset": 11352,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 700,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 11331,
          "key.offset": 11321,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 294,
          "key.parsed_scope.start": 279,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func rand(_ lowerBound: <Type usr=\"s:Sf\">Float</Type> = 0, _ upperBound: <Type usr=\"s:Sf\">Float</Type> = 1, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11411
                }
              ],
              "key.bodylength": 494,
              "key.bodyoffset": 11524,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with uniform random values.",
              "key.doc.declaration": "public func rand(_ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"281\" column=\"15\"><Name>rand(_:_:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF</USR><Declaration>public func rand(_ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with uniform random values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 281,
              "key.doc.name": "rand(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 54,
              "key.docoffset": 11355,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rand</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lowerBound</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>upperBound</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 601,
              "key.name": "rand(_:_:streamContext:)",
              "key.namelength": 99,
              "key.nameoffset": 11423,
              "key.offset": 11418,
              "key.parsed_declaration": "public func rand(\n  _ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 293,
              "key.parsed_scope.start": 281,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 11533,
                  "key.offset": 11529,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 284,
                  "key.parsed_scope.start": 284,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 11682,
                  "key.offset": 11678,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_RANDOM_UNIFORM_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 287,
                  "key.parsed_scope.start": 287,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 11756,
                  "key.offset": 11752,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 288,
                  "key.parsed_scope.start": 288,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 11786,
                  "key.offset": 11782,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF01_fG0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 11859,
                  "key.offset": 11855,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 290,
                  "key.parsed_scope.start": 290,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF7_outputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float, Float, StreamContext?) -> ()",
              "key.typeusr": "$s__13streamContextySf_Sf4main06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC4rand__13streamContextySf_SfAA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 1235,
          "key.bodyoffset": 12053,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1266,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 12033,
          "key.offset": 12023,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 322,
          "key.parsed_scope.start": 296,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func rand(_ lowerBound: <Type usr=\"s:Sf\">Float</Type> = 0, _ upperBound: <Type usr=\"s:Sf\">Float</Type> = 1, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12112
                }
              ],
              "key.bodylength": 1061,
              "key.bodyoffset": 12225,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with uniform random values.",
              "key.doc.declaration": "public func rand(_ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"298\" column=\"15\"><Name>rand(_:_:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF</USR><Declaration>public func rand(_ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with uniform random values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 298,
              "key.doc.name": "rand(_:_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 54,
              "key.docoffset": 12056,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rand</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>lowerBound</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>upperBound</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1168,
              "key.name": "rand(_:_:streamContext:)",
              "key.namelength": 99,
              "key.nameoffset": 12124,
              "key.offset": 12119,
              "key.parsed_declaration": "public func rand(\n  _ lowerBound: Float = 0, _ upperBound: Float = 1, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 321,
              "key.parsed_scope.start": 298,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 12286,
                  "key.offset": 12282,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 302,
                  "key.parsed_scope.start": 302,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 12435,
                  "key.offset": 12431,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_RANDOM_UNIFORM_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 305,
                  "key.parsed_scope.start": 305,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 12509,
                  "key.offset": 12505,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 306,
                  "key.parsed_scope.start": 306,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 12550,
                  "key.offset": 12546,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 307,
                  "key.parsed_scope.start": 307,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 12580,
                  "key.offset": 12576,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 308,
                  "key.parsed_scope.start": 308,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF01_fG0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 12653,
                  "key.offset": 12649,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = underlyingArray[0]._tensor",
                  "key.parsed_scope.end": 309,
                  "key.parsed_scope.start": 309,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let copy: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>copy</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "copy",
                  "key.namelength": 4,
                  "key.nameoffset": 12886,
                  "key.offset": 12882,
                  "key.parsed_declaration": "let copy = ccv_nnc_cmd(CCV_NNC_DATA_TRANSFER_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 313,
                  "key.parsed_scope.start": 313,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF4copyL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float, Float, StreamContext?) -> ()",
              "key.typeusr": "$s__13streamContextySf_Sf4main06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV4rand__13streamContextySf_SfAA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 649,
          "key.bodyoffset": 13322,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 681,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 13301,
          "key.offset": 13291,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 339,
          "key.parsed_scope.start": 324,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func randn(std: <Type usr=\"s:Sf\">Float</Type> = 1, mean: <Type usr=\"s:Sf\">Float</Type> = 0, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13392
                }
              ],
              "key.bodylength": 480,
              "key.bodyoffset": 13489,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with normal-distributed random values.",
              "key.doc.declaration": "public func randn(std: Float = 1, mean: Float = 0, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"326\" column=\"15\"><Name>randn(std:mean:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF</USR><Declaration>public func randn(std: Float = 1, mean: Float = 0, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with normal-distributed random values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 326,
              "key.doc.name": "randn(std:mean:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 65,
              "key.docoffset": 13325,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>randn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>std</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>mean</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 571,
              "key.name": "randn(std:mean:streamContext:)",
              "key.namelength": 83,
              "key.nameoffset": 13404,
              "key.offset": 13399,
              "key.parsed_declaration": "public func randn(\n  std: Float = 1, mean: Float = 0, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 338,
              "key.parsed_scope.start": 326,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 13498,
                  "key.offset": 13494,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 329,
                  "key.parsed_scope.start": 329,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 13634,
                  "key.offset": 13630,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_RANDOM_NORMAL_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 332,
                  "key.parsed_scope.start": 332,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 13707,
                  "key.offset": 13703,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 333,
                  "key.parsed_scope.start": 333,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 13737,
                  "key.offset": 13733,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 334,
                  "key.parsed_scope.start": 334,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF01_hI0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 13810,
                  "key.offset": 13806,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 335,
                  "key.parsed_scope.start": 335,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF7_outputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float, Float, StreamContext?) -> ()",
              "key.typeusr": "$s3std4mean13streamContextySf_Sf4main06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 1216,
          "key.bodyoffset": 14004,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1247,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 13984,
          "key.offset": 13974,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 367,
          "key.parsed_scope.start": 341,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func randn(std: <Type usr=\"s:Sf\">Float</Type> = 0, mean: <Type usr=\"s:Sf\">Float</Type> = 1, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14074
                }
              ],
              "key.bodylength": 1047,
              "key.bodyoffset": 14171,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with normal-distributed random values.",
              "key.doc.declaration": "public func randn(std: Float = 0, mean: Float = 1, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"343\" column=\"15\"><Name>randn(std:mean:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF</USR><Declaration>public func randn(std: Float = 0, mean: Float = 1, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with normal-distributed random values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 343,
              "key.doc.name": "randn(std:mean:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 65,
              "key.docoffset": 14007,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>randn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>std</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>mean</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1138,
              "key.name": "randn(std:mean:streamContext:)",
              "key.namelength": 83,
              "key.nameoffset": 14086,
              "key.offset": 14081,
              "key.parsed_declaration": "public func randn(\n  std: Float = 0, mean: Float = 1, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 366,
              "key.parsed_scope.start": 343,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 14232,
                  "key.offset": 14228,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 347,
                  "key.parsed_scope.start": 347,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 14368,
                  "key.offset": 14364,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_RANDOM_NORMAL_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 350,
                  "key.parsed_scope.start": 350,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 14441,
                  "key.offset": 14437,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 351,
                  "key.parsed_scope.start": 351,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 14482,
                  "key.offset": 14478,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 352,
                  "key.parsed_scope.start": 352,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 14512,
                  "key.offset": 14508,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 353,
                  "key.parsed_scope.start": 353,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF01_hI0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 14585,
                  "key.offset": 14581,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = underlyingArray[0]._tensor",
                  "key.parsed_scope.end": 354,
                  "key.parsed_scope.start": 354,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let copy: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>copy</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "copy",
                  "key.namelength": 4,
                  "key.nameoffset": 14818,
                  "key.offset": 14814,
                  "key.parsed_declaration": "let copy = ccv_nnc_cmd(CCV_NNC_DATA_TRANSFER_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 358,
                  "key.parsed_scope.start": 358,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF4copyL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float, Float, StreamContext?) -> ()",
              "key.typeusr": "$s3std4mean13streamContextySf_Sf4main06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV5randn3std4mean13streamContextySf_SfAA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1689,
          "key.bodyoffset": 15254,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1721,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 15233,
          "key.offset": 15223,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 405,
          "key.parsed_scope.start": 369,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toGPU(_ ordinal: <Type usr=\"s:Si\">Int</Type> = 0, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15293
                }
              ],
              "key.bodylength": 707,
              "key.bodyoffset": 15407,
              "key.doc.column": 15,
              "key.doc.comment": "Copy the given tensor to GPU.",
              "key.doc.declaration": "public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil) -> DynamicGraph.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"371\" column=\"15\"><Name>toGPU(_:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF</USR><Declaration>public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil) -&gt; DynamicGraph.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Copy the given tensor to GPU.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 371,
              "key.doc.name": "toGPU(_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 34,
              "key.docoffset": 15257,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ordinal</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 815,
              "key.name": "toGPU(_:streamContext:)",
              "key.namelength": 62,
              "key.nameoffset": 15305,
              "key.offset": 15300,
              "key.parsed_declaration": "public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil)\n  -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 387,
              "key.parsed_scope.start": 371,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 15416,
                  "key.offset": 15412,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 374,
                  "key.parsed_scope.start": 374,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 15517,
                  "key.offset": 15513,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_DATA_TRANSFER_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 376,
                  "key.parsed_scope.start": 376,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _input: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 53,
                  "key.name": "_input",
                  "key.namelength": 6,
                  "key.nameoffset": 15590,
                  "key.offset": 15586,
                  "key.parsed_declaration": "var _input: ccv_nnc_tensor_variable_t? = self._tensor",
                  "key.parsed_scope.end": 377,
                  "key.parsed_scope.start": 377,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF6_inputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let rawInput: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawInput</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 28,
                  "key.name": "rawInput",
                  "key.namelength": 8,
                  "key.nameoffset": 15648,
                  "key.offset": 15644,
                  "key.parsed_declaration": "let rawInput = self.rawValue",
                  "key.parsed_scope.end": 378,
                  "key.parsed_scope.start": 378,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF8rawInputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let output: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 137,
                  "key.name": "output",
                  "key.namelength": 6,
                  "key.nameoffset": 15681,
                  "key.offset": 15677,
                  "key.parsed_declaration": "let output: DynamicGraph.Tensor<Element> = graph.variable(\n  .GPU(ordinal), format: rawInput.format, dimensions: rawInput.dimensions)",
                  "key.parsed_scope.end": 379,
                  "key.parsed_scope.start": 379,
                  "key.typename": "DynamicGraph.Tensor<Element>",
                  "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF6outputL_AHvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 56,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 15823,
                  "key.offset": 15819,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = output._tensor",
                  "key.parsed_scope.end": 381,
                  "key.parsed_scope.start": 381,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 15884,
                  "key.offset": 15880,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 382,
                  "key.parsed_scope.start": 382,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 15914,
                  "key.offset": 15910,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 383,
                  "key.parsed_scope.start": 383,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF01_gH0L_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Int, StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s_13streamContext4main12DynamicGraphC6TensorCy_xGSi_AB06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC5toGPU_13streamContextAEy_xGSi_AA06StreamH0CSgtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toCPU(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16155
                }
              ],
              "key.bodylength": 698,
              "key.bodyoffset": 16243,
              "key.doc.column": 15,
              "key.doc.comment": "Copy the given tensor to CPU.",
              "key.doc.declaration": "public func toCPU(streamContext: StreamContext? = nil) -> DynamicGraph.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"390\" column=\"15\"><Name>toCPU(streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF</USR><Declaration>public func toCPU(streamContext: StreamContext? = nil) -&gt; DynamicGraph.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Copy the given tensor to CPU.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 390,
              "key.doc.name": "toCPU(streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 34,
              "key.docoffset": 16119,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 780,
              "key.name": "toCPU(streamContext:)",
              "key.namelength": 42,
              "key.nameoffset": 16167,
              "key.offset": 16162,
              "key.parsed_declaration": "public func toCPU(streamContext: StreamContext? = nil) -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 404,
              "key.parsed_scope.start": 390,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 16252,
                  "key.offset": 16248,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 391,
                  "key.parsed_scope.start": 391,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 16353,
                  "key.offset": 16349,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_DATA_TRANSFER_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 393,
                  "key.parsed_scope.start": 393,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _input: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 53,
                  "key.name": "_input",
                  "key.namelength": 6,
                  "key.nameoffset": 16426,
                  "key.offset": 16422,
                  "key.parsed_declaration": "var _input: ccv_nnc_tensor_variable_t? = self._tensor",
                  "key.parsed_scope.end": 394,
                  "key.parsed_scope.start": 394,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF6_inputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let rawInput: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawInput</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 28,
                  "key.name": "rawInput",
                  "key.namelength": 8,
                  "key.nameoffset": 16484,
                  "key.offset": 16480,
                  "key.parsed_declaration": "let rawInput = self.rawValue",
                  "key.parsed_scope.end": 395,
                  "key.parsed_scope.start": 395,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF8rawInputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let output: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "output",
                  "key.namelength": 6,
                  "key.nameoffset": 16517,
                  "key.offset": 16513,
                  "key.parsed_declaration": "let output: DynamicGraph.Tensor<Element> = graph.variable(\n  .CPU, format: rawInput.format, dimensions: rawInput.dimensions)",
                  "key.parsed_scope.end": 396,
                  "key.parsed_scope.start": 396,
                  "key.typename": "DynamicGraph.Tensor<Element>",
                  "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF6outputL_AHvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 56,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 16650,
                  "key.offset": 16646,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = output._tensor",
                  "key.parsed_scope.end": 398,
                  "key.parsed_scope.start": 398,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 16711,
                  "key.offset": 16707,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 399,
                  "key.parsed_scope.start": 399,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 16741,
                  "key.offset": 16737,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 400,
                  "key.parsed_scope.start": 400,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF01_gH0L_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s13streamContext4main12DynamicGraphC6TensorCy_xGAB06StreamB0CSg_tcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC5toCPU13streamContextAEy_xGAA06StreamH0CSg_tF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 599,
          "key.bodyoffset": 16977,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 631,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 16956,
          "key.offset": 16946,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 422,
          "key.parsed_scope.start": 407,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func full(_ value: <Type usr=\"s:Sf\">Float</Type> = 0, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17022
                }
              ],
              "key.bodylength": 469,
              "key.bodyoffset": 17105,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with a value.",
              "key.doc.declaration": "public func full(_ value: Float = 0, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"409\" column=\"15\"><Name>full(_:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF</USR><Declaration>public func full(_ value: Float = 0, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with a value.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 409,
              "key.doc.name": "full(_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 40,
              "key.docoffset": 16980,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>full</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 546,
              "key.name": "full(_:streamContext:)",
              "key.namelength": 69,
              "key.nameoffset": 17034,
              "key.offset": 17029,
              "key.parsed_declaration": "public func full(\n  _ value: Float = 0, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 421,
              "key.parsed_scope.start": 409,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 17114,
                  "key.offset": 17110,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 412,
                  "key.parsed_scope.start": 412,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 17249,
                  "key.offset": 17245,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SET_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 415,
                  "key.parsed_scope.start": 415,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 17312,
                  "key.offset": 17308,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 416,
                  "key.parsed_scope.start": 416,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 17342,
                  "key.offset": 17338,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 417,
                  "key.parsed_scope.start": 417,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF01_fG0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 17415,
                  "key.offset": 17411,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 418,
                  "key.parsed_scope.start": 418,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF7_outputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float, StreamContext?) -> ()",
              "key.typeusr": "$s_13streamContextySf_4main06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC4full_13streamContextySf_AA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 959,
          "key.bodyoffset": 17609,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 990,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 17589,
          "key.offset": 17579,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 447,
          "key.parsed_scope.start": 424,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func full(_ value: <Type usr=\"s:Sf\">Float</Type> = 0, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17654
                }
              ],
              "key.bodylength": 829,
              "key.bodyoffset": 17737,
              "key.doc.column": 15,
              "key.doc.comment": "Fill the given tensor with a value.",
              "key.doc.declaration": "public func full(_ value: Float = 0, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"426\" column=\"15\"><Name>full(_:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF</USR><Declaration>public func full(_ value: Float = 0, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Fill the given tensor with a value.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 426,
              "key.doc.name": "full(_:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 40,
              "key.docoffset": 17612,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>full</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 906,
              "key.name": "full(_:streamContext:)",
              "key.namelength": 69,
              "key.nameoffset": 17666,
              "key.offset": 17661,
              "key.parsed_declaration": "public func full(\n  _ value: Float = 0, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 446,
              "key.parsed_scope.start": 426,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 17798,
                  "key.offset": 17794,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 430,
                  "key.parsed_scope.start": 430,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 17933,
                  "key.offset": 17929,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SET_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 433,
                  "key.parsed_scope.start": 433,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 17996,
                  "key.offset": 17992,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 434,
                  "key.parsed_scope.start": 434,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 18037,
                  "key.offset": 18033,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 435,
                  "key.parsed_scope.start": 435,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 18067,
                  "key.offset": 18063,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 436,
                  "key.parsed_scope.start": 436,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF01_fG0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 45,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 18140,
                  "key.offset": 18136,
                  "key.parsed_declaration": "let outputSize = Int32(underlyingArray.count)",
                  "key.parsed_scope.end": 437,
                  "key.parsed_scope.start": 437,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF10outputSizeL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 106,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 18190,
                  "key.offset": 18186,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize))",
                  "key.parsed_scope.end": 438,
                  "key.parsed_scope.start": 438,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF8_outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float, StreamContext?) -> ()",
              "key.typeusr": "$s_13streamContextySf_4main06StreamB0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV4full_13streamContextySf_AA06StreamG0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 773,
          "key.bodyoffset": 18602,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 805,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 18581,
          "key.offset": 18571,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 466,
          "key.parsed_scope.start": 449,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func lerp(_ weight: <Type usr=\"s:Sf\">Float</Type>, to: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 18661
                }
              ],
              "key.bodylength": 598,
              "key.bodyoffset": 18775,
              "key.doc.column": 15,
              "key.doc.comment": "Interpolate from this tensor to the other tensor.",
              "key.doc.declaration": "public func lerp(_ weight: Float, to: DynamicGraph.Tensor<Element>, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"451\" column=\"15\"><Name>lerp(_:to:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF</USR><Declaration>public func lerp(_ weight: Float, to: DynamicGraph.Tensor&lt;Element&gt;, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Interpolate from this tensor to the other tensor.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 451,
              "key.doc.name": "lerp(_:to:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 54,
              "key.docoffset": 18605,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>lerp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>weight</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 706,
              "key.name": "lerp(_:to:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 18673,
              "key.offset": 18668,
              "key.parsed_declaration": "public func lerp(\n  _ weight: Float, to: DynamicGraph.Tensor<Element>, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 465,
              "key.parsed_scope.start": 451,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 18829,
                  "key.offset": 18825,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 455,
                  "key.parsed_scope.start": 455,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 18974,
                  "key.offset": 18970,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_ADD_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 458,
                  "key.parsed_scope.start": 458,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 19037,
                  "key.offset": 19033,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 459,
                  "key.parsed_scope.start": 459,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 19067,
                  "key.offset": 19063,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 460,
                  "key.parsed_scope.start": 460,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF01_gH0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 65,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 19140,
                  "key.offset": 19136,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = [_tensor, to._tensor]",
                  "key.parsed_scope.end": 461,
                  "key.parsed_scope.start": 461,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 19210,
                  "key.offset": 19206,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 462,
                  "key.parsed_scope.start": 462,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF7_outputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float, DynamicGraph.Tensor<Element>, StreamContext?) -> ()",
              "key.typeusr": "$s_2to13streamContextySf_4main12DynamicGraphC6TensorCy_xGAC06StreamC0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 1289,
          "key.bodyoffset": 19408,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1320,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 19388,
          "key.offset": 19378,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 497,
          "key.parsed_scope.start": 468,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func lerp(_ weight: <Type usr=\"s:Sf\">Float</Type>, to: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt;, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19467
                }
              ],
              "key.bodylength": 1115,
              "key.bodyoffset": 19580,
              "key.doc.column": 15,
              "key.doc.comment": "Interpolate from this tensor to the other tensor.",
              "key.doc.declaration": "public func lerp(_ weight: Float, to: DynamicGraph.Group<Element>, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"470\" column=\"15\"><Name>lerp(_:to:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF</USR><Declaration>public func lerp(_ weight: Float, to: DynamicGraph.Group&lt;Element&gt;, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Interpolate from this tensor to the other tensor.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 470,
              "key.doc.name": "lerp(_:to:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 54,
              "key.docoffset": 19411,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>lerp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>weight</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1222,
              "key.name": "lerp(_:to:streamContext:)",
              "key.namelength": 99,
              "key.nameoffset": 19479,
              "key.offset": 19474,
              "key.parsed_declaration": "public func lerp(\n  _ weight: Float, to: DynamicGraph.Group<Element>, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 496,
              "key.parsed_scope.start": 470,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 19754,
                  "key.offset": 19750,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 476,
                  "key.parsed_scope.start": 476,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 19899,
                  "key.offset": 19895,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_ADD_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 479,
                  "key.parsed_scope.start": 479,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 19962,
                  "key.offset": 19958,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 480,
                  "key.parsed_scope.start": 480,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 20003,
                  "key.offset": 19999,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 481,
                  "key.parsed_scope.start": 481,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 20033,
                  "key.offset": 20029,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 482,
                  "key.parsed_scope.start": 482,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF01_gH0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 135,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 20106,
                  "key.offset": 20102,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = zip(underlyingArray, to.underlyingArray).flatMap {\n  [$0.0._tensor, $0.1._tensor]\n}",
                  "key.parsed_scope.end": 483,
                  "key.parsed_scope.start": 483,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 45,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 20246,
                  "key.offset": 20242,
                  "key.parsed_declaration": "let outputSize = Int32(underlyingArray.count)",
                  "key.parsed_scope.end": 486,
                  "key.parsed_scope.start": 486,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF10outputSizeL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 106,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 20296,
                  "key.offset": 20292,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize))",
                  "key.parsed_scope.end": 487,
                  "key.parsed_scope.start": 487,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF8_outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float, DynamicGraph.Group<Element>, StreamContext?) -> ()",
              "key.typeusr": "$s_2to13streamContextySf_4main12DynamicGraphC5GroupVy_xGAC06StreamC0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV4lerp_2to13streamContextySf_AEy_xGAA06StreamH0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 773,
          "key.bodyoffset": 20731,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 805,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 20710,
          "key.offset": 20700,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 517,
          "key.parsed_scope.start": 499,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func clamp(min: <Type usr=\"s:Sf\">Float</Type>? = nil, max: <Type usr=\"s:Sf\">Float</Type>? = nil, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20783
                }
              ],
              "key.bodylength": 617,
              "key.bodyoffset": 20885,
              "key.doc.column": 15,
              "key.doc.comment": "Clamp the given tensor between two values.",
              "key.doc.declaration": "public func clamp(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"501\" column=\"15\"><Name>clamp(min:max:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF</USR><Declaration>public func clamp(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Clamp the given tensor between two values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 501,
              "key.doc.name": "clamp(min:max:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 47,
              "key.docoffset": 20734,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 713,
              "key.name": "clamp(min:max:streamContext:)",
              "key.namelength": 88,
              "key.nameoffset": 20795,
              "key.offset": 20790,
              "key.parsed_declaration": "public func clamp(\n  min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 516,
              "key.parsed_scope.start": 501,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 20937,
                  "key.offset": 20933,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 505,
                  "key.parsed_scope.start": 505,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 21118,
                  "key.offset": 21114,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 509,
                  "key.parsed_scope.start": 509,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 21183,
                  "key.offset": 21179,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 510,
                  "key.parsed_scope.start": 510,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 21213,
                  "key.offset": 21209,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 511,
                  "key.parsed_scope.start": 511,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF01_hI0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _input: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 48,
                  "key.name": "_input",
                  "key.namelength": 6,
                  "key.nameoffset": 21286,
                  "key.offset": 21282,
                  "key.parsed_declaration": "var _input: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 512,
                  "key.parsed_scope.start": 512,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF6_inputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _output: ccv_nnc_tensor_variable_t?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>ccv_nnc_tensor_variable_t?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 21339,
                  "key.offset": 21335,
                  "key.parsed_declaration": "var _output: ccv_nnc_tensor_variable_t? = _tensor",
                  "key.parsed_scope.end": 513,
                  "key.parsed_scope.start": 513,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF7_outputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float?, Float?, StreamContext?) -> ()",
              "key.typeusr": "$s3min3max13streamContextySfSg_AD4main06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 1135,
          "key.bodyoffset": 21537,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1166,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 21517,
          "key.offset": 21507,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 545,
          "key.parsed_scope.start": 519,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func clamp(min: <Type usr=\"s:Sf\">Float</Type>? = nil, max: <Type usr=\"s:Sf\">Float</Type>? = nil, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21589
                }
              ],
              "key.bodylength": 979,
              "key.bodyoffset": 21691,
              "key.doc.column": 15,
              "key.doc.comment": "Clamp the given tensor between two values.",
              "key.doc.declaration": "public func clamp(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"521\" column=\"15\"><Name>clamp(min:max:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF</USR><Declaration>public func clamp(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Clamp the given tensor between two values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 521,
              "key.doc.name": "clamp(min:max:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 47,
              "key.docoffset": 21540,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1075,
              "key.name": "clamp(min:max:streamContext:)",
              "key.namelength": 88,
              "key.nameoffset": 21601,
              "key.offset": 21596,
              "key.parsed_declaration": "public func clamp(\n  min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 544,
              "key.parsed_scope.start": 521,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 21752,
                  "key.offset": 21748,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 525,
                  "key.parsed_scope.start": 525,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 21933,
                  "key.offset": 21929,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 529,
                  "key.parsed_scope.start": 529,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 36,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 21998,
                  "key.offset": 21994,
                  "key.parsed_declaration": "let graph = underlyingArray[0].graph",
                  "key.parsed_scope.end": 530,
                  "key.parsed_scope.start": 530,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 22039,
                  "key.offset": 22035,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 531,
                  "key.parsed_scope.start": 531,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 22069,
                  "key.offset": 22065,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 532,
                  "key.parsed_scope.start": 532,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF01_hI0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 78,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 22142,
                  "key.offset": 22138,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = underlyingArray.map { $0._tensor }",
                  "key.parsed_scope.end": 533,
                  "key.parsed_scope.start": 533,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 45,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 22225,
                  "key.offset": 22221,
                  "key.parsed_declaration": "let outputSize = Int32(underlyingArray.count)",
                  "key.parsed_scope.end": 534,
                  "key.parsed_scope.start": 534,
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF10outputSizeL_s5Int32Vvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 106,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 22275,
                  "key.offset": 22271,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize))",
                  "key.parsed_scope.end": 535,
                  "key.parsed_scope.start": 535,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF8_outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float?, Float?, StreamContext?) -> ()",
              "key.typeusr": "$s3min3max13streamContextySfSg_AD4main06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV5clamp3min3max13streamContextySfSg_AjA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 667,
          "key.bodyoffset": 22706,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 699,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 22685,
          "key.offset": 22675,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 562,
          "key.parsed_scope.start": 547,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func clamped(min: <Type usr=\"s:Sf\">Float</Type>? = nil, max: <Type usr=\"s:Sf\">Float</Type>? = nil, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 22758
                }
              ],
              "key.bodylength": 477,
              "key.bodyoffset": 22894,
              "key.doc.column": 15,
              "key.doc.comment": "Clamp the given tensor between two values.",
              "key.doc.declaration": "public func clamped(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil) -> DynamicGraph.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"549\" column=\"15\"><Name>clamped(min:max:streamContext:)</Name><USR>s:4main12DynamicGraphC6TensorC7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF</USR><Declaration>public func clamped(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil) -&gt; DynamicGraph.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Clamp the given tensor between two values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 549,
              "key.doc.name": "clamped(min:max:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 47,
              "key.docoffset": 22709,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 607,
              "key.name": "clamped(min:max:streamContext:)",
              "key.namelength": 90,
              "key.nameoffset": 22770,
              "key.offset": 22765,
              "key.parsed_declaration": "public func clamped(\n  min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil\n) -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 561,
              "key.parsed_scope.start": 549,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 22946,
                  "key.offset": 22942,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 553,
                  "key.parsed_scope.start": 553,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 23127,
                  "key.offset": 23123,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 557,
                  "key.parsed_scope.start": 557,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 23192,
                  "key.offset": 23188,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 558,
                  "key.parsed_scope.start": 558,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (Float?, Float?, StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s3min3max13streamContext4main12DynamicGraphC6TensorCy_xGSfSg_AjD06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 622,
          "key.bodyoffset": 23406,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 653,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 23386,
          "key.offset": 23376,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 578,
          "key.parsed_scope.start": 564,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func clamped(min: <Type usr=\"s:Sf\">Float</Type>? = nil, max: <Type usr=\"s:Sf\">Float</Type>? = nil, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23458
                }
              ],
              "key.bodylength": 433,
              "key.bodyoffset": 23593,
              "key.doc.column": 15,
              "key.doc.comment": "Clamp the given tensor between two values.",
              "key.doc.declaration": "public func clamped(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil) -> DynamicGraph.Group<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift\" line=\"566\" column=\"15\"><Name>clamped(min:max:streamContext:)</Name><USR>s:4main12DynamicGraphC5GroupV7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF</USR><Declaration>public func clamped(min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil) -&gt; DynamicGraph.Group&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Clamp the given tensor between two values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 566,
              "key.doc.name": "clamped(min:max:streamContext:)",
              "key.doc.type": "Function",
              "key.doclength": 47,
              "key.docoffset": 23409,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 562,
              "key.name": "clamped(min:max:streamContext:)",
              "key.namelength": 90,
              "key.nameoffset": 23470,
              "key.offset": 23465,
              "key.parsed_declaration": "public func clamped(\n  min: Float? = nil, max: Float? = nil, streamContext: StreamContext? = nil\n) -> DynamicGraph.Group<Element>",
              "key.parsed_scope.end": 577,
              "key.parsed_scope.start": 566,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 23602,
                  "key.offset": 23598,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 569,
                  "key.parsed_scope.start": 569,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 23783,
                  "key.offset": 23779,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 573,
                  "key.parsed_scope.start": 573,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 23848,
                  "key.offset": 23844,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 574,
                  "key.parsed_scope.start": 574,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (Float?, Float?, StreamContext?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$s3min3max13streamContext4main12DynamicGraphC5GroupVy_xGSfSg_AjD06StreamD0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV7clamped3min3max13streamContextAEy_xGSfSg_AkA06StreamI0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 723,
          "key.bodyoffset": 24062,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 755,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 24041,
          "key.offset": 24031,
          "key.parsed_declaration": "extension DynamicGraph.Tensor",
          "key.parsed_scope.end": 599,
          "key.parsed_scope.start": 580,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reduced(_ op: <Type usr=\"s:4main8ReduceOpO\">ReduceOp</Type>, axis: [<Type usr=\"s:Si\">Int</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</Type>&lt;<Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 24065
                }
              ],
              "key.bodylength": 593,
              "key.bodyoffset": 24190,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reduced</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>op</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main8ReduceOpO\">ReduceOp</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6TensorC\">Tensor</ref.class>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 712,
              "key.name": "reduced(_:axis:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 24077,
              "key.offset": 24072,
              "key.parsed_declaration": "public func reduced(_ op: ReduceOp, axis: [Int], streamContext: StreamContext? = nil)\n  -> DynamicGraph.Tensor<Element>",
              "key.parsed_scope.end": 598,
              "key.parsed_scope.start": 581,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 24199,
                  "key.offset": 24195,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 584,
                  "key.parsed_scope.start": 584,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: ccv_nnc_cmd_t</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>ccv_nnc_cmd_t</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 22,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 24389,
                  "key.offset": 24385,
                  "key.parsed_declaration": "let cmd: ccv_nnc_cmd_t",
                  "key.parsed_scope.end": 588,
                  "key.parsed_scope.start": 588,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 24604,
                  "key.offset": 24600,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 595,
                  "key.parsed_scope.start": 595,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC6TensorC7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (DynamicGraph.Tensor<Element>) -> (ReduceOp, [Int], StreamContext?) -> DynamicGraph.Tensor<Element>",
              "key.typeusr": "$s_4axis13streamContext4main12DynamicGraphC6TensorCy_xGAC8ReduceOpO_SaySiGAC06StreamC0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC6TensorC7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 721,
          "key.bodyoffset": 24818,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 752,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 24798,
          "key.offset": 24788,
          "key.parsed_declaration": "extension DynamicGraph.Group",
          "key.parsed_scope.end": 620,
          "key.parsed_scope.start": 601,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reduced(_ op: <Type usr=\"s:4main8ReduceOpO\">ReduceOp</Type>, axis: [<Type usr=\"s:Si\">Int</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 24821
                }
              ],
              "key.bodylength": 592,
              "key.bodyoffset": 24945,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reduced</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>op</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main8ReduceOpO\">ReduceOp</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 710,
              "key.name": "reduced(_:axis:streamContext:)",
              "key.namelength": 73,
              "key.nameoffset": 24833,
              "key.offset": 24828,
              "key.parsed_declaration": "public func reduced(_ op: ReduceOp, axis: [Int], streamContext: StreamContext? = nil)\n  -> DynamicGraph.Group<Element>",
              "key.parsed_scope.end": 619,
              "key.parsed_scope.start": 602,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 24954,
                  "key.offset": 24950,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 605,
                  "key.parsed_scope.start": 605,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: ccv_nnc_cmd_t</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>ccv_nnc_cmd_t</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 22,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 25144,
                  "key.offset": 25140,
                  "key.parsed_declaration": "let cmd: ccv_nnc_cmd_t",
                  "key.parsed_scope.end": 609,
                  "key.parsed_scope.start": 609,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/FunctionalAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 128,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 25359,
                  "key.offset": 25355,
                  "key.parsed_declaration": "let outputs = Functional.exec(\n  cmd: cmd, hint: ccv_nnc_no_hint, inputs: self, outputSize: 1, streamContext: streamContext)",
                  "key.parsed_scope.end": 616,
                  "key.parsed_scope.start": 616,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF7outputsL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (ReduceOp, [Int], StreamContext?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$s_4axis13streamContext4main12DynamicGraphC5GroupVy_xGAC8ReduceOpO_SaySiGAC06StreamC0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV7reduced_4axis13streamContextAEy_xGAA8ReduceOpO_SaySiGAA06StreamH0CSgtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 18849,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_AnyTensor</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 273
            }
          ],
          "key.bodylength": 77,
          "key.bodyoffset": 313,
          "key.doc.column": 17,
          "key.doc.comment": "This protocol defines a generic constructs such that we can use DynamicGraph.AnyTensorGroup\nto represent either a collection of tensors from multiple GPUs or one tensor.\nIt has a typed version DynamicGraph.TensorGroup to enforce type constraint.",
          "key.doc.declaration": "public protocol DynamicGraph_AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift\" line=\"7\" column=\"17\"><Name>DynamicGraph_AnyTensor</Name><USR>s:4main22DynamicGraph_AnyTensorP</USR><Declaration>public protocol DynamicGraph_AnyTensor</Declaration><CommentParts><Abstract><Para>This protocol defines a generic constructs such that we can use DynamicGraph.AnyTensorGroup to represent either a collection of tensors from multiple GPUs or one tensor. It has a typed version DynamicGraph.TensorGroup to enforce type constraint.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 7,
          "key.doc.name": "DynamicGraph_AnyTensor",
          "key.doc.type": "Class",
          "key.doclength": 258,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_AnyTensor</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 111,
          "key.name": "DynamicGraph_AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 289,
          "key.offset": 280,
          "key.parsed_declaration": "public protocol DynamicGraph_AnyTensor",
          "key.parsed_scope.end": 9,
          "key.parsed_scope.start": 7,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>static func downcasting(from: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>) -&gt; <Type usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>downcasting</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</ref.protocol></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 73,
              "key.name": "downcasting(from:)",
              "key.namelength": 35,
              "key.nameoffset": 328,
              "key.offset": 316,
              "key.parsed_declaration": "static func downcasting(from: DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.parsed_scope.end": 8,
              "key.parsed_scope.start": 8,
              "key.substructure": [],
              "key.typename": "<Self where Self : DynamicGraph_AnyTensor> (Self.Type) -> (DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.typeusr": "$s4from4main22DynamicGraph_AnyTensor_pAB0cd1_E0_p_tcD",
              "key.usr": "s:4main22DynamicGraph_AnyTensorP11downcasting4fromAaB_pAA0bc1_D0_p_tFZ"
            }
          ],
          "key.typename": "DynamicGraph_AnyTensor.Protocol",
          "key.typeusr": "$s4main22DynamicGraph_AnyTensor_pmD",
          "key.usr": "s:4main22DynamicGraph_AnyTensorP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_AnyTensorGroup : <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 393
            }
          ],
          "key.bodylength": 538,
          "key.bodyoffset": 456,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 16,
              "key.offset": 438
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_AnyTensorGroup</decl.name> : <ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_Any"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 595,
          "key.name": "DynamicGraph_AnyTensorGroup",
          "key.namelength": 27,
          "key.nameoffset": 409,
          "key.offset": 400,
          "key.parsed_declaration": "public protocol DynamicGraph_AnyTensorGroup: DynamicGraph_Any",
          "key.parsed_scope.end": 24,
          "key.parsed_scope.start": 11,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>associatedtype AnyTensor : <Type usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>AnyTensor</decl.name> : <ref.protocol usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</ref.protocol></decl.associatedtype>",
              "key.kind": "source.lang.swift.decl.associatedtype",
              "key.length": 48,
              "key.name": "AnyTensor",
              "key.namelength": 9,
              "key.nameoffset": 474,
              "key.offset": 459,
              "key.parsed_declaration": "associatedtype AnyTensor: DynamicGraph_AnyTensor",
              "key.parsed_scope.end": 12,
              "key.parsed_scope.start": 12,
              "key.typename": "Self.AnyTensor.Type",
              "key.typeusr": "$s9AnyTensor4main013DynamicGraph_aB5GroupPQzmD",
              "key.usr": "s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 156,
              "key.name": "exec(cmd:hint:inputs:outputSize:streamContext:)",
              "key.namelength": 129,
              "key.nameoffset": 522,
              "key.offset": 510,
              "key.parsed_declaration": "static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputSize: Int32,\n  streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 13,
              "key.parsed_scope.start": 13,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main27DynamicGraph_AnyTensorGroupP4execyXeXeFZ\">exec(cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DynamicGraph_AnyTensorGroup> (Self.Type) -> (<<error type>>, <<error type>>, [Self.AnyTensor], Int32, StreamContext?) -> [Self.AnyTensor]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main27DynamicGraph_AnyTensorGroupP4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], outputs: [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 141,
              "key.name": "exec(cmd:hint:inputs:outputs:streamContext:)",
              "key.namelength": 129,
              "key.nameoffset": 681,
              "key.offset": 669,
              "key.parsed_declaration": "static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputs: [AnyTensor],\n  streamContext: StreamContext?)",
              "key.parsed_scope.end": 17,
              "key.parsed_scope.start": 17,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main27DynamicGraph_AnyTensorGroupP4execyXeXeFZ\">exec(cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : DynamicGraph_AnyTensorGroup> (Self.Type) -> (<<error type>>, <<error type>>, [Self.AnyTensor], [Self.AnyTensor], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main27DynamicGraph_AnyTensorGroupP4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>static func evaluate(model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, isTest: <Type usr=\"s:Sb\">Bool</Type>, dataParallel: inout <Type usr=\"s:Si\">Int</Type>?, inputs: [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>evaluate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isTest</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataParallel</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 180,
              "key.name": "evaluate(model:isTest:dataParallel:inputs:outputSize:streamContext:)",
              "key.namelength": 153,
              "key.nameoffset": 825,
              "key.offset": 813,
              "key.parsed_declaration": "static func evaluate(\n  model: OpaquePointer, isTest: Bool, dataParallel: inout Int?, inputs: [AnyTensor],\n  outputSize: Int32, streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 20,
              "key.parsed_scope.start": 20,
              "key.substructure": [],
              "key.typename": "<Self where Self : DynamicGraph_AnyTensorGroup> (Self.Type) -> (OpaquePointer, Bool, inout Int?, [Self.AnyTensor], Int32, StreamContext?) -> [Self.AnyTensor]",
              "key.typeusr": "$s5model6isTest12dataParallel6inputs10outputSize13streamContextSay9AnyTensorQzGs13OpaquePointerV_SbSiSgzAIs5Int32V4main06StreamJ0CSgtcD",
              "key.usr": "s:4main27DynamicGraph_AnyTensorGroupP8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSay0dE0QzGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamQ0CSgtFZ"
            }
          ],
          "key.typename": "DynamicGraph_AnyTensorGroup.Protocol",
          "key.typeusr": "$s4main27DynamicGraph_AnyTensorGroup_pmD",
          "key.usr": "s:4main27DynamicGraph_AnyTensorGroupP"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 65,
          "key.bodyoffset": 1021,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 90,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 1007,
          "key.offset": 997,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 28,
          "key.parsed_scope.start": 26,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias AnyTensorGroup = <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1024
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>AnyTensorGroup</decl.name> = <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 54,
              "key.name": "AnyTensorGroup",
              "key.namelength": 14,
              "key.nameoffset": 1041,
              "key.offset": 1031,
              "key.parsed_declaration": "public typealias AnyTensorGroup = DynamicGraph_AnyTensorGroup",
              "key.parsed_scope.end": 27,
              "key.parsed_scope.start": 27,
              "key.typename": "DynamicGraph_AnyTensorGroup.Protocol",
              "key.typeusr": "$s4main27DynamicGraph_AnyTensorGroup_pmD",
              "key.usr": "s:4main12DynamicGraphC14AnyTensorGroupa"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 133,
          "key.bodyoffset": 1147,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 22,
              "key.offset": 1123
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_AnyTensor"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 192,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 1099,
          "key.offset": 1089,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor: DynamicGraph_AnyTensor",
          "key.parsed_scope.end": 34,
          "key.parsed_scope.start": 30,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func downcasting(from: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>) -&gt; <Type usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1150
                }
              ],
              "key.bodylength": 46,
              "key.bodyoffset": 1232,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>downcasting</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</ref.protocol></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 122,
              "key.name": "downcasting(from:)",
              "key.namelength": 35,
              "key.nameoffset": 1169,
              "key.offset": 1157,
              "key.overrides": [
                {
                  "key.usr": "s:4main22DynamicGraph_AnyTensorP11downcasting4fromAaB_pAA0bc1_D0_p_tFZ"
                }
              ],
              "key.parsed_declaration": "public static func downcasting(from: DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.parsed_scope.end": 33,
              "key.parsed_scope.start": 31,
              "key.substructure": [],
              "key.typename": "(DynamicGraph.AnyTensor.Type) -> (DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.typeusr": "$s4from4main22DynamicGraph_AnyTensor_pAB0cd1_E0_p_tcD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC11downcasting4fromAA0bc1_dE0_pAA0bc1_D0_p_tFZ"
            }
          ],
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 3938,
          "key.bodyoffset": 1346,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 27,
              "key.offset": 1317
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph.AnyTensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 4002,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 1293,
          "key.offset": 1283,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor: DynamicGraph.AnyTensorGroup",
          "key.parsed_scope.end": 143,
          "key.parsed_scope.start": 36,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias AnyTensor = <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1350
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>AnyTensor</decl.name> = <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 44,
              "key.name": "AnyTensor",
              "key.namelength": 9,
              "key.nameoffset": 1367,
              "key.offset": 1357,
              "key.parsed_declaration": "public typealias AnyTensor = DynamicGraph.AnyTensor",
              "key.parsed_scope.end": 38,
              "key.parsed_scope.start": 38,
              "key.typename": "DynamicGraph.AnyTensor.Type",
              "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorCADa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1405
                }
              ],
              "key.bodylength": 1173,
              "key.bodyoffset": 1570,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1332,
              "key.name": "exec(cmd:hint:inputs:outputSize:streamContext:)",
              "key.namelength": 129,
              "key.nameoffset": 1424,
              "key.offset": 1412,
              "key.parsed_declaration": "public static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputSize: Int32,\n  streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 75,
              "key.parsed_scope.start": 40,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ\">exec(cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 27,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 1608,
                  "key.offset": 1604,
                  "key.parsed_declaration": "let graph = inputs[0].graph",
                  "key.parsed_scope.end": 45,
                  "key.parsed_scope.start": 45,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC5graphACvp\">graph</RelatedName>"
                    }
                  ],
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 1708,
                  "key.offset": 1704,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = inputs.map { $0._tensor }",
                  "key.parsed_scope.end": 49,
                  "key.parsed_scope.start": 49,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 106,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 1782,
                  "key.offset": 1778,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize))",
                  "key.parsed_scope.end": 50,
                  "key.parsed_scope.start": 50,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var outputsCanBeConstants: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputsCanBeConstants</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "outputsCanBeConstants",
                  "key.namelength": 21,
                  "key.nameoffset": 1993,
                  "key.offset": 1989,
                  "key.parsed_declaration": "var outputsCanBeConstants = true",
                  "key.parsed_scope.end": 53,
                  "key.parsed_scope.start": 53,
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ21outputsCanBeConstantsL_Sbvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 37,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 2143,
                  "key.offset": 2139,
                  "key.parsed_declaration": "let outputs: [DynamicGraph.AnyTensor]",
                  "key.parsed_scope.end": 60,
                  "key.parsed_scope.start": 60,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ7outputsL_SayAEGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 2469,
                  "key.offset": 2465,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 69,
                  "key.parsed_scope.start": 69,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 2499,
                  "key.offset": 2495,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 70,
                  "key.parsed_scope.start": 70,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ14_streamContextL_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "(DynamicGraph.AnyTensor.Type) -> (<<error type>>, <<error type>>, [DynamicGraph.AnyTensor], Int32, StreamContext?) -> [DynamicGraph.AnyTensor]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>], outputs: [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2748
                }
              ],
              "key.bodylength": 700,
              "key.bodyoffset": 2901,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 847,
              "key.name": "exec(cmd:hint:inputs:outputs:streamContext:)",
              "key.namelength": 132,
              "key.nameoffset": 2767,
              "key.offset": 2755,
              "key.parsed_declaration": "public static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputs: [AnyTensor],\n  streamContext: StreamContext?\n)",
              "key.parsed_scope.end": 98,
              "key.parsed_scope.start": 77,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ\">exec(cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 27,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 2939,
                  "key.offset": 2935,
                  "key.parsed_declaration": "let graph = inputs[0].graph",
                  "key.parsed_scope.end": 82,
                  "key.parsed_scope.start": 82,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC5graphACvp\">graph</RelatedName>"
                    }
                  ],
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 3039,
                  "key.offset": 3035,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = inputs.map { $0._tensor }",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 104,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 3113,
                  "key.offset": 3109,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: outputs.count)",
                  "key.parsed_scope.end": 87,
                  "key.parsed_scope.start": 87,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 3330,
                  "key.offset": 3326,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 92,
                  "key.parsed_scope.start": 92,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 3360,
                  "key.offset": 3356,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 93,
                  "key.parsed_scope.start": 93,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ14_streamContextL_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "(DynamicGraph.AnyTensor.Type) -> (<<error type>>, <<error type>>, [DynamicGraph.AnyTensor], [DynamicGraph.AnyTensor], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func evaluate(model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, isTest: <Type usr=\"s:Sb\">Bool</Type>, dataParallel: inout <Type usr=\"s:Si\">Int</Type>?, inputs: [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3606
                }
              ],
              "key.bodylength": 1486,
              "key.bodyoffset": 3795,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>evaluate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isTest</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataParallel</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:4main12DynamicGraphC9AnyTensorCADa\">AnyTensor</ref.typealias>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1669,
              "key.name": "evaluate(model:isTest:dataParallel:inputs:outputSize:streamContext:)",
              "key.namelength": 153,
              "key.nameoffset": 3625,
              "key.offset": 3613,
              "key.parsed_declaration": "public static func evaluate(\n  model: OpaquePointer, isTest: Bool, dataParallel: inout Int?, inputs: [AnyTensor],\n  outputSize: Int32, streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 141,
              "key.parsed_scope.start": 100,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 27,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 3833,
                  "key.offset": 3829,
                  "key.parsed_declaration": "let graph = inputs[0].graph",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 105,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC9AnyTensorC5graphACvp\">graph</RelatedName>"
                    }
                  ],
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_nnc_tensor_variable_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 3933,
                  "key.offset": 3929,
                  "key.parsed_declaration": "let _inputs: [ccv_nnc_tensor_variable_t?] = inputs.map { $0._tensor }",
                  "key.parsed_scope.end": 109,
                  "key.parsed_scope.start": 109,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ01_L0L_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var outputsCanBeConstants: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputsCanBeConstants</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "outputsCanBeConstants",
                  "key.namelength": 21,
                  "key.nameoffset": 4107,
                  "key.offset": 4103,
                  "key.parsed_declaration": "var outputsCanBeConstants = true",
                  "key.parsed_scope.end": 111,
                  "key.parsed_scope.start": 111,
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ21outputsCanBeConstantsL_Sbvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 106,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 4257,
                  "key.offset": 4253,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize))",
                  "key.parsed_scope.end": 118,
                  "key.parsed_scope.start": 118,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 37,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4368,
                  "key.offset": 4364,
                  "key.parsed_declaration": "let outputs: [DynamicGraph.AnyTensor]",
                  "key.parsed_scope.end": 120,
                  "key.parsed_scope.start": 120,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ7outputsL_AMvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 4733,
                  "key.offset": 4729,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 130,
                  "key.parsed_scope.start": 130,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ6_graphL_AOvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 4763,
                  "key.offset": 4759,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 131,
                  "key.parsed_scope.start": 131,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ01_oP0L_AOSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 5074,
                  "key.offset": 5070,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 136,
                  "key.parsed_scope.start": 136,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let noop: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noop</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 52,
                  "key.name": "noop",
                  "key.namelength": 4,
                  "key.nameoffset": 5128,
                  "key.offset": 5124,
                  "key.parsed_declaration": "let noop = ccv_nnc_cmd(CCV_NNC_NOOP, nil, params, 0)",
                  "key.parsed_scope.end": 137,
                  "key.parsed_scope.start": 137,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ4noopL_Xevp"
                }
              ],
              "key.typename": "(DynamicGraph.AnyTensor.Type) -> (OpaquePointer, Bool, inout Int?, [DynamicGraph.AnyTensor], Int32, StreamContext?) -> [DynamicGraph.AnyTensor]",
              "key.typeusr": "$s5model6isTest12dataParallel6inputs10outputSize13streamContextSay4main12DynamicGraphC9AnyTensorCGs13OpaquePointerV_SbSiSgzALs5Int32VAG06StreamJ0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC9AnyTensorC8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEGs13OpaquePointerV_SbSiSgzAMs5Int32VAA06StreamP0CSgtFZ"
            }
          ],
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 268,
          "key.bodyoffset": 5379,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 22,
              "key.offset": 5317
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_AnyTensor"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 361,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 5297,
          "key.offset": 5287,
          "key.parsed_declaration": "extension DynamicGraph.Group: DynamicGraph_AnyTensor where Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 152,
          "key.parsed_scope.start": 145,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func downcasting(from: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>) -&gt; <Type usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5382
                }
              ],
              "key.bodylength": 181,
              "key.bodyoffset": 5464,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>downcasting</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:4main22DynamicGraph_AnyTensorP\">DynamicGraph_AnyTensor</ref.protocol></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 257,
              "key.name": "downcasting(from:)",
              "key.namelength": 35,
              "key.nameoffset": 5401,
              "key.offset": 5389,
              "key.overrides": [
                {
                  "key.usr": "s:4main22DynamicGraph_AnyTensorP11downcasting4fromAaB_pAA0bc1_D0_p_tFZ"
                }
              ],
              "key.parsed_declaration": "public static func downcasting(from: DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.parsed_scope.end": 151,
              "key.parsed_scope.start": 146,
              "key.substructure": [],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (DynamicGraph_Any) -> DynamicGraph_AnyTensor",
              "key.typeusr": "$s4from4main22DynamicGraph_AnyTensor_pAB0cd1_E0_p_tcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV11downcasting4fromAA0bC10_AnyTensor_pAA0bc1_G0_p_tFZ"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 5449,
          "key.bodyoffset": 5747,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 27,
              "key.offset": 5680
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph.AnyTensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 5547,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 5660,
          "key.offset": 5650,
          "key.parsed_declaration": "extension DynamicGraph.Group: DynamicGraph.AnyTensorGroup where Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 296,
          "key.parsed_scope.start": 154,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias AnyTensor = <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5751
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>AnyTensor</decl.name> = <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>&gt;</decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 64,
              "key.name": "AnyTensor",
              "key.namelength": 9,
              "key.nameoffset": 5768,
              "key.offset": 5758,
              "key.parsed_declaration": "public typealias AnyTensor = DynamicGraph.Group<DynamicGraph.AnyTensor>",
              "key.parsed_scope.end": 156,
              "key.parsed_scope.start": 156,
              "key.typename": "DynamicGraph.Group<DynamicGraph.AnyTensor>.Type",
              "key.typeusr": "$s4main12DynamicGraphC5GroupVy_AC9AnyTensorCGmD",
              "key.usr": "s:4main12DynamicGraphC5GroupV9AnyTensora"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5826
                }
              ],
              "key.bodylength": 1571,
              "key.bodyoffset": 5991,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1730,
              "key.name": "exec(cmd:hint:inputs:outputSize:streamContext:)",
              "key.namelength": 129,
              "key.nameoffset": 5845,
              "key.offset": 5833,
              "key.parsed_declaration": "public static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputSize: Int32,\n  streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 202,
              "key.parsed_scope.start": 158,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV4execyXeXeFZ\">exec(cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 6029,
                  "key.offset": 6025,
                  "key.parsed_declaration": "let graph = inputs[0][0].graph",
                  "key.parsed_scope.end": 163,
                  "key.parsed_scope.start": 163,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let parallel: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parallel</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "parallel",
                  "key.namelength": 8,
                  "key.nameoffset": 6064,
                  "key.offset": 6060,
                  "key.parsed_declaration": "let parallel = inputs[0].count",
                  "key.parsed_scope.end": 164,
                  "key.parsed_scope.start": 164,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ8parallelL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 28,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 6099,
                  "key.offset": 6095,
                  "key.parsed_declaration": "let inputSize = inputs.count",
                  "key.parsed_scope.end": 165,
                  "key.parsed_scope.start": 165,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ9inputSizeL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _inputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 87,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 6132,
                  "key.offset": 6128,
                  "key.parsed_declaration": "var _inputs = [ccv_nnc_tensor_variable_t?](repeating: nil, count: parallel * inputSize)",
                  "key.parsed_scope.end": 166,
                  "key.parsed_scope.start": 166,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var outputsCanBeConstants: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputsCanBeConstants</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "outputsCanBeConstants",
                  "key.namelength": 21,
                  "key.nameoffset": 6224,
                  "key.offset": 6220,
                  "key.parsed_declaration": "var outputsCanBeConstants = true",
                  "key.parsed_scope.end": 167,
                  "key.parsed_scope.start": 167,
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ21outputsCanBeConstantsL_Sbvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 117,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 6576,
                  "key.offset": 6572,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize) * parallel)",
                  "key.parsed_scope.end": 178,
                  "key.parsed_scope.start": 178,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>&gt;]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>&gt;]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 57,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 6698,
                  "key.offset": 6694,
                  "key.parsed_declaration": "let outputs: [DynamicGraph.Group<DynamicGraph.AnyTensor>]",
                  "key.parsed_scope.end": 180,
                  "key.parsed_scope.start": 180,
                  "key.typename": "[DynamicGraph.Group<DynamicGraph.AnyTensor>]",
                  "key.typeusr": "$sSay4main12DynamicGraphC5GroupVy_AC9AnyTensorCGGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ7outputsL_SayAEy_AC9AnyTensorCGGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 7243,
                  "key.offset": 7239,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 195,
                  "key.parsed_scope.start": 195,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 7273,
                  "key.offset": 7269,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 196,
                  "key.parsed_scope.start": 196,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ14_streamContextL_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (<<error type>>, <<error type>>, [DynamicGraph.Group<DynamicGraph.AnyTensor>], Int32, StreamContext?) -> [DynamicGraph.Group<DynamicGraph.AnyTensor>]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>], outputs: [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7567
                }
              ],
              "key.bodylength": 1174,
              "key.bodyoffset": 7720,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1321,
              "key.name": "exec(cmd:hint:inputs:outputs:streamContext:)",
              "key.namelength": 132,
              "key.nameoffset": 7586,
              "key.offset": 7574,
              "key.parsed_declaration": "public static func exec(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [AnyTensor], outputs: [AnyTensor],\n  streamContext: StreamContext?\n)",
              "key.parsed_scope.end": 236,
              "key.parsed_scope.start": 204,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV4execyXeXeFZ\">exec(cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 7758,
                  "key.offset": 7754,
                  "key.parsed_declaration": "let graph = inputs[0][0].graph",
                  "key.parsed_scope.end": 209,
                  "key.parsed_scope.start": 209,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let parallel: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parallel</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "parallel",
                  "key.namelength": 8,
                  "key.nameoffset": 7793,
                  "key.offset": 7789,
                  "key.parsed_declaration": "let parallel = inputs[0].count",
                  "key.parsed_scope.end": 210,
                  "key.parsed_scope.start": 210,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ8parallelL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 28,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 7828,
                  "key.offset": 7824,
                  "key.parsed_declaration": "let inputSize = inputs.count",
                  "key.parsed_scope.end": 211,
                  "key.parsed_scope.start": 211,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ9inputSizeL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _inputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 87,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 7861,
                  "key.offset": 7857,
                  "key.parsed_declaration": "var _inputs = [ccv_nnc_tensor_variable_t?](repeating: nil, count: parallel * inputSize)",
                  "key.parsed_scope.end": 212,
                  "key.parsed_scope.start": 212,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 8186,
                  "key.offset": 8182,
                  "key.parsed_declaration": "let outputSize = outputs.count",
                  "key.parsed_scope.end": 220,
                  "key.parsed_scope.start": 220,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ10outputSizeL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 112,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 8221,
                  "key.offset": 8217,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: outputSize * parallel)",
                  "key.parsed_scope.end": 221,
                  "key.parsed_scope.start": 221,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 8594,
                  "key.offset": 8590,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 230,
                  "key.parsed_scope.start": 230,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ6_graphL_s13OpaquePointerVvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 8624,
                  "key.offset": 8620,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 231,
                  "key.parsed_scope.start": 231,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ14_streamContextL_s13OpaquePointerVSgvp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (<<error type>>, <<error type>>, [DynamicGraph.Group<DynamicGraph.AnyTensor>], [DynamicGraph.Group<DynamicGraph.AnyTensor>], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12DynamicGraphC5GroupV4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func evaluate(model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>, isTest: <Type usr=\"s:Sb\">Bool</Type>, dataParallel: inout <Type usr=\"s:Si\">Int</Type>?, inputs: [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8899
                }
              ],
              "key.bodylength": 2105,
              "key.bodyoffset": 9088,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>evaluate</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isTest</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataParallel</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV9AnyTensora\">AnyTensor</ref.typealias>]</decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 2288,
              "key.name": "evaluate(model:isTest:dataParallel:inputs:outputSize:streamContext:)",
              "key.namelength": 153,
              "key.nameoffset": 8918,
              "key.offset": 8906,
              "key.parsed_declaration": "public static func evaluate(\n  model: OpaquePointer, isTest: Bool, dataParallel: inout Int?, inputs: [AnyTensor],\n  outputSize: Int32, streamContext: StreamContext?\n) -> [AnyTensor]",
              "key.parsed_scope.end": 294,
              "key.parsed_scope.start": 238,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 9155,
                  "key.offset": 9151,
                  "key.parsed_declaration": "let graph = inputs[0][0].graph",
                  "key.parsed_scope.end": 244,
                  "key.parsed_scope.start": 244,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ5graphL_ACvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let parallel: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parallel</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 30,
                  "key.name": "parallel",
                  "key.namelength": 8,
                  "key.nameoffset": 9190,
                  "key.offset": 9186,
                  "key.parsed_declaration": "let parallel = inputs[0].count",
                  "key.parsed_scope.end": 245,
                  "key.parsed_scope.start": 245,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ8parallelL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let inputSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 28,
                  "key.name": "inputSize",
                  "key.namelength": 9,
                  "key.nameoffset": 9225,
                  "key.offset": 9221,
                  "key.parsed_declaration": "let inputSize = inputs.count",
                  "key.parsed_scope.end": 246,
                  "key.parsed_scope.start": 246,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ05inputM0L_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _inputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 87,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 9258,
                  "key.offset": 9254,
                  "key.parsed_declaration": "var _inputs = [ccv_nnc_tensor_variable_t?](repeating: nil, count: parallel * inputSize)",
                  "key.parsed_scope.end": 247,
                  "key.parsed_scope.start": 247,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ01_K0L_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var outputsCanBeConstants: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputsCanBeConstants</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "outputsCanBeConstants",
                  "key.namelength": 21,
                  "key.nameoffset": 9350,
                  "key.offset": 9346,
                  "key.parsed_declaration": "var outputsCanBeConstants = true",
                  "key.parsed_scope.end": 248,
                  "key.parsed_scope.start": 248,
                  "key.typename": "Bool",
                  "key.typeusr": "$sSbD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ21outputsCanBeConstantsL_Sbvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 117,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 9960,
                  "key.offset": 9956,
                  "key.parsed_declaration": "let _outputs = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: Int(outputSize) * parallel)",
                  "key.parsed_scope.end": 266,
                  "key.parsed_scope.start": 266,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>&gt;]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>&gt;]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 57,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 10082,
                  "key.offset": 10078,
                  "key.parsed_declaration": "let outputs: [DynamicGraph.Group<DynamicGraph.AnyTensor>]",
                  "key.parsed_scope.end": 268,
                  "key.parsed_scope.start": 268,
                  "key.typename": "[DynamicGraph.Group<DynamicGraph.AnyTensor>]",
                  "key.typeusr": "$sSay4main12DynamicGraphC5GroupVy_AC9AnyTensorCGGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ7outputsL_APvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "_graph",
                  "key.namelength": 6,
                  "key.nameoffset": 10627,
                  "key.offset": 10623,
                  "key.parsed_declaration": "let _graph = graph._graph",
                  "key.parsed_scope.end": 283,
                  "key.parsed_scope.start": 283,
                  "key.typename": "OpaquePointer",
                  "key.typeusr": "$ss13OpaquePointerVD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ6_graphL_ARvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 68,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 10657,
                  "key.offset": 10653,
                  "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
                  "key.parsed_scope.end": 284,
                  "key.parsed_scope.start": 284,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ01_nO0L_ARSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 10986,
                  "key.offset": 10982,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 289,
                  "key.parsed_scope.start": 289,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let noop: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noop</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 52,
                  "key.name": "noop",
                  "key.namelength": 4,
                  "key.nameoffset": 11040,
                  "key.offset": 11036,
                  "key.parsed_declaration": "let noop = ccv_nnc_cmd(CCV_NNC_NOOP, nil, params, 0)",
                  "key.parsed_scope.end": 290,
                  "key.parsed_scope.start": 290,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ4noopL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (OpaquePointer, Bool, inout Int?, [DynamicGraph.Group<DynamicGraph.AnyTensor>], Int32, StreamContext?) -> [DynamicGraph.Group<DynamicGraph.AnyTensor>]",
              "key.typeusr": "$s5model6isTest12dataParallel6inputs10outputSize13streamContextSay4main12DynamicGraphC5GroupVy_AI9AnyTensorCGGs13OpaquePointerV_SbSiSgzAOs5Int32VAG06StreamJ0CSgtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV8evaluate5model6isTest12dataParallel6inputs10outputSize13streamContextSayAEy_AC9AnyTensorCGGs13OpaquePointerV_SbSiSgzAPs5Int32VAA06StreamO0CSgtFZ"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_TensorGroup : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 11290
            }
          ],
          "key.bodylength": 69,
          "key.bodyoffset": 11361,
          "key.doc.column": 17,
          "key.doc.comment": "Represent a type-checked parameters that encapsulate both tensor and group of tensors.",
          "key.doc.declaration": "public protocol DynamicGraph_TensorGroup : main.DynamicGraph_AnyTensorGroup",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift\" line=\"299\" column=\"17\"><Name>DynamicGraph_TensorGroup</Name><USR>s:4main24DynamicGraph_TensorGroupP</USR><Declaration>public protocol DynamicGraph_TensorGroup : main.DynamicGraph_AnyTensorGroup</Declaration><CommentParts><Abstract><Para>Represent a type-checked parameters that encapsulate both tensor and group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 299,
          "key.doc.name": "DynamicGraph_TensorGroup",
          "key.doc.type": "Class",
          "key.doclength": 91,
          "key.docoffset": 11199,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 27,
              "key.offset": 11332
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_TensorGroup</decl.name> : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_AnyTensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 134,
          "key.name": "DynamicGraph_TensorGroup",
          "key.namelength": 24,
          "key.nameoffset": 11306,
          "key.offset": 11297,
          "key.parsed_declaration": "public protocol DynamicGraph_TensorGroup: DynamicGraph_AnyTensorGroup",
          "key.parsed_scope.end": 302,
          "key.parsed_scope.start": 299,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>associatedtype ElementNumeric : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>ElementNumeric</decl.name> : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.associatedtype>",
              "key.kind": "source.lang.swift.decl.associatedtype",
              "key.length": 44,
              "key.name": "ElementNumeric",
              "key.namelength": 14,
              "key.nameoffset": 11379,
              "key.offset": 11364,
              "key.parsed_declaration": "associatedtype ElementNumeric: TensorNumeric",
              "key.parsed_scope.end": 300,
              "key.parsed_scope.start": 300,
              "key.typename": "Self.ElementNumeric.Type",
              "key.typeusr": "$s14ElementNumeric4main24DynamicGraph_TensorGroupPQzmD",
              "key.usr": "s:4main24DynamicGraph_TensorGroupP14ElementNumericQa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 18,
              "key.name": "init(_:)",
              "key.namelength": 18,
              "key.nameoffset": 11411,
              "key.offset": 11411,
              "key.parsed_declaration": "init(_: AnyTensor)",
              "key.parsed_scope.end": 301,
              "key.parsed_scope.start": 301,
              "key.substructure": [],
              "key.typename": "<Self where Self : DynamicGraph_TensorGroup> (Self.Type) -> (Self.AnyTensor) -> Self",
              "key.typeusr": "$syx9AnyTensorQzcD",
              "key.usr": "s:4main24DynamicGraph_TensorGroupPyx03AnyD0Qzcfc"
            }
          ],
          "key.typename": "DynamicGraph_TensorGroup.Protocol",
          "key.typeusr": "$s4main24DynamicGraph_TensorGroup_pmD",
          "key.usr": "s:4main24DynamicGraph_TensorGroupP"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 59,
          "key.bodyoffset": 11457,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 84,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 11443,
          "key.offset": 11433,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 306,
          "key.parsed_scope.start": 304,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias TensorGroup = <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11460
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>TensorGroup</decl.name> = <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 48,
              "key.name": "TensorGroup",
              "key.namelength": 11,
              "key.nameoffset": 11477,
              "key.offset": 11467,
              "key.parsed_declaration": "public typealias TensorGroup = DynamicGraph_TensorGroup",
              "key.parsed_scope.end": 305,
              "key.parsed_scope.start": 305,
              "key.typename": "DynamicGraph_TensorGroup.Protocol",
              "key.typeusr": "$s4main24DynamicGraph_TensorGroup_pmD",
              "key.usr": "s:4main12DynamicGraphC11TensorGroupa"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol _DynamicGraph_TensorGroup</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 11564
            }
          ],
          "key.bodylength": 76,
          "key.bodyoffset": 11607,
          "key.doc.column": 17,
          "key.doc.comment": "Internal type for type-checking purpose.",
          "key.doc.declaration": "public protocol _DynamicGraph_TensorGroup",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift\" line=\"309\" column=\"17\"><Name>_DynamicGraph_TensorGroup</Name><USR>s:4main25_DynamicGraph_TensorGroupP</USR><Declaration>public protocol _DynamicGraph_TensorGroup</Declaration><CommentParts><Abstract><Para>Internal type for type-checking purpose.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 309,
          "key.doc.name": "_DynamicGraph_TensorGroup",
          "key.doc.type": "Class",
          "key.doclength": 45,
          "key.docoffset": 11519,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>_DynamicGraph_TensorGroup</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 113,
          "key.name": "_DynamicGraph_TensorGroup",
          "key.namelength": 25,
          "key.nameoffset": 11580,
          "key.offset": 11571,
          "key.parsed_declaration": "public protocol _DynamicGraph_TensorGroup",
          "key.parsed_scope.end": 312,
          "key.parsed_scope.start": 309,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>associatedtype _Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>_Element</decl.name> : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.associatedtype>",
              "key.kind": "source.lang.swift.decl.associatedtype",
              "key.length": 38,
              "key.name": "_Element",
              "key.namelength": 8,
              "key.nameoffset": 11625,
              "key.offset": 11610,
              "key.parsed_declaration": "associatedtype _Element: TensorNumeric",
              "key.parsed_scope.end": 310,
              "key.parsed_scope.start": 310,
              "key.typename": "Self._Element.Type",
              "key.typeusr": "$s8_Element4main25_DynamicGraph_TensorGroupPQzmD",
              "key.usr": "s:4main25_DynamicGraph_TensorGroupP8_ElementQa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 31,
              "key.name": "init(_:)",
              "key.namelength": 31,
              "key.nameoffset": 11651,
              "key.offset": 11651,
              "key.parsed_declaration": "init(_: DynamicGraph.AnyTensor)",
              "key.parsed_scope.end": 311,
              "key.parsed_scope.start": 311,
              "key.substructure": [],
              "key.typename": "<Self where Self : _DynamicGraph_TensorGroup> (Self.Type) -> (DynamicGraph.AnyTensor) -> Self",
              "key.typeusr": "$syx4main12DynamicGraphC9AnyTensorCcD",
              "key.usr": "s:4main25_DynamicGraph_TensorGroupPyxAA0bC0C03AnyD0Ccfc"
            }
          ],
          "key.typename": "_DynamicGraph_TensorGroup.Protocol",
          "key.typeusr": "$s4main25_DynamicGraph_TensorGroup_pmD",
          "key.usr": "s:4main25_DynamicGraph_TensorGroupP"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 39,
          "key.bodyoffset": 11744,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 25,
              "key.offset": 11717
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "_DynamicGraph_TensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 98,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 11696,
          "key.offset": 11686,
          "key.parsed_declaration": "extension DynamicGraph.Tensor: _DynamicGraph_TensorGroup",
          "key.parsed_scope.end": 316,
          "key.parsed_scope.start": 314,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias _Element = <Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11747
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>_Element</decl.name> = <ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 28,
              "key.name": "_Element",
              "key.namelength": 8,
              "key.nameoffset": 11764,
              "key.offset": 11754,
              "key.overrides": [
                {
                  "key.usr": "s:4main25_DynamicGraph_TensorGroupP8_ElementQa"
                }
              ],
              "key.parsed_declaration": "public typealias _Element = Element",
              "key.parsed_scope.end": 315,
              "key.parsed_scope.start": 315,
              "key.typename": "Element.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main12DynamicGraphC6TensorC8_Elementa"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.Tensor&lt;Element&gt; : <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 45,
          "key.bodyoffset": 11843,
          "key.doc.column": 22,
          "key.doc.declaration": "public final class main.DynamicGraph.Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"111\" column=\"22\"><Name>Tensor</Name><USR>s:4main12DynamicGraphC6TensorC</USR><Declaration>public final class main.DynamicGraph.Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>A typed tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 111,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 24,
              "key.offset": 11817
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph.TensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 103,
          "key.name": "DynamicGraph.Tensor",
          "key.namelength": 19,
          "key.nameoffset": 11796,
          "key.offset": 11786,
          "key.parsed_declaration": "extension DynamicGraph.Tensor: DynamicGraph.TensorGroup",
          "key.parsed_scope.end": 320,
          "key.parsed_scope.start": 318,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias ElementNumeric = <Type usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11846
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ElementNumeric</decl.name> = <ref.generic_type_param usr=\"s:4main12DynamicGraphC6TensorC7Elementxmfp\">Element</ref.generic_type_param></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 34,
              "key.name": "ElementNumeric",
              "key.namelength": 14,
              "key.nameoffset": 11863,
              "key.offset": 11853,
              "key.overrides": [
                {
                  "key.usr": "s:4main24DynamicGraph_TensorGroupP14ElementNumericQa"
                }
              ],
              "key.parsed_declaration": "public typealias ElementNumeric = Element",
              "key.parsed_scope.end": 319,
              "key.parsed_scope.start": 319,
              "key.typename": "Element.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main12DynamicGraphC6TensorC14ElementNumerica"
            }
          ],
          "key.typename": "DynamicGraph.Tensor<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC6TensorCy_xGmD",
          "key.usr": "s:4main12DynamicGraphC6TensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 54,
          "key.bodyoffset": 12021,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 24,
              "key.offset": 11921
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : RandomAccessCollection, DynamicGraph.AnyGroup <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph.TensorGroup"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 185,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 11901,
          "key.offset": 11891,
          "key.parsed_declaration": "extension DynamicGraph.Group: DynamicGraph.TensorGroup\nwhere Element: _DynamicGraph_TensorGroup, Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 325,
          "key.parsed_scope.start": 322,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias ElementNumeric = <Type usr=\"s:4main12DynamicGraphC5GroupVA2A01_bc7_TensorD0RzrlE7Elementxmfp\">Element</Type>.<Type usr=\"s:4main25_DynamicGraph_TensorGroupP8_ElementQa\">_Element</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12024
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ElementNumeric</decl.name> = <ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupVA2A01_bc7_TensorD0RzrlE7Elementxmfp\">Element</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main25_DynamicGraph_TensorGroupP8_ElementQa\">_Element</ref.associatedtype></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 43,
              "key.name": "ElementNumeric",
              "key.namelength": 14,
              "key.nameoffset": 12041,
              "key.offset": 12031,
              "key.overrides": [
                {
                  "key.usr": "s:4main24DynamicGraph_TensorGroupP14ElementNumericQa"
                }
              ],
              "key.parsed_declaration": "public typealias ElementNumeric = Element._Element",
              "key.parsed_scope.end": 324,
              "key.parsed_scope.start": 324,
              "key.typename": "Element._Element.Type",
              "key.typeusr": "$s8_Element4main25_DynamicGraph_TensorGroupPQzmD",
              "key.usr": "s:4main12DynamicGraphC5GroupVA2A01_bc7_TensorD0RzrlE14ElementNumerica"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum Functional</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 12078
            }
          ],
          "key.bodylength": 3282,
          "key.bodyoffset": 12102,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Functional</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 3300,
          "key.name": "Functional",
          "key.namelength": 10,
          "key.nameoffset": 12090,
          "key.offset": 12085,
          "key.parsed_declaration": "public enum Functional",
          "key.parsed_scope.end": 403,
          "key.parsed_scope.start": 327,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>internal static func exec&lt;T&gt;(_: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.Type, cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.internal",
                  "key.length": 8,
                  "key.offset": 12105
                }
              ],
              "key.bodylength": 120,
              "key.bodyoffset": 12325,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>internal</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 332,
              "key.name": "exec(_:cmd:hint:inputs:outputSize:streamContext:)",
              "key.namelength": 180,
              "key.nameoffset": 12126,
              "key.offset": 12114,
              "key.parsed_declaration": "internal static func exec<T: DynamicGraph.AnyTensorGroup>(\n  _: T.Type, cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [T.AnyTensor], outputSize: Int32,\n  streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 334,
              "key.parsed_scope.start": 328,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 12134
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 12131,
                  "key.offset": 12131,
                  "key.parsed_declaration": "internal static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 328,
                  "key.parsed_scope.start": 328,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (T.Type, <<error type>>, <<error type>>, [T.AnyTensor], Int32, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>static func exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>, _ restInputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.bodylength": 587,
              "key.bodyoffset": 12682,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 821,
              "key.name": "exec(cmd:hint:inputs:_:outputSize:streamContext:)",
              "key.namelength": 202,
              "key.nameoffset": 12461,
              "key.offset": 12449,
              "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup>(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: T,\n  _ restInputs: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 353,
              "key.parsed_scope.start": 335,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 12469
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 12466,
                  "key.offset": 12466,
                  "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 335,
                  "key.parsed_scope.start": 335,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var tensorInputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensorInputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 31,
                  "key.name": "tensorInputs",
                  "key.namelength": 12,
                  "key.nameoffset": 12691,
                  "key.offset": 12687,
                  "key.parsed_declaration": "var tensorInputs: [T.AnyTensor]",
                  "key.parsed_scope.end": 339,
                  "key.parsed_scope.start": 339,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ12tensorInputsL_Say9AnyTensorQzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (<<error type>>, <<error type>>, T, [DynamicGraph_Any], Int32, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>static func exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>, _ restInputs: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>..., outputSize: <Type usr=\"s:s5Int32V\">Int32</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.bodylength": 133,
              "key.bodyoffset": 13507,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 368,
              "key.name": "exec(cmd:hint:inputs:_:outputSize:streamContext:)",
              "key.namelength": 203,
              "key.nameoffset": 13285,
              "key.offset": 13273,
              "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup>(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: T,\n  _ restInputs: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 361,
              "key.parsed_scope.start": 354,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 13293
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 13290,
                  "key.offset": 13290,
                  "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 354,
                  "key.parsed_scope.start": 354,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (<<error type>>, <<error type>>, T, DynamicGraph_Any..., Int32, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>internal static func exec&lt;T&gt;(_: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.Type, cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], outputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.internal",
                  "key.length": 8,
                  "key.offset": 13644
                }
              ],
              "key.bodylength": 100,
              "key.bodyoffset": 13852,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>internal</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 300,
              "key.name": "exec(_:cmd:hint:inputs:outputs:streamContext:)",
              "key.namelength": 185,
              "key.nameoffset": 13665,
              "key.offset": 13653,
              "key.parsed_declaration": "internal static func exec<T: DynamicGraph.AnyTensorGroup>(\n  _: T.Type, cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [T.AnyTensor],\n  outputs: [T.AnyTensor], streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 367,
              "key.parsed_scope.start": 362,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 13673
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 13670,
                  "key.offset": 13670,
                  "key.parsed_declaration": "internal static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 362,
                  "key.parsed_scope.start": 362,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (T.Type, <<error type>>, <<error type>>, [T.AnyTensor], [T.AnyTensor], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>static func exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>, _ restInputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], outputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.bodylength": 834,
              "key.bodyoffset": 14186,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 1065,
              "key.name": "exec(cmd:hint:inputs:_:outputs:streamContext:)",
              "key.namelength": 216,
              "key.nameoffset": 13968,
              "key.offset": 13956,
              "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup>(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: T,\n  _ restInputs: [DynamicGraph_Any], outputs: [DynamicGraph_Any],\n  streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 393,
              "key.parsed_scope.start": 368,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 13976
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 13973,
                  "key.offset": 13973,
                  "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 368,
                  "key.parsed_scope.start": 368,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var tensorInputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensorInputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 31,
                  "key.name": "tensorInputs",
                  "key.namelength": 12,
                  "key.nameoffset": 14195,
                  "key.offset": 14191,
                  "key.parsed_declaration": "var tensorInputs: [T.AnyTensor]",
                  "key.parsed_scope.end": 373,
                  "key.parsed_scope.start": 373,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ12tensorInputsL_Say9AnyTensorQzGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let tensorOutputs: [<Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensorOutputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "tensorOutputs",
                  "key.namelength": 13,
                  "key.nameoffset": 14644,
                  "key.offset": 14640,
                  "key.parsed_declaration": "let tensorOutputs: [T.AnyTensor]",
                  "key.parsed_scope.end": 384,
                  "key.parsed_scope.start": 384,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ13tensorOutputsL_Say9AnyTensorQzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (<<error type>>, <<error type>>, T, [DynamicGraph_Any], [DynamicGraph_Any], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>static func exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: <Type usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</Type>, _ restInputs: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>..., outputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.bodylength": 127,
              "key.bodyoffset": 15255,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>exec</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>cmd</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_hint_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10FunctionalO4execyXeXeFZ1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 359,
              "key.name": "exec(cmd:hint:inputs:_:outputs:streamContext:)",
              "key.namelength": 217,
              "key.nameoffset": 15036,
              "key.offset": 15024,
              "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup>(\n  cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs firstInput: T,\n  _ restInputs: DynamicGraph_Any..., outputs: [DynamicGraph_Any],\n  streamContext: StreamContext? = nil\n)",
              "key.parsed_scope.end": 402,
              "key.parsed_scope.start": 394,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputSize:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: DynamicGraph_Any..., outputSize: Int32, streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec(_:cmd:hint:inputs:outputs:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO4execyXeXeFZ\">exec&lt;T&gt;(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: T, _: [DynamicGraph_Any], outputs: [DynamicGraph_Any], streamContext: StreamContext? = nil) where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 15044
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 15041,
                  "key.offset": 15041,
                  "key.parsed_declaration": "static func exec<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 394,
                  "key.parsed_scope.start": 394,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10FunctionalO4execyXeXeFZ1TL_xmfp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Functional.Type) -> (<<error type>>, <<error type>>, T, DynamicGraph_Any..., [DynamicGraph_Any], StreamContext?) -> ()",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10FunctionalO4execyXeXeFZ"
            }
          ],
          "key.typename": "Functional.Type",
          "key.typeusr": "$s4main10FunctionalOmD",
          "key.usr": "s:4main10FunctionalO"
        },
        {
          "key.annotated_decl": "<Declaration>public class Model</Declaration>",
          "key.bodylength": 1352,
          "key.bodyoffset": 15404,
          "key.doc.column": 14,
          "key.doc.declaration": "public class Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"5\" column=\"14\"><Name>Model</Name><USR>s:4main5ModelC</USR><Declaration>public class Model</Declaration><CommentParts><Abstract><Para>A model is a base class for stateful operations on a dynamic graph. It can be use to construct computations statically, thus, more efficient.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Model",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Model</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1370,
          "key.name": "Model",
          "key.namelength": 5,
          "key.nameoffset": 15397,
          "key.offset": 15387,
          "key.parsed_declaration": "extension Model",
          "key.parsed_scope.end": 436,
          "key.parsed_scope.start": 405,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate func callAsFunction&lt;T&gt;(_: <Type usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</Type>.Type, _ inputs: [<Type usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 15407
                }
              ],
              "key.bodylength": 224,
              "key.bodyoffset": 15570,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 376,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 127,
              "key.nameoffset": 15424,
              "key.offset": 15419,
              "key.parsed_declaration": "fileprivate func callAsFunction<T: DynamicGraph.AnyTensorGroup>(\n  _: T.Type, _ inputs: [T.AnyTensor], streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 413,
              "key.parsed_scope.start": 406,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 15442
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 15439,
                  "key.offset": 15439,
                  "key.parsed_declaration": "fileprivate func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 406,
                  "key.parsed_scope.start": 406,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 51,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 15579,
                  "key.offset": 15575,
                  "key.parsed_declaration": "let outputSize = ccv_cnnp_model_output_size(_model)",
                  "key.parsed_scope.end": 409,
                  "key.parsed_scope.start": 409,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF10outputSizeL_Xevp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Model) -> (T.Type, [T.AnyTensor], StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s__13streamContextSay9AnyTensorQzGxm_AD4main06StreamB0CSgtcAE013DynamicGraph_cD5GroupRzluD",
              "key.usr": "s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(inputs firstInput: <Type usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</Type>, _ restInputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15798
                }
              ],
              "key.bodylength": 520,
              "key.bodyoffset": 15976,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 692,
              "key.name": "callAsFunction(inputs:_:streamContext:)",
              "key.namelength": 147,
              "key.nameoffset": 15810,
              "key.offset": 15805,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup>(\n  inputs firstInput: T, _ restInputs: [DynamicGraph_Any], streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 429,
              "key.parsed_scope.start": 414,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF\">callAsFunction(_:_:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 15828
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 15825,
                  "key.offset": 15825,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 414,
                  "key.parsed_scope.start": 414,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var tensorInputs: [<Type usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensorInputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 31,
                  "key.name": "tensorInputs",
                  "key.namelength": 12,
                  "key.nameoffset": 15985,
                  "key.offset": 15981,
                  "key.parsed_declaration": "var tensorInputs: [T.AnyTensor]",
                  "key.parsed_scope.end": 417,
                  "key.parsed_scope.start": 417,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF12tensorInputsL_AIvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Model) -> (T, [DynamicGraph_Any], StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s6inputs_13streamContextSay9AnyTensorQzGx_Say4main013DynamicGraph_D0_pGAF06StreamC0CSgtcAF0gh1_dE5GroupRzluD",
              "key.usr": "s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(inputs firstInput: <Type usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</Type>, _ restInputs: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16501
                }
              ],
              "key.bodylength": 74,
              "key.bodyoffset": 16680,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 247,
              "key.name": "callAsFunction(inputs:_:streamContext:)",
              "key.namelength": 148,
              "key.nameoffset": 16513,
              "key.offset": 16508,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup>(\n  inputs firstInput: T, _ restInputs: DynamicGraph_Any..., streamContext: StreamContext? = nil\n) -> [T.AnyTensor]",
              "key.parsed_scope.end": 435,
              "key.parsed_scope.start": 431,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction33_B57F5E7F46DBE561D0942A3D3DE4363FLL__13streamContextSay9AnyTensorQzGxm_AiA06StreamP0CSgtAA013DynamicGraph_qR5GroupRzlF\">callAsFunction(_:_:streamContext:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 16531
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 16528,
                  "key.offset": 16528,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 431,
                  "key.parsed_scope.start": 431,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF1TL_xmfp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_AnyTensorGroup> (Model) -> (T, DynamicGraph_Any..., StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s6inputs_13streamContextSay9AnyTensorQzGx_4main013DynamicGraph_D0_pdAF06StreamC0CSgtcAF0gh1_dE5GroupRzluD",
              "key.usr": "s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF"
            }
          ],
          "key.typename": "Model.Type",
          "key.typeusr": "$s4main5ModelCmD",
          "key.usr": "s:4main5ModelC"
        },
        {
          "key.annotated_decl": "<Declaration>public class AnyModelBuilder</Declaration>",
          "key.bodylength": 542,
          "key.bodyoffset": 16786,
          "key.doc.column": 14,
          "key.doc.declaration": "public class AnyModelBuilder",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"4\" column=\"14\"><Name>AnyModelBuilder</Name><USR>s:4main15AnyModelBuilderC</USR><Declaration>public class AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A type-erased model builder.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "AnyModelBuilder",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyModelBuilder</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 570,
          "key.name": "AnyModelBuilder",
          "key.namelength": 15,
          "key.nameoffset": 16769,
          "key.offset": 16759,
          "key.parsed_declaration": "extension AnyModelBuilder",
          "key.parsed_scope.end": 452,
          "key.parsed_scope.start": 438,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate func apply&lt;U&gt;(ofType: <Type usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</Type>.Type, _ t: Any, _ inputs: [<Type usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 16789
                }
              ],
              "key.bodylength": 368,
              "key.bodyoffset": 16958,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>apply</decl.name>&lt;<decl.generic_type_param usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>ofType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>t</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 526,
              "key.name": "apply(ofType:_:_:streamContext:)",
              "key.namelength": 133,
              "key.nameoffset": 16806,
              "key.offset": 16801,
              "key.parsed_declaration": "fileprivate func apply<U: DynamicGraph.AnyTensorGroup>(\n  ofType: U.Type, _ t: Any, _ inputs: [U.AnyTensor], streamContext: StreamContext? = nil\n) -> [U.AnyTensor]",
              "key.parsed_scope.end": 451,
              "key.parsed_scope.start": 439,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 16815
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 16812,
                  "key.offset": 16812,
                  "key.parsed_declaration": "fileprivate func apply<U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 439,
                  "key.parsed_scope.start": 439,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF1UL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 32,
                  "key.name": "outputSize",
                  "key.namelength": 10,
                  "key.nameoffset": 17061,
                  "key.offset": 17057,
                  "key.parsed_declaration": "let outputSize = self.outputSize",
                  "key.parsed_scope.end": 445,
                  "key.parsed_scope.start": 445,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main15AnyModelBuilderC10outputSizeSivp\">outputSize</RelatedName>"
                    }
                  ],
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF10outputSizeL_Sivp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [U.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[U.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 188,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 17098,
                  "key.offset": 17094,
                  "key.parsed_declaration": "let outputs = U.evaluate(\n  model: model!._model, isTest: isTest, dataParallel: &model!.dataParallel, inputs: inputs,\n  outputSize: Int32(outputSize), streamContext: streamContext)",
                  "key.parsed_scope.end": 446,
                  "key.parsed_scope.start": 446,
                  "key.typename": "[U.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF7outputsL_AJvp"
                }
              ],
              "key.typename": "<U where U : DynamicGraph_AnyTensorGroup> (AnyModelBuilder) -> (U.Type, Any, [U.AnyTensor], StreamContext?) -> [U.AnyTensor]",
              "key.typeusr": "$s6ofType__13streamContextSay9AnyTensorQzGxm_ypAE4main06StreamD0CSgtcAF013DynamicGraph_eF5GroupRzluD",
              "key.usr": "s:4main15AnyModelBuilderC5apply33_B57F5E7F46DBE561D0942A3D3DE4363FLL6ofType__13streamContextSay0B6TensorQzGxm_ypAjA06StreamR0CSgtAA013DynamicGraph_bS5GroupRzlF"
            }
          ],
          "key.typename": "AnyModelBuilder.Type",
          "key.typeusr": "$s4main15AnyModelBuilderCmD",
          "key.usr": "s:4main15AnyModelBuilderC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class ModelBuilder&lt;T&gt; : <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type></Declaration>",
          "key.bodylength": 728,
          "key.bodyoffset": 17355,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class ModelBuilder<T> : AnyModelBuilder",
          "key.doc.discussion": [
            {
              "Para": "A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal."
            }
          ],
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"122\" column=\"20\"><Name>ModelBuilder</Name><USR>s:4main12ModelBuilderC</USR><Declaration>public final class ModelBuilder&lt;T&gt; : AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A model builder is a more generic type of model. A model can be quite static, thus, you have to be quite careful to have a model work with dynamic inputs. You cannot use reshape, or anything that can generate fixed tensor outputs from a fixed inputs.</Para></Abstract><Discussion><Para>A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal.</Para></Discussion></CommentParts></Class>",
          "key.doc.line": 122,
          "key.doc.name": "ModelBuilder",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelBuilder</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 753,
          "key.name": "ModelBuilder",
          "key.namelength": 12,
          "key.nameoffset": 17341,
          "key.offset": 17331,
          "key.parsed_declaration": "extension ModelBuilder",
          "key.parsed_scope.end": 472,
          "key.parsed_scope.start": 454,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;U&gt;(_ t: <Type usr=\"s:4main12ModelBuilderC1Txmfp\">T</Type>, inputs firstInput: <Type usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>, _ restInputs: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17358
                }
              ],
              "key.bodylength": 532,
              "key.bodyoffset": 17549,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>t</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 717,
              "key.name": "callAsFunction(_:inputs:_:streamContext:)",
              "key.namelength": 160,
              "key.nameoffset": 17370,
              "key.offset": 17365,
              "key.parsed_declaration": "public func callAsFunction<U: DynamicGraph.AnyTensorGroup>(\n  _ t: T, inputs firstInput: U, _ restInputs: DynamicGraph_Any...,\n  streamContext: StreamContext? = nil\n) -> [U.AnyTensor]",
              "key.parsed_scope.end": 471,
              "key.parsed_scope.start": 455,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF\">callAsFunction(inputs:_:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 17388
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 17385,
                  "key.offset": 17385,
                  "key.parsed_declaration": "public func callAsFunction<U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 455,
                  "key.parsed_scope.start": 455,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var tensorInputs: [<Type usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensorInputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 31,
                  "key.name": "tensorInputs",
                  "key.namelength": 12,
                  "key.nameoffset": 17558,
                  "key.offset": 17554,
                  "key.parsed_declaration": "var tensorInputs: [U.AnyTensor]",
                  "key.parsed_scope.end": 459,
                  "key.parsed_scope.start": 459,
                  "key.typename": "[U.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQyd__GD",
                  "key.usr": "s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF12tensorInputsL_AIvp"
                }
              ],
              "key.typename": "<T, U where U : DynamicGraph_AnyTensorGroup> (ModelBuilder<T>) -> (T, U, DynamicGraph_Any..., StreamContext?) -> [U.AnyTensor]",
              "key.typeusr": "$s_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__4main013DynamicGraph_D0_pdAF06StreamC0CSgtcAF0gh1_dE5GroupRd__luD",
              "key.usr": "s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF"
            }
          ],
          "key.typename": "ModelBuilder<T>.Type",
          "key.typeusr": "$s4main12ModelBuilderCyxGmD",
          "key.usr": "s:4main12ModelBuilderC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class ModelBuilder&lt;T&gt; : <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type></Declaration>",
          "key.bodylength": 721,
          "key.bodyoffset": 18126,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class ModelBuilder<T> : AnyModelBuilder",
          "key.doc.discussion": [
            {
              "Para": "A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal."
            }
          ],
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"122\" column=\"20\"><Name>ModelBuilder</Name><USR>s:4main12ModelBuilderC</USR><Declaration>public final class ModelBuilder&lt;T&gt; : AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A model builder is a more generic type of model. A model can be quite static, thus, you have to be quite careful to have a model work with dynamic inputs. You cannot use reshape, or anything that can generate fixed tensor outputs from a fixed inputs.</Para></Abstract><Discussion><Para>A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal.</Para></Discussion></CommentParts></Class>",
          "key.doc.line": 122,
          "key.doc.name": "ModelBuilder",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelBuilder</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 762,
          "key.name": "ModelBuilder",
          "key.namelength": 12,
          "key.nameoffset": 18096,
          "key.offset": 18086,
          "key.parsed_declaration": "extension ModelBuilder where T == Void",
          "key.parsed_scope.end": 491,
          "key.parsed_scope.start": 474,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;U&gt;(inputs firstInput: <Type usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>, _ restInputs: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; [<Type usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 18129
                }
              ],
              "key.bodylength": 537,
              "key.bodyoffset": 18308,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label> <decl.var.parameter.name>firstInput</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>restInputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 710,
              "key.name": "callAsFunction(inputs:_:streamContext:)",
              "key.namelength": 148,
              "key.nameoffset": 18141,
              "key.offset": 18136,
              "key.parsed_declaration": "public func callAsFunction<U: DynamicGraph.AnyTensorGroup>(\n  inputs firstInput: U, _ restInputs: DynamicGraph_Any..., streamContext: StreamContext? = nil\n) -> [U.AnyTensor]",
              "key.parsed_scope.end": 490,
              "key.parsed_scope.start": 475,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12ModelBuilderC14callAsFunction_6inputs_13streamContextSay9AnyTensorQyd__Gx_qd__AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF\">callAsFunction(_:inputs:_:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 18159
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 18156,
                  "key.offset": 18156,
                  "key.parsed_declaration": "public func callAsFunction<U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 475,
                  "key.parsed_scope.start": 475,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var tensorInputs: [<Type usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tensorInputs</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF1UL_qd__mfp\">U</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 31,
                  "key.name": "tensorInputs",
                  "key.namelength": 12,
                  "key.nameoffset": 18317,
                  "key.offset": 18313,
                  "key.parsed_declaration": "var tensorInputs: [U.AnyTensor]",
                  "key.parsed_scope.end": 478,
                  "key.parsed_scope.start": 478,
                  "key.typename": "[U.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQyd__GD",
                  "key.usr": "s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF12tensorInputsL_AIvp"
                }
              ],
              "key.typename": "<T, U where T == (), U : DynamicGraph_AnyTensorGroup> (ModelBuilder<T>) -> (U, DynamicGraph_Any..., StreamContext?) -> [U.AnyTensor]",
              "key.typeusr": "$s6inputs_13streamContextSay9AnyTensorQyd__Gqd___4main013DynamicGraph_D0_pdAF06StreamC0CSgtcAF0gh1_dE5GroupRd__luD",
              "key.usr": "s:4main12ModelBuilderCAAytRszlE14callAsFunction6inputs_13streamContextSay9AnyTensorQyd__Gqd___AA013DynamicGraph_J0_pdAA06StreamI0CSgtAA0lm1_jK5GroupRd__lF"
            }
          ],
          "key.typename": "ModelBuilder<T>.Type",
          "key.typeusr": "$s4main12ModelBuilderCyxGmD",
          "key.usr": "s:4main12ModelBuilderC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 4281,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_AnyParameters</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 95
            }
          ],
          "key.bodylength": 1,
          "key.bodyoffset": 139,
          "key.doc.column": 17,
          "key.doc.comment": "Empty protocol for other places to recognize AnyTensor and AnyGroup with dynamic dispatch.",
          "key.doc.declaration": "public protocol DynamicGraph_AnyParameters",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"2\" column=\"17\"><Name>DynamicGraph_AnyParameters</Name><USR>s:4main26DynamicGraph_AnyParametersP</USR><Declaration>public protocol DynamicGraph_AnyParameters</Declaration><CommentParts><Abstract><Para>Empty protocol for other places to recognize AnyTensor and AnyGroup with dynamic dispatch.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 2,
          "key.doc.name": "DynamicGraph_AnyParameters",
          "key.doc.type": "Class",
          "key.doclength": 95,
          "key.docoffset": 0,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_AnyParameters</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 39,
          "key.name": "DynamicGraph_AnyParameters",
          "key.namelength": 26,
          "key.nameoffset": 111,
          "key.offset": 102,
          "key.parsed_declaration": "public protocol DynamicGraph_AnyParameters",
          "key.parsed_scope.end": 3,
          "key.parsed_scope.start": 2,
          "key.typename": "DynamicGraph_AnyParameters.Protocol",
          "key.typeusr": "$s4main26DynamicGraph_AnyParameters_pmD",
          "key.usr": "s:4main26DynamicGraph_AnyParametersP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_Any : <Type usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 231
            }
          ],
          "key.bodylength": 168,
          "key.bodyoffset": 293,
          "key.doc.column": 17,
          "key.doc.comment": "Protocol for other places to recognize AnyTensor and AnyGroup with static dispatch.",
          "key.doc.declaration": "public protocol DynamicGraph_Any : main.DynamicGraph_AnyParameters",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"6\" column=\"17\"><Name>DynamicGraph_Any</Name><USR>s:4main16DynamicGraph_AnyP</USR><Declaration>public protocol DynamicGraph_Any : main.DynamicGraph_AnyParameters</Declaration><CommentParts><Abstract><Para>Protocol for other places to recognize AnyTensor and AnyGroup with static dispatch.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 6,
          "key.doc.name": "DynamicGraph_Any",
          "key.doc.type": "Class",
          "key.doclength": 88,
          "key.docoffset": 143,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 26,
              "key.offset": 265
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_Any</decl.name> : <ref.protocol usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_AnyParameters"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 224,
          "key.name": "DynamicGraph_Any",
          "key.namelength": 16,
          "key.nameoffset": 247,
          "key.offset": 238,
          "key.parsed_declaration": "public protocol DynamicGraph_Any: DynamicGraph_AnyParameters",
          "key.parsed_scope.end": 12,
          "key.parsed_scope.start": 6,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var dimensions: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 319,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 29,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 300,
              "key.offset": 296,
              "key.parsed_declaration": "var dimensions: [Int]",
              "key.parsed_scope.end": 7,
              "key.parsed_scope.start": 7,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16DynamicGraph_AnyP10dimensionsSaySiGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type> { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 354,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 32,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 332,
              "key.offset": 328,
              "key.parsed_declaration": "var format: TensorFormat",
              "key.parsed_scope.end": 8,
              "key.parsed_scope.start": 8,
              "key.typename": "TensorFormat",
              "key.typeusr": "$s4main12TensorFormatOD",
              "key.usr": "s:4main16DynamicGraph_AnyP6formatAA12TensorFormatOvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var increments: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 386,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 29,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 367,
              "key.offset": 363,
              "key.parsed_declaration": "var increments: [Int]",
              "key.parsed_scope.end": 9,
              "key.parsed_scope.start": 9,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16DynamicGraph_AnyP10incrementsSaySiGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var isConstant: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 417,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isConstant</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 28,
              "key.name": "isConstant",
              "key.namelength": 10,
              "key.nameoffset": 399,
              "key.offset": 395,
              "key.parsed_declaration": "var isConstant: Bool",
              "key.parsed_scope.end": 10,
              "key.parsed_scope.start": 10,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main16DynamicGraph_AnyP10isConstantSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var requiresGrad: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>",
              "key.bodylength": 9,
              "key.bodyoffset": 450,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiresGrad</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 34,
              "key.name": "requiresGrad",
              "key.namelength": 12,
              "key.nameoffset": 430,
              "key.offset": 426,
              "key.parsed_declaration": "var requiresGrad: Bool",
              "key.parsed_scope.end": 11,
              "key.parsed_scope.start": 11,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main16DynamicGraph_AnyP12requiresGradSbvp"
            }
          ],
          "key.typename": "DynamicGraph_Any.Protocol",
          "key.typeusr": "$s4main16DynamicGraph_Any_pmD",
          "key.usr": "s:4main16DynamicGraph_AnyP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_AnyGroup : <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 499
            }
          ],
          "key.bodylength": 49,
          "key.bodyoffset": 556,
          "key.doc.column": 17,
          "key.doc.comment": "Protocol for group of tensors.",
          "key.doc.declaration": "public protocol DynamicGraph_AnyGroup : main.DynamicGraph_Any",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"15\" column=\"17\"><Name>DynamicGraph_AnyGroup</Name><USR>s:4main21DynamicGraph_AnyGroupP</USR><Declaration>public protocol DynamicGraph_AnyGroup : main.DynamicGraph_Any</Declaration><CommentParts><Abstract><Para>Protocol for group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 15,
          "key.doc.name": "DynamicGraph_AnyGroup",
          "key.doc.type": "Class",
          "key.doclength": 35,
          "key.docoffset": 464,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 16,
              "key.offset": 538
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_AnyGroup</decl.name> : <ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_Any"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 100,
          "key.name": "DynamicGraph_AnyGroup",
          "key.namelength": 21,
          "key.nameoffset": 515,
          "key.offset": 506,
          "key.parsed_declaration": "public protocol DynamicGraph_AnyGroup: DynamicGraph_Any",
          "key.parsed_scope.end": 17,
          "key.parsed_scope.start": 15,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var untyped: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>] { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 598,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>untyped</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 45,
              "key.name": "untyped",
              "key.namelength": 7,
              "key.nameoffset": 563,
              "key.offset": 559,
              "key.parsed_declaration": "var untyped: [DynamicGraph.AnyTensor]",
              "key.parsed_scope.end": 16,
              "key.parsed_scope.start": 16,
              "key.typename": "[DynamicGraph.AnyTensor]",
              "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupP7untypedSayAA0bC0C0D6TensorCGvp"
            }
          ],
          "key.typename": "DynamicGraph_AnyGroup.Protocol",
          "key.typeusr": "$s4main21DynamicGraph_AnyGroup_pmD",
          "key.usr": "s:4main21DynamicGraph_AnyGroupP"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol DynamicGraph_AnyGroup : <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type></Declaration>",
          "key.bodylength": 1019,
          "key.bodyoffset": 641,
          "key.doc.column": 17,
          "key.doc.declaration": "public protocol DynamicGraph_AnyGroup : main.DynamicGraph_Any",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"15\" column=\"17\"><Name>DynamicGraph_AnyGroup</Name><USR>s:4main21DynamicGraph_AnyGroupP</USR><Declaration>public protocol DynamicGraph_AnyGroup : main.DynamicGraph_Any</Declaration><CommentParts><Abstract><Para>Protocol for group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 15,
          "key.doc.name": "DynamicGraph_AnyGroup",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DynamicGraph_AnyGroup</decl.name> : <ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1053,
          "key.name": "DynamicGraph_AnyGroup",
          "key.namelength": 21,
          "key.nameoffset": 618,
          "key.offset": 608,
          "key.parsed_declaration": "extension DynamicGraph_AnyGroup",
          "key.parsed_scope.end": 62,
          "key.parsed_scope.start": 19,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var dimensions: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 644
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 674,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 172,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 655,
              "key.offset": 651,
              "key.parsed_declaration": "public var dimensions: [Int]",
              "key.parsed_scope.end": 26,
              "key.parsed_scope.start": 20,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10dimensionsSaySiGvp\">dimensions</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10dimensionsSaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 38,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 683,
              "key.offset": 679,
              "key.parsed_declaration": "let dimensions = untyped[0].dimensions",
              "key.parsed_scope.end": 21,
              "key.parsed_scope.start": 21,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main21DynamicGraph_AnyGroupPAAE10dimensionsSaySiGvp\">dimensions</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10dimensionsSaySiGvp\">dimensions</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10dimensionsSaySiGvgADL_AEvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 826
                }
              ],
              "key.bodylength": 128,
              "key.bodyoffset": 859,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 155,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 837,
              "key.offset": 833,
              "key.parsed_declaration": "public var format: TensorFormat",
              "key.parsed_scope.end": 33,
              "key.parsed_scope.start": 27,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP6formatAA12TensorFormatOvp\">format</RelatedName>"
                }
              ],
              "key.typename": "TensorFormat",
              "key.typeusr": "$s4main12TensorFormatOD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE6formatAA12TensorFormatOvp"
            },
            {
              "key.annotated_decl": "<Declaration>let format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 30,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 868,
              "key.offset": 864,
              "key.parsed_declaration": "let format = untyped[0].format",
              "key.parsed_scope.end": 28,
              "key.parsed_scope.start": 28,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main21DynamicGraph_AnyGroupPAAE6formatAA12TensorFormatOvp\">format</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP6formatAA12TensorFormatOvp\">format</RelatedName>"
                }
              ],
              "key.typename": "TensorFormat",
              "key.typeusr": "$s4main12TensorFormatOD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE6formatAA12TensorFormatOvgADL_AFvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var increments: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 991
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 1021,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 172,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 1002,
              "key.offset": 998,
              "key.parsed_declaration": "public var increments: [Int]",
              "key.parsed_scope.end": 40,
              "key.parsed_scope.start": 34,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10incrementsSaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 38,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 1030,
              "key.offset": 1026,
              "key.parsed_declaration": "let increments = untyped[0].increments",
              "key.parsed_scope.end": 35,
              "key.parsed_scope.start": 35,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main21DynamicGraph_AnyGroupPAAE10incrementsSaySiGvp\">increments</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10incrementsSaySiGvgADL_AEvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var isConstant: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1173
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 1202,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isConstant</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 171,
              "key.name": "isConstant",
              "key.namelength": 10,
              "key.nameoffset": 1184,
              "key.offset": 1180,
              "key.parsed_declaration": "public var isConstant: Bool",
              "key.parsed_scope.end": 47,
              "key.parsed_scope.start": 41,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10isConstantSbvp\">isConstant</RelatedName>"
                }
              ],
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10isConstantSbvp"
            },
            {
              "key.annotated_decl": "<Declaration>let isConstant: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>isConstant</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 38,
              "key.name": "isConstant",
              "key.namelength": 10,
              "key.nameoffset": 1211,
              "key.offset": 1207,
              "key.parsed_declaration": "let isConstant = untyped[0].isConstant",
              "key.parsed_scope.end": 42,
              "key.parsed_scope.start": 42,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main21DynamicGraph_AnyGroupPAAE10isConstantSbvp\">isConstant</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP10isConstantSbvp\">isConstant</RelatedName>"
                }
              ],
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE10isConstantSbvgADL_Sbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var requiresGrad: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1354
                }
              ],
              "key.bodylength": 273,
              "key.bodyoffset": 1385,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiresGrad</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 298,
              "key.name": "requiresGrad",
              "key.namelength": 12,
              "key.nameoffset": 1365,
              "key.offset": 1361,
              "key.parsed_declaration": "public var requiresGrad: Bool",
              "key.parsed_scope.end": 61,
              "key.parsed_scope.start": 48,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP12requiresGradSbvp\">requiresGrad</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE12requiresGradSbvp"
            },
            {
              "key.annotated_decl": "<Declaration>let requiresGrad: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>requiresGrad</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 42,
              "key.name": "requiresGrad",
              "key.namelength": 12,
              "key.nameoffset": 1406,
              "key.offset": 1402,
              "key.parsed_declaration": "let requiresGrad = untyped[0].requiresGrad",
              "key.parsed_scope.end": 50,
              "key.parsed_scope.start": 50,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main21DynamicGraph_AnyGroupPAAE12requiresGradSbvp\">requiresGrad</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16DynamicGraph_AnyP12requiresGradSbvp\">requiresGrad</RelatedName>"
                }
              ],
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main21DynamicGraph_AnyGroupPAAE12requiresGradSbvgADL_Sbvp"
            }
          ],
          "key.typename": "DynamicGraph_AnyGroup.Protocol",
          "key.typeusr": "$s4main21DynamicGraph_AnyGroup_pmD",
          "key.usr": "s:4main21DynamicGraph_AnyGroupP"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.AnyTensor</Declaration>",
          "key.bodylength": 1,
          "key.bodyoffset": 1715,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"33\" column=\"16\"><Name>AnyTensor</Name><USR>s:4main12DynamicGraphC9AnyTensorC</USR><Declaration>public class main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor variable.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 33,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 16,
              "key.offset": 1697
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<decl.name>AnyTensor</decl.name></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_Any"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 54,
          "key.name": "DynamicGraph.AnyTensor",
          "key.namelength": 22,
          "key.nameoffset": 1673,
          "key.offset": 1663,
          "key.parsed_declaration": "extension DynamicGraph.AnyTensor: DynamicGraph_Any",
          "key.parsed_scope.end": 65,
          "key.parsed_scope.start": 64,
          "key.typename": "DynamicGraph.AnyTensor.Type",
          "key.typeusr": "$s4main12DynamicGraphC9AnyTensorCmD",
          "key.usr": "s:4main12DynamicGraphC9AnyTensorC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model</Type>.Parameters : IO</Declaration>",
          "key.bodylength": 1,
          "key.bodyoffset": 1775,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 26,
              "key.offset": 1747
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>Parameters</decl.name> : IO</decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "DynamicGraph_AnyParameters"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 58,
          "key.name": "Model.Parameters",
          "key.namelength": 16,
          "key.nameoffset": 1729,
          "key.offset": 1719,
          "key.parsed_declaration": "extension Model.Parameters: DynamicGraph_AnyParameters",
          "key.parsed_scope.end": 68,
          "key.parsed_scope.start": 67,
          "key.typename": "Model.Parameters.Type",
          "key.typeusr": "$s4main5ModelC10ParametersCmD",
          "key.usr": "s:4main5ModelC10ParametersC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 1790,
          "key.bodyoffset": 1803,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1815,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 1789,
          "key.offset": 1779,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 116,
          "key.parsed_scope.start": 70,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias AnyGroup = <Type usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1807
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>AnyGroup</decl.name> = <ref.protocol usr=\"s:4main21DynamicGraph_AnyGroupP\">DynamicGraph_AnyGroup</ref.protocol></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 42,
              "key.name": "AnyGroup",
              "key.namelength": 8,
              "key.nameoffset": 1824,
              "key.offset": 1814,
              "key.parsed_declaration": "public typealias AnyGroup = DynamicGraph_AnyGroup",
              "key.parsed_scope.end": 72,
              "key.parsed_scope.start": 72,
              "key.typename": "DynamicGraph_AnyGroup.Protocol",
              "key.typeusr": "$s4main21DynamicGraph_AnyGroup_pmD",
              "key.usr": "s:4main12DynamicGraphC8AnyGroupa"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : <Type usr=\"s:Sk\">RandomAccessCollection</Type>, <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type> where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1895
                }
              ],
              "key.bodylength": 1585,
              "key.bodyoffset": 2005,
              "key.doc.column": 17,
              "key.doc.comment": "Type-aware group of tensors.",
              "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 75,
              "key.doc.name": "Group",
              "key.doc.type": "Class",
              "key.doclength": 33,
              "key.docoffset": 1860,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 22,
                  "key.offset": 1949
                },
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 28,
                  "key.offset": 1973
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:Sk\">RandomAccessCollection</ref.protocol>, <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
              "key.inheritedtypes": [
                {
                  "key.name": "RandomAccessCollection"
                },
                {
                  "key.name": "DynamicGraph\n      .AnyGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 1689,
              "key.name": "Group",
              "key.namelength": 5,
              "key.nameoffset": 1909,
              "key.offset": 1902,
              "key.parsed_declaration": "public struct Group<Element: DynamicGraph.AnyTensor>: RandomAccessCollection, DynamicGraph\n    .AnyGroup",
              "key.parsed_scope.end": 114,
              "key.parsed_scope.start": 75,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 22,
                      "key.offset": 1924
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensor"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 31,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 1915,
                  "key.offset": 1915,
                  "key.parsed_declaration": "public struct Group<Element: DynamicGraph.AnyTensor",
                  "key.parsed_scope.end": 75,
                  "key.parsed_scope.start": 75,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7Elementxmfp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var untyped: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>] { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2010
                    }
                  ],
                  "key.bodylength": 45,
                  "key.bodyoffset": 2056,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>untyped</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 85,
                  "key.name": "untyped",
                  "key.namelength": 7,
                  "key.nameoffset": 2021,
                  "key.offset": 2017,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main21DynamicGraph_AnyGroupP7untypedSayAA0bC0C0D6TensorCGvp"
                    }
                  ],
                  "key.parsed_declaration": "public var untyped: [DynamicGraph.AnyTensor]",
                  "key.parsed_scope.end": 78,
                  "key.parsed_scope.start": 78,
                  "key.typename": "[DynamicGraph.AnyTensor]",
                  "key.typeusr": "$sSay4main12DynamicGraphC9AnyTensorCGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV7untypedSayAC9AnyTensorCGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>var underlyingArray: [<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>underlyingArray</decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 30,
                  "key.name": "underlyingArray",
                  "key.namelength": 15,
                  "key.nameoffset": 2111,
                  "key.offset": 2107,
                  "key.parsed_declaration": "var underlyingArray: [Element]",
                  "key.parsed_scope.end": 79,
                  "key.parsed_scope.start": 79,
                  "key.setter_accessibility": "source.lang.swift.accessibility.internal",
                  "key.typename": "[Element]",
                  "key.typeusr": "$sSayxGD",
                  "key.usr": "s:4main12DynamicGraphC5GroupV15underlyingArraySayxGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;.Element = <Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2143
                    }
                  ],
                  "key.doc.declaration": "associatedtype Element where Self.Element == Self.Iterator.Element",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Element</Name><USR>s:ST7ElementQa</USR><Declaration>associatedtype Element where Self.Element == Self.Iterator.Element</Declaration><CommentParts><Abstract><Para>A type representing the sequence’s elements.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Element",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;.<decl.name>Element</decl.name> = <ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param></decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 27,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 2160,
                  "key.offset": 2150,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk7ElementQa"
                    },
                    {
                      "key.usr": "s:SK7ElementQa"
                    },
                    {
                      "key.usr": "s:Sl7ElementQa"
                    },
                    {
                      "key.usr": "s:ST7ElementQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Element = Element",
                  "key.parsed_scope.end": 81,
                  "key.parsed_scope.start": 81,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</RelatedName>"
                    }
                  ],
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:ST7ElementQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;.Index = <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2182
                    }
                  ],
                  "key.doc.declaration": "associatedtype Index : Comparable where Self.Index == Self.Indices.Element, Self.Indices.Element == Self.Indices.Index, Self.Indices.Index == Self.SubSequence.Index, Self.SubSequence.Index == Self.Indices.Indices.Element, Self.Indices.Indices.Element == Self.Indices.Indices.Index, Self.Indices.Indices.Index == Self.SubSequence.Indices.Element, Self.SubSequence.Indices.Element == Self.SubSequence.Indices.Index, Self.SubSequence.Indices.Index == Self.SubSequence.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Index",
                  "key.doc.discussion": [
                    {
                      "Para": "Valid indices consist of the position of every element and a “past the end” position that’s not valid for use as a subscript argument."
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Index</Name><USR>s:Sl5IndexQa</USR><Declaration>associatedtype Index : Comparable where Self.Index == Self.Indices.Element, Self.Indices.Element == Self.Indices.Index, Self.Indices.Index == Self.SubSequence.Index, Self.SubSequence.Index == Self.Indices.Indices.Element, Self.Indices.Indices.Element == Self.Indices.Indices.Index, Self.Indices.Indices.Index == Self.SubSequence.Indices.Element, Self.SubSequence.Indices.Element == Self.SubSequence.Indices.Index, Self.SubSequence.Indices.Index == Self.SubSequence.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Index</Declaration><CommentParts><Abstract><Para>A type that represents a position in the collection.</Para></Abstract><Discussion><Para>Valid indices consist of the position of every element and a “past the end” position that’s not valid for use as a subscript argument.</Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Index",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;.<decl.name>Index</decl.name> = <ref.struct usr=\"s:Si\">Int</ref.struct></decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 21,
                  "key.name": "Index",
                  "key.namelength": 5,
                  "key.nameoffset": 2199,
                  "key.offset": 2189,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk5IndexQa"
                    },
                    {
                      "key.usr": "s:SK5IndexQa"
                    },
                    {
                      "key.usr": "s:Sl5IndexQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Index = Int",
                  "key.parsed_scope.end": 82,
                  "key.parsed_scope.start": 82,
                  "key.typename": "Int.Type",
                  "key.typeusr": "$sSimD",
                  "key.usr": "s:Sl5IndexQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;.Indices = <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type>&gt;</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2215
                    }
                  ],
                  "key.doc.declaration": "associatedtype Indices : Collection = DefaultIndices<Self> where Self.Indices == Self.Indices.SubSequence",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>Indices</Name><USR>s:Sl7IndicesQa</USR><Declaration>associatedtype Indices : Collection = DefaultIndices&lt;Self&gt; where Self.Indices == Self.Indices.SubSequence</Declaration><CommentParts><Abstract><Para>A type that represents the indices that are valid for subscripting the collection, in ascending order.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "Indices",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;.<decl.name>Indices</decl.name> = <ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias>&gt;</decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 32,
                  "key.name": "Indices",
                  "key.namelength": 7,
                  "key.nameoffset": 2232,
                  "key.offset": 2222,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk7IndicesQa"
                    },
                    {
                      "key.usr": "s:SK7IndicesQa"
                    },
                    {
                      "key.usr": "s:Sl7IndicesQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias Indices = Range<Index>",
                  "key.parsed_scope.end": 83,
                  "key.parsed_scope.start": 83,
                  "key.typename": "Range<Int>.Type",
                  "key.typeusr": "$sSnySiGmD",
                  "key.usr": "s:Sl7IndicesQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;.SubSequence = <Type usr=\"s:Sa\">Array</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>&gt;.<Type usr=\"s:Sa11SubSequencea\">SubSequence</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2259
                    }
                  ],
                  "key.doc.declaration": "associatedtype SubSequence : Collection = Slice<Self> where Self.Element == Self.SubSequence.Element, Self.SubSequence == Self.SubSequence.SubSequence",
                  "key.doc.discussion": [
                    {
                      "Para": "This associated type appears as a requirement in the `Sequence` protocol, but it is restated here with stricter constraints. In a collection, the subsequence should also conform to `Collection`."
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>SubSequence</Name><USR>s:Sl11SubSequenceQa</USR><Declaration>associatedtype SubSequence : Collection = Slice&lt;Self&gt; where Self.Element == Self.SubSequence.Element, Self.SubSequence == Self.SubSequence.SubSequence</Declaration><CommentParts><Abstract><Para>A sequence that represents a contiguous subrange of the collection’s elements.</Para></Abstract><Discussion><Para>This associated type appears as a requirement in the <codeVoice>Sequence</codeVoice> protocol, but it is restated here with stricter constraints. In a collection, the subsequence should also conform to <codeVoice>Collection</codeVoice>.</Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "SubSequence",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;.<decl.name>SubSequence</decl.name> = <ref.struct usr=\"s:Sa\">Array</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>&gt;.<ref.typealias usr=\"s:Sa11SubSequencea\">SubSequence</ref.typealias></decl.typealias>",
                  "key.kind": "source.lang.swift.decl.typealias",
                  "key.length": 50,
                  "key.name": "SubSequence",
                  "key.namelength": 11,
                  "key.nameoffset": 2276,
                  "key.offset": 2266,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk11SubSequenceQa"
                    },
                    {
                      "key.usr": "s:SK11SubSequenceQa"
                    },
                    {
                      "key.usr": "s:Sl11SubSequenceQa"
                    }
                  ],
                  "key.parsed_declaration": "public typealias SubSequence = Array<Element>.SubSequence",
                  "key.parsed_scope.end": 84,
                  "key.parsed_scope.start": 84,
                  "key.typename": "ArraySlice<Element>.Type",
                  "key.typeusr": "$ss10ArraySliceVyxGmD",
                  "key.usr": "s:Sl11SubSequenceQa"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var endIndex: <Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2321
                    }
                  ],
                  "key.bodylength": 26,
                  "key.bodyoffset": 2349,
                  "key.doc.declaration": "var endIndex: Self.Index { get }",
                  "key.doc.discussion": [
                    {
                      "Para": "When you need a range that includes the last element of a collection, use the half-open range operator (`..<`) with `endIndex`. The `..<` operator creates a range that doesn’t include the upper bound, so it’s always safe to use with `endIndex`. For example:"
                    },
                    {
                      "CodeListing": ""
                    },
                    {
                      "Para": "If the collection is empty, `endIndex` is equal to `startIndex`."
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>endIndex</Name><USR>s:Sl8endIndex0B0Qzvp</USR><Declaration>var endIndex: Self.Index { get }</Declaration><CommentParts><Abstract><Para>The collection’s “past the end” position—that is, the position one greater than the last valid subscript argument.</Para></Abstract><Discussion><Para>When you need a range that includes the last element of a collection, use the half-open range operator (<codeVoice>..&lt;</codeVoice>) with <codeVoice>endIndex</codeVoice>. The <codeVoice>..&lt;</codeVoice> operator creates a range that doesn’t include the upper bound, so it’s always safe to use with <codeVoice>endIndex</codeVoice>. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let numbers = [10, 20, 30, 40, 50]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = numbers.firstIndex(of: 30) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(numbers[index ..< numbers.endIndex])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[30, 40, 50]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If the collection is empty, <codeVoice>endIndex</codeVoice> is equal to <codeVoice>startIndex</codeVoice>.</Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "endIndex",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>endIndex</decl.name>: <decl.var.type><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 48,
                  "key.name": "endIndex",
                  "key.namelength": 8,
                  "key.nameoffset": 2332,
                  "key.offset": 2328,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk8endIndex0B0Qzvp"
                    },
                    {
                      "key.usr": "s:SK8endIndex0B0Qzvp"
                    },
                    {
                      "key.usr": "s:Sl8endIndex0B0Qzvp"
                    }
                  ],
                  "key.parsed_declaration": "public var endIndex: Index",
                  "key.parsed_scope.end": 85,
                  "key.parsed_scope.start": 85,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:Sl8endIndex0B0Qzvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var indices: <Type usr=\"s:4main12DynamicGraphC5GroupV7Indicesa\">Indices</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2381
                    }
                  ],
                  "key.bodylength": 25,
                  "key.bodyoffset": 2410,
                  "key.doc.declaration": "override var indices: Self.Indices { get }",
                  "key.doc.discussion": [
                    {
                      "Para": "A collection’s `indices` property can hold a strong reference to the collection itself, causing the collection to be nonuniquely referenced. If you mutate the collection while iterating over its indices, a strong reference can result in an unexpected copy of the collection. To avoid the unexpected copy, use the `index(after:)` method starting with `startIndex` to produce indices instead."
                    },
                    {
                      "CodeListing": ""
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>indices</Name><USR>s:Sk7indices7IndicesQzvp</USR><Declaration>override var indices: Self.Indices { get }</Declaration><CommentParts><Abstract><Para>The indices that are valid for subscripting the collection, in ascending order.</Para></Abstract><Discussion><Para>A collection’s <codeVoice>indices</codeVoice> property can hold a strong reference to the collection itself, causing the collection to be nonuniquely referenced. If you mutate the collection while iterating over its indices, a strong reference can result in an unexpected copy of the collection. To avoid the unexpected copy, use the <codeVoice>index(after:)</codeVoice> method starting with <codeVoice>startIndex</codeVoice> to produce indices instead.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var c = MyFancyCollection([10, 20, 30, 40, 50])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var i = c.startIndex]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[while i != c.endIndex {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    c[i] /= 5]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i = c.index(after: i)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// c == MyFancyCollection([2, 4, 6, 8, 10])]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RandomAccessCollection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "indices",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>indices</decl.name>: <decl.var.type><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV7Indicesa\">Indices</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 48,
                  "key.name": "indices",
                  "key.namelength": 7,
                  "key.nameoffset": 2392,
                  "key.offset": 2388,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk7indices7IndicesQzvp"
                    },
                    {
                      "key.usr": "s:SK7indices7IndicesQzvp"
                    },
                    {
                      "key.usr": "s:Sl7indices7IndicesQzvp"
                    }
                  ],
                  "key.parsed_declaration": "public var indices: Indices",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.typename": "Range<Int>",
                  "key.typeusr": "$sSnySiGD",
                  "key.usr": "s:Sk7indices7IndicesQzvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var startIndex: <Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2441
                    }
                  ],
                  "key.bodylength": 28,
                  "key.bodyoffset": 2471,
                  "key.doc.declaration": "var startIndex: Self.Index { get }",
                  "key.doc.discussion": [
                    {
                      "Para": "If the collection is empty, `startIndex` is equal to `endIndex`."
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>startIndex</Name><USR>s:Sl10startIndex0B0Qzvp</USR><Declaration>var startIndex: Self.Index { get }</Declaration><CommentParts><Abstract><Para>The position of the first element in a nonempty collection.</Para></Abstract><Discussion><Para>If the collection is empty, <codeVoice>startIndex</codeVoice> is equal to <codeVoice>endIndex</codeVoice>.</Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "startIndex",
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>startIndex</decl.name>: <decl.var.type><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 52,
                  "key.name": "startIndex",
                  "key.namelength": 10,
                  "key.nameoffset": 2452,
                  "key.offset": 2448,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk10startIndex0B0Qzvp"
                    },
                    {
                      "key.usr": "s:SK10startIndex0B0Qzvp"
                    },
                    {
                      "key.usr": "s:Sl10startIndex0B0Qzvp"
                    }
                  ],
                  "key.parsed_declaration": "public var startIndex: Index",
                  "key.parsed_scope.end": 87,
                  "key.parsed_scope.start": 87,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:Sl10startIndex0B0Qzvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func formIndex(after i: inout <Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2505
                    }
                  ],
                  "key.bodylength": 38,
                  "key.bodyoffset": 2550,
                  "key.doc.declaration": "override func formIndex(after i: inout Self.Index)",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Function><Name>formIndex(after:)</Name><USR>s:Sk9formIndex5aftery0B0Qzz_tF</USR><Declaration>override func formIndex(after i: inout Self.Index)</Declaration><CommentParts><Abstract><Para>Replaces the given index with its successor.</Para></Abstract><Parameters><Parameter><Name>i</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A valid index of the collection. <codeVoice>i</codeVoice> must be less than <codeVoice>endIndex</codeVoice>.</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>RandomAccessCollection</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
                  "key.doc.name": "formIndex(after:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "A valid index of the collection. `i` must be less than `endIndex`."
                        }
                      ],
                      "name": "i"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>formIndex</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 77,
                  "key.name": "formIndex(after:)",
                  "key.namelength": 31,
                  "key.nameoffset": 2517,
                  "key.offset": 2512,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk9formIndex5aftery0B0Qzz_tF"
                    },
                    {
                      "key.usr": "s:SK9formIndex5aftery0B0Qzz_tF"
                    },
                    {
                      "key.usr": "s:Sl9formIndex5aftery0B0Qzz_tF"
                    }
                  ],
                  "key.parsed_declaration": "public func formIndex(after i: inout Index)",
                  "key.parsed_scope.end": 88,
                  "key.parsed_scope.start": 88,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV9formIndex6beforeySiz_tF\">formIndex(before:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (inout Int) -> ()",
                  "key.typeusr": "$s5afterySiz_tcD",
                  "key.usr": "s:Sk9formIndex5aftery0B0Qzz_tF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func formIndex(before i: inout <Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2594
                    }
                  ],
                  "key.bodylength": 39,
                  "key.bodyoffset": 2640,
                  "key.doc.declaration": "override func formIndex(before i: inout Self.Index)",
                  "key.doc.discussion": [
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Function><Name>formIndex(before:)</Name><USR>s:Sk9formIndex6beforey0B0Qzz_tF</USR><Declaration>override func formIndex(before i: inout Self.Index)</Declaration><CommentParts><Abstract><Para>Replaces the given index with its predecessor.</Para></Abstract><Parameters><Parameter><Name>i</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A valid index of the collection. <codeVoice>i</codeVoice> must be greater than <codeVoice>startIndex</codeVoice>.</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>RandomAccessCollection</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
                  "key.doc.name": "formIndex(before:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "A valid index of the collection. `i` must be greater than `startIndex`."
                        }
                      ],
                      "name": "i"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>formIndex</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>before</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 79,
                  "key.name": "formIndex(before:)",
                  "key.namelength": 32,
                  "key.nameoffset": 2606,
                  "key.offset": 2601,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sk9formIndex6beforey0B0Qzz_tF"
                    },
                    {
                      "key.usr": "s:SK9formIndex6beforey0B0Qzz_tF"
                    }
                  ],
                  "key.parsed_declaration": "public func formIndex(before i: inout Index)",
                  "key.parsed_scope.end": 89,
                  "key.parsed_scope.start": 89,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV9formIndex5afterySiz_tF\">formIndex(after:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (inout Int) -> ()",
                  "key.typeusr": "$s6beforeySiz_tcD",
                  "key.usr": "s:Sk9formIndex6beforey0B0Qzz_tF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public subscript(position: <Type usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2685
                    }
                  ],
                  "key.bodylength": 27,
                  "key.bodyoffset": 2731,
                  "key.doc.declaration": "subscript(position: Self.Index) -> Self.Element { get }",
                  "key.doc.discussion": [
                    {
                      "Para": "The following example accesses an element of an array through its subscript to print its value:"
                    },
                    {
                      "CodeListing": ""
                    },
                    {
                      "Para": "You can subscript a collection with any valid index other than the collection’s end index. The end index refers to the position one past the last element of a collection, so it doesn’t correspond with an element."
                    },
                    {
                      "Complexity": ""
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>subscript(_:)</Name><USR>s:Sly7ElementQz5IndexQzcip</USR><Declaration>subscript(position: Self.Index) -&gt; Self.Element { get }</Declaration><CommentParts><Abstract><Para>Accesses the element at the specified position.</Para></Abstract><Parameters><Parameter><Name>position</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The position of the element to access. <codeVoice>position</codeVoice> must be a valid index of the collection that is not equal to the <codeVoice>endIndex</codeVoice> property.</Para></Discussion></Parameter></Parameters><Discussion><Para>The following example accesses an element of an array through its subscript to print its value:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(streets[1])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Bryant\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can subscript a collection with any valid index other than the collection’s end index. The end index refers to the position one past the last element of a collection, so it doesn’t correspond with an element.</Para><Complexity><Para>O(1)</Para></Complexity><Note><Para>This documentation comment was inherited from <codeVoice>Collection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "subscript(_:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The position of the element to access. `position` must be a valid index of the collection that is not equal to the `endIndex` property."
                        }
                      ],
                      "name": "position"
                    }
                  ],
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV5Indexa\">Index</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
                  "key.kind": "source.lang.swift.decl.function.subscript",
                  "key.length": 67,
                  "key.name": "subscript(_:)",
                  "key.namelength": 26,
                  "key.nameoffset": 2692,
                  "key.offset": 2692,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sky7ElementQz5IndexQzcip"
                    },
                    {
                      "key.usr": "s:SKy7ElementQz5IndexQzcip"
                    },
                    {
                      "key.usr": "s:Sly7ElementQz5IndexQzcip"
                    }
                  ],
                  "key.parsed_declaration": "public subscript(position: Index) -> Element",
                  "key.parsed_scope.end": 90,
                  "key.parsed_scope.start": 90,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVys10ArraySliceVyxGSnySiGcip\">subscript(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcip\">subscript(_:_:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (Int) -> Element",
                  "key.typeusr": "$syxSicD",
                  "key.usr": "s:Sly7ElementQz5IndexQzcip"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public subscript(x: <Type usr=\"s:4main12DynamicGraphC5GroupV7Indicesa\">Indices</Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5GroupV11SubSequencea\">SubSequence</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2764
                    }
                  ],
                  "key.bodylength": 20,
                  "key.bodyoffset": 2809,
                  "key.doc.declaration": "override subscript(bounds: Range<Self.Index>) -> Self.SubSequence { get }",
                  "key.doc.discussion": [
                    {
                      "Para": "The accessed slice uses the same indices for the same elements as the original collection uses. Always use the slice’s `startIndex` property instead of assuming that its indices start at a particular value."
                    },
                    {
                      "Para": "This example demonstrates getting a slice of an array of strings, finding the index of one of the strings in the slice, and then using that index in the original array."
                    },
                    {
                      "CodeListing": ""
                    },
                    {
                      "Complexity": ""
                    },
                    {
                      "Note": ""
                    }
                  ],
                  "key.doc.full_as_xml": "<Other><Name>subscript(_:)</Name><USR>s:Sky11SubSequenceQzSny5IndexQzGcip</USR><Declaration>override subscript(bounds: Range&lt;Self.Index&gt;) -&gt; Self.SubSequence { get }</Declaration><CommentParts><Abstract><Para>Accesses a contiguous subrange of the collection’s elements.</Para></Abstract><Parameters><Parameter><Name>bounds</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A range of the collection’s indices. The bounds of the range must be valid indices of the collection.</Para></Discussion></Parameter></Parameters><Discussion><Para>The accessed slice uses the same indices for the same elements as the original collection uses. Always use the slice’s <codeVoice>startIndex</codeVoice> property instead of assuming that its indices start at a particular value.</Para><Para>This example demonstrates getting a slice of an array of strings, finding the index of one of the strings in the slice, and then using that index in the original array.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streetsSlice = streets[2 ..< streets.endIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(streetsSlice)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[\"Channing\", \"Douglas\", \"Evarts\"]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let index = streetsSlice.firstIndex(of: \"Evarts\")    // 4]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(streets[index!])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Evarts\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Complexity><Para>O(1)</Para></Complexity><Note><Para>This documentation comment was inherited from <codeVoice>RandomAccessCollection</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
                  "key.doc.name": "subscript(_:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "A range of the collection’s indices. The bounds of the range must be valid indices of the collection."
                        }
                      ],
                      "name": "bounds"
                    }
                  ],
                  "key.doc.type": "Other",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV7Indicesa\">Indices</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main12DynamicGraphC5GroupV11SubSequencea\">SubSequence</ref.typealias></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
                  "key.kind": "source.lang.swift.decl.function.subscript",
                  "key.length": 59,
                  "key.name": "subscript(_:)",
                  "key.namelength": 21,
                  "key.nameoffset": 2771,
                  "key.offset": 2771,
                  "key.overrides": [
                    {
                      "key.usr": "s:Sky11SubSequenceQzSny5IndexQzGcip"
                    },
                    {
                      "key.usr": "s:SKy11SubSequenceQzSny5IndexQzGcip"
                    },
                    {
                      "key.usr": "s:Sly11SubSequenceQzSny5IndexQzGcip"
                    }
                  ],
                  "key.parsed_declaration": "public subscript(x: Indices) -> SubSequence",
                  "key.parsed_scope.end": 91,
                  "key.parsed_scope.start": 91,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyxSicip\">subscript(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGSnySiGd_AA13StreamContextCSgtcip\">subscript(_:_:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (Range<Int>) -> ArraySlice<Element>",
                  "key.typeusr": "$sys10ArraySliceVyxGSnySiGcD",
                  "key.usr": "s:Sky11SubSequenceQzSny5IndexQzGcip"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(_ elements: <Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>...)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2836
                    }
                  ],
                  "key.bodylength": 38,
                  "key.bodyoffset": 2873,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>elements</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type>...</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 69,
                  "key.name": "init(_:)",
                  "key.namelength": 28,
                  "key.nameoffset": 2843,
                  "key.offset": 2843,
                  "key.parsed_declaration": "public init(_ elements: Element...)",
                  "key.parsed_scope.end": 95,
                  "key.parsed_scope.start": 93,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc\">init&lt;OtherElement&gt;(_: Group&lt;OtherElement&gt;) where OtherElement : DynamicGraph.AnyTensor</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGSayxGcfc\">init(_: [Element])</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (Element...) -> DynamicGraph.Group<Element>",
                  "key.typeusr": "$sy4main12DynamicGraphC5GroupVy_xGxd_tcD",
                  "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGxd_tcfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init&lt;OtherElement&gt;(_ otherGroup: <Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;<Type usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc12OtherElementL_qd__mfp\">OtherElement</Type>&gt;) where OtherElement : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 2918
                    }
                  ],
                  "key.bodylength": 482,
                  "key.bodyoffset": 3004,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc12OtherElementL_qd__mfp\"><decl.generic_type_param.name>OtherElement</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>otherGroup</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc12OtherElementL_qd__mfp\">OtherElement</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>OtherElement : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 562,
                  "key.name": "init(_:)",
                  "key.namelength": 77,
                  "key.nameoffset": 2925,
                  "key.offset": 2925,
                  "key.overrides": [
                    {
                      "key.usr": "s:4main24DynamicGraph_TensorGroupPyx03AnyD0Qzcfc"
                    }
                  ],
                  "key.parsed_declaration": "public init<OtherElement: DynamicGraph.AnyTensor>(_ otherGroup: Group<OtherElement>)",
                  "key.parsed_scope.end": 109,
                  "key.parsed_scope.start": 97,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGxd_tcfc\">init(_: Element...)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGSayxGcfc\">init(_: [Element])</RelatedName>"
                    }
                  ],
                  "key.substructure": [
                    {
                      "key.annotated_decl": "<Declaration>OtherElement : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
                      "key.elements": [
                        {
                          "key.kind": "source.lang.swift.structure.elem.typeref",
                          "key.length": 22,
                          "key.offset": 2944
                        }
                      ],
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                      "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>OtherElement</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_param.constraint></decl.generic_type_param>",
                      "key.inheritedtypes": [
                        {
                          "key.name": "DynamicGraph.AnyTensor"
                        }
                      ],
                      "key.kind": "source.lang.swift.decl.generic_type_param",
                      "key.length": 36,
                      "key.name": "OtherElement",
                      "key.namelength": 12,
                      "key.nameoffset": 2930,
                      "key.offset": 2930,
                      "key.parsed_declaration": "public init<OtherElement: DynamicGraph.AnyTensor",
                      "key.parsed_scope.end": 97,
                      "key.parsed_scope.start": 97,
                      "key.typename": "OtherElement.Type",
                      "key.typeusr": "$sqd__mD",
                      "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc12OtherElementL_qd__mfp"
                    }
                  ],
                  "key.typename": "<Element, OtherElement where Element : DynamicGraph.AnyTensor, OtherElement : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> (DynamicGraph.Group<OtherElement>) -> DynamicGraph.Group<Element>",
                  "key.typeusr": "$sy4main12DynamicGraphC5GroupVy_xGAEy_qd__GcAC9AnyTensorCRbd__luD",
                  "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(_ underlyingArray: [<Type usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</Type>])</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3493
                    }
                  ],
                  "key.bodylength": 50,
                  "key.bodyoffset": 3536,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>underlyingArray</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 87,
                  "key.name": "init(_:)",
                  "key.namelength": 34,
                  "key.nameoffset": 3500,
                  "key.offset": 3500,
                  "key.parsed_declaration": "public init(_ underlyingArray: [Element])",
                  "key.parsed_scope.end": 113,
                  "key.parsed_scope.start": 111,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGxd_tcfc\">init(_: Element...)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupVyAEy_xGAEy_qd__GcAC9AnyTensorCRbd__lufc\">init&lt;OtherElement&gt;(_: Group&lt;OtherElement&gt;) where OtherElement : DynamicGraph.AnyTensor</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>.Type) -> ([Element]) -> DynamicGraph.Group<Element>",
                  "key.typeusr": "$sy4main12DynamicGraphC5GroupVy_xGSayxGcD",
                  "key.usr": "s:4main12DynamicGraphC5GroupVyAEy_xGSayxGcfc"
                }
              ],
              "key.typename": "DynamicGraph.Group<Element>.Type",
              "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
              "key.usr": "s:4main12DynamicGraphC5GroupV"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public typealias Group = <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 3596
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>Group</decl.name> = <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct></decl.typealias>",
          "key.kind": "source.lang.swift.decl.typealias",
          "key.length": 36,
          "key.name": "Group",
          "key.namelength": 5,
          "key.nameoffset": 3613,
          "key.offset": 3603,
          "key.parsed_declaration": "public typealias Group = DynamicGraph.Group",
          "key.parsed_scope.end": 118,
          "key.parsed_scope.start": 118,
          "key.typename": "DynamicGraph.Group.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVmD",
          "key.usr": "s:4main5Groupa"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Group&lt;Element&gt; : <Type usr=\"s:Sk\">RandomAccessCollection</Type>, <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type> where Element : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type></Declaration>",
          "key.bodylength": 570,
          "key.bodyoffset": 3709,
          "key.doc.column": 17,
          "key.doc.declaration": "public struct Group<Element> : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift\" line=\"75\" column=\"17\"><Name>Group</Name><USR>s:4main12DynamicGraphC5GroupV</USR><Declaration>public struct Group&lt;Element&gt; : RandomAccessCollection, DynamicGraph.AnyGroup where Element : main.DynamicGraph.AnyTensor</Declaration><CommentParts><Abstract><Para>Type-aware group of tensors.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 75,
          "key.doc.name": "Group",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Group</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5GroupV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:Sk\">RandomAccessCollection</ref.protocol>, <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 639,
          "key.name": "DynamicGraph.Group",
          "key.namelength": 18,
          "key.nameoffset": 3651,
          "key.offset": 3641,
          "key.parsed_declaration": "extension DynamicGraph.Group where Element: DynamicGraph.AnyTensor",
          "key.parsed_scope.end": 136,
          "key.parsed_scope.start": 120,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3712
                }
              ],
              "key.bodylength": 158,
              "key.bodyoffset": 3839,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 279,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 3724,
              "key.offset": 3719,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 128,
              "key.parsed_scope.start": 121,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV8reshaped_6offset10incrementsAEy_xGAA21TensorDimensionFormatO_SaySiGSgAMtF\">reshaped(_:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (TensorFormat, [Int], [Int]?, [Int]?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$s6format10dimensions6offset10increments4main12DynamicGraphC5GroupVy_xGAE12TensorFormatO_SaySiGAMSgANtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV8reshaped6format10dimensions6offset10incrementsAEy_xGAA12TensorFormatO_SaySiGANSgAOtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5GroupV\">Group</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4001
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 4129,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Group.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5GroupV\">Group</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 270,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 4013,
              "key.offset": 4008,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 135,
              "key.parsed_scope.start": 129,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5GroupV8reshaped6format10dimensions6offset10incrementsAEy_xGAA12TensorFormatO_SaySiGANSgAOtF\">reshaped(format:dimensions:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : DynamicGraph.AnyTensor> (DynamicGraph.Group<Element>) -> (TensorDimensionFormat, [Int]?, [Int]?) -> DynamicGraph.Group<Element>",
              "key.typeusr": "$s_6offset10increments4main12DynamicGraphC5GroupVy_xGAC21TensorDimensionFormatO_SaySiGSgALtcD",
              "key.usr": "s:4main12DynamicGraphC5GroupV8reshaped_6offset10incrementsAEy_xGAA21TensorDimensionFormatO_SaySiGSgAMtF"
            }
          ],
          "key.typename": "DynamicGraph.Group<Element>.Type",
          "key.typeusr": "$s4main12DynamicGraphC5GroupVy_xGmD",
          "key.usr": "s:4main12DynamicGraphC5GroupV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 1109,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct Hint</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 169
            }
          ],
          "key.bodylength": 553,
          "key.bodyoffset": 189,
          "key.doc.column": 15,
          "key.doc.comment": "Hint are parameters to these operations that changes shape from input\nto output. It given proper stride / padding parameters for these operations.",
          "key.doc.declaration": "public struct Hint",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift\" line=\"5\" column=\"15\"><Name>Hint</Name><USR>s:4main4HintV</USR><Declaration>public struct Hint</Declaration><CommentParts><Abstract><Para>Hint are parameters to these operations that changes shape from input to output. It given proper stride / padding parameters for these operations.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Hint",
          "key.doc.type": "Class",
          "key.doclength": 155,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Hint</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 567,
          "key.name": "Hint",
          "key.namelength": 4,
          "key.nameoffset": 183,
          "key.offset": 176,
          "key.parsed_declaration": "public struct Hint",
          "key.parsed_scope.end": 39,
          "key.parsed_scope.start": 5,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var stride: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 192
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>stride</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 17,
              "key.name": "stride",
              "key.namelength": 6,
              "key.nameoffset": 203,
              "key.offset": 199,
              "key.parsed_declaration": "public var stride: [Int]",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main4HintV6strideSaySiGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:4main4HintV\">Hint</Type>.Border</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 220
                }
              ],
              "key.bodylength": 295,
              "key.bodyoffset": 242,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.struct usr=\"s:4main4HintV\">Hint</ref.struct>.<decl.name>Border</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 311,
              "key.name": "Border",
              "key.namelength": 6,
              "key.nameoffset": 234,
              "key.offset": 227,
              "key.parsed_declaration": "public struct Border",
              "key.parsed_scope.end": 26,
              "key.parsed_scope.start": 8,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var begin: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 247
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>begin</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 16,
                  "key.name": "begin",
                  "key.namelength": 5,
                  "key.nameoffset": 258,
                  "key.offset": 254,
                  "key.parsed_declaration": "public var begin: [Int]",
                  "key.parsed_scope.end": 9,
                  "key.parsed_scope.start": 9,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "[Int]",
                  "key.typeusr": "$sSaySiGD",
                  "key.usr": "s:4main4HintV6BorderV5beginSaySiGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public var end: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 275
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>end</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 14,
                  "key.name": "end",
                  "key.namelength": 3,
                  "key.nameoffset": 286,
                  "key.offset": 282,
                  "key.parsed_declaration": "public var end: [Int]",
                  "key.parsed_scope.end": 10,
                  "key.parsed_scope.start": 10,
                  "key.setter_accessibility": "source.lang.swift.accessibility.public",
                  "key.typename": "[Int]",
                  "key.typeusr": "$sSaySiGD",
                  "key.usr": "s:4main4HintV6BorderV3endSaySiGvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init()</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 302
                    }
                  ],
                  "key.bodylength": 37,
                  "key.bodyoffset": 317,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 46,
                  "key.name": "init()",
                  "key.namelength": 6,
                  "key.nameoffset": 309,
                  "key.offset": 309,
                  "key.parsed_declaration": "public init()",
                  "key.parsed_scope.end": 15,
                  "key.parsed_scope.start": 12,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderVyAESaySiGcfc\">init(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderV5begin3endAESaySiG_AHtcfc\">init(begin:end:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(Hint.Border.Type) -> () -> Hint.Border",
                  "key.typeusr": "$s4main4HintV6BorderVycD",
                  "key.usr": "s:4main4HintV6BorderVAEycfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(_ border: [<Type usr=\"s:Si\">Int</Type>])</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 361
                    }
                  ],
                  "key.bodylength": 45,
                  "key.bodyoffset": 391,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>border</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 69,
                  "key.name": "init(_:)",
                  "key.namelength": 21,
                  "key.nameoffset": 368,
                  "key.offset": 368,
                  "key.parsed_declaration": "public init(_ border: [Int])",
                  "key.parsed_scope.end": 20,
                  "key.parsed_scope.start": 17,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderVAEycfc\">init()</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderV5begin3endAESaySiG_AHtcfc\">init(begin:end:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(Hint.Border.Type) -> ([Int]) -> Hint.Border",
                  "key.typeusr": "$sy4main4HintV6BorderVSaySiGcD",
                  "key.usr": "s:4main4HintV6BorderVyAESaySiGcfc"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public init(begin: [<Type usr=\"s:Si\">Int</Type>], end: [<Type usr=\"s:Si\">Int</Type>])</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 443
                    }
                  ],
                  "key.bodylength": 51,
                  "key.bodyoffset": 482,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>begin</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>end</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 84,
                  "key.name": "init(begin:end:)",
                  "key.namelength": 30,
                  "key.nameoffset": 450,
                  "key.offset": 450,
                  "key.parsed_declaration": "public init(begin: [Int], end: [Int])",
                  "key.parsed_scope.end": 25,
                  "key.parsed_scope.start": 22,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderVAEycfc\">init()</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6BorderVyAESaySiGcfc\">init(_:)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(Hint.Border.Type) -> ([Int], [Int]) -> Hint.Border",
                  "key.typeusr": "$s5begin3end4main4HintV6BorderVSaySiG_AHtcD",
                  "key.usr": "s:4main4HintV6BorderV5begin3endAESaySiG_AHtcfc"
                }
              ],
              "key.typename": "Hint.Border.Type",
              "key.typeusr": "$s4main4HintV6BorderVmD",
              "key.usr": "s:4main4HintV6BorderV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var border: <Type usr=\"s:4main4HintV6BorderV\">Border</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 542
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>border</decl.name>: <decl.var.type><ref.struct usr=\"s:4main4HintV6BorderV\">Border</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 18,
              "key.name": "border",
              "key.namelength": 6,
              "key.nameoffset": 553,
              "key.offset": 549,
              "key.parsed_declaration": "public var border: Border",
              "key.parsed_scope.end": 28,
              "key.parsed_scope.start": 28,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Hint.Border",
              "key.typeusr": "$s4main4HintV6BorderVD",
              "key.usr": "s:4main4HintV6borderAC6BorderVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 571
                }
              ],
              "key.bodylength": 41,
              "key.bodyoffset": 586,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 50,
              "key.name": "init()",
              "key.namelength": 6,
              "key.nameoffset": 578,
              "key.offset": 578,
              "key.parsed_declaration": "public init()",
              "key.parsed_scope.end": 33,
              "key.parsed_scope.start": 30,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4HintV6stride6borderACSaySiG_AC6BorderVtcfc\">init(stride:border:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Hint.Type) -> () -> Hint",
              "key.typeusr": "$s4main4HintVycD",
              "key.usr": "s:4main4HintVACycfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(stride: [<Type usr=\"s:Si\">Int</Type>], border: <Type usr=\"s:4main4HintV6BorderV\">Border</Type> = Border())</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 632
                }
              ],
              "key.bodylength": 53,
              "key.bodyoffset": 687,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>stride</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>border</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main4HintV6BorderV\">Border</ref.struct></decl.var.parameter.type> = Border()</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 102,
              "key.name": "init(stride:border:)",
              "key.namelength": 46,
              "key.nameoffset": 639,
              "key.offset": 639,
              "key.parsed_declaration": "public init(stride: [Int], border: Border = Border())",
              "key.parsed_scope.end": 38,
              "key.parsed_scope.start": 35,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4HintVACycfc\">init()</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Hint.Type) -> ([Int], Hint.Border) -> Hint",
              "key.typeusr": "$s6stride6border4main4HintVSaySiG_AE6BorderVtcD",
              "key.usr": "s:4main4HintV6stride6borderACSaySiG_AC6BorderVtcfc"
            }
          ],
          "key.typename": "Hint.Type",
          "key.typeusr": "$s4main4HintVmD",
          "key.usr": "s:4main4HintV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Hint</Declaration>",
          "key.bodylength": 346,
          "key.bodyoffset": 761,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Hint",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift\" line=\"5\" column=\"15\"><Name>Hint</Name><USR>s:4main4HintV</USR><Declaration>public struct Hint</Declaration><CommentParts><Abstract><Para>Hint are parameters to these operations that changes shape from input to output. It given proper stride / padding parameters for these operations.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Hint",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Hint</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 363,
          "key.name": "Hint",
          "key.namelength": 4,
          "key.nameoffset": 755,
          "key.offset": 745,
          "key.parsed_declaration": "extension Hint",
          "key.parsed_scope.end": 55,
          "key.parsed_scope.start": 41,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>func toCHint() -&gt; ccv_nnc_hint_t</Declaration>",
              "key.bodylength": 307,
              "key.bodyoffset": 798,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCHint</decl.name>() -&gt; <decl.function.returntype>ccv_nnc_hint_t</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 342,
              "key.name": "toCHint()",
              "key.namelength": 9,
              "key.nameoffset": 769,
              "key.offset": 764,
              "key.parsed_declaration": "func toCHint() -> ccv_nnc_hint_t",
              "key.parsed_scope.end": 54,
              "key.parsed_scope.start": 42,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var hint: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Hint.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hint</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 27,
                  "key.name": "hint",
                  "key.namelength": 4,
                  "key.nameoffset": 807,
                  "key.offset": 803,
                  "key.parsed_declaration": "var hint = ccv_nnc_hint_t()",
                  "key.parsed_scope.end": 43,
                  "key.parsed_scope.start": 43,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main4HintV7toCHintyXeXeF4hintL_Xevp"
                }
              ],
              "key.typename": "(Hint) -> () -> <<error type>>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main4HintV7toCHintyXeXeF"
            }
          ],
          "key.typename": "Hint.Type",
          "key.typeusr": "$s4main4HintVmD",
          "key.usr": "s:4main4HintV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 4700,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol Loss</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 52
            }
          ],
          "key.bodylength": 199,
          "key.bodyoffset": 74,
          "key.doc.column": 17,
          "key.doc.comment": "A generic loss function protocol.",
          "key.doc.declaration": "public protocol Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"4\" column=\"17\"><Name>Loss</Name><USR>s:4main4LossP</USR><Declaration>public protocol Loss</Declaration><CommentParts><Abstract><Para>A generic loss function protocol.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Loss",
          "key.doc.type": "Class",
          "key.doclength": 38,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Loss</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 215,
          "key.name": "Loss",
          "key.namelength": 4,
          "key.nameoffset": 68,
          "key.offset": 59,
          "key.parsed_declaration": "public protocol Loss",
          "key.parsed_scope.end": 8,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp\">T</Type>, target: <Type usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1UL_qd_0_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1UL_qd_0_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1UL_qd_0_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 195,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 82,
              "key.offset": 77,
              "key.parsed_declaration": "func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 5,
              "key.parsed_scope.start": 5,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF\">callAsFunction(_:target:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 100
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 97,
                  "key.offset": 97,
                  "key.parsed_declaration": "func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 5,
                  "key.parsed_scope.start": 5,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1TL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 132
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 129,
                  "key.offset": 129,
                  "key.parsed_declaration": "func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 5,
                  "key.parsed_scope.start": 5,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd_0_mD",
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF1UL_qd_0_mfp"
                }
              ],
              "key.typename": "<Self, T, U where Self : Loss, T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (Self) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRd__AfJRd_0_ACQyd_0_ADRSr0_luD",
              "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
            }
          ],
          "key.typename": "Loss.Protocol",
          "key.typeusr": "$s4main4Loss_pmD",
          "key.usr": "s:4main4LossP"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol Loss</Declaration>",
          "key.bodylength": 250,
          "key.bodyoffset": 292,
          "key.doc.column": 17,
          "key.doc.declaration": "public protocol Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"4\" column=\"17\"><Name>Loss</Name><USR>s:4main4LossP</USR><Declaration>public protocol Loss</Declaration><CommentParts><Abstract><Para>A generic loss function protocol.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Loss",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Loss</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 267,
          "key.name": "Loss",
          "key.namelength": 4,
          "key.nameoffset": 286,
          "key.offset": 276,
          "key.parsed_declaration": "extension Loss",
          "key.parsed_scope.end": 16,
          "key.parsed_scope.start": 10,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp\">T</Type>, target: <Type usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1UL_qd_0_mfp\">U</Type>) -&gt; [<Type usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 295
                }
              ],
              "key.bodylength": 72,
              "key.bodyoffset": 468,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1UL_qd_0_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1UL_qd_0_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 239,
              "key.name": "callAsFunction(_:target:)",
              "key.namelength": 109,
              "key.nameoffset": 307,
              "key.offset": 302,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 15,
              "key.parsed_scope.start": 11,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF\">callAsFunction(_:target:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 325
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 322,
                  "key.offset": 322,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 11,
                  "key.parsed_scope.start": 11,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1TL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 357
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 354,
                  "key.offset": 354,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 11,
                  "key.parsed_scope.start": 11,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sqd_0_mD",
                  "key.usr": "s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF1UL_qd_0_mfp"
                }
              ],
              "key.typename": "<Self, T, U where Self : Loss, T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (Self) -> (T, U) -> [T.AnyTensor]",
              "key.typeusr": "$s_6targetSay9AnyTensorQyd__Gqd___qd_0_tc4main013DynamicGraph_bC5GroupRd__AeFRd_0_ABQyd_0_ACRSr0_luD",
              "key.usr": "s:4main4LossPAAE14callAsFunction_6targetSay9AnyTensorQyd__Gqd___qd_0_tAA013DynamicGraph_gH5GroupRd__AaIRd_0_AFQyd_0_AGRSr0_lF"
            }
          ],
          "key.typename": "Loss.Protocol",
          "key.typeusr": "$s4main4Loss_pmD",
          "key.usr": "s:4main4LossP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct SoftmaxCrossEntropyLoss : <Type usr=\"s:4main4LossP\">Loss</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 660
            }
          ],
          "key.bodylength": 770,
          "key.bodyoffset": 705,
          "key.doc.column": 15,
          "key.doc.comment": "Softmax cross-entropy loss. This combines softmax with cross-entropy loss to maximize\nnumerical stability.",
          "key.doc.declaration": "public struct SoftmaxCrossEntropyLoss : Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"20\" column=\"15\"><Name>SoftmaxCrossEntropyLoss</Name><USR>s:4main23SoftmaxCrossEntropyLossV</USR><Declaration>public struct SoftmaxCrossEntropyLoss : Loss</Declaration><CommentParts><Abstract><Para>Softmax cross-entropy loss. This combines softmax with cross-entropy loss to maximize numerical stability.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 20,
          "key.doc.name": "SoftmaxCrossEntropyLoss",
          "key.doc.type": "Class",
          "key.doclength": 115,
          "key.docoffset": 545,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 4,
              "key.offset": 699
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SoftmaxCrossEntropyLoss</decl.name> : <ref.protocol usr=\"s:4main4LossP\">Loss</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Loss"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 809,
          "key.name": "SoftmaxCrossEntropyLoss",
          "key.namelength": 23,
          "key.nameoffset": 674,
          "key.offset": 667,
          "key.parsed_declaration": "public struct SoftmaxCrossEntropyLoss: Loss",
          "key.parsed_scope.end": 39,
          "key.parsed_scope.start": 20,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var trim0: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 708
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>trim0</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "trim0",
              "key.namelength": 5,
              "key.nameoffset": 719,
              "key.offset": 715,
              "key.parsed_declaration": "public var trim0: Float",
              "key.parsed_scope.end": 21,
              "key.parsed_scope.start": 21,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main23SoftmaxCrossEntropyLossV5trim0Sfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var trim1: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 734
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>trim1</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "trim1",
              "key.namelength": 5,
              "key.nameoffset": 745,
              "key.offset": 741,
              "key.parsed_declaration": "public var trim1: Float",
              "key.parsed_scope.end": 22,
              "key.parsed_scope.start": 22,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main23SoftmaxCrossEntropyLossV5trim1Sfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(trim0: <Type usr=\"s:Sf\">Float</Type> = 0, trim1: <Type usr=\"s:Sf\">Float</Type> = 1)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 760
                }
              ],
              "key.bodylength": 49,
              "key.bodyoffset": 809,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>trim0</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trim1</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 92,
              "key.name": "init(trim0:trim1:)",
              "key.namelength": 40,
              "key.nameoffset": 767,
              "key.offset": 767,
              "key.parsed_declaration": "public init(trim0: Float = 0, trim1: Float = 1)",
              "key.parsed_scope.end": 26,
              "key.parsed_scope.start": 23,
              "key.substructure": [],
              "key.typename": "(SoftmaxCrossEntropyLoss.Type) -> (Float, Float) -> SoftmaxCrossEntropyLoss",
              "key.typeusr": "$s5trim05trim14main23SoftmaxCrossEntropyLossVSf_SftcD",
              "key.usr": "s:4main23SoftmaxCrossEntropyLossV5trim05trim1ACSf_Sftcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>, target: <Type usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 862
                }
              ],
              "key.bodylength": 407,
              "key.bodyoffset": 1066,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 605,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 874,
              "key.offset": 869,
              "key.overrides": [
                {
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
                }
              ],
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 38,
              "key.parsed_scope.start": 27,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 892
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 889,
                  "key.offset": 889,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 27,
                  "key.parsed_scope.start": 27,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 924
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 921,
                  "key.offset": 921,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 27,
                  "key.parsed_scope.start": 27,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 1075,
                  "key.offset": 1071,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 30,
                  "key.parsed_scope.start": 30,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 75,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 1258,
                  "key.offset": 1254,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SOFTMAX_CROSSENTROPY_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 34,
                  "key.parsed_scope.start": 34,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF3cmdL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (SoftmaxCrossEntropyLoss) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQzGx_q_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRzAfJR_ACQy_ADRSr0_luD",
              "key.usr": "s:4main23SoftmaxCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF"
            }
          ],
          "key.typename": "SoftmaxCrossEntropyLoss.Type",
          "key.typeusr": "$s4main23SoftmaxCrossEntropyLossVmD",
          "key.usr": "s:4main23SoftmaxCrossEntropyLossV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct SigmoidBinaryCrossEntropyLoss : <Type usr=\"s:4main4LossP\">Loss</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1600
            }
          ],
          "key.bodylength": 698,
          "key.bodyoffset": 1651,
          "key.doc.column": 15,
          "key.doc.comment": "Sigmoid cross-entropy loss. This combines sigmoid with binary cross-entropy loss to maximize\nnumerical stability.",
          "key.doc.declaration": "public struct SigmoidBinaryCrossEntropyLoss : Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"43\" column=\"15\"><Name>SigmoidBinaryCrossEntropyLoss</Name><USR>s:4main29SigmoidBinaryCrossEntropyLossV</USR><Declaration>public struct SigmoidBinaryCrossEntropyLoss : Loss</Declaration><CommentParts><Abstract><Para>Sigmoid cross-entropy loss. This combines sigmoid with binary cross-entropy loss to maximize numerical stability.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 43,
          "key.doc.name": "SigmoidBinaryCrossEntropyLoss",
          "key.doc.type": "Class",
          "key.doclength": 122,
          "key.docoffset": 1478,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 4,
              "key.offset": 1645
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SigmoidBinaryCrossEntropyLoss</decl.name> : <ref.protocol usr=\"s:4main4LossP\">Loss</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Loss"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 743,
          "key.name": "SigmoidBinaryCrossEntropyLoss",
          "key.namelength": 29,
          "key.nameoffset": 1614,
          "key.offset": 1607,
          "key.parsed_declaration": "public struct SigmoidBinaryCrossEntropyLoss: Loss",
          "key.parsed_scope.end": 59,
          "key.parsed_scope.start": 43,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var posWeight: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1654
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>posWeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 20,
              "key.name": "posWeight",
              "key.namelength": 9,
              "key.nameoffset": 1665,
              "key.offset": 1661,
              "key.parsed_declaration": "public var posWeight: Float",
              "key.parsed_scope.end": 44,
              "key.parsed_scope.start": 44,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV9posWeightSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(posWeight: <Type usr=\"s:Sf\">Float</Type> = 1)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1684
                }
              ],
              "key.bodylength": 34,
              "key.bodyoffset": 1719,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>posWeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 63,
              "key.name": "init(posWeight:)",
              "key.namelength": 26,
              "key.nameoffset": 1691,
              "key.offset": 1691,
              "key.parsed_declaration": "public init(posWeight: Float = 1)",
              "key.parsed_scope.end": 47,
              "key.parsed_scope.start": 45,
              "key.substructure": [],
              "key.typename": "(SigmoidBinaryCrossEntropyLoss.Type) -> (Float) -> SigmoidBinaryCrossEntropyLoss",
              "key.typeusr": "$s9posWeight4main29SigmoidBinaryCrossEntropyLossVSf_tcD",
              "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV9posWeightACSf_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>, target: <Type usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1757
                }
              ],
              "key.bodylength": 386,
              "key.bodyoffset": 1961,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 584,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 1769,
              "key.offset": 1764,
              "key.overrides": [
                {
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
                }
              ],
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 58,
              "key.parsed_scope.start": 48,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 1787
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 1784,
                  "key.offset": 1784,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 48,
                  "key.parsed_scope.start": 48,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 1819
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 1816,
                  "key.offset": 1816,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 48,
                  "key.parsed_scope.start": 48,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 1970,
                  "key.offset": 1966,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 51,
                  "key.parsed_scope.start": 51,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 82,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 2125,
                  "key.offset": 2121,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SIGMOID_BINARY_CROSSENTROPY_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 54,
                  "key.parsed_scope.start": 54,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF3cmdL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (SigmoidBinaryCrossEntropyLoss) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQzGx_q_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRzAfJR_ACQy_ADRSr0_luD",
              "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamL0CSgtAA013DynamicGraph_mN5GroupRzAaMR_AGQy_AHRSr0_lF"
            }
          ],
          "key.typename": "SigmoidBinaryCrossEntropyLoss.Type",
          "key.typeusr": "$s4main29SigmoidBinaryCrossEntropyLossVmD",
          "key.usr": "s:4main29SigmoidBinaryCrossEntropyLossV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct BinaryCrossEntropyLoss : <Type usr=\"s:4main4LossP\">Loss</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 2383
            }
          ],
          "key.bodylength": 690,
          "key.bodyoffset": 2427,
          "key.doc.column": 15,
          "key.doc.comment": "Binary cross-entropy loss.",
          "key.doc.declaration": "public struct BinaryCrossEntropyLoss : Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"62\" column=\"15\"><Name>BinaryCrossEntropyLoss</Name><USR>s:4main22BinaryCrossEntropyLossV</USR><Declaration>public struct BinaryCrossEntropyLoss : Loss</Declaration><CommentParts><Abstract><Para>Binary cross-entropy loss.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 62,
          "key.doc.name": "BinaryCrossEntropyLoss",
          "key.doc.type": "Class",
          "key.doclength": 31,
          "key.docoffset": 2352,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 4,
              "key.offset": 2421
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>BinaryCrossEntropyLoss</decl.name> : <ref.protocol usr=\"s:4main4LossP\">Loss</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Loss"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 728,
          "key.name": "BinaryCrossEntropyLoss",
          "key.namelength": 22,
          "key.nameoffset": 2397,
          "key.offset": 2390,
          "key.parsed_declaration": "public struct BinaryCrossEntropyLoss: Loss",
          "key.parsed_scope.end": 78,
          "key.parsed_scope.start": 62,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var posWeight: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2430
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>posWeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 20,
              "key.name": "posWeight",
              "key.namelength": 9,
              "key.nameoffset": 2441,
              "key.offset": 2437,
              "key.parsed_declaration": "public var posWeight: Float",
              "key.parsed_scope.end": 63,
              "key.parsed_scope.start": 63,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main22BinaryCrossEntropyLossV9posWeightSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(posWeight: <Type usr=\"s:Sf\">Float</Type> = 1)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2460
                }
              ],
              "key.bodylength": 34,
              "key.bodyoffset": 2495,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>posWeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 63,
              "key.name": "init(posWeight:)",
              "key.namelength": 26,
              "key.nameoffset": 2467,
              "key.offset": 2467,
              "key.parsed_declaration": "public init(posWeight: Float = 1)",
              "key.parsed_scope.end": 66,
              "key.parsed_scope.start": 64,
              "key.substructure": [],
              "key.typename": "(BinaryCrossEntropyLoss.Type) -> (Float) -> BinaryCrossEntropyLoss",
              "key.typeusr": "$s9posWeight4main22BinaryCrossEntropyLossVSf_tcD",
              "key.usr": "s:4main22BinaryCrossEntropyLossV9posWeightACSf_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>, target: <Type usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2533
                }
              ],
              "key.bodylength": 378,
              "key.bodyoffset": 2737,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 576,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 2545,
              "key.offset": 2540,
              "key.overrides": [
                {
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
                }
              ],
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 77,
              "key.parsed_scope.start": 67,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 2563
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 2560,
                  "key.offset": 2560,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 67,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 2595
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 2592,
                  "key.offset": 2592,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 67,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 2746,
                  "key.offset": 2742,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 70,
                  "key.parsed_scope.start": 70,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 74,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 2901,
                  "key.offset": 2897,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_BINARY_CROSSENTROPY_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 73,
                  "key.parsed_scope.start": 73,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF3cmdL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (BinaryCrossEntropyLoss) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQzGx_q_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRzAfJR_ACQy_ADRSr0_luD",
              "key.usr": "s:4main22BinaryCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF"
            }
          ],
          "key.typename": "BinaryCrossEntropyLoss.Type",
          "key.typeusr": "$s4main22BinaryCrossEntropyLossVmD",
          "key.usr": "s:4main22BinaryCrossEntropyLossV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct CategoricalCrossEntropyLoss : <Type usr=\"s:4main4LossP\">Loss</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 3156
            }
          ],
          "key.bodylength": 774,
          "key.bodyoffset": 3205,
          "key.doc.column": 15,
          "key.doc.comment": "Multi-class cross-entropy loss.",
          "key.doc.declaration": "public struct CategoricalCrossEntropyLoss : Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"81\" column=\"15\"><Name>CategoricalCrossEntropyLoss</Name><USR>s:4main27CategoricalCrossEntropyLossV</USR><Declaration>public struct CategoricalCrossEntropyLoss : Loss</Declaration><CommentParts><Abstract><Para>Multi-class cross-entropy loss.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 81,
          "key.doc.name": "CategoricalCrossEntropyLoss",
          "key.doc.type": "Class",
          "key.doclength": 36,
          "key.docoffset": 3120,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 4,
              "key.offset": 3199
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CategoricalCrossEntropyLoss</decl.name> : <ref.protocol usr=\"s:4main4LossP\">Loss</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Loss"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 817,
          "key.name": "CategoricalCrossEntropyLoss",
          "key.namelength": 27,
          "key.nameoffset": 3170,
          "key.offset": 3163,
          "key.parsed_declaration": "public struct CategoricalCrossEntropyLoss: Loss",
          "key.parsed_scope.end": 100,
          "key.parsed_scope.start": 81,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var trim0: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3208
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>trim0</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "trim0",
              "key.namelength": 5,
              "key.nameoffset": 3219,
              "key.offset": 3215,
              "key.parsed_declaration": "public var trim0: Float",
              "key.parsed_scope.end": 82,
              "key.parsed_scope.start": 82,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main27CategoricalCrossEntropyLossV5trim0Sfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var trim1: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3234
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>trim1</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "trim1",
              "key.namelength": 5,
              "key.nameoffset": 3245,
              "key.offset": 3241,
              "key.parsed_declaration": "public var trim1: Float",
              "key.parsed_scope.end": 83,
              "key.parsed_scope.start": 83,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main27CategoricalCrossEntropyLossV5trim1Sfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(trim0: <Type usr=\"s:Sf\">Float</Type> = 0, trim1: <Type usr=\"s:Sf\">Float</Type> = 1)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3260
                }
              ],
              "key.bodylength": 49,
              "key.bodyoffset": 3309,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>trim0</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trim1</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 92,
              "key.name": "init(trim0:trim1:)",
              "key.namelength": 40,
              "key.nameoffset": 3267,
              "key.offset": 3267,
              "key.parsed_declaration": "public init(trim0: Float = 0, trim1: Float = 1)",
              "key.parsed_scope.end": 87,
              "key.parsed_scope.start": 84,
              "key.substructure": [],
              "key.typename": "(CategoricalCrossEntropyLoss.Type) -> (Float, Float) -> CategoricalCrossEntropyLoss",
              "key.typeusr": "$s5trim05trim14main27CategoricalCrossEntropyLossVSf_SftcD",
              "key.usr": "s:4main27CategoricalCrossEntropyLossV5trim05trim1ACSf_Sftcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>, target: <Type usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3362
                }
              ],
              "key.bodylength": 411,
              "key.bodyoffset": 3566,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 609,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 3374,
              "key.offset": 3369,
              "key.overrides": [
                {
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
                }
              ],
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 99,
              "key.parsed_scope.start": 88,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 3392
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 3389,
                  "key.offset": 3389,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 88,
                  "key.parsed_scope.start": 88,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 3424
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 3421,
                  "key.offset": 3421,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 88,
                  "key.parsed_scope.start": 88,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 3575,
                  "key.offset": 3571,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 91,
                  "key.parsed_scope.start": 91,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 79,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 3758,
                  "key.offset": 3754,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CATEGORICAL_CROSSENTROPY_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 95,
                  "key.parsed_scope.start": 95,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF3cmdL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (CategoricalCrossEntropyLoss) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQzGx_q_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRzAfJR_ACQy_ADRSr0_luD",
              "key.usr": "s:4main27CategoricalCrossEntropyLossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamK0CSgtAA013DynamicGraph_lM5GroupRzAaMR_AGQy_AHRSr0_lF"
            }
          ],
          "key.typename": "CategoricalCrossEntropyLoss.Type",
          "key.typeusr": "$s4main27CategoricalCrossEntropyLossVmD",
          "key.usr": "s:4main27CategoricalCrossEntropyLossV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct SmoothL1Loss : <Type usr=\"s:4main4LossP\">Loss</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4025
            }
          ],
          "key.bodylength": 639,
          "key.bodyoffset": 4059,
          "key.doc.column": 15,
          "key.doc.comment": "Smooth L1 loss (for object detection).",
          "key.doc.declaration": "public struct SmoothL1Loss : Loss",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift\" line=\"103\" column=\"15\"><Name>SmoothL1Loss</Name><USR>s:4main12SmoothL1LossV</USR><Declaration>public struct SmoothL1Loss : Loss</Declaration><CommentParts><Abstract><Para>Smooth L1 loss (for object detection).</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 103,
          "key.doc.name": "SmoothL1Loss",
          "key.doc.type": "Class",
          "key.doclength": 43,
          "key.docoffset": 3982,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 4,
              "key.offset": 4053
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SmoothL1Loss</decl.name> : <ref.protocol usr=\"s:4main4LossP\">Loss</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Loss"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 667,
          "key.name": "SmoothL1Loss",
          "key.namelength": 12,
          "key.nameoffset": 4039,
          "key.offset": 4032,
          "key.parsed_declaration": "public struct SmoothL1Loss: Loss",
          "key.parsed_scope.end": 119,
          "key.parsed_scope.start": 103,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var beta: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4062
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>beta</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 15,
              "key.name": "beta",
              "key.namelength": 4,
              "key.nameoffset": 4073,
              "key.offset": 4069,
              "key.parsed_declaration": "public var beta: Float",
              "key.parsed_scope.end": 104,
              "key.parsed_scope.start": 104,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SmoothL1LossV4betaSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(beta: <Type usr=\"s:Sf\">Float</Type> = 1)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4087
                }
              ],
              "key.bodylength": 24,
              "key.bodyoffset": 4117,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>beta</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 48,
              "key.name": "init(beta:)",
              "key.namelength": 21,
              "key.nameoffset": 4094,
              "key.offset": 4094,
              "key.parsed_declaration": "public init(beta: Float = 1)",
              "key.parsed_scope.end": 107,
              "key.parsed_scope.start": 105,
              "key.substructure": [],
              "key.typename": "(SmoothL1Loss.Type) -> (Float) -> SmoothL1Loss",
              "key.typeusr": "$s4beta4main12SmoothL1LossVSf_tcD",
              "key.usr": "s:4main12SmoothL1LossV4betaACSf_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ input: <Type usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>, target: <Type usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?) -&gt; [<Type usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</Type>.<Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</Type>] where T : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, U : <Type usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</Type>, T.AnyTensor == U.AnyTensor</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4145
                }
              ],
              "key.bodylength": 347,
              "key.bodyoffset": 4349,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>target</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp\">T</ref.generic_type_param>.<ref.associatedtype usr=\"s:4main27DynamicGraph_AnyTensorGroupP0dE0Qa\">AnyTensor</ref.associatedtype>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main27DynamicGraph_AnyTensorGroupP\">DynamicGraph_AnyTensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.AnyTensor == U.AnyTensor</decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 545,
              "key.name": "callAsFunction(_:target:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 4157,
              "key.offset": 4152,
              "key.overrides": [
                {
                  "key.usr": "s:4main4LossP14callAsFunction_6target13streamContextSay9AnyTensorQyd__Gqd___qd_0_AA06StreamH0CSgtAA013DynamicGraph_iJ5GroupRd__AaMRd_0_AGQyd_0_AHRSr0_lF"
                }
              ],
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup>(\n  _ input: T, target: U, streamContext: StreamContext?\n) -> [T.AnyTensor] where T.AnyTensor == U.AnyTensor",
              "key.parsed_scope.end": 118,
              "key.parsed_scope.start": 108,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 4175
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4172,
                  "key.offset": 4172,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 108,
                  "key.parsed_scope.start": 108,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 27,
                      "key.offset": 4207
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC14AnyTensorGroupa\">AnyTensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.AnyTensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 30,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 4204,
                  "key.offset": 4204,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.AnyTensorGroup, U: DynamicGraph.AnyTensorGroup",
                  "key.parsed_scope.end": 108,
                  "key.parsed_scope.start": 108,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 4358,
                  "key.offset": 4354,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 111,
                  "key.parsed_scope.start": 111,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Loss.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 64,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 4492,
                  "key.offset": 4488,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_SMOOTH_L1_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 114,
                  "key.parsed_scope.start": 114,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF3cmdL_Xevp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_AnyTensorGroup, U : DynamicGraph_AnyTensorGroup, T.AnyTensor == U.AnyTensor> (SmoothL1Loss) -> (T, U, StreamContext?) -> [T.AnyTensor]",
              "key.typeusr": "$s_6target13streamContextSay9AnyTensorQzGx_q_4main06StreamC0CSgtcAF013DynamicGraph_dE5GroupRzAfJR_ACQy_ADRSr0_luD",
              "key.usr": "s:4main12SmoothL1LossV14callAsFunction_6target13streamContextSay9AnyTensorQzGx_q_AA06StreamJ0CSgtAA013DynamicGraph_kL5GroupRzAaMR_AGQy_AHRSr0_lF"
            }
          ],
          "key.typename": "SmoothL1Loss.Type",
          "key.typeusr": "$s4main12SmoothL1LossVmD",
          "key.usr": "s:4main12SmoothL1LossV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 13485,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Sum : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 37
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 30
            }
          ],
          "key.bodylength": 446,
          "key.bodyoffset": 61,
          "key.doc.column": 20,
          "key.doc.comment": "Sum inputs.",
          "key.doc.declaration": "public final class Sum : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"4\" column=\"20\"><Name>Sum</Name><USR>s:4main3SumC</USR><Declaration>public final class Sum : Model</Declaration><CommentParts><Abstract><Para>Sum inputs.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Sum",
          "key.doc.type": "Class",
          "key.doclength": 16,
          "key.docoffset": 14,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 54
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Sum</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 465,
          "key.name": "Sum",
          "key.namelength": 3,
          "key.nameoffset": 49,
          "key.offset": 43,
          "key.parsed_declaration": "public final class Sum: Model",
          "key.parsed_scope.end": 21,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 64
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 103,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 73,
              "key.offset": 73,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 7,
              "key.parsed_scope.start": 5,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3SumC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sum.Type) -> (OpaquePointer) -> Sum",
              "key.typeusr": "$sy4main3SumCs13OpaquePointerVcD",
              "key.usr": "s:4main3SumCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 133
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 165,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 64,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 140,
              "key.offset": 140,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 11,
              "key.parsed_scope.start": 9,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3SumCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sum.Type) -> (String) -> Sum",
              "key.typeusr": "$s4name4main3SumCSS_tcD",
              "key.usr": "s:4main3SumC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ inputs: <Type usr=\"s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>..., streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 208
                }
              ],
              "key.bodylength": 174,
              "key.bodyoffset": 331,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type>...</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 291,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 104,
              "key.nameoffset": 220,
              "key.offset": 215,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ inputs: T..., streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 20,
              "key.parsed_scope.start": 13,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 238
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 235,
                  "key.offset": 235,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 13,
                  "key.parsed_scope.start": 13,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 105,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 376,
                  "key.offset": 372,
                  "key.parsed_declaration": "let outputs = self(\n  inputs: inputs[0], Array(inputs.suffix(from: 1)), streamContext: streamContext)",
                  "key.parsed_scope.end": 17,
                  "key.parsed_scope.start": 17,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Sum) -> (T..., StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxxd_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main3SumC14callAsFunction_13streamContextxxd_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Sum.Type",
          "key.typeusr": "$s4main3SumCmD",
          "key.usr": "s:4main3SumC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Add : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 578
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 571
            }
          ],
          "key.bodylength": 453,
          "key.bodyoffset": 602,
          "key.doc.column": 20,
          "key.doc.comment": "Add two inputs together. It will do broadcast if needed.",
          "key.doc.declaration": "public final class Add : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"24\" column=\"20\"><Name>Add</Name><USR>s:4main3AddC</USR><Declaration>public final class Add : Model</Declaration><CommentParts><Abstract><Para>Add two inputs together. It will do broadcast if needed.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 24,
          "key.doc.name": "Add",
          "key.doc.type": "Class",
          "key.doclength": 61,
          "key.docoffset": 510,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 595
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Add</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 472,
          "key.name": "Add",
          "key.namelength": 3,
          "key.nameoffset": 590,
          "key.offset": 584,
          "key.parsed_declaration": "public final class Add: Model",
          "key.parsed_scope.end": 39,
          "key.parsed_scope.start": 24,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 605
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 644,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 614,
              "key.offset": 614,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 27,
              "key.parsed_scope.start": 25,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3AddC10leftScalar05rightD04nameACSf_SfSStcfc\">init(leftScalar:rightScalar:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Add.Type) -> (OpaquePointer) -> Add",
              "key.typeusr": "$sy4main3AddCs13OpaquePointerVcD",
              "key.usr": "s:4main3AddCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(leftScalar: <Type usr=\"s:Sf\">Float</Type> = 1, rightScalar: <Type usr=\"s:Sf\">Float</Type> = 1, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 674
                }
              ],
              "key.bodylength": 63,
              "key.bodyoffset": 753,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>leftScalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rightScalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 136,
              "key.name": "init(leftScalar:rightScalar:name:)",
              "key.namelength": 70,
              "key.nameoffset": 681,
              "key.offset": 681,
              "key.parsed_declaration": "public init(leftScalar: Float = 1, rightScalar: Float = 1, name: String = \"\")",
              "key.parsed_scope.end": 31,
              "key.parsed_scope.start": 29,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3AddCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Add.Type) -> (Float, Float, String) -> Add",
              "key.typeusr": "$s10leftScalar05rightB04name4main3AddCSf_SfSStcD",
              "key.usr": "s:4main3AddC10leftScalar05rightD04nameACSf_SfSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ left: <Type usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 821
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 951,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 226,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 111,
              "key.nameoffset": 833,
              "key.offset": 828,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 38,
              "key.parsed_scope.start": 33,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 851
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 848,
                  "key.offset": 848,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 33,
                  "key.parsed_scope.start": 33,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 960,
                  "key.offset": 956,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 36,
                  "key.parsed_scope.start": 36,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Add) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main3AddC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Add.Type",
          "key.typeusr": "$s4main3AddCmD",
          "key.usr": "s:4main3AddC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Mul : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 1131
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1124
            }
          ],
          "key.bodylength": 408,
          "key.bodyoffset": 1155,
          "key.doc.column": 20,
          "key.doc.comment": "Multiply two inputs together. It will do broadcast if needed.",
          "key.doc.declaration": "public final class Mul : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"42\" column=\"20\"><Name>Mul</Name><USR>s:4main3MulC</USR><Declaration>public final class Mul : Model</Declaration><CommentParts><Abstract><Para>Multiply two inputs together. It will do broadcast if needed.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 42,
          "key.doc.name": "Mul",
          "key.doc.type": "Class",
          "key.doclength": 66,
          "key.docoffset": 1058,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 1148
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Mul</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 427,
          "key.name": "Mul",
          "key.namelength": 3,
          "key.nameoffset": 1143,
          "key.offset": 1137,
          "key.parsed_declaration": "public final class Mul: Model",
          "key.parsed_scope.end": 57,
          "key.parsed_scope.start": 42,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 1158
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 1197,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 1167,
              "key.offset": 1167,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 45,
              "key.parsed_scope.start": 43,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MulC6scalar4nameACSf_SStcfc\">init(scalar:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Mul.Type) -> (OpaquePointer) -> Mul",
              "key.typeusr": "$sy4main3MulCs13OpaquePointerVcD",
              "key.usr": "s:4main3MulCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(scalar: <Type usr=\"s:Sf\">Float</Type> = 1, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1227
                }
              ],
              "key.bodylength": 46,
              "key.bodyoffset": 1278,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>scalar</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 91,
              "key.name": "init(scalar:name:)",
              "key.namelength": 42,
              "key.nameoffset": 1234,
              "key.offset": 1234,
              "key.parsed_declaration": "public init(scalar: Float = 1, name: String = \"\")",
              "key.parsed_scope.end": 49,
              "key.parsed_scope.start": 47,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MulCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Mul.Type) -> (Float, String) -> Mul",
              "key.typeusr": "$s6scalar4name4main3MulCSf_SStcD",
              "key.usr": "s:4main3MulC6scalar4nameACSf_SStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ left: <Type usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1329
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 1459,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 226,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 111,
              "key.nameoffset": 1341,
              "key.offset": 1336,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 56,
              "key.parsed_scope.start": 51,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 1359
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 1356,
                  "key.offset": 1356,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 51,
                  "key.parsed_scope.start": 51,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 1468,
                  "key.offset": 1464,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 54,
                  "key.parsed_scope.start": 54,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Mul) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main3MulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Mul.Type",
          "key.typeusr": "$s4main3MulCmD",
          "key.usr": "s:4main3MulC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Matmul : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 1616
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1609
            }
          ],
          "key.bodylength": 566,
          "key.bodyoffset": 1643,
          "key.doc.column": 20,
          "key.doc.comment": "Matrix-multiplication over two inputs.",
          "key.doc.declaration": "public final class Matmul : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"60\" column=\"20\"><Name>Matmul</Name><USR>s:4main6MatmulC</USR><Declaration>public final class Matmul : Model</Declaration><CommentParts><Abstract><Para>Matrix-multiplication over two inputs.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 60,
          "key.doc.name": "Matmul",
          "key.doc.type": "Class",
          "key.doclength": 43,
          "key.docoffset": 1566,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 1636
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Matmul</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 588,
          "key.name": "Matmul",
          "key.namelength": 6,
          "key.nameoffset": 1628,
          "key.offset": 1622,
          "key.parsed_declaration": "public final class Matmul: Model",
          "key.parsed_scope.end": 77,
          "key.parsed_scope.start": 60,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 1646
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 1685,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 1655,
              "key.offset": 1655,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 63,
              "key.parsed_scope.start": 61,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6MatmulC10transposeA0C1B4nameACSi_Sit_Si_SitSStcfc\">init(transposeA:transposeB:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Matmul.Type) -> (OpaquePointer) -> Matmul",
              "key.typeusr": "$sy4main6MatmulCs13OpaquePointerVcD",
              "key.usr": "s:4main6MatmulCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(transposeA: (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>) = (0, 0), transposeB: (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>) = (0, 0), name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1715
                }
              ],
              "key.bodylength": 157,
              "key.bodyoffset": 1813,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>transposeA</decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type> = (0, 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>transposeB</decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type> = (0, 0)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 249,
              "key.name": "init(transposeA:transposeB:name:)",
              "key.namelength": 89,
              "key.nameoffset": 1722,
              "key.offset": 1722,
              "key.parsed_declaration": "public init(transposeA: (Int, Int) = (0, 0), transposeB: (Int, Int) = (0, 0), name: String = \"\")",
              "key.parsed_scope.end": 69,
              "key.parsed_scope.start": 65,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6MatmulCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let a: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>a</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 50,
                  "key.name": "a",
                  "key.namelength": 1,
                  "key.nameoffset": 1822,
                  "key.offset": 1818,
                  "key.parsed_declaration": "let a = [Int32(transposeA.0), Int32(transposeA.1)]",
                  "key.parsed_scope.end": 66,
                  "key.parsed_scope.start": 66,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main6MatmulC10transposeA0C1B4nameACSi_Sit_Si_SitSStcfc1aL_Says5Int32VGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let b: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>b</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 50,
                  "key.name": "b",
                  "key.namelength": 1,
                  "key.nameoffset": 1877,
                  "key.offset": 1873,
                  "key.parsed_declaration": "let b = [Int32(transposeB.0), Int32(transposeB.1)]",
                  "key.parsed_scope.end": 67,
                  "key.parsed_scope.start": 67,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main6MatmulC10transposeA0C1B4nameACSi_Sit_Si_SitSStcfc1bL_Says5Int32VGvp"
                }
              ],
              "key.typename": "(Matmul.Type) -> ((Int, Int), (Int, Int), String) -> Matmul",
              "key.typeusr": "$s10transposeA0A1B4name4main6MatmulCSi_Sit_Si_SitSStcD",
              "key.usr": "s:4main6MatmulC10transposeA0C1B4nameACSi_Sit_Si_SitSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ left: <Type usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1975
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 2105,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 226,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 111,
              "key.nameoffset": 1987,
              "key.offset": 1982,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 76,
              "key.parsed_scope.start": 71,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 2005
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 2002,
                  "key.offset": 2002,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 71,
                  "key.parsed_scope.start": 71,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 2114,
                  "key.offset": 2110,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 74,
                  "key.parsed_scope.start": 74,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Matmul) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main6MatmulC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Matmul.Type",
          "key.typeusr": "$s4main6MatmulCmD",
          "key.usr": "s:4main6MatmulC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Dense : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 2245
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 2238
            }
          ],
          "key.bodylength": 430,
          "key.bodyoffset": 2271,
          "key.doc.column": 20,
          "key.doc.comment": "A linear layer model.",
          "key.doc.declaration": "public final class Dense : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"80\" column=\"20\"><Name>Dense</Name><USR>s:4main5DenseC</USR><Declaration>public final class Dense : Model</Declaration><CommentParts><Abstract><Para>A linear layer model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 80,
          "key.doc.name": "Dense",
          "key.doc.type": "Class",
          "key.doclength": 26,
          "key.docoffset": 2212,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 2264
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Dense</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 451,
          "key.name": "Dense",
          "key.namelength": 5,
          "key.nameoffset": 2257,
          "key.offset": 2251,
          "key.parsed_declaration": "public final class Dense: Model",
          "key.parsed_scope.end": 95,
          "key.parsed_scope.start": 80,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 2274
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 2313,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 2283,
              "key.offset": 2283,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 83,
              "key.parsed_scope.start": 81,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5DenseC5count6noBias4nameACSi_SbSStcfc\">init(count:noBias:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Dense.Type) -> (OpaquePointer) -> Dense",
              "key.typeusr": "$sy4main5DenseCs13OpaquePointerVcD",
              "key.usr": "s:4main5DenseCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(count: <Type usr=\"s:Si\">Int</Type>, noBias: <Type usr=\"s:Sb\">Bool</Type> = false, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2343
                }
              ],
              "key.bodylength": 70,
              "key.bodyoffset": 2409,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>noBias</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 130,
              "key.name": "init(count:noBias:name:)",
              "key.namelength": 57,
              "key.nameoffset": 2350,
              "key.offset": 2350,
              "key.parsed_declaration": "public init(count: Int, noBias: Bool = false, name: String = \"\")",
              "key.parsed_scope.end": 87,
              "key.parsed_scope.start": 85,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5DenseCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Dense.Type) -> (Int, Bool, String) -> Dense",
              "key.typeusr": "$s5count6noBias4name4main5DenseCSi_SbSStcD",
              "key.usr": "s:4main5DenseC5count6noBias4nameACSi_SbSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2484
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 2603,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 2496,
              "key.offset": 2491,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 94,
              "key.parsed_scope.start": 89,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 2514
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 2511,
                  "key.offset": 2511,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 89,
                  "key.parsed_scope.start": 89,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 2612,
                  "key.offset": 2608,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 92,
                  "key.parsed_scope.start": 92,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Dense) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main5DenseC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Dense.Type",
          "key.typeusr": "$s4main5DenseCmD",
          "key.usr": "s:4main5DenseC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Reshape : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 2732
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 2725
            }
          ],
          "key.bodylength": 606,
          "key.bodyoffset": 2760,
          "key.doc.column": 20,
          "key.doc.comment": "A reshape model.",
          "key.doc.declaration": "public final class Reshape : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"98\" column=\"20\"><Name>Reshape</Name><USR>s:4main7ReshapeC</USR><Declaration>public final class Reshape : Model</Declaration><CommentParts><Abstract><Para>A reshape model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 98,
          "key.doc.name": "Reshape",
          "key.doc.type": "Class",
          "key.doclength": 21,
          "key.docoffset": 2704,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 2753
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Reshape</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 629,
          "key.name": "Reshape",
          "key.namelength": 7,
          "key.nameoffset": 2744,
          "key.offset": 2738,
          "key.parsed_declaration": "public final class Reshape: Model",
          "key.parsed_scope.end": 117,
          "key.parsed_scope.start": 98,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 2763
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 2802,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 2772,
              "key.offset": 2772,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 101,
              "key.parsed_scope.start": 99,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfc\">init(dimensions:offset:increments:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Reshape.Type) -> (OpaquePointer) -> Reshape",
              "key.typeusr": "$sy4main7ReshapeCs13OpaquePointerVcD",
              "key.usr": "s:4main7ReshapeCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2832
                }
              ],
              "key.bodylength": 431,
              "key.bodyoffset": 2933,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 526,
              "key.name": "init(dimensions:offset:increments:name:)",
              "key.namelength": 90,
              "key.nameoffset": 2839,
              "key.offset": 2839,
              "key.parsed_declaration": "public init(dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil, name: String = \"\")",
              "key.parsed_scope.end": 116,
              "key.parsed_scope.start": 103,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7ReshapeCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var dimensions: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 42,
                  "key.name": "dimensions",
                  "key.namelength": 10,
                  "key.nameoffset": 2942,
                  "key.offset": 2938,
                  "key.parsed_declaration": "var dimensions = toCDimensions(dimensions)",
                  "key.parsed_scope.end": 105,
                  "key.parsed_scope.start": 105,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfcADL0_s5Int32V_A7Ktvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var offset: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 34,
                  "key.name": "offset",
                  "key.namelength": 6,
                  "key.nameoffset": 2989,
                  "key.offset": 2985,
                  "key.parsed_declaration": "var offset = toCDimensions(offset)",
                  "key.parsed_scope.end": 106,
                  "key.parsed_scope.start": 106,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfcAEL0_s5Int32V_A7Ktvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var increments: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 42,
                  "key.name": "increments",
                  "key.namelength": 10,
                  "key.nameoffset": 3028,
                  "key.offset": 3024,
                  "key.parsed_declaration": "var increments = toCDimensions(increments)",
                  "key.parsed_scope.end": 107,
                  "key.parsed_scope.start": 107,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfcAFL0_s5Int32V_A7Ktvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _model: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_model</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 267,
                  "key.name": "_model",
                  "key.namelength": 6,
                  "key.nameoffset": 3075,
                  "key.offset": 3071,
                  "key.parsed_declaration": "let _model = withUnsafePointer(to: &dimensions.0) { dimensions in\n  withUnsafePointer(to: &offset.0) { offset in\n    withUnsafePointer(to: &increments.0) { increments in\n      ccv_cnnp_reshape(dimensions, offset, increments, name)!\n    }\n  }\n}",
                  "key.parsed_scope.end": 108,
                  "key.parsed_scope.start": 108,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC6_models13OpaquePointerVvp\">_model</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfc6_modelL_Xevp"
                }
              ],
              "key.typename": "(Reshape.Type) -> ([Int], [Int]?, [Int]?, String) -> Reshape",
              "key.typeusr": "$s10dimensions6offset10increments4name4main7ReshapeCSaySiG_AHSgAISStcD",
              "key.usr": "s:4main7ReshapeC10dimensions6offset10increments4nameACSaySiG_AHSgAISStcfc"
            }
          ],
          "key.typename": "Reshape.Type",
          "key.typeusr": "$s4main7ReshapeCmD",
          "key.usr": "s:4main7ReshapeC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main5ModelC\">Model</Type>.IO</Declaration>",
          "key.bodylength": 495,
          "key.bodyoffset": 3389,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.Model.IO",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"11\" column=\"16\"><Name>IO</Name><USR>s:4main5ModelC2IOC</USR><Declaration>public class main.Model.IO</Declaration><CommentParts><Abstract><Para>A IO class represent the abstract input / output for a model. It can correspond to one or more tensors when the model is materialized.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 11,
          "key.doc.name": "IO",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>IO</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 516,
          "key.name": "Model.IO",
          "key.namelength": 8,
          "key.nameoffset": 3379,
          "key.offset": 3369,
          "key.parsed_declaration": "extension Model.IO",
          "key.parsed_scope.end": 133,
          "key.parsed_scope.start": 119,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3681
                }
              ],
              "key.bodylength": 92,
              "key.bodyoffset": 3790,
              "key.doc.column": 15,
              "key.doc.comment": " Reshape an IO to a new dimension. You cannot reshape data types.\n\n - Parameters:\n   - dimensions: The new dimensions for the input.\n   - offset: Whether apply certain offset for each dimension.\n   - increments: What's the step size for each dimension.",
              "key.doc.declaration": "public func reshaped(_ dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -> Model.IO",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"128\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:4main5ModelC2IOC8reshaped_6offset10incrementsAESaySiG_AISgAJtF</USR><Declaration>public func reshaped(_ dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; Model.IO</Declaration><CommentParts><Abstract><Para>Reshape an IO to a new dimension. You cannot reshape data types.</Para></Abstract><Parameters><Parameter><Name>dimensions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The new dimensions for the input.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether apply certain offset for each dimension.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>What’s the step size for each dimension.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 128,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The new dimensions for the input."
                    }
                  ],
                  "name": "dimensions"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether apply certain offset for each dimension."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "What’s the step size for each dimension."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 286,
              "key.docoffset": 3392,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 195,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 77,
              "key.nameoffset": 3693,
              "key.offset": 3688,
              "key.parsed_declaration": "public func reshaped(_ dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil)\n  -> Model.IO",
              "key.parsed_scope.end": 132,
              "key.parsed_scope.start": 128,
              "key.substructure": [],
              "key.typename": "(Model.IO) -> ([Int], [Int]?, [Int]?) -> Model.IO",
              "key.typeusr": "$s_6offset10increments4main5ModelC2IOCSaySiG_AHSgAItcD",
              "key.usr": "s:4main5ModelC2IOC8reshaped_6offset10incrementsAESaySiG_AISgAJtF"
            }
          ],
          "key.typename": "Model.IO.Type",
          "key.typeusr": "$s4main5ModelC2IOCmD",
          "key.usr": "s:4main5ModelC2IOC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class RELU : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 3923
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 3916
            }
          ],
          "key.bodylength": 365,
          "key.bodyoffset": 3948,
          "key.doc.column": 20,
          "key.doc.comment": "A ReLU activation model.",
          "key.doc.declaration": "public final class RELU : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"136\" column=\"20\"><Name>RELU</Name><USR>s:4main4RELUC</USR><Declaration>public final class RELU : Model</Declaration><CommentParts><Abstract><Para>A ReLU activation model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 136,
          "key.doc.name": "RELU",
          "key.doc.type": "Class",
          "key.doclength": 29,
          "key.docoffset": 3887,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 3941
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>RELU</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 385,
          "key.name": "RELU",
          "key.namelength": 4,
          "key.nameoffset": 3935,
          "key.offset": 3929,
          "key.parsed_declaration": "public final class RELU: Model",
          "key.parsed_scope.end": 151,
          "key.parsed_scope.start": 136,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 3951
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 3990,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 3960,
              "key.offset": 3960,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 139,
              "key.parsed_scope.start": 137,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4RELUC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(RELU.Type) -> (OpaquePointer) -> RELU",
              "key.typeusr": "$sy4main4RELUCs13OpaquePointerVcD",
              "key.usr": "s:4main4RELUCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4020
                }
              ],
              "key.bodylength": 39,
              "key.bodyoffset": 4052,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 65,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 4027,
              "key.offset": 4027,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 143,
              "key.parsed_scope.start": 141,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main4RELUCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(RELU.Type) -> (String) -> RELU",
              "key.typeusr": "$s4name4main4RELUCSS_tcD",
              "key.usr": "s:4main4RELUC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4096
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 4215,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 4108,
              "key.offset": 4103,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 150,
              "key.parsed_scope.start": 145,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 4126
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4123,
                  "key.offset": 4123,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 145,
                  "key.parsed_scope.start": 145,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4224,
                  "key.offset": 4220,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 148,
                  "key.parsed_scope.start": 148,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (RELU) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main4RELUC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "RELU.Type",
          "key.typeusr": "$s4main4RELUCmD",
          "key.usr": "s:4main4RELUC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Softmax : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 4355
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4348
            }
          ],
          "key.bodylength": 368,
          "key.bodyoffset": 4383,
          "key.doc.column": 20,
          "key.doc.comment": "A softmax activation model.",
          "key.doc.declaration": "public final class Softmax : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"154\" column=\"20\"><Name>Softmax</Name><USR>s:4main7SoftmaxC</USR><Declaration>public final class Softmax : Model</Declaration><CommentParts><Abstract><Para>A softmax activation model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 154,
          "key.doc.name": "Softmax",
          "key.doc.type": "Class",
          "key.doclength": 32,
          "key.docoffset": 4316,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 4376
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Softmax</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 391,
          "key.name": "Softmax",
          "key.namelength": 7,
          "key.nameoffset": 4367,
          "key.offset": 4361,
          "key.parsed_declaration": "public final class Softmax: Model",
          "key.parsed_scope.end": 169,
          "key.parsed_scope.start": 154,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 4386
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 4425,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 4395,
              "key.offset": 4395,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 157,
              "key.parsed_scope.start": 155,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7SoftmaxC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Softmax.Type) -> (OpaquePointer) -> Softmax",
              "key.typeusr": "$sy4main7SoftmaxCs13OpaquePointerVcD",
              "key.usr": "s:4main7SoftmaxCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4455
                }
              ],
              "key.bodylength": 42,
              "key.bodyoffset": 4487,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 68,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 4462,
              "key.offset": 4462,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 161,
              "key.parsed_scope.start": 159,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7SoftmaxCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Softmax.Type) -> (String) -> Softmax",
              "key.typeusr": "$s4name4main7SoftmaxCSS_tcD",
              "key.usr": "s:4main7SoftmaxC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4534
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 4653,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 4546,
              "key.offset": 4541,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 168,
              "key.parsed_scope.start": 163,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 4564
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4561,
                  "key.offset": 4561,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 163,
                  "key.parsed_scope.start": 163,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4662,
                  "key.offset": 4658,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 166,
                  "key.parsed_scope.start": 166,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Softmax) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7SoftmaxC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Softmax.Type",
          "key.typeusr": "$s4main7SoftmaxCmD",
          "key.usr": "s:4main7SoftmaxC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Sigmoid : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 4793
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4786
            }
          ],
          "key.bodylength": 368,
          "key.bodyoffset": 4821,
          "key.doc.column": 20,
          "key.doc.comment": "A sigmoid activation model.",
          "key.doc.declaration": "public final class Sigmoid : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"172\" column=\"20\"><Name>Sigmoid</Name><USR>s:4main7SigmoidC</USR><Declaration>public final class Sigmoid : Model</Declaration><CommentParts><Abstract><Para>A sigmoid activation model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 172,
          "key.doc.name": "Sigmoid",
          "key.doc.type": "Class",
          "key.doclength": 32,
          "key.docoffset": 4754,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 4814
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Sigmoid</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 391,
          "key.name": "Sigmoid",
          "key.namelength": 7,
          "key.nameoffset": 4805,
          "key.offset": 4799,
          "key.parsed_declaration": "public final class Sigmoid: Model",
          "key.parsed_scope.end": 187,
          "key.parsed_scope.start": 172,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 4824
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 4863,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 4833,
              "key.offset": 4833,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 175,
              "key.parsed_scope.start": 173,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7SigmoidC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sigmoid.Type) -> (OpaquePointer) -> Sigmoid",
              "key.typeusr": "$sy4main7SigmoidCs13OpaquePointerVcD",
              "key.usr": "s:4main7SigmoidCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4893
                }
              ],
              "key.bodylength": 42,
              "key.bodyoffset": 4925,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 68,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 4900,
              "key.offset": 4900,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 179,
              "key.parsed_scope.start": 177,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7SigmoidCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sigmoid.Type) -> (String) -> Sigmoid",
              "key.typeusr": "$s4name4main7SigmoidCSS_tcD",
              "key.usr": "s:4main7SigmoidC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4972
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 5091,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 4984,
              "key.offset": 4979,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 186,
              "key.parsed_scope.start": 181,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 5002
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 4999,
                  "key.offset": 4999,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 181,
                  "key.parsed_scope.start": 181,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 5100,
                  "key.offset": 5096,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 184,
                  "key.parsed_scope.start": 184,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Sigmoid) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7SigmoidC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Sigmoid.Type",
          "key.typeusr": "$s4main7SigmoidCmD",
          "key.usr": "s:4main7SigmoidC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Swish : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 5229
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 5222
            }
          ],
          "key.bodylength": 366,
          "key.bodyoffset": 5255,
          "key.doc.column": 20,
          "key.doc.comment": "A swish activation model.",
          "key.doc.declaration": "public final class Swish : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"190\" column=\"20\"><Name>Swish</Name><USR>s:4main5SwishC</USR><Declaration>public final class Swish : Model</Declaration><CommentParts><Abstract><Para>A swish activation model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 190,
          "key.doc.name": "Swish",
          "key.doc.type": "Class",
          "key.doclength": 30,
          "key.docoffset": 5192,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 5248
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Swish</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 387,
          "key.name": "Swish",
          "key.namelength": 5,
          "key.nameoffset": 5241,
          "key.offset": 5235,
          "key.parsed_declaration": "public final class Swish: Model",
          "key.parsed_scope.end": 205,
          "key.parsed_scope.start": 190,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 5258
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 5297,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 5267,
              "key.offset": 5267,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 193,
              "key.parsed_scope.start": 191,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5SwishC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Swish.Type) -> (OpaquePointer) -> Swish",
              "key.typeusr": "$sy4main5SwishCs13OpaquePointerVcD",
              "key.usr": "s:4main5SwishCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5327
                }
              ],
              "key.bodylength": 40,
              "key.bodyoffset": 5359,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 66,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 5334,
              "key.offset": 5334,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 197,
              "key.parsed_scope.start": 195,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5SwishCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Swish.Type) -> (String) -> Swish",
              "key.typeusr": "$s4name4main5SwishCSS_tcD",
              "key.usr": "s:4main5SwishC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5404
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 5523,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 5416,
              "key.offset": 5411,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 204,
              "key.parsed_scope.start": 199,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 5434
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 5431,
                  "key.offset": 5431,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 199,
                  "key.parsed_scope.start": 199,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 5532,
                  "key.offset": 5528,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 202,
                  "key.parsed_scope.start": 202,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Swish) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main5SwishC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Swish.Type",
          "key.typeusr": "$s4main5SwishCmD",
          "key.usr": "s:4main5SwishC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Transpose : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 5631
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 5624
            }
          ],
          "key.bodylength": 426,
          "key.bodyoffset": 5661,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 5654
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Transpose</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 451,
          "key.name": "Transpose",
          "key.namelength": 9,
          "key.nameoffset": 5643,
          "key.offset": 5637,
          "key.parsed_declaration": "public final class Transpose: Model",
          "key.parsed_scope.end": 222,
          "key.parsed_scope.start": 207,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 5664
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 5703,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 5673,
              "key.offset": 5673,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 210,
              "key.parsed_scope.start": 208,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9TransposeC__4nameACSi_SiSStcfc\">init(_: Int, _: Int, name: String = &quot;&quot;)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_: [IO], _: [IO], name: String = &quot;&quot;)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Transpose.Type) -> (OpaquePointer) -> Transpose",
              "key.typeusr": "$sy4main9TransposeCs13OpaquePointerVcD",
              "key.usr": "s:4main9TransposeCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ axisA: <Type usr=\"s:Si\">Int</Type>, _ axisB: <Type usr=\"s:Si\">Int</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5733
                }
              ],
              "key.bodylength": 72,
              "key.bodyoffset": 5793,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisA</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisB</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 126,
              "key.name": "init(_:_:name:)",
              "key.namelength": 51,
              "key.nameoffset": 5740,
              "key.offset": 5740,
              "key.parsed_declaration": "public init(_ axisA: Int, _ axisB: Int, name: String = \"\")",
              "key.parsed_scope.end": 214,
              "key.parsed_scope.start": 212,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9TransposeCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_: [IO], _: [IO], name: String = &quot;&quot;)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Transpose.Type) -> (Int, Int, String) -> Transpose",
              "key.typeusr": "$s__4name4main9TransposeCSi_SiSStcD",
              "key.usr": "s:4main9TransposeC__4nameACSi_SiSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5870
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 5989,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 5882,
              "key.offset": 5877,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 221,
              "key.parsed_scope.start": 216,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 5900
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 5897,
                  "key.offset": 5897,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 216,
                  "key.parsed_scope.start": 216,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 5998,
                  "key.offset": 5994,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 219,
                  "key.parsed_scope.start": 219,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Transpose) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main9TransposeC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Transpose.Type",
          "key.typeusr": "$s4main9TransposeCmD",
          "key.usr": "s:4main9TransposeC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main5ModelC\">Model</Type>.IO</Declaration>",
          "key.bodylength": 113,
          "key.bodyoffset": 6110,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.Model.IO",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"11\" column=\"16\"><Name>IO</Name><USR>s:4main5ModelC2IOC</USR><Declaration>public class main.Model.IO</Declaration><CommentParts><Abstract><Para>A IO class represent the abstract input / output for a model. It can correspond to one or more tensors when the model is materialized.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 11,
          "key.doc.name": "IO",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>IO</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 134,
          "key.name": "Model.IO",
          "key.namelength": 8,
          "key.nameoffset": 6100,
          "key.offset": 6090,
          "key.parsed_declaration": "extension Model.IO",
          "key.parsed_scope.end": 228,
          "key.parsed_scope.start": 224,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func transposed(_ axisA: <Type usr=\"s:Si\">Int</Type>, _ axisB: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6113
                }
              ],
              "key.bodylength": 44,
              "key.bodyoffset": 6177,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisA</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>axisB</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 102,
              "key.name": "transposed(_:_:)",
              "key.namelength": 38,
              "key.nameoffset": 6125,
              "key.offset": 6120,
              "key.parsed_declaration": "public func transposed(_ axisA: Int, _ axisB: Int) -> Model.IO",
              "key.parsed_scope.end": 227,
              "key.parsed_scope.start": 225,
              "key.substructure": [],
              "key.typename": "(Model.IO) -> (Int, Int) -> Model.IO",
              "key.typeusr": "$sy4main5ModelC2IOCSi_SitcD",
              "key.usr": "s:4main5ModelC2IOC10transposedyAESi_SitF"
            }
          ],
          "key.typename": "Model.IO.Type",
          "key.typeusr": "$s4main5ModelC2IOCmD",
          "key.usr": "s:4main5ModelC2IOC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class MaskedFill : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 6328
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 6321
            }
          ],
          "key.bodylength": 470,
          "key.bodyoffset": 6359,
          "key.doc.column": 20,
          "key.doc.comment": "The masked fill model. If the value equal to a given constant, fill with another constant.",
          "key.doc.declaration": "public final class MaskedFill : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"231\" column=\"20\"><Name>MaskedFill</Name><USR>s:4main10MaskedFillC</USR><Declaration>public final class MaskedFill : Model</Declaration><CommentParts><Abstract><Para>The masked fill model. If the value equal to a given constant, fill with another constant.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 231,
          "key.doc.name": "MaskedFill",
          "key.doc.type": "Class",
          "key.doclength": 95,
          "key.docoffset": 6226,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 6352
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MaskedFill</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 496,
          "key.name": "MaskedFill",
          "key.namelength": 10,
          "key.nameoffset": 6340,
          "key.offset": 6334,
          "key.parsed_declaration": "public final class MaskedFill: Model",
          "key.parsed_scope.end": 246,
          "key.parsed_scope.start": 231,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 6362
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 6401,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 6371,
              "key.offset": 6371,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 234,
              "key.parsed_scope.start": 232,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10MaskedFillC7equalTo8fillWith4nameACSf_SfSStcfc\">init(equalTo:fillWith:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(MaskedFill.Type) -> (OpaquePointer) -> MaskedFill",
              "key.typeusr": "$sy4main10MaskedFillCs13OpaquePointerVcD",
              "key.usr": "s:4main10MaskedFillCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(equalTo: <Type usr=\"s:Sf\">Float</Type>, fillWith: <Type usr=\"s:Sf\">Float</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6431
                }
              ],
              "key.bodylength": 65,
              "key.bodyoffset": 6496,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>equalTo</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fillWith</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 124,
              "key.name": "init(equalTo:fillWith:name:)",
              "key.namelength": 56,
              "key.nameoffset": 6438,
              "key.offset": 6438,
              "key.parsed_declaration": "public init(equalTo: Float, fillWith: Float, name: String = \"\")",
              "key.parsed_scope.end": 238,
              "key.parsed_scope.start": 236,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10MaskedFillCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(MaskedFill.Type) -> (Float, Float, String) -> MaskedFill",
              "key.typeusr": "$s7equalTo8fillWith4name4main10MaskedFillCSf_SfSStcD",
              "key.usr": "s:4main10MaskedFillC7equalTo8fillWith4nameACSf_SfSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T, U&gt;(_ left: <Type usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1UL_q_mfp\">U</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type>, U : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6566
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 6725,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1UL_q_mfp\"><decl.generic_type_param.name>U</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1UL_q_mfp\">U</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>U : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 255,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 140,
              "key.nameoffset": 6578,
              "key.offset": 6573,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup, U: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: U, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 245,
              "key.parsed_scope.start": 240,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 6596
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 6593,
                  "key.offset": 6593,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 240,
                  "key.parsed_scope.start": 240,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>U : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 6625
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>U</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "U",
                  "key.namelength": 1,
                  "key.nameoffset": 6622,
                  "key.offset": 6622,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup, U: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 240,
                  "key.parsed_scope.start": 240,
                  "key.typename": "U.Type",
                  "key.typeusr": "$sq_mD",
                  "key.usr": "s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF1UL_q_mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 6734,
                  "key.offset": 6730,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 243,
                  "key.parsed_scope.start": 243,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T, U where T : DynamicGraph_TensorGroup, U : DynamicGraph_TensorGroup> (MaskedFill) -> (T, U, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_q_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzAbFR_r0_luD",
              "key.usr": "s:4main10MaskedFillC14callAsFunction__13streamContextxx_q_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzAaIR_r0_lF"
            }
          ],
          "key.typename": "MaskedFill.Type",
          "key.typeusr": "$s4main10MaskedFillCmD",
          "key.usr": "s:4main10MaskedFillC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Dropout : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 6862
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 6855
            }
          ],
          "key.bodylength": 443,
          "key.bodyoffset": 6890,
          "key.doc.column": 20,
          "key.doc.comment": "The dropout model.",
          "key.doc.declaration": "public final class Dropout : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"249\" column=\"20\"><Name>Dropout</Name><USR>s:4main7DropoutC</USR><Declaration>public final class Dropout : Model</Declaration><CommentParts><Abstract><Para>The dropout model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 249,
          "key.doc.name": "Dropout",
          "key.doc.type": "Class",
          "key.doclength": 23,
          "key.docoffset": 6832,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 6883
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Dropout</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 466,
          "key.name": "Dropout",
          "key.namelength": 7,
          "key.nameoffset": 6874,
          "key.offset": 6868,
          "key.parsed_declaration": "public final class Dropout: Model",
          "key.parsed_scope.end": 264,
          "key.parsed_scope.start": 249,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 6893
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 6932,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 6902,
              "key.offset": 6902,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 252,
              "key.parsed_scope.start": 250,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7DropoutC11probability8entirety4nameACSf_SbSStcfc\">init(probability:entirety:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Dropout.Type) -> (OpaquePointer) -> Dropout",
              "key.typeusr": "$sy4main7DropoutCs13OpaquePointerVcD",
              "key.usr": "s:4main7DropoutCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(probability: <Type usr=\"s:Sf\">Float</Type>, entirety: <Type usr=\"s:Sb\">Bool</Type> = false, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 6962
                }
              ],
              "key.bodylength": 73,
              "key.bodyoffset": 7038,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>probability</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>entirety</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 143,
              "key.name": "init(probability:entirety:name:)",
              "key.namelength": 67,
              "key.nameoffset": 6969,
              "key.offset": 6969,
              "key.parsed_declaration": "public init(probability: Float, entirety: Bool = false, name: String = \"\")",
              "key.parsed_scope.end": 256,
              "key.parsed_scope.start": 254,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7DropoutCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Dropout.Type) -> (Float, Bool, String) -> Dropout",
              "key.typeusr": "$s11probability8entirety4name4main7DropoutCSf_SbSStcD",
              "key.usr": "s:4main7DropoutC11probability8entirety4nameACSf_SbSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7116
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 7235,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 7128,
              "key.offset": 7123,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 263,
              "key.parsed_scope.start": 258,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 7146
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 7143,
                  "key.offset": 7143,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 258,
                  "key.parsed_scope.start": 258,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 7244,
                  "key.offset": 7240,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 261,
                  "key.parsed_scope.start": 261,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Dropout) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7DropoutC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Dropout.Type",
          "key.typeusr": "$s4main7DropoutCmD",
          "key.usr": "s:4main7DropoutC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Scalmul : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 7384
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 7377
            }
          ],
          "key.bodylength": 386,
          "key.bodyoffset": 7412,
          "key.doc.column": 20,
          "key.doc.comment": "Multiply all values with a constant.",
          "key.doc.declaration": "public final class Scalmul : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"267\" column=\"20\"><Name>Scalmul</Name><USR>s:4main7ScalmulC</USR><Declaration>public final class Scalmul : Model</Declaration><CommentParts><Abstract><Para>Multiply all values with a constant.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 267,
          "key.doc.name": "Scalmul",
          "key.doc.type": "Class",
          "key.doclength": 41,
          "key.docoffset": 7336,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 7405
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Scalmul</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 409,
          "key.name": "Scalmul",
          "key.namelength": 7,
          "key.nameoffset": 7396,
          "key.offset": 7390,
          "key.parsed_declaration": "public final class Scalmul: Model",
          "key.parsed_scope.end": 282,
          "key.parsed_scope.start": 267,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 7415
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 7454,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 7424,
              "key.offset": 7424,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 270,
              "key.parsed_scope.start": 268,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7ScalmulC_4nameACSf_SStcfc\">init(_: Float, name: String = &quot;&quot;)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_: [Model], name: String = &quot;&quot;)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Scalmul.Type) -> (OpaquePointer) -> Scalmul",
              "key.typeusr": "$sy4main7ScalmulCs13OpaquePointerVcD",
              "key.usr": "s:4main7ScalmulCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ a: <Type usr=\"s:Sf\">Float</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7484
                }
              ],
              "key.bodylength": 48,
              "key.bodyoffset": 7528,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 86,
              "key.name": "init(_:name:)",
              "key.namelength": 35,
              "key.nameoffset": 7491,
              "key.offset": 7491,
              "key.parsed_declaration": "public init(_ a: Float, name: String = \"\")",
              "key.parsed_scope.end": 274,
              "key.parsed_scope.start": 272,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7ScalmulCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_: [Model], name: String = &quot;&quot;)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Scalmul.Type) -> (Float, String) -> Scalmul",
              "key.typeusr": "$s_4name4main7ScalmulCSf_SStcD",
              "key.usr": "s:4main7ScalmulC_4nameACSf_SStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7581
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 7700,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 7593,
              "key.offset": 7588,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 281,
              "key.parsed_scope.start": 276,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 7611
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 7608,
                  "key.offset": 7608,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 276,
                  "key.parsed_scope.start": 276,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 7709,
                  "key.offset": 7705,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 279,
                  "key.parsed_scope.start": 279,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Scalmul) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7ScalmulC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Scalmul.Type",
          "key.typeusr": "$s4main7ScalmulCmD",
          "key.usr": "s:4main7ScalmulC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class BatchNorm : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 7839
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 7832
            }
          ],
          "key.bodylength": 423,
          "key.bodyoffset": 7869,
          "key.doc.column": 20,
          "key.doc.comment": "Batch normalization model.",
          "key.doc.declaration": "public final class BatchNorm : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"285\" column=\"20\"><Name>BatchNorm</Name><USR>s:4main9BatchNormC</USR><Declaration>public final class BatchNorm : Model</Declaration><CommentParts><Abstract><Para>Batch normalization model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 285,
          "key.doc.name": "BatchNorm",
          "key.doc.type": "Class",
          "key.doclength": 31,
          "key.docoffset": 7801,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 7862
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BatchNorm</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 448,
          "key.name": "BatchNorm",
          "key.namelength": 9,
          "key.nameoffset": 7851,
          "key.offset": 7845,
          "key.parsed_declaration": "public final class BatchNorm: Model",
          "key.parsed_scope.end": 300,
          "key.parsed_scope.start": 285,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 7872
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 7911,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 7881,
              "key.offset": 7881,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 288,
              "key.parsed_scope.start": 286,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9BatchNormC8momentum7epsilon4nameACSf_SfSStcfc\">init(momentum:epsilon:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(BatchNorm.Type) -> (OpaquePointer) -> BatchNorm",
              "key.typeusr": "$sy4main9BatchNormCs13OpaquePointerVcD",
              "key.usr": "s:4main9BatchNormCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(momentum: <Type usr=\"s:Sf\">Float</Type>, epsilon: <Type usr=\"s:Sf\">Float</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 7941
                }
              ],
              "key.bodylength": 64,
              "key.bodyoffset": 8006,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>momentum</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>epsilon</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 123,
              "key.name": "init(momentum:epsilon:name:)",
              "key.namelength": 56,
              "key.nameoffset": 7948,
              "key.offset": 7948,
              "key.parsed_declaration": "public init(momentum: Float, epsilon: Float, name: String = \"\")",
              "key.parsed_scope.end": 292,
              "key.parsed_scope.start": 290,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9BatchNormCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(BatchNorm.Type) -> (Float, Float, String) -> BatchNorm",
              "key.typeusr": "$s8momentum7epsilon4name4main9BatchNormCSf_SfSStcD",
              "key.usr": "s:4main9BatchNormC8momentum7epsilon4nameACSf_SfSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8075
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 8194,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 8087,
              "key.offset": 8082,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 299,
              "key.parsed_scope.start": 294,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 8105
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 8102,
                  "key.offset": 8102,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 294,
                  "key.parsed_scope.start": 294,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 8203,
                  "key.offset": 8199,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 297,
                  "key.parsed_scope.start": 297,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (BatchNorm) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main9BatchNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "BatchNorm.Type",
          "key.typeusr": "$s4main9BatchNormCmD",
          "key.usr": "s:4main9BatchNormC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class LayerNorm : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 8333
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 8326
            }
          ],
          "key.bodylength": 485,
          "key.bodyoffset": 8363,
          "key.doc.column": 20,
          "key.doc.comment": "Layer normalization model.",
          "key.doc.declaration": "public final class LayerNorm : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"303\" column=\"20\"><Name>LayerNorm</Name><USR>s:4main9LayerNormC</USR><Declaration>public final class LayerNorm : Model</Declaration><CommentParts><Abstract><Para>Layer normalization model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 303,
          "key.doc.name": "LayerNorm",
          "key.doc.type": "Class",
          "key.doclength": 31,
          "key.docoffset": 8295,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 8356
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>LayerNorm</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 510,
          "key.name": "LayerNorm",
          "key.namelength": 9,
          "key.nameoffset": 8345,
          "key.offset": 8339,
          "key.parsed_declaration": "public final class LayerNorm: Model",
          "key.parsed_scope.end": 319,
          "key.parsed_scope.start": 303,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 8366
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 8405,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 8375,
              "key.offset": 8375,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 306,
              "key.parsed_scope.start": 304,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9LayerNormC7epsilon4axis4nameACSf_SaySiGSStcfc\">init(epsilon:axis:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(LayerNorm.Type) -> (OpaquePointer) -> LayerNorm",
              "key.typeusr": "$sy4main9LayerNormCs13OpaquePointerVcD",
              "key.usr": "s:4main9LayerNormCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(epsilon: <Type usr=\"s:Sf\">Float</Type>, axis: [<Type usr=\"s:Si\">Int</Type>], name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8435
                }
              ],
              "key.bodylength": 130,
              "key.bodyoffset": 8496,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>epsilon</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 185,
              "key.name": "init(epsilon:axis:name:)",
              "key.namelength": 52,
              "key.nameoffset": 8442,
              "key.offset": 8442,
              "key.parsed_declaration": "public init(epsilon: Float, axis: [Int], name: String = \"\")",
              "key.parsed_scope.end": 311,
              "key.parsed_scope.start": 308,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9LayerNormCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let axis32: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>axis32</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 44,
                  "key.name": "axis32",
                  "key.namelength": 6,
                  "key.nameoffset": 8505,
                  "key.offset": 8501,
                  "key.parsed_declaration": "let axis32: [Int32] = axis.map { Int32($0) }",
                  "key.parsed_scope.end": 309,
                  "key.parsed_scope.start": 309,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main9LayerNormC7epsilon4axis4nameACSf_SaySiGSStcfc6axis32L_Says5Int32VGvp"
                }
              ],
              "key.typename": "(LayerNorm.Type) -> (Float, [Int], String) -> LayerNorm",
              "key.typeusr": "$s7epsilon4axis4name4main9LayerNormCSf_SaySiGSStcD",
              "key.usr": "s:4main9LayerNormC7epsilon4axis4nameACSf_SaySiGSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8631
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 8750,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 8643,
              "key.offset": 8638,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 318,
              "key.parsed_scope.start": 313,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 8661
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 8658,
                  "key.offset": 8658,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 313,
                  "key.parsed_scope.start": 313,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 8759,
                  "key.offset": 8755,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 316,
                  "key.parsed_scope.start": 316,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (LayerNorm) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main9LayerNormC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "LayerNorm.Type",
          "key.typeusr": "$s4main9LayerNormCmD",
          "key.usr": "s:4main9LayerNormC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Flatten : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 8917
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 8910
            }
          ],
          "key.bodylength": 368,
          "key.bodyoffset": 8945,
          "key.doc.column": 20,
          "key.doc.comment": "Make the input tensor to be 1-D tensor (respecting N).",
          "key.doc.declaration": "public final class Flatten : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"322\" column=\"20\"><Name>Flatten</Name><USR>s:4main7FlattenC</USR><Declaration>public final class Flatten : Model</Declaration><CommentParts><Abstract><Para>Make the input tensor to be 1-D tensor (respecting N).</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 322,
          "key.doc.name": "Flatten",
          "key.doc.type": "Class",
          "key.doclength": 59,
          "key.docoffset": 8851,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 8938
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Flatten</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 391,
          "key.name": "Flatten",
          "key.namelength": 7,
          "key.nameoffset": 8929,
          "key.offset": 8923,
          "key.parsed_declaration": "public final class Flatten: Model",
          "key.parsed_scope.end": 337,
          "key.parsed_scope.start": 322,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 8948
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 8987,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 8957,
              "key.offset": 8957,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 325,
              "key.parsed_scope.start": 323,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7FlattenC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Flatten.Type) -> (OpaquePointer) -> Flatten",
              "key.typeusr": "$sy4main7FlattenCs13OpaquePointerVcD",
              "key.usr": "s:4main7FlattenCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9017
                }
              ],
              "key.bodylength": 42,
              "key.bodyoffset": 9049,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 68,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 9024,
              "key.offset": 9024,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 329,
              "key.parsed_scope.start": 327,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7FlattenCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Flatten.Type) -> (String) -> Flatten",
              "key.typeusr": "$s4name4main7FlattenCSS_tcD",
              "key.usr": "s:4main7FlattenC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9096
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 9215,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 9108,
              "key.offset": 9103,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 336,
              "key.parsed_scope.start": 331,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 9126
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 9123,
                  "key.offset": 9123,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 331,
                  "key.parsed_scope.start": 331,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 9224,
                  "key.offset": 9220,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 334,
                  "key.parsed_scope.start": 334,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Flatten) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7FlattenC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Flatten.Type",
          "key.typeusr": "$s4main7FlattenCmD",
          "key.usr": "s:4main7FlattenC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Convolution : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 9346
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 9339
            }
          ],
          "key.bodylength": 604,
          "key.bodyoffset": 9378,
          "key.doc.column": 20,
          "key.doc.comment": "Convolution model.",
          "key.doc.declaration": "public final class Convolution : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"340\" column=\"20\"><Name>Convolution</Name><USR>s:4main11ConvolutionC</USR><Declaration>public final class Convolution : Model</Declaration><CommentParts><Abstract><Para>Convolution model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 340,
          "key.doc.name": "Convolution",
          "key.doc.type": "Class",
          "key.doclength": 23,
          "key.docoffset": 9316,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 9371
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Convolution</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 631,
          "key.name": "Convolution",
          "key.namelength": 11,
          "key.nameoffset": 9358,
          "key.offset": 9352,
          "key.parsed_declaration": "public final class Convolution: Model",
          "key.parsed_scope.end": 361,
          "key.parsed_scope.start": 340,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 9381
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 9420,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 9390,
              "key.offset": 9390,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 343,
              "key.parsed_scope.start": 341,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main11ConvolutionC6groups7filters10filterSize6noBias4hint4nameACSi_SiSaySiGSbAA4HintVSStcfc\">init(groups:filters:filterSize:noBias:hint:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Convolution.Type) -> (OpaquePointer) -> Convolution",
              "key.typeusr": "$sy4main11ConvolutionCs13OpaquePointerVcD",
              "key.usr": "s:4main11ConvolutionCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(groups: <Type usr=\"s:Si\">Int</Type>, filters: <Type usr=\"s:Si\">Int</Type>, filterSize: [<Type usr=\"s:Si\">Int</Type>], noBias: <Type usr=\"s:Sb\">Bool</Type> = false, hint: <Type usr=\"s:4main4HintV\">Hint</Type> = Hint(), name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9450
                }
              ],
              "key.bodylength": 177,
              "key.bodyoffset": 9583,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>groups</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>filters</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>filterSize</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>noBias</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main4HintV\">Hint</ref.struct></decl.var.parameter.type> = Hint()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 304,
              "key.name": "init(groups:filters:filterSize:noBias:hint:name:)",
              "key.namelength": 124,
              "key.nameoffset": 9457,
              "key.offset": 9457,
              "key.parsed_declaration": "public init(\n  groups: Int, filters: Int, filterSize: [Int], noBias: Bool = false, hint: Hint = Hint(),\n  name: String = \"\"\n)",
              "key.parsed_scope.end": 353,
              "key.parsed_scope.start": 345,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main11ConvolutionCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let kdim: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kdim</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 41,
                  "key.name": "kdim",
                  "key.namelength": 4,
                  "key.nameoffset": 9592,
                  "key.offset": 9588,
                  "key.parsed_declaration": "let kdim = toCDimensionsArray(filterSize)",
                  "key.parsed_scope.end": 349,
                  "key.parsed_scope.start": 349,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main11ConvolutionC6groups7filters10filterSize6noBias4hint4nameACSi_SiSaySiGSbAA4HintVSStcfc4kdimL_Says5Int32VGvp"
                }
              ],
              "key.typename": "(Convolution.Type) -> (Int, Int, [Int], Bool, Hint, String) -> Convolution",
              "key.typeusr": "$s6groups7filters10filterSize6noBias4hint4name4main11ConvolutionCSi_SiSaySiGSbAG4HintVSStcD",
              "key.usr": "s:4main11ConvolutionC6groups7filters10filterSize6noBias4hint4nameACSi_SiSaySiGSbAA4HintVSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 9765
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 9884,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 9777,
              "key.offset": 9772,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 360,
              "key.parsed_scope.start": 355,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 9795
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 9792,
                  "key.offset": 9792,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 355,
                  "key.parsed_scope.start": 355,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 9893,
                  "key.offset": 9889,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 358,
                  "key.parsed_scope.start": 358,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Convolution) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main11ConvolutionC14callAsFunction_13streamContextxx_AA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Convolution.Type",
          "key.typeusr": "$s4main11ConvolutionCmD",
          "key.usr": "s:4main11ConvolutionC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class MaxPool : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 10015
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 10008
            }
          ],
          "key.bodylength": 482,
          "key.bodyoffset": 10043,
          "key.doc.column": 20,
          "key.doc.comment": "max pooling model.",
          "key.doc.declaration": "public final class MaxPool : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"364\" column=\"20\"><Name>MaxPool</Name><USR>s:4main7MaxPoolC</USR><Declaration>public final class MaxPool : Model</Declaration><CommentParts><Abstract><Para>max pooling model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 364,
          "key.doc.name": "MaxPool",
          "key.doc.type": "Class",
          "key.doclength": 23,
          "key.docoffset": 9985,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 10036
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MaxPool</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 505,
          "key.name": "MaxPool",
          "key.namelength": 7,
          "key.nameoffset": 10027,
          "key.offset": 10021,
          "key.parsed_declaration": "public final class MaxPool: Model",
          "key.parsed_scope.end": 380,
          "key.parsed_scope.start": 364,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 10046
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 10085,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 10055,
              "key.offset": 10055,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 367,
              "key.parsed_scope.start": 365,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7MaxPoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc\">init(filterSize:hint:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(MaxPool.Type) -> (OpaquePointer) -> MaxPool",
              "key.typeusr": "$sy4main7MaxPoolCs13OpaquePointerVcD",
              "key.usr": "s:4main7MaxPoolCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(filterSize: [<Type usr=\"s:Si\">Int</Type>] = [], hint: <Type usr=\"s:4main4HintV\">Hint</Type> = Hint(), name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10115
                }
              ],
              "key.bodylength": 111,
              "key.bodyoffset": 10192,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>filterSize</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type> = []</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main4HintV\">Hint</ref.struct></decl.var.parameter.type> = Hint()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 182,
              "key.name": "init(filterSize:hint:name:)",
              "key.namelength": 68,
              "key.nameoffset": 10122,
              "key.offset": 10122,
              "key.parsed_declaration": "public init(filterSize: [Int] = [], hint: Hint = Hint(), name: String = \"\")",
              "key.parsed_scope.end": 372,
              "key.parsed_scope.start": 369,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main7MaxPoolCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let kdim: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kdim</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 41,
                  "key.name": "kdim",
                  "key.namelength": 4,
                  "key.nameoffset": 10201,
                  "key.offset": 10197,
                  "key.parsed_declaration": "let kdim = toCDimensionsArray(filterSize)",
                  "key.parsed_scope.end": 370,
                  "key.parsed_scope.start": 370,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main7MaxPoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc4kdimL_Says5Int32VGvp"
                }
              ],
              "key.typename": "(MaxPool.Type) -> ([Int], Hint, String) -> MaxPool",
              "key.typeusr": "$s10filterSize4hint4name4main7MaxPoolCSaySiG_AD4HintVSStcD",
              "key.usr": "s:4main7MaxPoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10308
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 10427,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 10320,
              "key.offset": 10315,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 379,
              "key.parsed_scope.start": 374,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 10338
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 10335,
                  "key.offset": 10335,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 374,
                  "key.parsed_scope.start": 374,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 10436,
                  "key.offset": 10432,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 377,
                  "key.parsed_scope.start": 377,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (MaxPool) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main7MaxPoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "MaxPool.Type",
          "key.typeusr": "$s4main7MaxPoolCmD",
          "key.usr": "s:4main7MaxPoolC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class AveragePool : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 10562
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 10555
            }
          ],
          "key.bodylength": 486,
          "key.bodyoffset": 10594,
          "key.doc.column": 20,
          "key.doc.comment": "average pooling model.",
          "key.doc.declaration": "public final class AveragePool : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"383\" column=\"20\"><Name>AveragePool</Name><USR>s:4main11AveragePoolC</USR><Declaration>public final class AveragePool : Model</Declaration><CommentParts><Abstract><Para>average pooling model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 383,
          "key.doc.name": "AveragePool",
          "key.doc.type": "Class",
          "key.doclength": 27,
          "key.docoffset": 10528,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 10587
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AveragePool</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 513,
          "key.name": "AveragePool",
          "key.namelength": 11,
          "key.nameoffset": 10574,
          "key.offset": 10568,
          "key.parsed_declaration": "public final class AveragePool: Model",
          "key.parsed_scope.end": 399,
          "key.parsed_scope.start": 383,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 10597
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 10636,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 10606,
              "key.offset": 10606,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 386,
              "key.parsed_scope.start": 384,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main11AveragePoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc\">init(filterSize:hint:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(AveragePool.Type) -> (OpaquePointer) -> AveragePool",
              "key.typeusr": "$sy4main11AveragePoolCs13OpaquePointerVcD",
              "key.usr": "s:4main11AveragePoolCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(filterSize: [<Type usr=\"s:Si\">Int</Type>] = [], hint: <Type usr=\"s:4main4HintV\">Hint</Type> = Hint(), name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10666
                }
              ],
              "key.bodylength": 115,
              "key.bodyoffset": 10743,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>filterSize</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type> = []</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hint</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main4HintV\">Hint</ref.struct></decl.var.parameter.type> = Hint()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 186,
              "key.name": "init(filterSize:hint:name:)",
              "key.namelength": 68,
              "key.nameoffset": 10673,
              "key.offset": 10673,
              "key.parsed_declaration": "public init(filterSize: [Int] = [], hint: Hint = Hint(), name: String = \"\")",
              "key.parsed_scope.end": 391,
              "key.parsed_scope.start": 388,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main11AveragePoolCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let kdim: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kdim</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 41,
                  "key.name": "kdim",
                  "key.namelength": 4,
                  "key.nameoffset": 10752,
                  "key.offset": 10748,
                  "key.parsed_declaration": "let kdim = toCDimensionsArray(filterSize)",
                  "key.parsed_scope.end": 389,
                  "key.parsed_scope.start": 389,
                  "key.typename": "[Int32]",
                  "key.typeusr": "$sSays5Int32VGD",
                  "key.usr": "s:4main11AveragePoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc4kdimL_Says5Int32VGvp"
                }
              ],
              "key.typename": "(AveragePool.Type) -> ([Int], Hint, String) -> AveragePool",
              "key.typeusr": "$s10filterSize4hint4name4main11AveragePoolCSaySiG_AD4HintVSStcD",
              "key.usr": "s:4main11AveragePoolC10filterSize4hint4nameACSaySiG_AA4HintVSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 10863
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 10982,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 10875,
              "key.offset": 10870,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 398,
              "key.parsed_scope.start": 393,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 10893
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 10890,
                  "key.offset": 10890,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 393,
                  "key.parsed_scope.start": 393,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 10991,
                  "key.offset": 10987,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 396,
                  "key.parsed_scope.start": 396,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (AveragePool) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main11AveragePoolC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "AveragePool.Type",
          "key.typeusr": "$s4main11AveragePoolCmD",
          "key.usr": "s:4main11AveragePoolC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class ReduceSum : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 11112
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 11105
            }
          ],
          "key.bodylength": 460,
          "key.bodyoffset": 11142,
          "key.doc.column": 20,
          "key.doc.comment": "reduce sum model.",
          "key.doc.declaration": "public final class ReduceSum : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"402\" column=\"20\"><Name>ReduceSum</Name><USR>s:4main9ReduceSumC</USR><Declaration>public final class ReduceSum : Model</Declaration><CommentParts><Abstract><Para>reduce sum model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 402,
          "key.doc.name": "ReduceSum",
          "key.doc.type": "Class",
          "key.doclength": 22,
          "key.docoffset": 11083,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 11135
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ReduceSum</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 485,
          "key.name": "ReduceSum",
          "key.namelength": 9,
          "key.nameoffset": 11124,
          "key.offset": 11118,
          "key.parsed_declaration": "public final class ReduceSum: Model",
          "key.parsed_scope.end": 418,
          "key.parsed_scope.start": 402,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 11145
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 11184,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 11154,
              "key.offset": 11154,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 405,
              "key.parsed_scope.start": 403,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9ReduceSumC4axis4nameACSaySiG_SStcfc\">init(axis:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(ReduceSum.Type) -> (OpaquePointer) -> ReduceSum",
              "key.typeusr": "$sy4main9ReduceSumCs13OpaquePointerVcD",
              "key.usr": "s:4main9ReduceSumCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(axis: [<Type usr=\"s:Si\">Int</Type>], name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11214
                }
              ],
              "key.bodylength": 121,
              "key.bodyoffset": 11259,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 160,
              "key.name": "init(axis:name:)",
              "key.namelength": 36,
              "key.nameoffset": 11221,
              "key.offset": 11221,
              "key.parsed_declaration": "public init(axis: [Int], name: String = \"\")",
              "key.parsed_scope.end": 410,
              "key.parsed_scope.start": 407,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9ReduceSumCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(ReduceSum.Type) -> ([Int], String) -> ReduceSum",
              "key.typeusr": "$s4axis4name4main9ReduceSumCSaySiG_SStcD",
              "key.usr": "s:4main9ReduceSumC4axis4nameACSaySiG_SStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11385
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 11504,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 11397,
              "key.offset": 11392,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 417,
              "key.parsed_scope.start": 412,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 11415
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 11412,
                  "key.offset": 11412,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 412,
                  "key.parsed_scope.start": 412,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 11513,
                  "key.offset": 11509,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 415,
                  "key.parsed_scope.start": 415,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (ReduceSum) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main9ReduceSumC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "ReduceSum.Type",
          "key.typeusr": "$s4main9ReduceSumCmD",
          "key.usr": "s:4main9ReduceSumC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class ReduceMax : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 11634
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 11627
            }
          ],
          "key.bodylength": 460,
          "key.bodyoffset": 11664,
          "key.doc.column": 20,
          "key.doc.comment": "reduce max model.",
          "key.doc.declaration": "public final class ReduceMax : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"421\" column=\"20\"><Name>ReduceMax</Name><USR>s:4main9ReduceMaxC</USR><Declaration>public final class ReduceMax : Model</Declaration><CommentParts><Abstract><Para>reduce max model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 421,
          "key.doc.name": "ReduceMax",
          "key.doc.type": "Class",
          "key.doclength": 22,
          "key.docoffset": 11605,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 11657
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ReduceMax</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 485,
          "key.name": "ReduceMax",
          "key.namelength": 9,
          "key.nameoffset": 11646,
          "key.offset": 11640,
          "key.parsed_declaration": "public final class ReduceMax: Model",
          "key.parsed_scope.end": 437,
          "key.parsed_scope.start": 421,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 11667
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 11706,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 11676,
              "key.offset": 11676,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 424,
              "key.parsed_scope.start": 422,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9ReduceMaxC4axis4nameACSaySiG_SStcfc\">init(axis:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(ReduceMax.Type) -> (OpaquePointer) -> ReduceMax",
              "key.typeusr": "$sy4main9ReduceMaxCs13OpaquePointerVcD",
              "key.usr": "s:4main9ReduceMaxCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(axis: [<Type usr=\"s:Si\">Int</Type>], name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11736
                }
              ],
              "key.bodylength": 121,
              "key.bodyoffset": 11781,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 160,
              "key.name": "init(axis:name:)",
              "key.namelength": 36,
              "key.nameoffset": 11743,
              "key.offset": 11743,
              "key.parsed_declaration": "public init(axis: [Int], name: String = \"\")",
              "key.parsed_scope.end": 429,
              "key.parsed_scope.start": 426,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9ReduceMaxCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(ReduceMax.Type) -> ([Int], String) -> ReduceMax",
              "key.typeusr": "$s4axis4name4main9ReduceMaxCSaySiG_SStcD",
              "key.usr": "s:4main9ReduceMaxC4axis4nameACSaySiG_SStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ input: <Type usr=\"s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11907
                }
              ],
              "key.bodylength": 96,
              "key.bodyoffset": 12026,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "callAsFunction(_:streamContext:)",
              "key.namelength": 100,
              "key.nameoffset": 11919,
              "key.offset": 11914,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ input: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 436,
              "key.parsed_scope.start": 431,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 11937
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 11934,
                  "key.offset": 11934,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 431,
                  "key.parsed_scope.start": 431,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 63,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 12035,
                  "key.offset": 12031,
                  "key.parsed_declaration": "let outputs = self(inputs: input, streamContext: streamContext)",
                  "key.parsed_scope.end": 434,
                  "key.parsed_scope.start": 434,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyL0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (ReduceMax) -> (T, StreamContext?) -> T",
              "key.typeusr": "$s_13streamContextxx_4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main9ReduceMaxC14callAsFunction_13streamContextxx_AA06StreamH0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "ReduceMax.Type",
          "key.typeusr": "$s4main9ReduceMaxCmD",
          "key.usr": "s:4main9ReduceMaxC"
        },
        {
          "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main5ModelC\">Model</Type>.IO</Declaration>",
          "key.bodylength": 204,
          "key.bodyoffset": 12147,
          "key.doc.column": 16,
          "key.doc.declaration": "public class main.Model.IO",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"11\" column=\"16\"><Name>IO</Name><USR>s:4main5ModelC2IOC</USR><Declaration>public class main.Model.IO</Declaration><CommentParts><Abstract><Para>A IO class represent the abstract input / output for a model. It can correspond to one or more tensors when the model is materialized.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 11,
          "key.doc.name": "IO",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>IO</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 225,
          "key.name": "Model.IO",
          "key.namelength": 8,
          "key.nameoffset": 12137,
          "key.offset": 12127,
          "key.parsed_declaration": "extension Model.IO",
          "key.parsed_scope.end": 448,
          "key.parsed_scope.start": 439,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reduced(_ op: <Type usr=\"s:4main8ReduceOpO\">ReduceOp</Type>, axis: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12150
                }
              ],
              "key.bodylength": 137,
              "key.bodyoffset": 12212,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reduced</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>op</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main8ReduceOpO\">ReduceOp</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>axis</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 193,
              "key.name": "reduced(_:axis:)",
              "key.namelength": 36,
              "key.nameoffset": 12162,
              "key.offset": 12157,
              "key.parsed_declaration": "public func reduced(_ op: ReduceOp, axis: [Int]) -> Model.IO",
              "key.parsed_scope.end": 447,
              "key.parsed_scope.start": 440,
              "key.substructure": [],
              "key.typename": "(Model.IO) -> (ReduceOp, [Int]) -> Model.IO",
              "key.typeusr": "$s_4axis4main5ModelC2IOCAB8ReduceOpO_SaySiGtcD",
              "key.usr": "s:4main5ModelC2IOC7reduced_4axisAeA8ReduceOpO_SaySiGtF"
            }
          ],
          "key.typename": "Model.IO.Type",
          "key.typeusr": "$s4main5ModelC2IOCmD",
          "key.usr": "s:4main5ModelC2IOC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Min : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 12376
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 12369
            }
          ],
          "key.bodylength": 381,
          "key.bodyoffset": 12400,
          "key.doc.column": 20,
          "key.doc.comment": "min model.",
          "key.doc.declaration": "public final class Min : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"451\" column=\"20\"><Name>Min</Name><USR>s:4main3MinC</USR><Declaration>public final class Min : Model</Declaration><CommentParts><Abstract><Para>min model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 451,
          "key.doc.name": "Min",
          "key.doc.type": "Class",
          "key.doclength": 15,
          "key.docoffset": 12354,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 12393
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Min</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 400,
          "key.name": "Min",
          "key.namelength": 3,
          "key.nameoffset": 12388,
          "key.offset": 12382,
          "key.parsed_declaration": "public final class Min: Model",
          "key.parsed_scope.end": 466,
          "key.parsed_scope.start": 451,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 12403
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 12442,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 12412,
              "key.offset": 12412,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 454,
              "key.parsed_scope.start": 452,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MinC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Min.Type) -> (OpaquePointer) -> Min",
              "key.typeusr": "$sy4main3MinCs13OpaquePointerVcD",
              "key.usr": "s:4main3MinCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12472
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 12504,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 64,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 12479,
              "key.offset": 12479,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 458,
              "key.parsed_scope.start": 456,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MinCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Min.Type) -> (String) -> Min",
              "key.typeusr": "$s4name4main3MinCSS_tcD",
              "key.usr": "s:4main3MinC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ left: <Type usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12547
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 12677,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 226,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 111,
              "key.nameoffset": 12559,
              "key.offset": 12554,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 465,
              "key.parsed_scope.start": 460,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 12577
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 12574,
                  "key.offset": 12574,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 460,
                  "key.parsed_scope.start": 460,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 12686,
                  "key.offset": 12682,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 463,
                  "key.parsed_scope.start": 463,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Min) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main3MinC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Min.Type",
          "key.typeusr": "$s4main3MinCmD",
          "key.usr": "s:4main3MinC"
        },
        {
          "key.annotated_decl": "<Declaration>public enum Functional</Declaration>",
          "key.bodylength": 111,
          "key.bodyoffset": 12806,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Functional</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 134,
          "key.name": "Functional",
          "key.namelength": 10,
          "key.nameoffset": 12794,
          "key.offset": 12784,
          "key.parsed_declaration": "extension Functional",
          "key.parsed_scope.end": 472,
          "key.parsed_scope.start": 468,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func min(_ left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, _ right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12809
                }
              ],
              "key.bodylength": 33,
              "key.bodyoffset": 12882,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>min</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 100,
              "key.name": "min(_:_:)",
              "key.namelength": 40,
              "key.nameoffset": 12828,
              "key.offset": 12816,
              "key.parsed_declaration": "public static func min(_ left: Model.IO, _ right: Model.IO) -> Model.IO",
              "key.parsed_scope.end": 471,
              "key.parsed_scope.start": 469,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO3min__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ\">min(_:_:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Functional.Type) -> (Model.IO, Model.IO) -> Model.IO",
              "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
              "key.usr": "s:4main10FunctionalO3minyAA5ModelC2IOCAH_AHtFZ"
            }
          ],
          "key.typename": "Functional.Type",
          "key.typeusr": "$s4main10FunctionalOmD",
          "key.usr": "s:4main10FunctionalO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Max : <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 12942
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 12935
            }
          ],
          "key.bodylength": 381,
          "key.bodyoffset": 12966,
          "key.doc.column": 20,
          "key.doc.comment": "max model.",
          "key.doc.declaration": "public final class Max : Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift\" line=\"475\" column=\"20\"><Name>Max</Name><USR>s:4main3MaxC</USR><Declaration>public final class Max : Model</Declaration><CommentParts><Abstract><Para>max model.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 475,
          "key.doc.name": "Max",
          "key.doc.type": "Class",
          "key.doclength": 15,
          "key.docoffset": 12920,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 5,
              "key.offset": 12959
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Max</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 400,
          "key.name": "Max",
          "key.namelength": 3,
          "key.nameoffset": 12954,
          "key.offset": 12948,
          "key.parsed_declaration": "public final class Max: Model",
          "key.parsed_scope.end": 490,
          "key.parsed_scope.start": 475,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 12969
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 13008,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 56,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 12978,
              "key.offset": 12978,
              "key.overrides": [
                {
                  "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
                }
              ],
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 478,
              "key.parsed_scope.start": 476,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MaxC4nameACSS_tcfc\">init(name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Max.Type) -> (OpaquePointer) -> Max",
              "key.typeusr": "$sy4main3MaxCs13OpaquePointerVcD",
              "key.usr": "s:4main3MaxCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13038
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 13070,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 64,
              "key.name": "init(name:)",
              "key.namelength": 23,
              "key.nameoffset": 13045,
              "key.offset": 13045,
              "key.parsed_declaration": "public init(name: String = \"\")",
              "key.parsed_scope.end": 482,
              "key.parsed_scope.start": 480,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main3MaxCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Max.Type) -> (String) -> Max",
              "key.typeusr": "$s4name4main3MaxCSS_tcD",
              "key.usr": "s:4main3MaxC4nameACSS_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction&lt;T&gt;(_ left: <Type usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, _ right: <Type usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13113
                }
              ],
              "key.bodylength": 102,
              "key.bodyoffset": 13243,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>&lt;<decl.generic_type_param usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 226,
              "key.name": "callAsFunction(_:_:streamContext:)",
              "key.namelength": 111,
              "key.nameoffset": 13125,
              "key.offset": 13120,
              "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup>(\n  _ left: T, _ right: T, streamContext: StreamContext? = nil\n) -> T",
              "key.parsed_scope.end": 489,
              "key.parsed_scope.start": 484,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF\">callAsFunction(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 24,
                      "key.offset": 13143
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "DynamicGraph.TensorGroup"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 27,
                  "key.name": "T",
                  "key.namelength": 1,
                  "key.nameoffset": 13140,
                  "key.offset": 13140,
                  "key.parsed_declaration": "public func callAsFunction<T: DynamicGraph.TensorGroup",
                  "key.parsed_scope.end": 484,
                  "key.parsed_scope.start": 484,
                  "key.typename": "T.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let outputs: [T.AnyTensor]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputs</decl.name>: <decl.var.type>[T.AnyTensor]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "outputs",
                  "key.namelength": 7,
                  "key.nameoffset": 13252,
                  "key.offset": 13248,
                  "key.parsed_declaration": "let outputs = self(inputs: left, right, streamContext: streamContext)",
                  "key.parsed_scope.end": 487,
                  "key.parsed_scope.start": 487,
                  "key.typename": "[T.AnyTensor]",
                  "key.typeusr": "$sSay9AnyTensor4main013DynamicGraph_aB5GroupPQzGD",
                  "key.usr": "s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF7outputsL_Say03AnyK0QzGvp"
                }
              ],
              "key.typename": "<T where T : DynamicGraph_TensorGroup> (Max) -> (T, T, StreamContext?) -> T",
              "key.typeusr": "$s__13streamContextxx_x4main06StreamB0CSgtcAB24DynamicGraph_TensorGroupRzluD",
              "key.usr": "s:4main3MaxC14callAsFunction__13streamContextxx_xAA06StreamG0CSgtAA24DynamicGraph_TensorGroupRzlF"
            }
          ],
          "key.typename": "Max.Type",
          "key.typeusr": "$s4main3MaxCmD",
          "key.usr": "s:4main3MaxC"
        },
        {
          "key.annotated_decl": "<Declaration>public enum Functional</Declaration>",
          "key.bodylength": 111,
          "key.bodyoffset": 13372,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Functional.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Functional</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 134,
          "key.name": "Functional",
          "key.namelength": 10,
          "key.nameoffset": 13360,
          "key.offset": 13350,
          "key.parsed_declaration": "extension Functional",
          "key.parsed_scope.end": 496,
          "key.parsed_scope.start": 492,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func max(_ left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, _ right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13375
                }
              ],
              "key.bodylength": 33,
              "key.bodyoffset": 13448,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>max</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 100,
              "key.name": "max(_:_:)",
              "key.namelength": 40,
              "key.nameoffset": 13394,
              "key.offset": 13382,
              "key.parsed_declaration": "public static func max(_ left: Model.IO, _ right: Model.IO) -> Model.IO",
              "key.parsed_scope.end": 495,
              "key.parsed_scope.start": 493,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10FunctionalO3max__13streamContextxx_xAA06StreamE0CSgtAA24DynamicGraph_TensorGroupRzlFZ\">max(_:_:streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Functional.Type) -> (Model.IO, Model.IO) -> Model.IO",
              "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
              "key.usr": "s:4main10FunctionalO3maxyAA5ModelC2IOCAH_AHtFZ"
            }
          ],
          "key.typename": "Functional.Type",
          "key.typeusr": "$s4main10FunctionalOmD",
          "key.usr": "s:4main10FunctionalO"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 5004,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public class AnyModelBuilder</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 47
            }
          ],
          "key.bodylength": 3604,
          "key.bodyoffset": 77,
          "key.doc.column": 14,
          "key.doc.comment": "A type-erased model builder.",
          "key.doc.declaration": "public class AnyModelBuilder",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"4\" column=\"14\"><Name>AnyModelBuilder</Name><USR>s:4main15AnyModelBuilderC</USR><Declaration>public class AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A type-erased model builder.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "AnyModelBuilder",
          "key.doc.type": "Class",
          "key.doclength": 33,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyModelBuilder</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 3628,
          "key.name": "AnyModelBuilder",
          "key.namelength": 15,
          "key.nameoffset": 60,
          "key.offset": 54,
          "key.parsed_declaration": "public class AnyModelBuilder",
          "key.parsed_scope.end": 108,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var isTest: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 81
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isTest</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 24,
              "key.name": "isTest",
              "key.namelength": 6,
              "key.nameoffset": 92,
              "key.offset": 88,
              "key.parsed_declaration": "public var isTest: Bool = false",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main15AnyModelBuilderC6isTestSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var model: <Type usr=\"s:4main5ModelC\">Model</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "model",
              "key.namelength": 5,
              "key.nameoffset": 120,
              "key.offset": 116,
              "key.parsed_declaration": "var model: Model? = nil",
              "key.parsed_scope.end": 8,
              "key.parsed_scope.start": 8,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "Model?",
              "key.typeusr": "$s4main5ModelCSgD",
              "key.usr": "s:4main15AnyModelBuilderC5modelAA0C0CSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var t: Any?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>t</decl.name>: <decl.var.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 17,
              "key.name": "t",
              "key.namelength": 1,
              "key.nameoffset": 146,
              "key.offset": 142,
              "key.parsed_declaration": "var t: Any? = nil",
              "key.parsed_scope.end": 9,
              "key.parsed_scope.start": 9,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "Any?",
              "key.typeusr": "$sypSgD",
              "key.usr": "s:4main15AnyModelBuilderC1typSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var inputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>inputs</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 37,
              "key.name": "inputs",
              "key.namelength": 6,
              "key.nameoffset": 166,
              "key.offset": 162,
              "key.parsed_declaration": "var inputs: [DynamicGraph_Any]? = nil",
              "key.parsed_scope.end": 10,
              "key.parsed_scope.start": 10,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "[DynamicGraph_Any]?",
              "key.typeusr": "$sSay4main16DynamicGraph_Any_pGSgD",
              "key.usr": "s:4main15AnyModelBuilderC6inputsSayAA013DynamicGraph_B0_pGSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private let builder: (Any, [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 202
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>builder</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.function.returntype></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 53,
              "key.name": "builder",
              "key.namelength": 7,
              "key.nameoffset": 214,
              "key.offset": 210,
              "key.parsed_declaration": "private let builder: (_: Any, _: [DynamicGraph_Any]) -> Model",
              "key.parsed_scope.end": 11,
              "key.parsed_scope.start": 11,
              "key.typename": "(Any, [DynamicGraph_Any]) -> Model",
              "key.typeusr": "$sy4main5ModelCyp_SayAA16DynamicGraph_Any_pGtcD",
              "key.usr": "s:4main15AnyModelBuilderC7builder33_0A6970657E043EF381F0CBB61845312DLLyAA0C0Cyp_SayAA013DynamicGraph_B0_pGtcvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate init(builder: @escaping (Any, [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 267
                }
              ],
              "key.bodylength": 488,
              "key.bodyoffset": 365,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>builder</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 575,
              "key.name": "init(builder:name:)",
              "key.namelength": 84,
              "key.nameoffset": 279,
              "key.offset": 279,
              "key.parsed_declaration": "fileprivate init(builder: @escaping (_: Any, _: [DynamicGraph_Any]) -> Model, name: String = \"\")",
              "key.parsed_scope.end": 25,
              "key.parsed_scope.start": 13,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _model: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_model</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 427,
                  "key.name": "_model",
                  "key.namelength": 6,
                  "key.nameoffset": 401,
                  "key.offset": 397,
                  "key.parsed_declaration": "let _model = ccv_cnnp_dynamic_new(\n  { _, _, ctx in\n    let modelBuilder = Unmanaged<AnyModelBuilder>.fromOpaque(ctx!).takeUnretainedValue()\n    let t = modelBuilder.t!\n    let inputs = modelBuilder.inputs!\n    let builder = modelBuilder.builder\n    let model = builder(t, inputs)\n    return model.obtainUnderlyingModel(modelBuilder.model!)\n  }, Unmanaged.passUnretained(self).toOpaque(), name)!",
                  "key.parsed_scope.end": 15,
                  "key.parsed_scope.start": 15,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main15AnyModelBuilderC7builder4nameAcA0C0Cyp_SayAA013DynamicGraph_B0_pGtc_SStc33_0A6970657E043EF381F0CBB61845312DLlfc6_modelL_Xevp"
                }
              ],
              "key.typename": "(AnyModelBuilder.Type) -> (@escaping (Any, [DynamicGraph_Any]) -> Model, String) -> AnyModelBuilder",
              "key.typeusr": "$s7builder4name4main15AnyModelBuilderCAC0E0Cyp_SayAC013DynamicGraph_D0_pGtc_SStcD",
              "key.usr": "s:4main15AnyModelBuilderC7builder4nameAcA0C0Cyp_SayAA013DynamicGraph_B0_pGtc_SStc33_0A6970657E043EF381F0CBB61845312DLlfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private var _outputSize: <Type usr=\"s:Si\">Int</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 858
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 27,
              "key.name": "_outputSize",
              "key.namelength": 11,
              "key.nameoffset": 870,
              "key.offset": 866,
              "key.parsed_declaration": "private var _outputSize: Int? = nil",
              "key.parsed_scope.end": 27,
              "key.parsed_scope.start": 27,
              "key.setter_accessibility": "source.lang.swift.accessibility.private",
              "key.typename": "Int?",
              "key.typeusr": "$sSiSgD",
              "key.usr": "s:4main15AnyModelBuilderC11_outputSize33_0A6970657E043EF381F0CBB61845312DLLSiSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var outputSize: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
              "key.bodylength": 303,
              "key.bodyoffset": 917,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 325,
              "key.name": "outputSize",
              "key.namelength": 10,
              "key.nameoffset": 900,
              "key.offset": 896,
              "key.parsed_declaration": "var outputSize: Int",
              "key.parsed_scope.end": 38,
              "key.parsed_scope.start": 28,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main15AnyModelBuilderC10outputSizeSivp"
            },
            {
              "key.annotated_decl": "<Declaration>let outputSize: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>outputSize</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 63,
              "key.name": "outputSize",
              "key.namelength": 10,
              "key.nameoffset": 1107,
              "key.offset": 1103,
              "key.parsed_declaration": "let outputSize = Int(ccv_cnnp_model_output_size(model!._model))",
              "key.parsed_scope.end": 35,
              "key.parsed_scope.start": 35,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main15AnyModelBuilderC10outputSizeSivp\">outputSize</RelatedName>"
                }
              ],
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main15AnyModelBuilderC10outputSizeSivgADL0_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var parameters: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1317
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 1358,
              "key.doc.column": 14,
              "key.doc.comment": "Abstract representation of the stateful components from the model builder.",
              "key.doc.declaration": "public var parameters: Model.Parameters { get }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"43\" column=\"14\"><Name>parameters</Name><USR>s:4main15AnyModelBuilderC10parametersAA0C0C10ParametersCvp</USR><Declaration>public var parameters: Model.Parameters { get }</Declaration><CommentParts><Abstract><Para>Abstract representation of the stateful components from the model builder.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 43,
              "key.doc.name": "parameters",
              "key.doc.type": "Other",
              "key.doclength": 89,
              "key.docoffset": 1225,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 60,
              "key.name": "parameters",
              "key.namelength": 10,
              "key.nameoffset": 1328,
              "key.offset": 1324,
              "key.parsed_declaration": "public var parameters: Model.Parameters",
              "key.parsed_scope.end": 45,
              "key.parsed_scope.start": 43,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main15AnyModelBuilderC10parameters3forAA0C0C10ParametersCAG0G4TypeO_tF\">parameters(for:)</RelatedName>"
                }
              ],
              "key.typename": "Model.Parameters",
              "key.typeusr": "$s4main5ModelC10ParametersCD",
              "key.usr": "s:4main15AnyModelBuilderC10parametersAA0C0C10ParametersCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func parameters(for type: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC14ParametersTypeO\">ParametersType</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1654
                }
              ],
              "key.bodylength": 43,
              "key.bodyoffset": 1730,
              "key.doc.column": 15,
              "key.doc.comment": " Broadly speaking, you can have two types of parameters, weight and bias.\n You can get them in abstract fashion with this method.\n\n - Parameter type: Whether it is weight or bias.\n - Returns: An abstract representation of parameters.",
              "key.doc.declaration": "public func parameters(for type: Model.ParametersType) -> Model.Parameters",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"54\" column=\"15\"><Name>parameters(for:)</Name><USR>s:4main15AnyModelBuilderC10parameters3forAA0C0C10ParametersCAG0G4TypeO_tF</USR><Declaration>public func parameters(for type: Model.ParametersType) -&gt; Model.Parameters</Declaration><CommentParts><Abstract><Para>Broadly speaking, you can have two types of parameters, weight and bias. You can get them in abstract fashion with this method.</Para></Abstract><Parameters><Parameter><Name>type</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether it is weight or bias.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>An abstract representation of parameters.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 54,
              "key.doc.name": "parameters(for:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Whether it is weight or bias."
                    }
                  ],
                  "name": "type"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "An abstract representation of parameters."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 263,
              "key.docoffset": 1388,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>parameters</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.enum usr=\"s:4main5ModelC14ParametersTypeO\">ParametersType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 113,
              "key.name": "parameters(for:)",
              "key.namelength": 42,
              "key.nameoffset": 1666,
              "key.offset": 1661,
              "key.parsed_declaration": "public func parameters(for type: Model.ParametersType) -> Model.Parameters",
              "key.parsed_scope.end": 56,
              "key.parsed_scope.start": 54,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main15AnyModelBuilderC10parametersAA0C0C10ParametersCvp\">parameters</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(AnyModelBuilder) -> (Model.ParametersType) -> Model.Parameters",
              "key.typeusr": "$s3for4main5ModelC10ParametersCAD0D4TypeO_tcD",
              "key.usr": "s:4main15AnyModelBuilderC10parameters3forAA0C0C10ParametersCAG0G4TypeO_tF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private var _store: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 1778
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_store</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</ref.class>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 38,
              "key.name": "_store",
              "key.namelength": 6,
              "key.nameoffset": 1790,
              "key.offset": 1786,
              "key.parsed_declaration": "private var _store: DynamicGraph._Store? = nil",
              "key.parsed_scope.end": 58,
              "key.parsed_scope.start": 58,
              "key.setter_accessibility": "source.lang.swift.accessibility.private",
              "key.typename": "DynamicGraph._Store?",
              "key.typeusr": "$s4main12DynamicGraphC6_StoreCSgD",
              "key.usr": "s:4main15AnyModelBuilderC6_store33_0A6970657E043EF381F0CBB61845312DLLAA12DynamicGraphC6_StoreCSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private var _key: <Type usr=\"s:SS\">String</Type>?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 1827
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_key</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "_key",
              "key.namelength": 4,
              "key.nameoffset": 1839,
              "key.offset": 1835,
              "key.parsed_declaration": "private var _key: String? = nil",
              "key.parsed_scope.end": 59,
              "key.parsed_scope.start": 59,
              "key.setter_accessibility": "source.lang.swift.accessibility.private",
              "key.typename": "String?",
              "key.typeusr": "$sSSSgD",
              "key.usr": "s:4main15AnyModelBuilderC4_key33_0A6970657E043EF381F0CBB61845312DLLSSSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>func read(_ key: <Type usr=\"s:SS\">String</Type>, from store: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</Type>)</Declaration>",
              "key.bodylength": 210,
              "key.bodyoffset": 1921,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>read</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>store</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 270,
              "key.name": "read(_:from:)",
              "key.namelength": 52,
              "key.nameoffset": 1867,
              "key.offset": 1862,
              "key.parsed_declaration": "func read(_ key: String, from store: DynamicGraph._Store)",
              "key.parsed_scope.end": 69,
              "key.parsed_scope.start": 61,
              "key.substructure": [],
              "key.typename": "(AnyModelBuilder) -> (String, DynamicGraph._Store) -> ()",
              "key.typeusr": "$s_4fromySS_4main12DynamicGraphC6_StoreCtcD",
              "key.usr": "s:4main15AnyModelBuilderC4read_4fromySS_AA12DynamicGraphC6_StoreCtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private func compileModel()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 2136
                }
              ],
              "key.bodylength": 1513,
              "key.bodyoffset": 2165,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>compileModel</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1535,
              "key.name": "compileModel()",
              "key.namelength": 14,
              "key.nameoffset": 2149,
              "key.offset": 2144,
              "key.parsed_declaration": "private func compileModel()",
              "key.parsed_scope.end": 106,
              "key.parsed_scope.start": 71,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let inputs: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputs</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 25,
                  "key.name": "inputs",
                  "key.namelength": 6,
                  "key.nameoffset": 2174,
                  "key.offset": 2170,
                  "key.parsed_declaration": "let inputs = self.inputs!",
                  "key.parsed_scope.end": 72,
                  "key.parsed_scope.start": 72,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main15AnyModelBuilderC6inputsSayAA013DynamicGraph_B0_pGSgvp\">inputs</RelatedName>"
                    }
                  ],
                  "key.typename": "[DynamicGraph_Any]",
                  "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
                  "key.usr": "s:4main15AnyModelBuilderC07compileC033_0A6970657E043EF381F0CBB61845312DLLyyF6inputsL_SayAA013DynamicGraph_B0_pGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 2233,
                  "key.offset": 2229,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 74,
                  "key.parsed_scope.start": 74,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main15AnyModelBuilderC07compileC033_0A6970657E043EF381F0CBB61845312DLLyyF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let noop: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noop</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 52,
                  "key.name": "noop",
                  "key.namelength": 4,
                  "key.nameoffset": 2287,
                  "key.offset": 2283,
                  "key.parsed_declaration": "let noop = ccv_nnc_cmd(CCV_NNC_NOOP, nil, params, 0)",
                  "key.parsed_scope.end": 75,
                  "key.parsed_scope.start": 75,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main15AnyModelBuilderC07compileC033_0A6970657E043EF381F0CBB61845312DLLyyF4noopL_Xevp"
                }
              ],
              "key.typename": "(AnyModelBuilder) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main15AnyModelBuilderC07compileC033_0A6970657E043EF381F0CBB61845312DLLyyF"
            }
          ],
          "key.typename": "AnyModelBuilder.Type",
          "key.typeusr": "$s4main15AnyModelBuilderCmD",
          "key.usr": "s:4main15AnyModelBuilderC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class ModelBuilder&lt;T&gt; : <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 4508
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4501
            }
          ],
          "key.bodylength": 208,
          "key.bodyoffset": 4554,
          "key.doc.column": 20,
          "key.doc.comment": "A model builder is a more generic type of model. A model can be quite static,\nthus, you have to be quite careful to have a model work with dynamic inputs.\nYou cannot use reshape, or anything that can generate fixed tensor outputs from\na fixed inputs.\n\nA model builder on the other hand doesn't have that restriction. When input changes,\nit simply calls the given builder closure to construct a new model. In such way,\nyou can continue to use reshape etc to assume fixed inputs and outputs, it will just\nwork for dynamic inputs. The newly built model will carry over stateful components\n(parameters) from the old models, thus, it doesn't reset your training. This also means\nyou need to make sure parameter shape won't change when input changes, otherwise we\nwill fatal.",
          "key.doc.declaration": "public final class ModelBuilder<T> : AnyModelBuilder",
          "key.doc.discussion": [
            {
              "Para": "A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal."
            }
          ],
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"122\" column=\"20\"><Name>ModelBuilder</Name><USR>s:4main12ModelBuilderC</USR><Declaration>public final class ModelBuilder&lt;T&gt; : AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A model builder is a more generic type of model. A model can be quite static, thus, you have to be quite careful to have a model work with dynamic inputs. You cannot use reshape, or anything that can generate fixed tensor outputs from a fixed inputs.</Para></Abstract><Discussion><Para>A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal.</Para></Discussion></CommentParts></Class>",
          "key.doc.line": 122,
          "key.doc.name": "ModelBuilder",
          "key.doc.type": "Class",
          "key.doclength": 817,
          "key.docoffset": 3684,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 15,
              "key.offset": 4537
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelBuilder</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "AnyModelBuilder"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 249,
          "key.name": "ModelBuilder",
          "key.namelength": 12,
          "key.nameoffset": 4520,
          "key.offset": 4514,
          "key.parsed_declaration": "public final class ModelBuilder<T>: AnyModelBuilder",
          "key.parsed_scope.end": 129,
          "key.parsed_scope.start": 122,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>",
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 1,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 4533,
              "key.offset": 4533,
              "key.parsed_declaration": "public final class ModelBuilder<T",
              "key.parsed_scope.end": 122,
              "key.parsed_scope.start": 122,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main12ModelBuilderC1Txmfp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ builder: @escaping (<Type usr=\"s:4main12ModelBuilderC1Txmfp\">T</Type>, [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4557
                }
              ],
              "key.bodylength": 110,
              "key.bodyoffset": 4650,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>builder</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 197,
              "key.name": "init(_:name:)",
              "key.namelength": 84,
              "key.nameoffset": 4564,
              "key.offset": 4564,
              "key.parsed_declaration": "public init(_ builder: @escaping (_: T, _: [DynamicGraph_Any]) -> Model, name: String = \"\")",
              "key.parsed_scope.end": 128,
              "key.parsed_scope.start": 123,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12ModelBuilderCAAytRszlE_4nameACyytGAA0B0CSayAA16DynamicGraph_Any_pGc_SStcfc\">init(_: @escaping ([DynamicGraph_Any]) -&gt; Model, name: String = &quot;&quot;)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<T> (ModelBuilder<T>.Type) -> (@escaping (T, [DynamicGraph_Any]) -> Model, String) -> ModelBuilder<T>",
              "key.typeusr": "$s_4name4main12ModelBuilderCyxGAB0C0Cx_SayAB16DynamicGraph_Any_pGtc_SStcD",
              "key.usr": "s:4main12ModelBuilderC_4nameACyxGAA0B0Cx_SayAA16DynamicGraph_Any_pGtc_SStcfc"
            }
          ],
          "key.typename": "ModelBuilder<T>.Type",
          "key.typeusr": "$s4main12ModelBuilderCyxGmD",
          "key.usr": "s:4main12ModelBuilderC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class ModelBuilder&lt;T&gt; : <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type></Declaration>",
          "key.bodylength": 197,
          "key.bodyoffset": 4805,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class ModelBuilder<T> : AnyModelBuilder",
          "key.doc.discussion": [
            {
              "Para": "A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal."
            }
          ],
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift\" line=\"122\" column=\"20\"><Name>ModelBuilder</Name><USR>s:4main12ModelBuilderC</USR><Declaration>public final class ModelBuilder&lt;T&gt; : AnyModelBuilder</Declaration><CommentParts><Abstract><Para>A model builder is a more generic type of model. A model can be quite static, thus, you have to be quite careful to have a model work with dynamic inputs. You cannot use reshape, or anything that can generate fixed tensor outputs from a fixed inputs.</Para></Abstract><Discussion><Para>A model builder on the other hand doesn’t have that restriction. When input changes, it simply calls the given builder closure to construct a new model. In such way, you can continue to use reshape etc to assume fixed inputs and outputs, it will just work for dynamic inputs. The newly built model will carry over stateful components (parameters) from the old models, thus, it doesn’t reset your training. This also means you need to make sure parameter shape won’t change when input changes, otherwise we will fatal.</Para></Discussion></CommentParts></Class>",
          "key.doc.line": 122,
          "key.doc.name": "ModelBuilder",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelBuilder</decl.name>&lt;<decl.generic_type_param usr=\"s:4main12ModelBuilderC1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 238,
          "key.name": "ModelBuilder",
          "key.namelength": 12,
          "key.nameoffset": 4775,
          "key.offset": 4765,
          "key.parsed_declaration": "extension ModelBuilder where T == Void",
          "key.parsed_scope.end": 139,
          "key.parsed_scope.start": 131,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public convenience init(_ builder: @escaping ([<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>, name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.convenience",
                  "key.length": 11,
                  "key.offset": 4815
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4808
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 4909,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelBuilder.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>builder</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 174,
              "key.name": "init(_:name:)",
              "key.namelength": 78,
              "key.nameoffset": 4827,
              "key.offset": 4827,
              "key.parsed_declaration": "public convenience init(_ builder: @escaping (_: [DynamicGraph_Any]) -> Model, name: String = \"\")",
              "key.parsed_scope.end": 138,
              "key.parsed_scope.start": 132,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main12ModelBuilderC_4nameACyxGAA0B0Cx_SayAA16DynamicGraph_Any_pGtc_SStcfc\">init(_: @escaping (T, [DynamicGraph_Any]) -&gt; Model, name: String = &quot;&quot;)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<T where T == ()> (ModelBuilder<T>.Type) -> (@escaping ([DynamicGraph_Any]) -> Model, String) -> ModelBuilder<T>",
              "key.typeusr": "$s_4name4main12ModelBuilderCyytGAB0C0CSayAB16DynamicGraph_Any_pGc_SStcD",
              "key.usr": "s:4main12ModelBuilderCAAytRszlE_4nameACyytGAA0B0CSayAA16DynamicGraph_Any_pGc_SStcfc"
            }
          ],
          "key.typename": "ModelBuilder<T>.Type",
          "key.typeusr": "$s4main12ModelBuilderCyxGmD",
          "key.usr": "s:4main12ModelBuilderC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 1005,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>@_functionBuilder public struct Sequential</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 18
            },
            {
              "key.attribute": "source.decl.attribute._functionBuilder",
              "key.length": 17,
              "key.offset": 0
            }
          ],
          "key.bodylength": 959,
          "key.bodyoffset": 44,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_functionBuilder</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Sequential</decl.name></decl.struct>",
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 979,
          "key.name": "Sequential",
          "key.namelength": 10,
          "key.nameoffset": 32,
          "key.offset": 25,
          "key.parsed_declaration": "public struct Sequential",
          "key.parsed_scope.end": 41,
          "key.parsed_scope.start": 2,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main10SequentialV\">Sequential</Type>.Expression = <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 48
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main10SequentialV\">Sequential</ref.struct>.<decl.name>Expression</decl.name> = <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 28,
              "key.name": "Expression",
              "key.namelength": 10,
              "key.nameoffset": 65,
              "key.offset": 55,
              "key.parsed_declaration": "public typealias Expression = Model",
              "key.parsed_scope.end": 4,
              "key.parsed_scope.start": 4,
              "key.typename": "Model.Type",
              "key.typeusr": "$s4main5ModelCmD",
              "key.usr": "s:4main10SequentialV10Expressiona"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main10SequentialV\">Sequential</Type>.Component = [<Type usr=\"s:4main5ModelC\">Model</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 87
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main10SequentialV\">Sequential</ref.struct>.<decl.name>Component</decl.name> = [<ref.class usr=\"s:4main5ModelC\">Model</ref.class>]</decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 29,
              "key.name": "Component",
              "key.namelength": 9,
              "key.nameoffset": 104,
              "key.offset": 94,
              "key.parsed_declaration": "public typealias Component = [Model]",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.typename": "[Model].Type",
              "key.typeusr": "$sSay4main5ModelCGmD",
              "key.usr": "s:4main10SequentialV9Componenta"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:4main10SequentialV\">Sequential</Type>.FinalResult = <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 127
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4main10SequentialV\">Sequential</ref.struct>.<decl.name>FinalResult</decl.name> = <ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.typealias>",
              "key.kind": "source.lang.swift.decl.typealias",
              "key.length": 29,
              "key.name": "FinalResult",
              "key.namelength": 11,
              "key.nameoffset": 144,
              "key.offset": 134,
              "key.parsed_declaration": "public typealias FinalResult = Model",
              "key.parsed_scope.end": 8,
              "key.parsed_scope.start": 8,
              "key.typename": "Model.Type",
              "key.typeusr": "$s4main5ModelCmD",
              "key.usr": "s:4main10SequentialV11FinalResulta"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildExpression(_ expression: <Type usr=\"s:4main10SequentialV10Expressiona\">Expression</Type>) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 167
                }
              ],
              "key.bodylength": 27,
              "key.bodyoffset": 242,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildExpression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>expression</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV10Expressiona\">Expression</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 96,
              "key.name": "buildExpression(_:)",
              "key.namelength": 41,
              "key.nameoffset": 186,
              "key.offset": 174,
              "key.parsed_declaration": "public static func buildExpression(_ expression: Expression) -> Component",
              "key.parsed_scope.end": 12,
              "key.parsed_scope.start": 10,
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> (Model) -> [Model]",
              "key.typeusr": "$sySay4main5ModelCGACcD",
              "key.usr": "s:4main10SequentialV15buildExpressionySayAA5ModelCGAFFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildBlock(_ children: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>...) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 274
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 344,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildBlock</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>children</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 102,
              "key.name": "buildBlock(_:)",
              "key.namelength": 36,
              "key.nameoffset": 293,
              "key.offset": 281,
              "key.parsed_declaration": "public static func buildBlock(_ children: Component...) -> Component",
              "key.parsed_scope.end": 16,
              "key.parsed_scope.start": 14,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10SequentialV10buildBlockySayAA5ModelCGAGFZ\">buildBlock(_: Component) -&gt; Component</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]...) -> [Model]",
              "key.typeusr": "$sySay4main5ModelCGADd_tcD",
              "key.usr": "s:4main10SequentialV10buildBlockySayAA5ModelCGAGd_tFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildArray(_ components: [<Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>]) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 387
                }
              ],
              "key.bodylength": 40,
              "key.bodyoffset": 458,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildArray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>components</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 105,
              "key.name": "buildArray(_:)",
              "key.namelength": 37,
              "key.nameoffset": 406,
              "key.offset": 394,
              "key.parsed_declaration": "public static func buildArray(_ components: [Component]) -> Component",
              "key.parsed_scope.end": 20,
              "key.parsed_scope.start": 18,
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([[Model]]) -> [Model]",
              "key.typeusr": "$sySay4main5ModelCGSayADGcD",
              "key.usr": "s:4main10SequentialV10buildArrayySayAA5ModelCGSayAGGFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildBlock(_ component: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 503
                }
              ],
              "key.bodylength": 24,
              "key.bodyoffset": 571,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildBlock</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>component</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 86,
              "key.name": "buildBlock(_:)",
              "key.namelength": 34,
              "key.nameoffset": 522,
              "key.offset": 510,
              "key.parsed_declaration": "public static func buildBlock(_ component: Component) -> Component",
              "key.parsed_scope.end": 24,
              "key.parsed_scope.start": 22,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10SequentialV10buildBlockySayAA5ModelCGAGd_tFZ\">buildBlock(_: Component...) -&gt; Component</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]) -> [Model]",
              "key.typeusr": "$sySay4main5ModelCGADcD",
              "key.usr": "s:4main10SequentialV10buildBlockySayAA5ModelCGAGFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildOptional(_ children: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>?) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 600
                }
              ],
              "key.bodylength": 29,
              "key.bodyoffset": 671,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildOptional</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>children</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 94,
              "key.name": "buildOptional(_:)",
              "key.namelength": 37,
              "key.nameoffset": 619,
              "key.offset": 607,
              "key.parsed_declaration": "public static func buildOptional(_ children: Component?) -> Component",
              "key.parsed_scope.end": 28,
              "key.parsed_scope.start": 26,
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]?) -> [Model]",
              "key.typeusr": "$sySay4main5ModelCGADSgcD",
              "key.usr": "s:4main10SequentialV13buildOptionalySayAA5ModelCGAGSgFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildEither(first child: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 705
                }
              ],
              "key.bodylength": 20,
              "key.bodyoffset": 774,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildEither</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>first</decl.var.parameter.argument_label> <decl.var.parameter.name>child</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 83,
              "key.name": "buildEither(first:)",
              "key.namelength": 35,
              "key.nameoffset": 724,
              "key.offset": 712,
              "key.parsed_declaration": "public static func buildEither(first child: Component) -> Component",
              "key.parsed_scope.end": 32,
              "key.parsed_scope.start": 30,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10SequentialV11buildEither6secondSayAA5ModelCGAH_tFZ\">buildEither(second:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]) -> [Model]",
              "key.typeusr": "$s5firstSay4main5ModelCGAE_tcD",
              "key.usr": "s:4main10SequentialV11buildEither5firstSayAA5ModelCGAH_tFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildEither(second child: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>) -&gt; <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 799
                }
              ],
              "key.bodylength": 20,
              "key.bodyoffset": 869,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildEither</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>second</decl.var.parameter.argument_label> <decl.var.parameter.name>child</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 84,
              "key.name": "buildEither(second:)",
              "key.namelength": 36,
              "key.nameoffset": 818,
              "key.offset": 806,
              "key.parsed_declaration": "public static func buildEither(second child: Component) -> Component",
              "key.parsed_scope.end": 36,
              "key.parsed_scope.start": 34,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main10SequentialV11buildEither5firstSayAA5ModelCGAH_tFZ\">buildEither(first:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]) -> [Model]",
              "key.typeusr": "$s6secondSay4main5ModelCGAE_tcD",
              "key.usr": "s:4main10SequentialV11buildEither6secondSayAA5ModelCGAH_tFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func buildFinalResult(_ component: <Type usr=\"s:4main10SequentialV9Componenta\">Component</Type>) -&gt; <Type usr=\"s:4main10SequentialV11FinalResulta\">FinalResult</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 894
                }
              ],
              "key.bodylength": 31,
              "key.bodyoffset": 970,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelCore.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildFinalResult</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>component</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:4main10SequentialV9Componenta\">Component</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:4main10SequentialV11FinalResulta\">FinalResult</ref.typealias></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 101,
              "key.name": "buildFinalResult(_:)",
              "key.namelength": 40,
              "key.nameoffset": 913,
              "key.offset": 901,
              "key.parsed_declaration": "public static func buildFinalResult(_ component: Component) -> FinalResult",
              "key.parsed_scope.end": 40,
              "key.parsed_scope.start": 38,
              "key.substructure": [],
              "key.typename": "(Sequential.Type) -> ([Model]) -> Model",
              "key.typeusr": "$sy4main5ModelCSayACGcD",
              "key.usr": "s:4main10SequentialV16buildFinalResultyAA5ModelCSayAFGFZ"
            }
          ],
          "key.typename": "Sequential.Type",
          "key.typeusr": "$s4main10SequentialVmD",
          "key.usr": "s:4main10SequentialV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 2704,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model</Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.bodylength": 679,
          "key.bodyoffset": 42,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>Parameters</decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 708,
          "key.name": "Model.Parameters",
          "key.namelength": 16,
          "key.nameoffset": 24,
          "key.offset": 14,
          "key.parsed_declaration": "extension Model.Parameters",
          "key.parsed_scope.end": 25,
          "key.parsed_scope.start": 3,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func copy(from parameters: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 210
                }
              ],
              "key.bodylength": 456,
              "key.bodyoffset": 263,
              "key.doc.column": 15,
              "key.doc.comment": " Copy parameters from one model to another.\n\n - Parameter parameters: The parameters of another model, it must match the parameters copy to.",
              "key.doc.declaration": "public func copy(from parameters: Model.Parameters)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift\" line=\"9\" column=\"15\"><Name>copy(from:)</Name><USR>s:4main5ModelC10ParametersC4copy4fromyAE_tF</USR><Declaration>public func copy(from parameters: Model.Parameters)</Declaration><CommentParts><Abstract><Para>Copy parameters from one model to another.</Para></Abstract><Parameters><Parameter><Name>parameters</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The parameters of another model, it must match the parameters copy to.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 9,
              "key.doc.name": "copy(from:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The parameters of another model, it must match the parameters copy to."
                    }
                  ],
                  "name": "parameters"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 162,
              "key.docoffset": 45,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>copy</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>parameters</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 503,
              "key.name": "copy(from:)",
              "key.namelength": 39,
              "key.nameoffset": 222,
              "key.offset": 217,
              "key.parsed_declaration": "public func copy(from parameters: Model.Parameters)",
              "key.parsed_scope.end": 24,
              "key.parsed_scope.start": 9,
              "key.substructure": [],
              "key.typename": "(Model.Parameters) -> (Model.Parameters) -> ()",
              "key.typeusr": "$s4fromy4main5ModelC10ParametersC_tcD",
              "key.usr": "s:4main5ModelC10ParametersC4copy4fromyAE_tF"
            }
          ],
          "key.typename": "Model.Parameters.Type",
          "key.typeusr": "$s4main5ModelC10ParametersCmD",
          "key.usr": "s:4main5ModelC10ParametersC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model</Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.bodylength": 1161,
          "key.bodyoffset": 752,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>Parameters</decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1190,
          "key.name": "Model.Parameters",
          "key.namelength": 16,
          "key.nameoffset": 734,
          "key.offset": 724,
          "key.parsed_declaration": "extension Model.Parameters",
          "key.parsed_scope.end": 58,
          "key.parsed_scope.start": 27,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func lerp(_ weight: <Type usr=\"s:Sf\">Float</Type>, to parameters: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1093
                }
              ],
              "key.bodylength": 750,
              "key.bodyoffset": 1161,
              "key.doc.column": 15,
              "key.doc.comment": " Interpolate from current parameters to the another.\n\n parameters = (1 - weight) * parameters + weight * other\n\n - Parameter weight: How much the other parameter should weight, it must be between [0, 1].\n - Parameter parameters: The parameters of another model, it must match the parameters to update.",
              "key.doc.declaration": "public func lerp(_ weight: Float, to parameters: Model.Parameters)",
              "key.doc.discussion": [
                {
                  "Para": "parameters = (1 - weight) * parameters + weight * other"
                }
              ],
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift\" line=\"36\" column=\"15\"><Name>lerp(_:to:)</Name><USR>s:4main5ModelC10ParametersC4lerp_2toySf_AEtF</USR><Declaration>public func lerp(_ weight: Float, to parameters: Model.Parameters)</Declaration><CommentParts><Abstract><Para>Interpolate from current parameters to the another.</Para></Abstract><Parameters><Parameter><Name>weight</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>How much the other parameter should weight, it must be between [0, 1].</Para></Discussion></Parameter><Parameter><Name>parameters</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The parameters of another model, it must match the parameters to update.</Para></Discussion></Parameter></Parameters><Discussion><Para>parameters = (1 - weight) * parameters + weight * other</Para></Discussion></CommentParts></Function>",
              "key.doc.line": 36,
              "key.doc.name": "lerp(_:to:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "How much the other parameter should weight, it must be between [0, 1]."
                    }
                  ],
                  "name": "weight"
                },
                {
                  "discussion": [
                    {
                      "Para": "The parameters of another model, it must match the parameters to update."
                    }
                  ],
                  "name": "parameters"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 335,
              "key.docoffset": 755,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>lerp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>weight</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>parameters</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 812,
              "key.name": "lerp(_:to:)",
              "key.namelength": 54,
              "key.nameoffset": 1105,
              "key.offset": 1100,
              "key.parsed_declaration": "public func lerp(_ weight: Float, to parameters: Model.Parameters)",
              "key.parsed_scope.end": 57,
              "key.parsed_scope.start": 36,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 1579,
                  "key.offset": 1575,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 51,
                  "key.parsed_scope.start": 51,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 1724,
                  "key.offset": 1720,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_ADD_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 54,
                  "key.parsed_scope.start": 54,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF3cmdL_Xevp"
                }
              ],
              "key.typename": "(Model.Parameters) -> (Float, Model.Parameters) -> ()",
              "key.typeusr": "$s_2toySf_4main5ModelC10ParametersCtcD",
              "key.usr": "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF"
            }
          ],
          "key.typename": "Model.Parameters.Type",
          "key.typeusr": "$s4main5ModelC10ParametersCmD",
          "key.usr": "s:4main5ModelC10ParametersC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model</Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.bodylength": 758,
          "key.bodyoffset": 1944,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>Parameters</decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 787,
          "key.name": "Model.Parameters",
          "key.namelength": 16,
          "key.nameoffset": 1926,
          "key.offset": 1916,
          "key.parsed_declaration": "extension Model.Parameters",
          "key.parsed_scope.end": 82,
          "key.parsed_scope.start": 60,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func clamp(min: <Type usr=\"s:Sf\">Float</Type>? = nil, max: <Type usr=\"s:Sf\">Float</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2009
                }
              ],
              "key.bodylength": 634,
              "key.bodyoffset": 2066,
              "key.doc.column": 15,
              "key.doc.comment": "Clamp current parameters between two values.",
              "key.doc.declaration": "public func clamp(min: Float? = nil, max: Float? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift\" line=\"64\" column=\"15\"><Name>clamp(min:max:)</Name><USR>s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF</USR><Declaration>public func clamp(min: Float? = nil, max: Float? = nil)</Declaration><CommentParts><Abstract><Para>Clamp current parameters between two values.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 64,
              "key.doc.name": "clamp(min:max:)",
              "key.doc.type": "Function",
              "key.doclength": 59,
              "key.docoffset": 1947,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 685,
              "key.name": "clamp(min:max:)",
              "key.namelength": 43,
              "key.nameoffset": 2021,
              "key.offset": 2016,
              "key.parsed_declaration": "public func clamp(min: Float? = nil, max: Float? = nil)",
              "key.parsed_scope.end": 81,
              "key.parsed_scope.start": 64,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 2368,
                  "key.offset": 2364,
                  "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 74,
                  "key.parsed_scope.start": 74,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/ModelIOAddons.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 2549,
                  "key.offset": 2545,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                  "key.parsed_scope.end": 78,
                  "key.parsed_scope.start": 78,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF3cmdL_Xevp"
                }
              ],
              "key.typename": "(Model.Parameters) -> (Float?, Float?) -> ()",
              "key.typeusr": "$s3min3maxySfSg_ACtcD",
              "key.usr": "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF"
            }
          ],
          "key.typename": "Model.Parameters.Type",
          "key.typeusr": "$s4main5ModelC10ParametersCmD",
          "key.usr": "s:4main5ModelC10ParametersC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 5539,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public class Model</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 164
            }
          ],
          "key.bodylength": 3729,
          "key.bodyoffset": 184,
          "key.doc.column": 14,
          "key.doc.comment": "A model is a base class for stateful operations on a dynamic graph. It can be\nuse to construct computations statically, thus, more efficient.",
          "key.doc.declaration": "public class Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"5\" column=\"14\"><Name>Model</Name><USR>s:4main5ModelC</USR><Declaration>public class Model</Declaration><CommentParts><Abstract><Para>A model is a base class for stateful operations on a dynamic graph. It can be use to construct computations statically, thus, more efficient.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Model",
          "key.doc.type": "Class",
          "key.doclength": 150,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Model</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 3743,
          "key.name": "Model",
          "key.namelength": 5,
          "key.nameoffset": 177,
          "key.offset": 171,
          "key.parsed_declaration": "public class Model",
          "key.parsed_scope.end": 124,
          "key.parsed_scope.start": 5,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public class <Type usr=\"s:4main5ModelC\">Model</Type>.IO</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 345
                }
              ],
              "key.bodylength": 243,
              "key.bodyoffset": 362,
              "key.doc.column": 16,
              "key.doc.comment": "A IO class represent the abstract input / output for a model. It can correspond\nto one or more tensors when the model is materialized.",
              "key.doc.declaration": "public class main.Model.IO",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"11\" column=\"16\"><Name>IO</Name><USR>s:4main5ModelC2IOC</USR><Declaration>public class main.Model.IO</Declaration><CommentParts><Abstract><Para>A IO class represent the abstract input / output for a model. It can correspond to one or more tensors when the model is materialized.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 11,
              "key.doc.name": "IO",
              "key.doc.type": "Class",
              "key.doclength": 154,
              "key.docoffset": 188,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>IO</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 254,
              "key.name": "IO",
              "key.namelength": 2,
              "key.nameoffset": 358,
              "key.offset": 352,
              "key.parsed_declaration": "public class IO",
              "key.parsed_scope.end": 22,
              "key.parsed_scope.start": 11,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let _io: ccv_cnnp_model_io_t</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_io</decl.name>: <decl.var.type>ccv_cnnp_model_io_t</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 28,
                  "key.name": "_io",
                  "key.namelength": 3,
                  "key.nameoffset": 372,
                  "key.offset": 368,
                  "key.parsed_declaration": "let _io: ccv_cnnp_model_io_t",
                  "key.parsed_scope.end": 13,
                  "key.parsed_scope.start": 13,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC2IOC3_ioXevp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let model: <Type usr=\"s:4main5ModelC\">Model</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 17,
                  "key.name": "model",
                  "key.namelength": 5,
                  "key.nameoffset": 405,
                  "key.offset": 401,
                  "key.parsed_declaration": "let model: Model?",
                  "key.parsed_scope.end": 14,
                  "key.parsed_scope.start": 14,
                  "key.typename": "Model?",
                  "key.typeusr": "$s4main5ModelCSgD",
                  "key.usr": "s:4main5ModelC2IOC5modelACSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let inputs: [<Type usr=\"s:4main5ModelC2IOC\">IO</Type>]?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 423
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputs</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class>]?</decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 17,
                  "key.name": "inputs",
                  "key.namelength": 6,
                  "key.nameoffset": 435,
                  "key.offset": 431,
                  "key.parsed_declaration": "private let inputs: [IO]?",
                  "key.parsed_scope.end": 15,
                  "key.parsed_scope.start": 15,
                  "key.typename": "[Model.IO]?",
                  "key.typeusr": "$sSay4main5ModelC2IOCGSgD",
                  "key.usr": "s:4main5ModelC2IOC6inputs33_007C620AA3A419D5FA79455DE67AC8DBLLSayAEGSgvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(_ io: ccv_cnnp_model_io_t, model: <Type usr=\"s:4main5ModelC\">Model</Type>? = nil, inputs: [<Type usr=\"s:4main5ModelC2IOC\">IO</Type>]? = nil)</Declaration>",
                  "key.bodylength": 72,
                  "key.bodyoffset": 529,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>io</decl.var.parameter.name>: <decl.var.parameter.type>ccv_cnnp_model_io_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inputs</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class>]?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 148,
                  "key.name": "init(_:model:inputs:)",
                  "key.namelength": 73,
                  "key.nameoffset": 454,
                  "key.offset": 454,
                  "key.parsed_declaration": "init(_ io: ccv_cnnp_model_io_t, model: Model? = nil, inputs: [IO]? = nil)",
                  "key.parsed_scope.end": 21,
                  "key.parsed_scope.start": 17,
                  "key.substructure": [],
                  "key.typename": "(Model.IO.Type) -> (<<error type>>, Model?, [Model.IO]?) -> Model.IO",
                  "key.typeusr": "$syXeXecD",
                  "key.usr": "s:4main5ModelC2IOCyXeXecfc"
                }
              ],
              "key.typename": "Model.IO.Type",
              "key.typeusr": "$s4main5ModelC2IOCmD",
              "key.usr": "s:4main5ModelC2IOC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var isTest: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 682
                }
              ],
              "key.doc.column": 14,
              "key.doc.comment": "Whether the existing model is for testing or training.",
              "key.doc.declaration": "public var isTest: Bool",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"27\" column=\"14\"><Name>isTest</Name><USR>s:4main5ModelC6isTestSbvp</USR><Declaration>public var isTest: Bool</Declaration><CommentParts><Abstract><Para>Whether the existing model is for testing or training.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 27,
              "key.doc.name": "isTest",
              "key.doc.type": "Other",
              "key.doclength": 69,
              "key.docoffset": 610,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isTest</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 24,
              "key.name": "isTest",
              "key.namelength": 6,
              "key.nameoffset": 693,
              "key.offset": 689,
              "key.parsed_declaration": "public var isTest: Bool = false",
              "key.parsed_scope.end": 27,
              "key.parsed_scope.start": 27,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main5ModelC6isTestSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var dataParallel: <Type usr=\"s:Si\">Int</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataParallel</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 28,
              "key.name": "dataParallel",
              "key.namelength": 12,
              "key.nameoffset": 721,
              "key.offset": 717,
              "key.parsed_declaration": "var dataParallel: Int? = nil",
              "key.parsed_scope.end": 29,
              "key.parsed_scope.start": 29,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "Int?",
              "key.typeusr": "$sSiSgD",
              "key.usr": "s:4main5ModelC12dataParallelSiSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let _model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_model</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 25,
              "key.name": "_model",
              "key.namelength": 6,
              "key.nameoffset": 824,
              "key.offset": 820,
              "key.parsed_declaration": "let _model: OpaquePointer",
              "key.parsed_scope.end": 30,
              "key.parsed_scope.start": 30,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main5ModelC6_models13OpaquePointerVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var owner: <Type usr=\"s:4main5ModelC\">Model</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>owner</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "owner",
              "key.namelength": 5,
              "key.nameoffset": 852,
              "key.offset": 848,
              "key.parsed_declaration": "var owner: Model? = nil",
              "key.parsed_scope.end": 31,
              "key.parsed_scope.start": 31,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "Model?",
              "key.typeusr": "$s4main5ModelCSgD",
              "key.usr": "s:4main5ModelC5ownerACSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private func ownerHook()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 875
                }
              ],
              "key.bodylength": 352,
              "key.bodyoffset": 901,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>ownerHook</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 371,
              "key.name": "ownerHook()",
              "key.namelength": 11,
              "key.nameoffset": 888,
              "key.offset": 883,
              "key.parsed_declaration": "private func ownerHook()",
              "key.parsed_scope.end": 41,
              "key.parsed_scope.start": 33,
              "key.substructure": [],
              "key.typename": "(Model) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main5ModelC9ownerHook33_007C620AA3A419D5FA79455DE67AC8DBLLyyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>required init(_ model: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.required",
                  "key.length": 8,
                  "key.offset": 1258
                }
              ],
              "key.bodylength": 118,
              "key.bodyoffset": 1297,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 149,
              "key.name": "init(_:)",
              "key.namelength": 28,
              "key.nameoffset": 1267,
              "key.offset": 1267,
              "key.parsed_declaration": "required init(_ model: OpaquePointer)",
              "key.parsed_scope.end": 47,
              "key.parsed_scope.start": 43,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Model.Type) -> (OpaquePointer) -> Model",
              "key.typeusr": "$sy4main5ModelCs13OpaquePointerVcD",
              "key.usr": "s:4main5ModelCyACs13OpaquePointerVcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>func obtainUnderlyingModel(_ owner: <Type usr=\"s:4main5ModelC\">Model</Type>) -&gt; <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.bodylength": 218,
              "key.bodyoffset": 1481,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>obtainUnderlyingModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>owner</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 280,
              "key.name": "obtainUnderlyingModel(_:)",
              "key.namelength": 37,
              "key.nameoffset": 1425,
              "key.offset": 1420,
              "key.parsed_declaration": "func obtainUnderlyingModel(_ owner: Model) -> OpaquePointer",
              "key.parsed_scope.end": 54,
              "key.parsed_scope.start": 49,
              "key.substructure": [],
              "key.typename": "(Model) -> (Model) -> OpaquePointer",
              "key.typeusr": "$sys13OpaquePointerV4main5ModelCcD",
              "key.usr": "s:4main5ModelC016obtainUnderlyingB0ys13OpaquePointerVACF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func callAsFunction(_ inputs: <Type usr=\"s:4main5ModelC2IOC\">IO</Type>...) -&gt; <Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1704
                }
              ],
              "key.bodylength": 189,
              "key.bodyoffset": 1755,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>callAsFunction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 234,
              "key.name": "callAsFunction(_:)",
              "key.namelength": 31,
              "key.nameoffset": 1716,
              "key.offset": 1711,
              "key.parsed_declaration": "public func callAsFunction(_ inputs: IO...) -> IO",
              "key.parsed_scope.end": 60,
              "key.parsed_scope.start": 56,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_SayAA013DynamicGraph_I0_pGAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: [DynamicGraph_Any], streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC14callAsFunction6inputs_13streamContextSay9AnyTensorQzGx_AA013DynamicGraph_I0_pdAA06StreamH0CSgtAA0kl1_iJ5GroupRzlF\">callAsFunction&lt;T&gt;(inputs: T, _: DynamicGraph_Any..., streamContext: StreamContext? = nil) -&gt; [T.AnyTensor] where T : DynamicGraph_AnyTensorGroup</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_cnnp_model_io_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_cnnp_model_io_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 1764,
                  "key.offset": 1760,
                  "key.parsed_declaration": "let _inputs: [ccv_cnnp_model_io_t?] = inputs.map { $0._io }",
                  "key.parsed_scope.end": 57,
                  "key.parsed_scope.start": 57,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _io: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_io</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 69,
                  "key.name": "_io",
                  "key.namelength": 3,
                  "key.nameoffset": 1828,
                  "key.offset": 1824,
                  "key.parsed_declaration": "let _io = ccv_cnnp_model_apply(_model, _inputs, Int32(inputs.count))!",
                  "key.parsed_scope.end": 58,
                  "key.parsed_scope.start": 58,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF3_ioL_Xevp"
                }
              ],
              "key.typename": "(Model) -> (Model.IO...) -> Model.IO",
              "key.typeusr": "$sy4main5ModelC2IOCAEd_tcD",
              "key.usr": "s:4main5ModelC14callAsFunctionyAC2IOCAFd_tF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>deinit</Declaration>",
              "key.bodylength": 211,
              "key.bodyoffset": 1957,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 220,
              "key.name": "deinit",
              "key.namelength": 6,
              "key.nameoffset": 1949,
              "key.offset": 1949,
              "key.parsed_declaration": "deinit",
              "key.parsed_scope.end": 69,
              "key.parsed_scope.start": 62,
              "key.substructure": [],
              "key.typename": "(Model) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main5ModelCfd"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model</Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 2180
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2173
                }
              ],
              "key.bodylength": 3,
              "key.bodyoffset": 2208,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 2,
                  "key.offset": 2204
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>Parameters</decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.class>",
              "key.inheritedtypes": [
                {
                  "key.name": "IO"
                }
              ],
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 26,
              "key.name": "Parameters",
              "key.namelength": 10,
              "key.nameoffset": 2192,
              "key.offset": 2186,
              "key.parsed_declaration": "public final class Parameters: IO",
              "key.parsed_scope.end": 72,
              "key.parsed_scope.start": 71,
              "key.typename": "Model.Parameters.Type",
              "key.typeusr": "$s4main5ModelC10ParametersCmD",
              "key.usr": "s:4main5ModelC10ParametersC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var _parameters: ccv_cnnp_model_io_t?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_parameters</decl.name>: <decl.var.type>ccv_cnnp_model_io_t?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 43,
              "key.name": "_parameters",
              "key.namelength": 11,
              "key.nameoffset": 2220,
              "key.offset": 2216,
              "key.parsed_declaration": "var _parameters: ccv_cnnp_model_io_t? = nil",
              "key.parsed_scope.end": 74,
              "key.parsed_scope.start": 74,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5ModelC11_parametersXevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var parameters: <Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2347
                }
              ],
              "key.bodylength": 255,
              "key.bodyoffset": 2382,
              "key.doc.column": 14,
              "key.doc.comment": "Abstract representation of the stateful components from the model.",
              "key.doc.declaration": "public var parameters: Parameters { get }",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"79\" column=\"14\"><Name>parameters</Name><USR>s:4main5ModelC10parametersAC10ParametersCvp</USR><Declaration>public var parameters: Parameters { get }</Declaration><CommentParts><Abstract><Para>Abstract representation of the stateful components from the model.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 79,
              "key.doc.name": "parameters",
              "key.doc.type": "Other",
              "key.doclength": 81,
              "key.docoffset": 2263,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 284,
              "key.name": "parameters",
              "key.namelength": 10,
              "key.nameoffset": 2358,
              "key.offset": 2354,
              "key.parsed_declaration": "public var parameters: Parameters",
              "key.parsed_scope.end": 86,
              "key.parsed_scope.start": 79,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC10parameters3forAC10ParametersCAC0E4TypeO_tF\">parameters(for:)</RelatedName>"
                }
              ],
              "key.typename": "Model.Parameters",
              "key.typeusr": "$s4main5ModelC10ParametersCD",
              "key.usr": "s:4main5ModelC10parametersAC10ParametersCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:4main5ModelC\">Model</Type>.ParametersType</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2642
                }
              ],
              "key.bodylength": 33,
              "key.bodyoffset": 2670,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<decl.name>ParametersType</decl.name></decl.enum>",
              "key.kind": "source.lang.swift.decl.enum",
              "key.length": 55,
              "key.name": "ParametersType",
              "key.namelength": 14,
              "key.nameoffset": 2654,
              "key.offset": 2649,
              "key.parsed_declaration": "public enum ParametersType",
              "key.parsed_scope.end": 91,
              "key.parsed_scope.start": 88,
              "key.substructure": [
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 11,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 2675,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case weight</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>weight</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 6,
                      "key.name": "weight",
                      "key.namelength": 6,
                      "key.nameoffset": 2680,
                      "key.offset": 2680,
                      "key.parsed_declaration": "case weight",
                      "key.parsed_scope.end": 89,
                      "key.parsed_scope.start": 89,
                      "key.typename": "(Model.ParametersType.Type) -> Model.ParametersType",
                      "key.typeusr": "$sy4main5ModelC14ParametersTypeOAEmcD",
                      "key.usr": "s:4main5ModelC14ParametersTypeO6weightyA2EmF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 9,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 2691,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case bias</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bias</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 4,
                      "key.name": "bias",
                      "key.namelength": 4,
                      "key.nameoffset": 2696,
                      "key.offset": 2696,
                      "key.parsed_declaration": "case bias",
                      "key.parsed_scope.end": 90,
                      "key.parsed_scope.start": 90,
                      "key.typename": "(Model.ParametersType.Type) -> Model.ParametersType",
                      "key.typeusr": "$sy4main5ModelC14ParametersTypeOAEmcD",
                      "key.usr": "s:4main5ModelC14ParametersTypeO4biasyA2EmF"
                    }
                  ]
                }
              ],
              "key.typename": "Model.ParametersType.Type",
              "key.typeusr": "$s4main5ModelC14ParametersTypeOmD",
              "key.usr": "s:4main5ModelC14ParametersTypeO"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private var _biasParameters: ccv_cnnp_model_io_t?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 2708
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_biasParameters</decl.name>: <decl.var.type>ccv_cnnp_model_io_t?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 47,
              "key.name": "_biasParameters",
              "key.namelength": 15,
              "key.nameoffset": 2720,
              "key.offset": 2716,
              "key.parsed_declaration": "private var _biasParameters: ccv_cnnp_model_io_t? = nil",
              "key.parsed_scope.end": 93,
              "key.parsed_scope.start": 93,
              "key.setter_accessibility": "source.lang.swift.accessibility.private",
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5ModelC15_biasParameters33_007C620AA3A419D5FA79455DE67AC8DBLLXevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private var _weightParameters: ccv_cnnp_model_io_t?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 2766
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_weightParameters</decl.name>: <decl.var.type>ccv_cnnp_model_io_t?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 49,
              "key.name": "_weightParameters",
              "key.namelength": 17,
              "key.nameoffset": 2778,
              "key.offset": 2774,
              "key.parsed_declaration": "private var _weightParameters: ccv_cnnp_model_io_t? = nil",
              "key.parsed_scope.end": 94,
              "key.parsed_scope.start": 94,
              "key.setter_accessibility": "source.lang.swift.accessibility.private",
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5ModelC17_weightParameters33_007C620AA3A419D5FA79455DE67AC8DBLLXevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func parameters(for type: <Type usr=\"s:4main5ModelC14ParametersTypeO\">ParametersType</Type>) -&gt; <Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3093
                }
              ],
              "key.bodylength": 753,
              "key.bodyoffset": 3157,
              "key.doc.column": 15,
              "key.doc.comment": " Broadly speaking, you can have two types of parameters, weight and bias.\n You can get them in abstract fashion with this method.\n\n - Parameter type: Whether it is weight or bias.\n - Returns: An abstract representation of parameters.",
              "key.doc.declaration": "public func parameters(for type: ParametersType) -> Parameters",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"103\" column=\"15\"><Name>parameters(for:)</Name><USR>s:4main5ModelC10parameters3forAC10ParametersCAC0E4TypeO_tF</USR><Declaration>public func parameters(for type: ParametersType) -&gt; Parameters</Declaration><CommentParts><Abstract><Para>Broadly speaking, you can have two types of parameters, weight and bias. You can get them in abstract fashion with this method.</Para></Abstract><Parameters><Parameter><Name>type</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether it is weight or bias.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>An abstract representation of parameters.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 103,
              "key.doc.name": "parameters(for:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Whether it is weight or bias."
                    }
                  ],
                  "name": "type"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "An abstract representation of parameters."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 263,
              "key.docoffset": 2827,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>parameters</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main5ModelC14ParametersTypeO\">ParametersType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 811,
              "key.name": "parameters(for:)",
              "key.namelength": 36,
              "key.nameoffset": 3105,
              "key.offset": 3100,
              "key.parsed_declaration": "public func parameters(for type: ParametersType) -> Parameters",
              "key.parsed_scope.end": 122,
              "key.parsed_scope.start": 103,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC10parametersAC10ParametersCvp\">parameters</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(Model) -> (Model.ParametersType) -> Model.Parameters",
              "key.typeusr": "$s3for4main5ModelC10ParametersCAD0D4TypeO_tcD",
              "key.usr": "s:4main5ModelC10parameters3forAC10ParametersCAC0E4TypeO_tF"
            }
          ],
          "key.typename": "Model.Type",
          "key.typeusr": "$s4main5ModelCmD",
          "key.usr": "s:4main5ModelC"
        },
        {
          "key.annotated_decl": "<Declaration>public class Model</Declaration>",
          "key.bodylength": 252,
          "key.bodyoffset": 3933,
          "key.doc.column": 14,
          "key.doc.declaration": "public class Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"5\" column=\"14\"><Name>Model</Name><USR>s:4main5ModelC</USR><Declaration>public class Model</Declaration><CommentParts><Abstract><Para>A model is a base class for stateful operations on a dynamic graph. It can be use to construct computations statically, thus, more efficient.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Model",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Model</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 270,
          "key.name": "Model",
          "key.namelength": 5,
          "key.nameoffset": 3926,
          "key.offset": 3916,
          "key.parsed_declaration": "extension Model",
          "key.parsed_scope.end": 135,
          "key.parsed_scope.start": 126,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func copy() -&gt; <Type usr=\"s:4main5ModelC\">Self</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4079
                }
              ],
              "key.bodylength": 76,
              "key.bodyoffset": 4107,
              "key.doc.column": 15,
              "key.doc.comment": "Make a copy of the model. This won't copy over the parameters. If you want, you need to copy\nparameters over explicitly.",
              "key.doc.declaration": "public func copy() -> Self",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"131\" column=\"15\"><Name>copy()</Name><USR>s:4main5ModelC4copyACXDyF</USR><Declaration>public func copy() -&gt; Self</Declaration><CommentParts><Abstract><Para>Make a copy of the model. This won’t copy over the parameters. If you want, you need to copy parameters over explicitly.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 131,
              "key.doc.name": "copy()",
              "key.doc.type": "Function",
              "key.doclength": 140,
              "key.docoffset": 3936,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>copy</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Self</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 98,
              "key.name": "copy()",
              "key.namelength": 6,
              "key.nameoffset": 4091,
              "key.offset": 4086,
              "key.parsed_declaration": "public func copy() -> Self",
              "key.parsed_scope.end": 134,
              "key.parsed_scope.start": 131,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let newModel: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newModel</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 48,
                  "key.name": "newModel",
                  "key.namelength": 8,
                  "key.nameoffset": 4116,
                  "key.offset": 4112,
                  "key.parsed_declaration": "let newModel = Self(ccv_cnnp_model_copy(_model))",
                  "key.parsed_scope.end": 132,
                  "key.parsed_scope.start": 132,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC4copyACXDyF03newB0L_Xevp"
                }
              ],
              "key.typename": "(Model) -> () -> Self",
              "key.typeusr": "$s4main5ModelCXDycD",
              "key.usr": "s:4main5ModelC4copyACXDyF"
            }
          ],
          "key.typename": "Model.Type",
          "key.typeusr": "$s4main5ModelCmD",
          "key.usr": "s:4main5ModelC"
        },
        {
          "key.annotated_decl": "<Declaration>public class Model</Declaration>",
          "key.bodylength": 1134,
          "key.bodyoffset": 4250,
          "key.doc.column": 14,
          "key.doc.comment": "MARK - Functional and Sequential Models",
          "key.doc.declaration": "public class Model",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"5\" column=\"14\"><Name>Model</Name><USR>s:4main5ModelC</USR><Declaration>public class Model</Declaration><CommentParts><Abstract><Para>A model is a base class for stateful operations on a dynamic graph. It can be use to construct computations statically, thus, more efficient.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "Model",
          "key.doc.type": "Class",
          "key.doclength": 44,
          "key.docoffset": 4188,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Model</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1152,
          "key.name": "Model",
          "key.namelength": 5,
          "key.nameoffset": 4243,
          "key.offset": 4233,
          "key.parsed_declaration": "extension Model",
          "key.parsed_scope.end": 170,
          "key.parsed_scope.start": 139,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public convenience init(_ inputs: [<Type usr=\"s:4main5ModelC2IOC\">IO</Type>], _ outputs: [<Type usr=\"s:4main5ModelC2IOC\">IO</Type>], name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.convenience",
                  "key.length": 11,
                  "key.offset": 4601
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4594
                }
              ],
              "key.bodylength": 267,
              "key.bodyoffset": 4671,
              "key.doc.column": 22,
              "key.doc.comment": " You can compose a new model from old models when applying IO on them.\n\n - Parameters:\n   - inputs: The input IOs for the new model, usually it is some set of Input objects.\n   - outputs: The output IOs for the new model, usually it is outputs of some other models.\n   - name: The name of the new model.",
              "key.doc.declaration": "public convenience init(_ inputs: [IO], _ outputs: [IO], name: String = \"\")",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"149\" column=\"22\"><Name>init(_:_:name:)</Name><USR>s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc</USR><Declaration>public convenience init(_ inputs: [IO], _ outputs: [IO], name: String = &quot;&quot;)</Declaration><CommentParts><Abstract><Para>You can compose a new model from old models when applying IO on them.</Para></Abstract><Parameters><Parameter><Name>inputs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The input IOs for the new model, usually it is some set of Input objects.</Para></Discussion></Parameter><Parameter><Name>outputs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The output IOs for the new model, usually it is outputs of some other models.</Para></Discussion></Parameter><Parameter><Name>name</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The name of the new model.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 149,
              "key.doc.name": "init(_:_:name:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The input IOs for the new model, usually it is some set of Input objects."
                    }
                  ],
                  "name": "inputs"
                },
                {
                  "discussion": [
                    {
                      "Para": "The output IOs for the new model, usually it is outputs of some other models."
                    }
                  ],
                  "name": "outputs"
                },
                {
                  "discussion": [
                    {
                      "Para": "The name of the new model."
                    }
                  ],
                  "name": "name"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 337,
              "key.docoffset": 4254,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>inputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>outputs</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 326,
              "key.name": "init(_:_:name:)",
              "key.namelength": 56,
              "key.nameoffset": 4613,
              "key.offset": 4613,
              "key.parsed_declaration": "public convenience init(_ inputs: [IO], _ outputs: [IO], name: String = \"\")",
              "key.parsed_scope.end": 155,
              "key.parsed_scope.start": 149,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC_4nameACSayACG_SStcfc\">init(_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _inputs: [ccv_cnnp_model_io_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_inputs</decl.name>: <decl.var.type>[ccv_cnnp_model_io_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "_inputs",
                  "key.namelength": 7,
                  "key.nameoffset": 4680,
                  "key.offset": 4676,
                  "key.parsed_declaration": "let _inputs: [ccv_cnnp_model_io_t?] = inputs.map { $0._io }",
                  "key.parsed_scope.end": 150,
                  "key.parsed_scope.start": 150,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc7_inputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _outputs: [ccv_cnnp_model_io_t?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_outputs</decl.name>: <decl.var.type>[ccv_cnnp_model_io_t?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 61,
                  "key.name": "_outputs",
                  "key.namelength": 8,
                  "key.nameoffset": 4744,
                  "key.offset": 4740,
                  "key.parsed_declaration": "let _outputs: [ccv_cnnp_model_io_t?] = outputs.map { $0._io }",
                  "key.parsed_scope.end": 151,
                  "key.parsed_scope.start": 151,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc8_outputsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _model: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_model</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 107,
                  "key.name": "_model",
                  "key.namelength": 6,
                  "key.nameoffset": 4810,
                  "key.offset": 4806,
                  "key.parsed_declaration": "let _model = ccv_cnnp_model_new(\n  _inputs, Int32(inputs.count), _outputs, Int32(outputs.count), name)!",
                  "key.parsed_scope.end": 152,
                  "key.parsed_scope.start": 152,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC6_models13OpaquePointerVvp\">_model</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc6_modelL_Xevp"
                }
              ],
              "key.typename": "(Model.Type) -> ([Model.IO], [Model.IO], String) -> Model",
              "key.typeusr": "$s__4name4main5ModelCSayAD2IOCG_AGSStcD",
              "key.usr": "s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public convenience init(_ models: [<Type usr=\"s:4main5ModelC\">Model</Type>], name: <Type usr=\"s:SS\">String</Type> = &quot;&quot;)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.convenience",
                  "key.length": 11,
                  "key.offset": 5161
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5154
                }
              ],
              "key.bodylength": 164,
              "key.bodyoffset": 5217,
              "key.doc.column": 22,
              "key.doc.comment": " You can compose a new model of a list of models assuming one's output is another's input.\n\n - Parameters:\n   - models: The array of models.\n   - name: The name of the new model.",
              "key.doc.declaration": "public convenience init(_ models: [Model], name: String = \"\")",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"164\" column=\"22\"><Name>init(_:name:)</Name><USR>s:4main5ModelC_4nameACSayACG_SStcfc</USR><Declaration>public convenience init(_ models: [Model], name: String = &quot;&quot;)</Declaration><CommentParts><Abstract><Para>You can compose a new model of a list of models assuming one’s output is another’s input.</Para></Abstract><Parameters><Parameter><Name>models</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The array of models.</Para></Discussion></Parameter><Parameter><Name>name</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The name of the new model.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 164,
              "key.doc.name": "init(_:name:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The array of models."
                    }
                  ],
                  "name": "models"
                },
                {
                  "discussion": [
                    {
                      "Para": "The name of the new model."
                    }
                  ],
                  "name": "name"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 208,
              "key.docoffset": 4943,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>models</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:4main5ModelC\">Model</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type> = &quot;&quot;</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 209,
              "key.name": "init(_:name:)",
              "key.namelength": 42,
              "key.nameoffset": 5173,
              "key.offset": 5173,
              "key.parsed_declaration": "public convenience init(_ models: [Model], name: String = \"\")",
              "key.parsed_scope.end": 168,
              "key.parsed_scope.start": 164,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelCyACs13OpaquePointerVcfc\">init(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC__4nameACSayAC2IOCG_AGSStcfc\">init(_:_:name:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _models: [<Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_models</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 56,
                  "key.name": "_models",
                  "key.namelength": 7,
                  "key.nameoffset": 5226,
                  "key.offset": 5222,
                  "key.parsed_declaration": "let _models: [OpaquePointer?] = models.map { $0._model }",
                  "key.parsed_scope.end": 165,
                  "key.parsed_scope.start": 165,
                  "key.typename": "[OpaquePointer?]",
                  "key.typeusr": "$sSays13OpaquePointerVSgGD",
                  "key.usr": "s:4main5ModelC_4nameACSayACG_SStcfc7_modelsL_Says13OpaquePointerVSgGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _model: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_model</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 73,
                  "key.name": "_model",
                  "key.namelength": 6,
                  "key.nameoffset": 5287,
                  "key.offset": 5283,
                  "key.parsed_declaration": "let _model = ccv_cnnp_sequential_new(_models, Int32(models.count), name)!",
                  "key.parsed_scope.end": 166,
                  "key.parsed_scope.start": 166,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC6_models13OpaquePointerVvp\">_model</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5ModelC_4nameACSayACG_SStcfc6_modelL_Xevp"
                }
              ],
              "key.typename": "(Model.Type) -> ([Model], String) -> Model",
              "key.typeusr": "$s_4name4main5ModelCSayADG_SStcD",
              "key.usr": "s:4main5ModelC_4nameACSayACG_SStcfc"
            }
          ],
          "key.typename": "Model.Type",
          "key.typeusr": "$s4main5ModelCmD",
          "key.usr": "s:4main5ModelC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class Input : <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 5433
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 5426
            }
          ],
          "key.bodylength": 75,
          "key.bodyoffset": 5462,
          "key.doc.column": 20,
          "key.doc.comment": "Model Inputs for Functional Model",
          "key.doc.declaration": "public final class Input : Model.IO",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift\" line=\"174\" column=\"20\"><Name>Input</Name><USR>s:4main5InputC</USR><Declaration>public final class Input : Model.IO</Declaration><CommentParts><Abstract><Para>Model Inputs for Functional Model</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 174,
          "key.doc.name": "Input",
          "key.doc.type": "Class",
          "key.doclength": 38,
          "key.docoffset": 5387,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 8,
              "key.offset": 5452
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Input</decl.name> : <ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.class>",
          "key.inheritedtypes": [
            {
              "key.name": "Model.IO"
            }
          ],
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 99,
          "key.name": "Input",
          "key.namelength": 5,
          "key.nameoffset": 5445,
          "key.offset": 5439,
          "key.parsed_declaration": "public final class Input: Model.IO",
          "key.parsed_scope.end": 179,
          "key.parsed_scope.start": 174,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5465
                }
              ],
              "key.bodylength": 55,
              "key.bodyoffset": 5480,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 64,
              "key.name": "init()",
              "key.namelength": 6,
              "key.nameoffset": 5472,
              "key.offset": 5472,
              "key.parsed_declaration": "public init()",
              "key.parsed_scope.end": 178,
              "key.parsed_scope.start": 175,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let _io: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Model.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_io</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 27,
                  "key.name": "_io",
                  "key.namelength": 3,
                  "key.nameoffset": 5489,
                  "key.offset": 5485,
                  "key.parsed_declaration": "let _io = ccv_cnnp_input()!",
                  "key.parsed_scope.end": 176,
                  "key.parsed_scope.start": 176,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main5ModelC2IOC3_ioXevp\">_io</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main5InputCACycfc3_ioL_Xevp"
                }
              ],
              "key.typename": "(Input.Type) -> () -> Input",
              "key.typeusr": "$s4main5InputCycD",
              "key.usr": "s:4main5InputCACycfc"
            }
          ],
          "key.typename": "Input.Type",
          "key.typeusr": "$s4main5InputCmD",
          "key.usr": "s:4main5InputC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 2045,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func .+ &lt;T&gt;(left: <Type usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 108
            }
          ],
          "key.bodylength": 38,
          "key.bodyoffset": 178,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>.+ </decl.name>&lt;<decl.generic_type_param usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 102,
          "key.name": ".+(_:_:)",
          "key.namelength": 51,
          "key.nameoffset": 120,
          "key.offset": 115,
          "key.parsed_declaration": "public func .+ <T: DynamicGraph.TensorGroup>(left: T, right: T) -> T",
          "key.parsed_scope.end": 7,
          "key.parsed_scope.start": 5,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main2zpoiyAA5ModelC2IOCAF_AFtF\">.+ (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 127
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 124,
              "key.offset": 124,
              "key.parsed_declaration": "public func .+ <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 5,
              "key.parsed_scope.start": 5,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, T) -> T",
          "key.typeusr": "$syxx_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func .+ (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 219
            }
          ],
          "key.bodylength": 29,
          "key.bodyoffset": 281,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>.+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 85,
          "key.name": ".+(_:_:)",
          "key.namelength": 36,
          "key.nameoffset": 231,
          "key.offset": 226,
          "key.parsed_declaration": "public func .+ (left: Model.IO, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 11,
          "key.parsed_scope.start": 9,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main2zpoiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">.+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
          "key.usr": "s:4main2zpoiyAA5ModelC2IOCAF_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func .* &lt;T&gt;(left: <Type usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 354
            }
          ],
          "key.bodylength": 51,
          "key.bodyoffset": 424,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>.* </decl.name>&lt;<decl.generic_type_param usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 115,
          "key.name": ".*(_:_:)",
          "key.namelength": 51,
          "key.nameoffset": 366,
          "key.offset": 361,
          "key.parsed_declaration": "public func .* <T: DynamicGraph.TensorGroup>(left: T, right: T) -> T",
          "key.parsed_scope.end": 16,
          "key.parsed_scope.start": 14,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main2zmoiyAA5ModelC2IOCAF_AFtF\">.* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 373
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 370,
              "key.offset": 370,
              "key.parsed_declaration": "public func .* <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 14,
              "key.parsed_scope.start": 14,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, T) -> T",
          "key.typeusr": "$syxx_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func .* (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 478
            }
          ],
          "key.bodylength": 29,
          "key.bodyoffset": 540,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>.* </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 85,
          "key.name": ".*(_:_:)",
          "key.namelength": 36,
          "key.nameoffset": 490,
          "key.offset": 485,
          "key.parsed_declaration": "public func .* (left: Model.IO, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 20,
          "key.parsed_scope.start": 18,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main2zmoiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">.* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
          "key.usr": "s:4main2zmoiyAA5ModelC2IOCAF_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func + &lt;T&gt;(left: <Type usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 607
            }
          ],
          "key.bodylength": 51,
          "key.bodyoffset": 676,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 114,
          "key.name": "+(_:_:)",
          "key.namelength": 50,
          "key.nameoffset": 619,
          "key.offset": 614,
          "key.parsed_declaration": "public func + <T: DynamicGraph.TensorGroup>(left: T, right: T) -> T",
          "key.parsed_scope.end": 25,
          "key.parsed_scope.start": 23,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1poiyAA5ModelC2IOCAF_AFtF\">+ (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1poiyA2B_ABtFZ\">+ (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 625
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 622,
              "key.offset": 622,
              "key.parsed_declaration": "public func + <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 23,
              "key.parsed_scope.start": 23,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, T) -> T",
          "key.typeusr": "$syxx_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func + (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 730
            }
          ],
          "key.bodylength": 29,
          "key.bodyoffset": 791,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 84,
          "key.name": "+(_:_:)",
          "key.namelength": 35,
          "key.nameoffset": 742,
          "key.offset": 737,
          "key.parsed_declaration": "public func + (left: Model.IO, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 29,
          "key.parsed_scope.start": 27,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1poiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1poiyA2B_ABtFZ\">+ (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
          "key.usr": "s:4main1poiyAA5ModelC2IOCAF_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func - &lt;T&gt;(left: <Type usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 862
            }
          ],
          "key.bodylength": 68,
          "key.bodyoffset": 931,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 131,
          "key.name": "-(_:_:)",
          "key.namelength": 50,
          "key.nameoffset": 874,
          "key.offset": 869,
          "key.parsed_declaration": "public func - <T: DynamicGraph.TensorGroup>(left: T, right: T) -> T",
          "key.parsed_scope.end": 34,
          "key.parsed_scope.start": 32,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyAA5ModelC2IOCAF_AFtF\">- (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyAA5ModelC2IOCAFF\">- (_: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1sopyA2BFZ\">- (_: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1soiyA2B_ABtFZ\">- (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 880
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 877,
              "key.offset": 877,
              "key.parsed_declaration": "public func - <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 32,
              "key.parsed_scope.start": 32,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, T) -> T",
          "key.typeusr": "$syxx_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func - (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1002
            }
          ],
          "key.bodylength": 44,
          "key.bodyoffset": 1063,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 99,
          "key.name": "-(_:_:)",
          "key.namelength": 35,
          "key.nameoffset": 1014,
          "key.offset": 1009,
          "key.parsed_declaration": "public func - (left: Model.IO, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 38,
          "key.parsed_scope.start": 36,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyAA5ModelC2IOCAFF\">- (_: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1sopyA2BFZ\">- (_: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1soiyA2B_ABtFZ\">- (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
          "key.usr": "s:4main1soiyAA5ModelC2IOCAF_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * &lt;T&gt;(left: <Type usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1135
            }
          ],
          "key.bodylength": 54,
          "key.bodyoffset": 1204,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 117,
          "key.name": "*(_:_:)",
          "key.namelength": 50,
          "key.nameoffset": 1147,
          "key.offset": 1142,
          "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup>(left: T, right: T) -> T",
          "key.parsed_scope.end": 43,
          "key.parsed_scope.start": 41,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_AFtF\">* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCSf_AFtF\">* (_: Float, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_SftF\">* (_: Model.IO, _: Float) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 1153
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 1150,
              "key.offset": 1150,
              "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 41,
              "key.parsed_scope.start": 41,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, T) -> T",
          "key.typeusr": "$syxx_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1261
            }
          ],
          "key.bodylength": 32,
          "key.bodyoffset": 1322,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 87,
          "key.name": "*(_:_:)",
          "key.namelength": 35,
          "key.nameoffset": 1273,
          "key.offset": 1268,
          "key.parsed_declaration": "public func * (left: Model.IO, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 47,
          "key.parsed_scope.start": 45,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCSf_AFtF\">* (_: Float, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_SftF\">* (_: Model.IO, _: Float) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_AEtcD",
          "key.usr": "s:4main1moiyAA5ModelC2IOCAF_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * &lt;T&gt;(left: <Type usr=\"s:Sf\">Float</Type>, right: <Type usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1389
            }
          ],
          "key.bodylength": 55,
          "key.bodyoffset": 1462,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 122,
          "key.name": "*(_:_:)",
          "key.namelength": 54,
          "key.nameoffset": 1401,
          "key.offset": 1396,
          "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup>(left: Float, right: T) -> T",
          "key.parsed_scope.end": 52,
          "key.parsed_scope.start": 50,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_AFtF\">* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCSf_AFtF\">* (_: Float, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_SftF\">* (_: Model.IO, _: Float) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 1407
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 1404,
              "key.offset": 1404,
              "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 50,
              "key.parsed_scope.start": 50,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (Float, T) -> T",
          "key.typeusr": "$syxSf_xtc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * &lt;T&gt;(left: <Type usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>, right: <Type usr=\"s:Sf\">Float</Type>) -&gt; <Type usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1520
            }
          ],
          "key.bodylength": 55,
          "key.bodyoffset": 1593,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 122,
          "key.name": "*(_:_:)",
          "key.namelength": 54,
          "key.nameoffset": 1532,
          "key.offset": 1527,
          "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup>(left: T, right: Float) -> T",
          "key.parsed_scope.end": 56,
          "key.parsed_scope.start": 54,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_AFtF\">* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCSf_AFtF\">* (_: Float, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_SftF\">* (_: Model.IO, _: Float) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 1538
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 1535,
              "key.offset": 1535,
              "key.parsed_declaration": "public func * <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 54,
              "key.parsed_scope.start": 54,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T, Float) -> T",
          "key.typeusr": "$syxx_Sftc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * (left: <Type usr=\"s:Sf\">Float</Type>, right: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1651
            }
          ],
          "key.bodylength": 31,
          "key.bodyoffset": 1709,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 83,
          "key.name": "*(_:_:)",
          "key.namelength": 32,
          "key.nameoffset": 1663,
          "key.offset": 1658,
          "key.parsed_declaration": "public func * (left: Float, right: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 60,
          "key.parsed_scope.start": 58,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_AFtF\">* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_SftF\">* (_: Model.IO, _: Float) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Float, Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCSf_AEtcD",
          "key.usr": "s:4main1moiyAA5ModelC2IOCSf_AFtF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public func * (left: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>, right: <Type usr=\"s:Sf\">Float</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1743
            }
          ],
          "key.bodylength": 31,
          "key.bodyoffset": 1801,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>left</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>right</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.infix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 83,
          "key.name": "*(_:_:)",
          "key.namelength": 32,
          "key.nameoffset": 1755,
          "key.offset": 1750,
          "key.parsed_declaration": "public func * (left: Model.IO, right: Float) -> Model.IO",
          "key.parsed_scope.end": 64,
          "key.parsed_scope.start": 62,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCAF_AFtF\">* (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxSf_xtAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyxx_SftAA24DynamicGraph_TensorGroupRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1moiyAA5ModelC2IOCSf_AFtF\">* (_: Float, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1moiyA2B_ABtFZ\">* (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO, Float) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAE_SftcD",
          "key.usr": "s:4main1moiyAA5ModelC2IOCAF_SftF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public prefix func - &lt;T&gt;(tensor: <Type usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.prefix",
              "key.length": 6,
              "key.offset": 1842
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1835
            }
          ],
          "key.bodylength": 54,
          "key.bodyoffset": 1903,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.prefix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>prefix</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>&lt;<decl.generic_type_param usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:4main24DynamicGraph_TensorGroupP\">DynamicGraph_TensorGroup</ref.protocol></decl.generic_type_requirement></decl.function.operator.prefix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 109,
          "key.name": "-(_:)",
          "key.namelength": 42,
          "key.nameoffset": 1854,
          "key.offset": 1849,
          "key.parsed_declaration": "public prefix func - <T: DynamicGraph.TensorGroup>(tensor: T) -> T",
          "key.parsed_scope.end": 68,
          "key.parsed_scope.start": 66,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyAA5ModelC2IOCAF_AFtF\">- (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyAA5ModelC2IOCAFF\">- (_: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1sopyA2BFZ\">- (_: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1soiyA2B_ABtFZ\">- (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>T : <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 24,
                  "key.offset": 1860
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC11TensorGroupa\">TensorGroup</ref.typealias></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "DynamicGraph.TensorGroup"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 27,
              "key.name": "T",
              "key.namelength": 1,
              "key.nameoffset": 1857,
              "key.offset": 1857,
              "key.parsed_declaration": "public prefix func - <T: DynamicGraph.TensorGroup",
              "key.parsed_scope.end": 66,
              "key.parsed_scope.start": 66,
              "key.typename": "T.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF1TL_xmfp"
            }
          ],
          "key.typename": "<T where T : DynamicGraph_TensorGroup> (T) -> T",
          "key.typeusr": "$syxxc4main24DynamicGraph_TensorGroupRzluD",
          "key.usr": "s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public prefix func - (tensor: <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type>) -&gt; <Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC2IOC\">IO</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.prefix",
              "key.length": 6,
              "key.offset": 1967
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1960
            }
          ],
          "key.bodylength": 30,
          "key.bodyoffset": 2013,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Operators.swift",
          "key.fully_annotated_decl": "<decl.function.operator.prefix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>prefix</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>(<decl.var.parameter><decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC2IOC\">IO</ref.class></decl.function.returntype></decl.function.operator.prefix>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 70,
          "key.name": "-(_:)",
          "key.namelength": 20,
          "key.nameoffset": 1979,
          "key.offset": 1974,
          "key.parsed_declaration": "public prefix func - (tensor: Model.IO) -> Model.IO",
          "key.parsed_scope.end": 72,
          "key.parsed_scope.start": 70,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyxx_xtAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1soiyAA5ModelC2IOCAF_AFtF\">- (_: Model.IO, _: Model.IO) -&gt; Model.IO</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main1sopyxxAA24DynamicGraph_TensorGroupRzlF\">- &lt;T&gt;(_: T) -&gt; T where T : DynamicGraph_TensorGroup</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1sopyA2BFZ\">- (_: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float16V1soiyA2B_ABtFZ\">- (_: Float16, _: Float16) -&gt; Float16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"
            },
            {
              "key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"
            }
          ],
          "key.substructure": [],
          "key.typename": "(Model.IO) -> Model.IO",
          "key.typeusr": "$sy4main5ModelC2IOCAEcD",
          "key.usr": "s:4main1sopyAA5ModelC2IOCAFF"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 3281,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct SGDOptimizer : <Type usr=\"s:4main9OptimizerP\">Optimizer</Type>, <Type usr=\"s:4main15OptimizerAddonsP\">OptimizerAddons</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 57
            }
          ],
          "key.bodylength": 1560,
          "key.bodyoffset": 113,
          "key.doc.column": 15,
          "key.doc.comment": "Stochastic gradient descent optimizer.",
          "key.doc.declaration": "public struct SGDOptimizer : Optimizer, OptimizerAddons",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift\" line=\"4\" column=\"15\"><Name>SGDOptimizer</Name><USR>s:4main12SGDOptimizerV</USR><Declaration>public struct SGDOptimizer : Optimizer, OptimizerAddons</Declaration><CommentParts><Abstract><Para>Stochastic gradient descent optimizer.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "SGDOptimizer",
          "key.doc.type": "Class",
          "key.doclength": 43,
          "key.docoffset": 14,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 9,
              "key.offset": 85
            },
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 15,
              "key.offset": 96
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SGDOptimizer</decl.name> : <ref.protocol usr=\"s:4main9OptimizerP\">Optimizer</ref.protocol>, <ref.protocol usr=\"s:4main15OptimizerAddonsP\">OptimizerAddons</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Optimizer"
            },
            {
              "key.name": "OptimizerAddons"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 1610,
          "key.name": "SGDOptimizer",
          "key.namelength": 12,
          "key.nameoffset": 71,
          "key.offset": 64,
          "key.parsed_declaration": "public struct SGDOptimizer: Optimizer, OptimizerAddons",
          "key.parsed_scope.end": 57,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 116
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "graph",
              "key.namelength": 5,
              "key.nameoffset": 127,
              "key.offset": 123,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP5graphAA12DynamicGraphCvp"
                }
              ],
              "key.parsed_declaration": "public let graph: DynamicGraph",
              "key.parsed_scope.end": 5,
              "key.parsed_scope.start": 5,
              "key.typename": "DynamicGraph",
              "key.typeusr": "$s4main12DynamicGraphCD",
              "key.usr": "s:4main12SGDOptimizerV5graphAA12DynamicGraphCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var nesterov: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 149
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>nesterov</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 18,
              "key.name": "nesterov",
              "key.namelength": 8,
              "key.nameoffset": 160,
              "key.offset": 156,
              "key.parsed_declaration": "public var nesterov: Bool",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main12SGDOptimizerV8nesterovSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var rate: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 177
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rate</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 15,
              "key.name": "rate",
              "key.namelength": 4,
              "key.nameoffset": 188,
              "key.offset": 184,
              "key.parsed_declaration": "public var rate: Float",
              "key.parsed_scope.end": 7,
              "key.parsed_scope.start": 7,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SGDOptimizerV4rateSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var scale: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 202
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>scale</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "scale",
              "key.namelength": 5,
              "key.nameoffset": 213,
              "key.offset": 209,
              "key.parsed_declaration": "public var scale: Float",
              "key.parsed_scope.end": 8,
              "key.parsed_scope.start": 8,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SGDOptimizerV5scaleSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var decay: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 228
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>decay</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "decay",
              "key.namelength": 5,
              "key.nameoffset": 239,
              "key.offset": 235,
              "key.parsed_declaration": "public var decay: Float",
              "key.parsed_scope.end": 9,
              "key.parsed_scope.start": 9,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SGDOptimizerV5decaySfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var momentum: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 254
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>momentum</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 19,
              "key.name": "momentum",
              "key.namelength": 8,
              "key.nameoffset": 265,
              "key.offset": 261,
              "key.parsed_declaration": "public var momentum: Float",
              "key.parsed_scope.end": 10,
              "key.parsed_scope.start": 10,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SGDOptimizerV8momentumSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var dampening: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 283
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dampening</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 20,
              "key.name": "dampening",
              "key.namelength": 9,
              "key.nameoffset": 294,
              "key.offset": 290,
              "key.parsed_declaration": "public var dampening: Float",
              "key.parsed_scope.end": 11,
              "key.parsed_scope.start": 11,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main12SGDOptimizerV9dampeningSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var parameters: [<Type usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 313
                }
              ],
              "key.bodylength": 387,
              "key.bodyoffset": 369,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</ref.protocol>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 437,
              "key.name": "parameters",
              "key.namelength": 10,
              "key.nameoffset": 324,
              "key.offset": 320,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP10parametersSayAA26DynamicGraph_AnyParameters_pGvp"
                }
              ],
              "key.parsed_declaration": "public var parameters = [DynamicGraph_AnyParameters]()",
              "key.parsed_scope.end": 25,
              "key.parsed_scope.start": 12,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "[DynamicGraph_AnyParameters]",
              "key.typeusr": "$sSay4main26DynamicGraph_AnyParameters_pGD",
              "key.usr": "s:4main12SGDOptimizerV10parametersSayAA26DynamicGraph_AnyParameters_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var savedAux: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>savedAux</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 35,
              "key.name": "savedAux",
              "key.namelength": 8,
              "key.nameoffset": 765,
              "key.offset": 761,
              "key.parsed_declaration": "var savedAux = [DynamicGraph_Any]()",
              "key.parsed_scope.end": 27,
              "key.parsed_scope.start": 27,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "[DynamicGraph_Any]",
              "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
              "key.usr": "s:4main12SGDOptimizerV8savedAuxSayAA16DynamicGraph_Any_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var minimizer: ccv_nnc_cmd_t { get }</Declaration>",
              "key.bodylength": 317,
              "key.bodyoffset": 829,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minimizer</decl.name>: <decl.var.type>ccv_nnc_cmd_t</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 348,
              "key.name": "minimizer",
              "key.namelength": 9,
              "key.nameoffset": 803,
              "key.offset": 799,
              "key.parsed_declaration": "var minimizer: ccv_nnc_cmd_t",
              "key.parsed_scope.end": 37,
              "key.parsed_scope.start": 28,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12SGDOptimizerV9minimizerXevp"
            },
            {
              "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 49,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 838,
              "key.offset": 834,
              "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
              "key.parsed_scope.end": 29,
              "key.parsed_scope.start": 29,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main12SGDOptimizerV9minimizerXevg6paramsL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, nesterov: <Type usr=\"s:Sb\">Bool</Type>, rate: <Type usr=\"s:Sf\">Float</Type>, scale: <Type usr=\"s:Sf\">Float</Type>, decay: <Type usr=\"s:Sf\">Float</Type>, momentum: <Type usr=\"s:Sf\">Float</Type>, dampening: <Type usr=\"s:Sf\">Float</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1151
                }
              ],
              "key.bodylength": 182,
              "key.bodyoffset": 1291,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>graph</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>nesterov</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rate</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decay</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>momentum</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dampening</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 316,
              "key.name": "init(_:nesterov:rate:scale:decay:momentum:dampening:)",
              "key.namelength": 131,
              "key.nameoffset": 1158,
              "key.offset": 1158,
              "key.parsed_declaration": "public init(\n  _ graph: DynamicGraph, nesterov: Bool, rate: Float, scale: Float, decay: Float, momentum: Float,\n  dampening: Float\n)",
              "key.parsed_scope.end": 50,
              "key.parsed_scope.start": 39,
              "key.substructure": [],
              "key.typename": "(SGDOptimizer.Type) -> (DynamicGraph, Bool, Float, Float, Float, Float, Float) -> SGDOptimizer",
              "key.typeusr": "$s_8nesterov4rate5scale5decay8momentum9dampening4main12SGDOptimizerVAG12DynamicGraphC_SbS5ftcD",
              "key.usr": "s:4main12SGDOptimizerV_8nesterov4rate5scale5decay8momentum9dampeningAcA12DynamicGraphC_SbS5ftcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func step(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1478
                }
              ],
              "key.bodylength": 144,
              "key.bodyoffset": 1527,
              "key.doc.column": 17,
              "key.doc.declaration": "mutating func step(streamContext: StreamContext?)",
              "key.doc.discussion": [
                {
                  "Note": ""
                }
              ],
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"12\" column=\"17\"><Name>step(streamContext:)</Name><USR>s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF</USR><Declaration>mutating func step(streamContext: StreamContext?)</Declaration><CommentParts><Abstract><Para>Update parameters.</Para></Abstract><Parameters><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to execute the update operation.</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Optimizer</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.line": 12,
              "key.doc.name": "step(streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The stream context to execute the update operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 187,
              "key.name": "step(streamContext:)",
              "key.namelength": 35,
              "key.nameoffset": 1490,
              "key.offset": 1485,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF"
                }
              ],
              "key.parsed_declaration": "public func step(streamContext: StreamContext?)",
              "key.parsed_scope.end": 56,
              "key.parsed_scope.start": 52,
              "key.substructure": [],
              "key.typename": "(SGDOptimizer) -> (StreamContext?) -> ()",
              "key.typeusr": "$s13streamContexty4main06StreamB0CSg_tcD",
              "key.usr": "s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF"
            }
          ],
          "key.typename": "SGDOptimizer.Type",
          "key.typeusr": "$s4main12SGDOptimizerVmD",
          "key.usr": "s:4main12SGDOptimizerV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct AdamOptimizer : <Type usr=\"s:4main9OptimizerP\">Optimizer</Type>, <Type usr=\"s:4main15OptimizerAddonsP\">OptimizerAddons</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1696
            }
          ],
          "key.bodylength": 1526,
          "key.bodyoffset": 1753,
          "key.doc.column": 15,
          "key.doc.comment": "Adam optimizer.",
          "key.doc.declaration": "public struct AdamOptimizer : Optimizer, OptimizerAddons",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift\" line=\"60\" column=\"15\"><Name>AdamOptimizer</Name><USR>s:4main13AdamOptimizerV</USR><Declaration>public struct AdamOptimizer : Optimizer, OptimizerAddons</Declaration><CommentParts><Abstract><Para>Adam optimizer.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 60,
          "key.doc.name": "AdamOptimizer",
          "key.doc.type": "Class",
          "key.doclength": 20,
          "key.docoffset": 1676,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 9,
              "key.offset": 1725
            },
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 15,
              "key.offset": 1736
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>AdamOptimizer</decl.name> : <ref.protocol usr=\"s:4main9OptimizerP\">Optimizer</ref.protocol>, <ref.protocol usr=\"s:4main15OptimizerAddonsP\">OptimizerAddons</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Optimizer"
            },
            {
              "key.name": "OptimizerAddons"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 1577,
          "key.name": "AdamOptimizer",
          "key.namelength": 13,
          "key.nameoffset": 1710,
          "key.offset": 1703,
          "key.parsed_declaration": "public struct AdamOptimizer: Optimizer, OptimizerAddons",
          "key.parsed_scope.end": 113,
          "key.parsed_scope.start": 60,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1756
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 23,
              "key.name": "graph",
              "key.namelength": 5,
              "key.nameoffset": 1767,
              "key.offset": 1763,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP5graphAA12DynamicGraphCvp"
                }
              ],
              "key.parsed_declaration": "public let graph: DynamicGraph",
              "key.parsed_scope.end": 61,
              "key.parsed_scope.start": 61,
              "key.typename": "DynamicGraph",
              "key.typeusr": "$s4main12DynamicGraphCD",
              "key.usr": "s:4main13AdamOptimizerV5graphAA12DynamicGraphCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var step: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1789
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>step</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 13,
              "key.name": "step",
              "key.namelength": 4,
              "key.nameoffset": 1800,
              "key.offset": 1796,
              "key.parsed_declaration": "public var step: Int",
              "key.parsed_scope.end": 62,
              "key.parsed_scope.start": 62,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main13AdamOptimizerV4step13streamContextyAA06StreamF0CSg_tF\">step(streamContext:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main13AdamOptimizerV4stepSivp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var rate: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1812
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rate</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 15,
              "key.name": "rate",
              "key.namelength": 4,
              "key.nameoffset": 1823,
              "key.offset": 1819,
              "key.parsed_declaration": "public var rate: Float",
              "key.parsed_scope.end": 63,
              "key.parsed_scope.start": 63,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main13AdamOptimizerV4rateSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var betas: (<Type usr=\"s:Sf\">Float</Type>, <Type usr=\"s:Sf\">Float</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1837
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>betas</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 25,
              "key.name": "betas",
              "key.namelength": 5,
              "key.nameoffset": 1848,
              "key.offset": 1844,
              "key.parsed_declaration": "public var betas: (Float, Float)",
              "key.parsed_scope.end": 64,
              "key.parsed_scope.start": 64,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "(Float, Float)",
              "key.typeusr": "$sSf_SftD",
              "key.usr": "s:4main13AdamOptimizerV5betasSf_Sftvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var decay: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1872
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>decay</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "decay",
              "key.namelength": 5,
              "key.nameoffset": 1883,
              "key.offset": 1879,
              "key.parsed_declaration": "public var decay: Float",
              "key.parsed_scope.end": 65,
              "key.parsed_scope.start": 65,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main13AdamOptimizerV5decaySfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var epsilon: <Type usr=\"s:Sf\">Float</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1898
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>epsilon</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 18,
              "key.name": "epsilon",
              "key.namelength": 7,
              "key.nameoffset": 1909,
              "key.offset": 1905,
              "key.parsed_declaration": "public var epsilon: Float",
              "key.parsed_scope.end": 66,
              "key.parsed_scope.start": 66,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "Float",
              "key.typeusr": "$sSfD",
              "key.usr": "s:4main13AdamOptimizerV7epsilonSfvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var parameters: [<Type usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 1926
                }
              ],
              "key.bodylength": 387,
              "key.bodyoffset": 1982,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</ref.protocol>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 437,
              "key.name": "parameters",
              "key.namelength": 10,
              "key.nameoffset": 1937,
              "key.offset": 1933,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP10parametersSayAA26DynamicGraph_AnyParameters_pGvp"
                }
              ],
              "key.parsed_declaration": "public var parameters = [DynamicGraph_AnyParameters]()",
              "key.parsed_scope.end": 80,
              "key.parsed_scope.start": 67,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "[DynamicGraph_AnyParameters]",
              "key.typeusr": "$sSay4main26DynamicGraph_AnyParameters_pGD",
              "key.usr": "s:4main13AdamOptimizerV10parametersSayAA26DynamicGraph_AnyParameters_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var savedAux: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>savedAux</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 35,
              "key.name": "savedAux",
              "key.namelength": 8,
              "key.nameoffset": 2378,
              "key.offset": 2374,
              "key.parsed_declaration": "var savedAux = [DynamicGraph_Any]()",
              "key.parsed_scope.end": 82,
              "key.parsed_scope.start": 82,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "[DynamicGraph_Any]",
              "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
              "key.usr": "s:4main13AdamOptimizerV8savedAuxSayAA16DynamicGraph_Any_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var minimizer: ccv_nnc_cmd_t { get }</Declaration>",
              "key.bodylength": 309,
              "key.bodyoffset": 2442,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minimizer</decl.name>: <decl.var.type>ccv_nnc_cmd_t</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 340,
              "key.name": "minimizer",
              "key.namelength": 9,
              "key.nameoffset": 2416,
              "key.offset": 2412,
              "key.parsed_declaration": "var minimizer: ccv_nnc_cmd_t",
              "key.parsed_scope.end": 92,
              "key.parsed_scope.start": 83,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main13AdamOptimizerV9minimizerXevp"
            },
            {
              "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 49,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 2451,
              "key.offset": 2447,
              "key.parsed_declaration": "var params = CmdParamsFactory.factory.newParams()",
              "key.parsed_scope.end": 84,
              "key.parsed_scope.start": 84,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main13AdamOptimizerV9minimizerXevg6paramsL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, rate: <Type usr=\"s:Sf\">Float</Type>, step: <Type usr=\"s:Si\">Int</Type> = 1, betas: (<Type usr=\"s:Sf\">Float</Type>, <Type usr=\"s:Sf\">Float</Type>) = (0.9, 0.999), decay: <Type usr=\"s:Sf\">Float</Type> = 0, epsilon: <Type usr=\"s:Sf\">Float</Type> = 1e-8)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2756
                }
              ],
              "key.bodylength": 141,
              "key.bodyoffset": 2915,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>graph</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rate</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>step</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 1</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>betas</decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type> = (0.9, 0.999)</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>decay</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>epsilon</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 1e-8</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 294,
              "key.name": "init(_:rate:step:betas:decay:epsilon:)",
              "key.namelength": 150,
              "key.nameoffset": 2763,
              "key.offset": 2763,
              "key.parsed_declaration": "public init(\n  _ graph: DynamicGraph, rate: Float, step: Int = 1, betas: (Float, Float) = (0.9, 0.999),\n  decay: Float = 0,\n  epsilon: Float = 1e-8\n)",
              "key.parsed_scope.end": 105,
              "key.parsed_scope.start": 94,
              "key.substructure": [],
              "key.typename": "(AdamOptimizer.Type) -> (DynamicGraph, Float, Int, (Float, Float), Float, Float) -> AdamOptimizer",
              "key.typeusr": "$s_4rate4step5betas5decay7epsilon4main13AdamOptimizerVAF12DynamicGraphC_SfSiSf_SftS2ftcD",
              "key.usr": "s:4main13AdamOptimizerV_4rate4step5betas5decay7epsilonAcA12DynamicGraphC_SfSiSf_SftS2ftcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public mutating func step(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 3068
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3061
                }
              ],
              "key.bodylength": 158,
              "key.bodyoffset": 3119,
              "key.doc.column": 17,
              "key.doc.declaration": "mutating func step(streamContext: StreamContext?)",
              "key.doc.discussion": [
                {
                  "Note": ""
                }
              ],
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"12\" column=\"17\"><Name>step(streamContext:)</Name><USR>s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF</USR><Declaration>mutating func step(streamContext: StreamContext?)</Declaration><CommentParts><Abstract><Para>Update parameters.</Para></Abstract><Parameters><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to execute the update operation.</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Optimizer</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.line": 12,
              "key.doc.name": "step(streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The stream context to execute the update operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/OptimizerAddons.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 201,
              "key.name": "step(streamContext:)",
              "key.namelength": 35,
              "key.nameoffset": 3082,
              "key.offset": 3077,
              "key.overrides": [
                {
                  "key.usr": "s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF"
                }
              ],
              "key.parsed_declaration": "public mutating func step(streamContext: StreamContext?)",
              "key.parsed_scope.end": 112,
              "key.parsed_scope.start": 107,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main13AdamOptimizerV4stepSivp\">step</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(inout AdamOptimizer) -> (StreamContext?) -> ()",
              "key.typeusr": "$s13streamContexty4main06StreamB0CSg_tcD",
              "key.usr": "s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF"
            }
          ],
          "key.typename": "AdamOptimizer.Type",
          "key.typeusr": "$s4main13AdamOptimizerVmD",
          "key.usr": "s:4main13AdamOptimizerV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 10911,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol Optimizer</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 106
            }
          ],
          "key.bodylength": 271,
          "key.bodyoffset": 133,
          "key.doc.column": 17,
          "key.doc.comment": "An optimizer encapsulated the logic to update parameters in order to minimize the loss.",
          "key.doc.declaration": "public protocol Optimizer",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"4\" column=\"17\"><Name>Optimizer</Name><USR>s:4main9OptimizerP</USR><Declaration>public protocol Optimizer</Declaration><CommentParts><Abstract><Para>An optimizer encapsulated the logic to update parameters in order to minimize the loss.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Optimizer",
          "key.doc.type": "Class",
          "key.doclength": 92,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Optimizer</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 292,
          "key.name": "Optimizer",
          "key.namelength": 9,
          "key.nameoffset": 122,
          "key.offset": 113,
          "key.parsed_declaration": "public protocol Optimizer",
          "key.parsed_scope.end": 13,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type> { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 161,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 31,
              "key.name": "graph",
              "key.namelength": 5,
              "key.nameoffset": 140,
              "key.offset": 136,
              "key.parsed_declaration": "var graph: DynamicGraph",
              "key.parsed_scope.end": 5,
              "key.parsed_scope.start": 5,
              "key.typename": "DynamicGraph",
              "key.typeusr": "$s4main12DynamicGraphCD",
              "key.usr": "s:4main9OptimizerP5graphAA12DynamicGraphCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var parameters: [<Type usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</Type>] { get set }</Declaration>",
              "key.bodylength": 9,
              "key.bodyoffset": 216,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</ref.protocol>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 56,
              "key.name": "parameters",
              "key.namelength": 10,
              "key.nameoffset": 174,
              "key.offset": 170,
              "key.parsed_declaration": "var parameters: [DynamicGraph_AnyParameters]",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.typename": "[DynamicGraph_AnyParameters]",
              "key.typeusr": "$sSay4main26DynamicGraph_AnyParameters_pGD",
              "key.usr": "s:4main9OptimizerP10parametersSayAA26DynamicGraph_AnyParameters_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>mutating func step(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 354
                }
              ],
              "key.doc.column": 17,
              "key.doc.comment": " Update parameters.\n\n - Parameter streamContext: The stream context to execute the update operation.",
              "key.doc.declaration": "mutating func step(streamContext: StreamContext?)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"12\" column=\"17\"><Name>step(streamContext:)</Name><USR>s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF</USR><Declaration>mutating func step(streamContext: StreamContext?)</Declaration><CommentParts><Abstract><Para>Update parameters.</Para></Abstract><Parameters><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to execute the update operation.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 12,
              "key.doc.name": "step(streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The stream context to execute the update operation."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 122,
              "key.docoffset": 229,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 40,
              "key.name": "step(streamContext:)",
              "key.namelength": 35,
              "key.nameoffset": 368,
              "key.offset": 363,
              "key.parsed_declaration": "mutating func step(streamContext: StreamContext?)",
              "key.parsed_scope.end": 12,
              "key.parsed_scope.start": 12,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9OptimizerPAAE4stepyyF\">step()</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Optimizer> (inout Self) -> (StreamContext?) -> ()",
              "key.typeusr": "$s13streamContexty4main06StreamB0CSg_tcD",
              "key.usr": "s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF"
            }
          ],
          "key.typename": "Optimizer.Protocol",
          "key.typeusr": "$s4main9Optimizer_pmD",
          "key.usr": "s:4main9OptimizerP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>protocol OptimizerAddons</Declaration>",
          "key.bodylength": 83,
          "key.bodyoffset": 433,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>OptimizerAddons</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 110,
          "key.name": "OptimizerAddons",
          "key.namelength": 15,
          "key.nameoffset": 416,
          "key.offset": 407,
          "key.parsed_declaration": "protocol OptimizerAddons",
          "key.parsed_scope.end": 18,
          "key.parsed_scope.start": 15,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var savedAux: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>] { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 470,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>savedAux</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 40,
              "key.name": "savedAux",
              "key.namelength": 8,
              "key.nameoffset": 440,
              "key.offset": 436,
              "key.parsed_declaration": "var savedAux: [DynamicGraph_Any]",
              "key.parsed_scope.end": 16,
              "key.parsed_scope.start": 16,
              "key.typename": "[DynamicGraph_Any]",
              "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
              "key.usr": "s:4main15OptimizerAddonsP8savedAuxSayAA16DynamicGraph_Any_pGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var minimizer: ccv_nnc_cmd_t { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 509,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minimizer</decl.name>: <decl.var.type>ccv_nnc_cmd_t</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 36,
              "key.name": "minimizer",
              "key.namelength": 9,
              "key.nameoffset": 483,
              "key.offset": 479,
              "key.parsed_declaration": "var minimizer: ccv_nnc_cmd_t",
              "key.parsed_scope.end": 17,
              "key.parsed_scope.start": 17,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main15OptimizerAddonsP9minimizerXevp"
            }
          ],
          "key.typename": "OptimizerAddons.Protocol",
          "key.typeusr": "$s4main15OptimizerAddons_pmD",
          "key.usr": "s:4main15OptimizerAddonsP"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol Optimizer</Declaration>",
          "key.bodylength": 102,
          "key.bodyoffset": 540,
          "key.doc.column": 17,
          "key.doc.declaration": "public protocol Optimizer",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"4\" column=\"17\"><Name>Optimizer</Name><USR>s:4main9OptimizerP</USR><Declaration>public protocol Optimizer</Declaration><CommentParts><Abstract><Para>An optimizer encapsulated the logic to update parameters in order to minimize the loss.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Optimizer",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Optimizer</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 124,
          "key.name": "Optimizer",
          "key.namelength": 9,
          "key.nameoffset": 529,
          "key.offset": 519,
          "key.parsed_declaration": "extension Optimizer",
          "key.parsed_scope.end": 27,
          "key.parsed_scope.start": 20,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public mutating func step()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.mutating",
                  "key.length": 8,
                  "key.offset": 586
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 579
                }
              ],
              "key.bodylength": 32,
              "key.bodyoffset": 608,
              "key.doc.column": 24,
              "key.doc.comment": "Update parameters.",
              "key.doc.declaration": "public mutating func step()",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"24\" column=\"24\"><Name>step()</Name><USR>s:4main9OptimizerPAAE4stepyyF</USR><Declaration>public mutating func step()</Declaration><CommentParts><Abstract><Para>Update parameters.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 24,
              "key.doc.name": "step()",
              "key.doc.type": "Function",
              "key.doclength": 33,
              "key.docoffset": 543,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>step</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 46,
              "key.name": "step()",
              "key.namelength": 6,
              "key.nameoffset": 600,
              "key.offset": 595,
              "key.parsed_declaration": "public mutating func step()",
              "key.parsed_scope.end": 26,
              "key.parsed_scope.start": 24,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main9OptimizerP4step13streamContextyAA06StreamE0CSg_tF\">step(streamContext:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Optimizer> (inout Self) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main9OptimizerPAAE4stepyyF"
            }
          ],
          "key.typename": "Optimizer.Protocol",
          "key.typeusr": "$s4main9Optimizer_pmD",
          "key.usr": "s:4main9OptimizerP"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.annotated_decl": "<Declaration>fileprivate func _step(graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, minimizer: ccv_nnc_cmd_t, parameters: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>], savedAux: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.fileprivate",
              "key.length": 11,
              "key.offset": 645
            }
          ],
          "key.bodylength": 1061,
          "key.bodyoffset": 827,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minimizer</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parameters</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>savedAux</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 1232,
          "key.name": "_step(graph:minimizer:parameters:savedAux:streamContext:)",
          "key.namelength": 163,
          "key.nameoffset": 662,
          "key.offset": 657,
          "key.parsed_declaration": "fileprivate func _step(\n  graph: DynamicGraph, minimizer: ccv_nnc_cmd_t, parameters: [DynamicGraph.AnyTensor],\n  savedAux: [DynamicGraph.AnyTensor], streamContext: StreamContext?\n)",
          "key.parsed_scope.end": 61,
          "key.parsed_scope.start": 29,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF\">_step(graph: DynamicGraph, minimizer: ccv_nnc_cmd_t, parameters: [DynamicGraph.AnyGroup], savedAux: [DynamicGraph.AnyGroup], streamContext: StreamContext?)</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let _gradients: [ccv_nnc_tensor_variable_t?]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_gradients</decl.name>: <decl.var.type>[ccv_nnc_tensor_variable_t?]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 82,
              "key.name": "_gradients",
              "key.namelength": 10,
              "key.nameoffset": 968,
              "key.offset": 964,
              "key.parsed_declaration": "let _gradients: [ccv_nnc_tensor_variable_t?] = parameters.map { $0.grad?._tensor }",
              "key.parsed_scope.end": 39,
              "key.parsed_scope.start": 39,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF10_gradientsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _parameters: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_parameters</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 108,
              "key.name": "_parameters",
              "key.namelength": 11,
              "key.nameoffset": 1053,
              "key.offset": 1049,
              "key.parsed_declaration": "let _parameters = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: parameters.count)",
              "key.parsed_scope.end": 40,
              "key.parsed_scope.start": 40,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF11_parametersL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _savedAux: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_savedAux</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 104,
              "key.name": "_savedAux",
              "key.namelength": 9,
              "key.nameoffset": 1272,
              "key.offset": 1268,
              "key.parsed_declaration": "let _savedAux = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: savedAux.count)",
              "key.parsed_scope.end": 45,
              "key.parsed_scope.start": 45,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF9_savedAuxL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let parameterSize: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parameterSize</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "parameterSize",
              "key.namelength": 13,
              "key.nameoffset": 1483,
              "key.offset": 1479,
              "key.parsed_declaration": "let parameterSize = Int32(parameters.count)",
              "key.parsed_scope.end": 50,
              "key.parsed_scope.start": 50,
              "key.typename": "Int32",
              "key.typeusr": "$ss5Int32VD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF13parameterSizeL_s5Int32Vvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 1529,
              "key.offset": 1525,
              "key.parsed_declaration": "let _graph = graph._graph",
              "key.parsed_scope.end": 51,
              "key.parsed_scope.start": 51,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF6_graphL_s13OpaquePointerVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "_streamContext",
              "key.namelength": 14,
              "key.nameoffset": 1557,
              "key.offset": 1553,
              "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
              "key.parsed_scope.end": 52,
              "key.parsed_scope.start": 52,
              "key.typename": "OpaquePointer?",
              "key.typeusr": "$ss13OpaquePointerVSgD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF14_streamContextL_s13OpaquePointerVSgvp"
            }
          ],
          "key.typename": "(DynamicGraph, <<error type>>, [DynamicGraph.AnyTensor], [DynamicGraph.AnyTensor], StreamContext?) -> ()",
          "key.typeusr": "$syXeXecD",
          "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.fileprivate",
          "key.annotated_decl": "<Declaration>fileprivate func _step(graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, minimizer: ccv_nnc_cmd_t, parameters: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type>], savedAux: [<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.fileprivate",
              "key.length": 11,
              "key.offset": 1891
            }
          ],
          "key.bodylength": 1625,
          "key.bodyoffset": 2071,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minimizer</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parameters</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>savedAux</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.typealias usr=\"s:4main12DynamicGraphC8AnyGroupa\">AnyGroup</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 1794,
          "key.name": "_step(graph:minimizer:parameters:savedAux:streamContext:)",
          "key.namelength": 161,
          "key.nameoffset": 1908,
          "key.offset": 1903,
          "key.parsed_declaration": "fileprivate func _step(\n  graph: DynamicGraph, minimizer: ccv_nnc_cmd_t, parameters: [DynamicGraph.AnyGroup],\n  savedAux: [DynamicGraph.AnyGroup], streamContext: StreamContext?\n)",
          "key.parsed_scope.end": 110,
          "key.parsed_scope.start": 63,
          "key.related_decls": [
            {
              "key.annotated_decl": "<RelatedName usr=\"s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF\">_step(graph: DynamicGraph, minimizer: ccv_nnc_cmd_t, parameters: [DynamicGraph.AnyTensor], savedAux: [DynamicGraph.AnyTensor], streamContext: StreamContext?)</RelatedName>"
            }
          ],
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let parallel: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parallel</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 42,
              "key.name": "parallel",
              "key.namelength": 8,
              "key.nameoffset": 2115,
              "key.offset": 2111,
              "key.parsed_declaration": "let parallel = parameters[0].untyped.count",
              "key.parsed_scope.end": 68,
              "key.parsed_scope.start": 68,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF8parallelL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let parameterSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parameterSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 36,
              "key.name": "parameterSize",
              "key.namelength": 13,
              "key.nameoffset": 2405,
              "key.offset": 2401,
              "key.parsed_declaration": "let parameterSize = parameters.count",
              "key.parsed_scope.end": 80,
              "key.parsed_scope.start": 80,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF13parameterSizeL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>var _gradients: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_gradients</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 94,
              "key.name": "_gradients",
              "key.namelength": 10,
              "key.nameoffset": 2444,
              "key.offset": 2440,
              "key.parsed_declaration": "var _gradients = [ccv_nnc_tensor_variable_t?](repeating: nil, count: parallel * parameterSize)",
              "key.parsed_scope.end": 81,
              "key.parsed_scope.start": 81,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF10_gradientsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _parameters: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_parameters</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 116,
              "key.name": "_parameters",
              "key.namelength": 11,
              "key.nameoffset": 2541,
              "key.offset": 2537,
              "key.parsed_declaration": "let _parameters = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: parameterSize * parallel)",
              "key.parsed_scope.end": 82,
              "key.parsed_scope.start": 82,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF11_parametersL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let savedAuxSize: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>savedAuxSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 33,
              "key.name": "savedAuxSize",
              "key.namelength": 12,
              "key.nameoffset": 2912,
              "key.offset": 2908,
              "key.parsed_declaration": "let savedAuxSize = savedAux.count",
              "key.parsed_scope.end": 90,
              "key.parsed_scope.start": 90,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF12savedAuxSizeL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let _savedAux: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_savedAux</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 113,
              "key.name": "_savedAux",
              "key.namelength": 9,
              "key.nameoffset": 2948,
              "key.offset": 2944,
              "key.parsed_declaration": "let _savedAux = UnsafeMutablePointer<ccv_nnc_tensor_variable_t?>.allocate(\n  capacity: savedAuxSize * parallel)",
              "key.parsed_scope.end": 91,
              "key.parsed_scope.start": 91,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF9_savedAuxL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let _graph: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_graph</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 25,
              "key.name": "_graph",
              "key.namelength": 6,
              "key.nameoffset": 3246,
              "key.offset": 3242,
              "key.parsed_declaration": "let _graph = graph._graph",
              "key.parsed_scope.end": 98,
              "key.parsed_scope.start": 98,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF6_graphL_s13OpaquePointerVvp"
            },
            {
              "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 68,
              "key.name": "_streamContext",
              "key.namelength": 14,
              "key.nameoffset": 3274,
              "key.offset": 3270,
              "key.parsed_declaration": "let _streamContext = (streamContext ?? graph.streamContext)?._stream",
              "key.parsed_scope.end": 99,
              "key.parsed_scope.start": 99,
              "key.typename": "OpaquePointer?",
              "key.typeusr": "$ss13OpaquePointerVSgD",
              "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF14_streamContextL_s13OpaquePointerVSgvp"
            }
          ],
          "key.typename": "(DynamicGraph, <<error type>>, [DynamicGraph_AnyGroup], [DynamicGraph_AnyGroup], StreamContext?) -> ()",
          "key.typeusr": "$syXeXecD",
          "key.usr": "s:4main5_step33_1605229D63BC75EF9830D149A7E4F86ELLyXeXeF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>struct HashableModel : <Type usr=\"s:SH\">Hashable</Type></Declaration>",
          "key.bodylength": 231,
          "key.bodyoffset": 3731,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 8,
              "key.offset": 3721
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HashableModel</decl.name> : <ref.protocol usr=\"s:SH\">Hashable</ref.protocol></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "Hashable"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 264,
          "key.name": "HashableModel",
          "key.namelength": 13,
          "key.nameoffset": 3706,
          "key.offset": 3699,
          "key.parsed_declaration": "struct HashableModel: Hashable",
          "key.parsed_scope.end": 121,
          "key.parsed_scope.start": 112,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>var model: <Type usr=\"s:4main5ModelC\">Model</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 16,
              "key.name": "model",
              "key.namelength": 5,
              "key.nameoffset": 3738,
              "key.offset": 3734,
              "key.parsed_declaration": "var model: Model",
              "key.parsed_scope.end": 113,
              "key.parsed_scope.start": 113,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "Model",
              "key.typeusr": "$s4main5ModelCD",
              "key.usr": "s:4main13HashableModelV5modelAA0C0Cvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static func == (lhs: <Type usr=\"s:4main13HashableModelV\">HashableModel</Type>, rhs: <Type usr=\"s:4main13HashableModelV\">HashableModel</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3753
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 3825,
              "key.doc.declaration": "static func == (lhs: Self, rhs: Self) -> Bool",
              "key.doc.discussion": [
                {
                  "Para": "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Function><Name>==(_:_:)</Name><USR>s:SQ2eeoiySbx_xtFZ</USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a == b</codeVoice> implies that <codeVoice>a != b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Note><Para>This documentation comment was inherited from <codeVoice>Equatable</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.name": "==(_:_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "A value to compare."
                    }
                  ],
                  "name": "lhs"
                },
                {
                  "discussion": [
                    {
                      "Para": "Another value to compare."
                    }
                  ],
                  "name": "rhs"
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main13HashableModelV\">HashableModel</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main13HashableModelV\">HashableModel</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 104,
              "key.name": "==(_:_:)",
              "key.namelength": 43,
              "key.nameoffset": 3772,
              "key.offset": 3760,
              "key.overrides": [
                {
                  "key.usr": "s:SQ2eeoiySbx_xtFZ"
                }
              ],
              "key.parsed_declaration": "public static func == (lhs: HashableModel, rhs: HashableModel) -> Bool",
              "key.parsed_scope.end": 116,
              "key.parsed_scope.start": 114,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main2eeoiySbAA12DynamicGraphC13WeakAnyTensorV_AFtF\">== (_: DynamicGraph.WeakAnyTensor, _: DynamicGraph.WeakAnyTensor) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "(HashableModel.Type) -> (HashableModel, HashableModel) -> Bool",
              "key.typeusr": "$sySb4main13HashableModelV_ACtcD",
              "key.usr": "s:SQ2eeoiySbx_xtFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func hash(into hasher: inout <Type usr=\"s:s6HasherV\">Hasher</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 3868
                }
              ],
              "key.bodylength": 47,
              "key.bodyoffset": 3913,
              "key.doc.declaration": "func hash(into hasher: inout Hasher)",
              "key.doc.discussion": [
                {
                  "Para": "Implement this method to conform to the `Hashable` protocol. The components used for hashing must be the same as the components compared in your type’s `==` operator implementation. Call `hasher.combine(_:)` with each of these components."
                },
                {
                  "Important": ""
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Function><Name>hash(into:)</Name><USR>s:SH4hash4intoys6HasherVz_tF</USR><Declaration>func hash(into hasher: inout Hasher)</Declaration><CommentParts><Abstract><Para>Hashes the essential components of this value by feeding them into the given hasher.</Para></Abstract><Parameters><Parameter><Name>hasher</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The hasher to use when combining the components of this instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>Implement this method to conform to the <codeVoice>Hashable</codeVoice> protocol. The components used for hashing must be the same as the components compared in your type’s <codeVoice>==</codeVoice> operator implementation. Call <codeVoice>hasher.combine(_:)</codeVoice> with each of these components.</Para><Important><Para>Never call <codeVoice>finalize()</codeVoice> on <codeVoice>hasher</codeVoice>. Doing so may become a compile-time error in the future.</Para></Important><Note><Para>This documentation comment was inherited from <codeVoice>Hashable</codeVoice>.</Para></Note></Discussion></CommentParts></Function>",
              "key.doc.name": "hash(into:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The hasher to use when combining the components of this instance."
                    }
                  ],
                  "name": "hasher"
                }
              ],
              "key.doc.type": "Function",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hash</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into</decl.var.parameter.argument_label> <decl.var.parameter.name>hasher</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout</syntaxtype.keyword> <ref.struct usr=\"s:s6HasherV\">Hasher</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 86,
              "key.name": "hash(into:)",
              "key.namelength": 31,
              "key.nameoffset": 3880,
              "key.offset": 3875,
              "key.overrides": [
                {
                  "key.usr": "s:SH4hash4intoys6HasherVz_tF"
                }
              ],
              "key.parsed_declaration": "public func hash(into hasher: inout Hasher)",
              "key.parsed_scope.end": 120,
              "key.parsed_scope.start": 118,
              "key.substructure": [],
              "key.typename": "(HashableModel) -> (inout Hasher) -> ()",
              "key.typeusr": "$s4intoys6HasherVz_tcD",
              "key.usr": "s:SH4hash4intoys6HasherVz_tF"
            }
          ],
          "key.typename": "HashableModel.Type",
          "key.typeusr": "$s4main13HashableModelVmD",
          "key.usr": "s:4main13HashableModelV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>func optimizerStep(graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>, minimizer: ccv_nnc_cmd_t, parameters: [<Type usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</Type>], savedAux: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>], streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>?)</Declaration>",
          "key.bodylength": 2423,
          "key.bodyoffset": 4141,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>optimizerStep</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minimizer</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parameters</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main26DynamicGraph_AnyParametersP\">DynamicGraph_AnyParameters</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>savedAux</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 2600,
          "key.name": "optimizerStep(graph:minimizer:parameters:savedAux:streamContext:)",
          "key.namelength": 169,
          "key.nameoffset": 3970,
          "key.offset": 3965,
          "key.parsed_declaration": "func optimizerStep(\n  graph: DynamicGraph, minimizer: ccv_nnc_cmd_t, parameters: [DynamicGraph_AnyParameters],\n  savedAux: [DynamicGraph_Any], streamContext: StreamContext?\n)",
          "key.parsed_scope.end": 177,
          "key.parsed_scope.start": 123,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let modelParameters: [<Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelParameters</decl.name>: <decl.var.type>[<ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 71,
              "key.name": "modelParameters",
              "key.namelength": 15,
              "key.nameoffset": 4148,
              "key.offset": 4144,
              "key.parsed_declaration": "let modelParameters = parameters.compactMap { $0 as? Model.Parameters }",
              "key.parsed_scope.end": 127,
              "key.parsed_scope.start": 127,
              "key.typename": "[Model.Parameters]",
              "key.typeusr": "$sSay4main5ModelC10ParametersCGD",
              "key.usr": "s:4main13optimizerStepyXeXeF15modelParametersL_SayAA5ModelC0E0CGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let primaryModelParameters: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>primaryModelParameters</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 119,
              "key.name": "primaryModelParameters",
              "key.namelength": 22,
              "key.nameoffset": 4222,
              "key.offset": 4218,
              "key.parsed_declaration": "let primaryModelParameters = modelParameters.filter {\n  $0._io == $0.model!._parameters && $0.model!.owner == nil\n}",
              "key.parsed_scope.end": 128,
              "key.parsed_scope.start": 128,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main13optimizerStepyXeXeF22primaryModelParametersL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var models: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:4main13HashableModelV\">HashableModel</Type>&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>models</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:4main13HashableModelV\">HashableModel</ref.struct>&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 92,
              "key.name": "models",
              "key.namelength": 6,
              "key.nameoffset": 4344,
              "key.offset": 4340,
              "key.parsed_declaration": "var models = Set(modelParameters.map { HashableModel(model: $0.model!.owner ?? $0.model!) })",
              "key.parsed_scope.end": 131,
              "key.parsed_scope.start": 131,
              "key.typename": "Set<HashableModel>",
              "key.typeusr": "$sShy4main13HashableModelVGD",
              "key.usr": "s:4main13optimizerStepyXeXeF6modelsL_ShyAA13HashableModelVGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 49,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 4745,
              "key.offset": 4741,
              "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
              "key.parsed_scope.end": 139,
              "key.parsed_scope.start": 139,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main13optimizerStepyXeXeF6paramsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let noop: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noop</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 52,
              "key.name": "noop",
              "key.namelength": 4,
              "key.nameoffset": 4797,
              "key.offset": 4793,
              "key.parsed_declaration": "let noop = ccv_nnc_cmd(CCV_NNC_NOOP, nil, params, 0)",
              "key.parsed_scope.end": 140,
              "key.parsed_scope.start": 140,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main13optimizerStepyXeXeF4noopL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var modelParametersMap: [<Type usr=\"s:4main13HashableModelV\">HashableModel</Type> : [<Type usr=\"s:4main5ModelC\">Model</Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters</Type>]]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelParametersMap</decl.name>: <decl.var.type>[<ref.struct usr=\"s:4main13HashableModelV\">HashableModel</ref.struct> : [<ref.class usr=\"s:4main5ModelC\">Model</ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters</ref.class>]]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 62,
              "key.name": "modelParametersMap",
              "key.namelength": 18,
              "key.nameoffset": 4983,
              "key.offset": 4979,
              "key.parsed_declaration": "var modelParametersMap = [HashableModel: [Model.Parameters]]()",
              "key.parsed_scope.end": 145,
              "key.parsed_scope.start": 145,
              "key.typename": "[HashableModel : [Model.Parameters]]",
              "key.typeusr": "$sSDy4main13HashableModelVSayAA0C0C10ParametersCGGD",
              "key.usr": "s:4main13optimizerStepyXeXeF18modelParametersMapL_SDyAA13HashableModelVSayAA0H0C0E0CGGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let tensorParameters: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tensorParameters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 72,
              "key.name": "tensorParameters",
              "key.namelength": 16,
              "key.nameoffset": 5604,
              "key.offset": 5600,
              "key.parsed_declaration": "let tensorParameters = parameters.compactMap { $0 as? DynamicGraph_Any }",
              "key.parsed_scope.end": 157,
              "key.parsed_scope.start": 157,
              "key.typename": "[DynamicGraph_Any]",
              "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
              "key.usr": "s:4main13optimizerStepyXeXeF16tensorParametersL_SayAA16DynamicGraph_Any_pGvp"
            }
          ],
          "key.typename": "(DynamicGraph, <<error type>>, [DynamicGraph_AnyParameters], [DynamicGraph_Any], StreamContext?) -> ()",
          "key.typeusr": "$syXeXecD",
          "key.usr": "s:4main13optimizerStepyXeXeF"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol Optimizer</Declaration>",
          "key.bodylength": 1307,
          "key.bodyoffset": 6588,
          "key.doc.column": 17,
          "key.doc.declaration": "public protocol Optimizer",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"4\" column=\"17\"><Name>Optimizer</Name><USR>s:4main9OptimizerP</USR><Declaration>public protocol Optimizer</Declaration><CommentParts><Abstract><Para>An optimizer encapsulated the logic to update parameters in order to minimize the loss.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "Optimizer",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Optimizer</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1329,
          "key.name": "Optimizer",
          "key.namelength": 9,
          "key.nameoffset": 6577,
          "key.offset": 6567,
          "key.parsed_declaration": "extension Optimizer",
          "key.parsed_scope.end": 211,
          "key.parsed_scope.start": 179,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>func savedAux(minimizer: ccv_nnc_cmd_t) -&gt; [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
              "key.bodylength": 1239,
              "key.bodyoffset": 6654,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>savedAux</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minimizer</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_cmd_t</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1303,
              "key.name": "savedAux(minimizer:)",
              "key.namelength": 34,
              "key.nameoffset": 6596,
              "key.offset": 6591,
              "key.parsed_declaration": "func savedAux(minimizer: ccv_nnc_cmd_t) -> [DynamicGraph_Any]",
              "key.parsed_scope.end": 210,
              "key.parsed_scope.start": 180,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let parameters: [<Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>]</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parameters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol>]</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 71,
                  "key.name": "parameters",
                  "key.namelength": 10,
                  "key.nameoffset": 6663,
                  "key.offset": 6659,
                  "key.parsed_declaration": "let parameters = self.parameters.compactMap { $0 as? DynamicGraph_Any }",
                  "key.parsed_scope.end": 181,
                  "key.parsed_scope.start": 181,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main9OptimizerP10parametersSayAA26DynamicGraph_AnyParameters_pGvp\">parameters</RelatedName>"
                    }
                  ],
                  "key.typename": "[DynamicGraph_Any]",
                  "key.typeusr": "$sSay4main16DynamicGraph_Any_pGD",
                  "key.usr": "s:4main9OptimizerPAAE8savedAuxyXeXeF10parametersL_SayAA16DynamicGraph_Any_pGvp"
                }
              ],
              "key.typename": "<Self where Self : Optimizer> (Self) -> (<<error type>>) -> [DynamicGraph_Any]",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main9OptimizerPAAE8savedAuxyXeXeF"
            }
          ],
          "key.typename": "Optimizer.Protocol",
          "key.typeusr": "$s4main9Optimizer_pmD",
          "key.usr": "s:4main9OptimizerP"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 2964,
          "key.bodyoffset": 7945,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 3012,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 7908,
          "key.offset": 7898,
          "key.parsed_declaration": "extension Collection where Element: Optimizer",
          "key.parsed_scope.end": 277,
          "key.parsed_scope.start": 213,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func step(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 8109
                }
              ],
              "key.bodylength": 2743,
              "key.bodyoffset": 8164,
              "key.doc.column": 15,
              "key.doc.comment": " Update parameters together for a collection of optimizers.\n\n - Parameter streamContext: The stream context to have update operation on.",
              "key.doc.declaration": "public func step(streamContext: StreamContext? = nil)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift\" line=\"219\" column=\"15\"><Name>step(streamContext:)</Name><USR>s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF</USR><Declaration>public func step(streamContext: StreamContext? = nil)</Declaration><CommentParts><Abstract><Para>Update parameters together for a collection of optimizers.</Para></Abstract><Parameters><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The stream context to have update operation on.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 219,
              "key.doc.name": "step(streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The stream context to have update operation on."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 158,
              "key.docoffset": 7948,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>step</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 2792,
              "key.name": "step(streamContext:)",
              "key.namelength": 41,
              "key.nameoffset": 8121,
              "key.offset": 8116,
              "key.parsed_declaration": "public func step(streamContext: StreamContext? = nil)",
              "key.parsed_scope.end": 276,
              "key.parsed_scope.start": 219,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var models: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:4main13HashableModelV\">HashableModel</Type>&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>models</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:4main13HashableModelV\">HashableModel</ref.struct>&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 33,
                  "key.name": "models",
                  "key.namelength": 6,
                  "key.nameoffset": 8433,
                  "key.offset": 8429,
                  "key.parsed_declaration": "var models = Set<HashableModel>()",
                  "key.parsed_scope.end": 223,
                  "key.parsed_scope.start": 223,
                  "key.typename": "Set<HashableModel>",
                  "key.typeusr": "$sShy4main13HashableModelVGD",
                  "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF6modelsL_ShyAA13HashableModelVGvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var primaries: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>primaries</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 55,
                  "key.name": "primaries",
                  "key.namelength": 9,
                  "key.nameoffset": 8471,
                  "key.offset": 8467,
                  "key.parsed_declaration": "var primaries = [(ccv_nnc_cmd_t, [Model.Parameters])]()",
                  "key.parsed_scope.end": 224,
                  "key.parsed_scope.start": 224,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF9primariesL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var secondaries: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>secondaries</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 57,
                  "key.name": "secondaries",
                  "key.namelength": 11,
                  "key.nameoffset": 8531,
                  "key.offset": 8527,
                  "key.parsed_declaration": "var secondaries = [(ccv_nnc_cmd_t, [Model.Parameters])]()",
                  "key.parsed_scope.end": 225,
                  "key.parsed_scope.start": 225,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF11secondariesL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let params: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 49,
                  "key.name": "params",
                  "key.namelength": 6,
                  "key.nameoffset": 9695,
                  "key.offset": 9691,
                  "key.parsed_declaration": "let params = CmdParamsFactory.factory.newParams()",
                  "key.parsed_scope.end": 250,
                  "key.parsed_scope.start": 250,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF6paramsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let noop: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Optimizer.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noop</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.groupname": "Collection",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 52,
                  "key.name": "noop",
                  "key.namelength": 4,
                  "key.nameoffset": 9749,
                  "key.offset": 9745,
                  "key.parsed_declaration": "let noop = ccv_nnc_cmd(CCV_NNC_NOOP, nil, params, 0)",
                  "key.parsed_scope.end": 251,
                  "key.parsed_scope.start": 251,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF4noopL_Xevp"
                }
              ],
              "key.typename": "<Self where Self : Collection, Self.Element : Optimizer> (Self) -> (StreamContext?) -> ()",
              "key.typeusr": "$s13streamContexty4main06StreamB0CSg_tcD",
              "key.usr": "s:Sl4mainAA9Optimizer7ElementRpzrlE4step13streamContextyAA06StreamF0CSg_tF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 2750,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private let np: &lt;&lt;error type&gt;&gt;</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.length": 7,
              "key.offset": 42
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
          "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>np</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.global>",
          "key.kind": "source.lang.swift.decl.var.global",
          "key.length": 31,
          "key.name": "np",
          "key.namelength": 2,
          "key.nameoffset": 54,
          "key.offset": 50,
          "key.parsed_declaration": "private let np = Python.import(\"numpy\")",
          "key.parsed_scope.end": 5,
          "key.parsed_scope.start": 5,
          "key.typename": "<<error type>>",
          "key.typeusr": "$sXeD",
          "key.usr": "s:4main2np33_E0AEB10524EED233A450789DA24E09E7LLXevp"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.private",
          "key.annotated_decl": "<Declaration>private let ctypes: &lt;&lt;error type&gt;&gt;</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.private",
              "key.length": 7,
              "key.offset": 82
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
          "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ctypes</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.global>",
          "key.kind": "source.lang.swift.decl.var.global",
          "key.length": 36,
          "key.name": "ctypes",
          "key.namelength": 6,
          "key.nameoffset": 94,
          "key.offset": 90,
          "key.parsed_declaration": "private let ctypes = Python.import(\"ctypes\")",
          "key.parsed_scope.end": 6,
          "key.parsed_scope.start": 6,
          "key.typename": "<<error type>>",
          "key.typeusr": "$sXeD",
          "key.usr": "s:4main6ctypes33_E0AEB10524EED233A450789DA24E09E7LLXevp"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1950,
          "key.bodyoffset": 183,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : AnyTensor <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 2006,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 138,
          "key.offset": 128,
          "key.parsed_declaration": "extension Tensor where Element: NumpyScalarCompatible",
          "key.parsed_scope.end": 55,
          "key.parsed_scope.start": 8,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public enum NumpyScalarCompatibleError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 234
                }
              ],
              "key.bodylength": 334,
              "key.bodyoffset": 281,
              "key.doc.column": 15,
              "key.doc.comment": "Cannot create a tensor from numpy array.",
              "key.doc.declaration": "public enum NumpyScalarCompatibleError : Error",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"11\" column=\"15\"><Name>NumpyScalarCompatibleError</Name><USR>s:4main6TensorV26NumpyScalarCompatibleErrorO</USR><Declaration>public enum NumpyScalarCompatibleError : Error</Declaration><CommentParts><Abstract><Para>Cannot create a tensor from numpy array.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 11,
              "key.doc.name": "NumpyScalarCompatibleError",
              "key.doc.type": "Other",
              "key.doclength": 45,
              "key.docoffset": 187,
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 5,
                  "key.offset": 274
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>NumpyScalarCompatibleError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>",
              "key.inheritedtypes": [
                {
                  "key.name": "Error"
                }
              ],
              "key.kind": "source.lang.swift.decl.enum",
              "key.length": 375,
              "key.name": "NumpyScalarCompatibleError",
              "key.namelength": 26,
              "key.nameoffset": 246,
              "key.offset": 241,
              "key.parsed_declaration": "public enum NumpyScalarCompatibleError: Error",
              "key.parsed_scope.end": 20,
              "key.parsed_scope.start": 11,
              "key.substructure": [
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 13,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 333,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case notNumpy</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "The PythonObject is not a numpy array.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"13\" column=\"10\"><Name>notNumpy</Name><USR>s:4main6TensorV26NumpyScalarCompatibleErrorO03notC0yAEyx_GAGmAA0B7NumericRzlF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The PythonObject is not a numpy array.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 13,
                      "key.doc.name": "notNumpy",
                      "key.doc.type": "Other",
                      "key.doclength": 43,
                      "key.docoffset": 286,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>notNumpy</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 8,
                      "key.name": "notNumpy",
                      "key.namelength": 8,
                      "key.nameoffset": 338,
                      "key.offset": 338,
                      "key.parsed_declaration": "case notNumpy",
                      "key.parsed_scope.end": 13,
                      "key.parsed_scope.start": 13,
                      "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.NumpyScalarCompatibleError.Type) -> Tensor<Element>.NumpyScalarCompatibleError",
                      "key.typeusr": "$sy4main6TensorV26NumpyScalarCompatibleErrorOyx_GAFmcAA0B7NumericRzluD",
                      "key.usr": "s:4main6TensorV26NumpyScalarCompatibleErrorO03notC0yAEyx_GAGmAA0B7NumericRzlF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 45,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 420,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case noDataConversion(PythonObject, Any.Type)</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "The numpy array type doesn't match the expected output type.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"15\" column=\"10\"><Name>noDataConversion(_:_:)</Name><USR>s:4main6TensorV26NumpyScalarCompatibleErrorO16noDataConversion33_E0AEB10524EED233A450789DA24E09E7LLXeF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The numpy array type doesn’t match the expected output type.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 15,
                      "key.doc.name": "noDataConversion(_:_:)",
                      "key.doc.type": "Other",
                      "key.doclength": 65,
                      "key.docoffset": 351,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noDataConversion</decl.name>(<decl.var.parameter><decl.var.parameter.type>PythonObject</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 40,
                      "key.name": "noDataConversion(_:_:)",
                      "key.namelength": 40,
                      "key.nameoffset": 425,
                      "key.offset": 425,
                      "key.parsed_declaration": "case noDataConversion(PythonObject, Any.Type)",
                      "key.parsed_scope.end": 15,
                      "key.parsed_scope.start": 15,
                      "key.substructure": [],
                      "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.NumpyScalarCompatibleError.Type) -> (<<error type>>, Any.Type) -> Tensor<Element>.NumpyScalarCompatibleError",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main6TensorV26NumpyScalarCompatibleErrorO16noDataConversion33_E0AEB10524EED233A450789DA24E09E7LLXeF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 12,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 526,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case noShape</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "Cannot find shape information from numpy array.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"17\" column=\"10\"><Name>noShape</Name><USR>s:4main6TensorV26NumpyScalarCompatibleErrorO7noShapeyAEyx_GAGmAA0B7NumericRzlF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Cannot find shape information from numpy array.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 17,
                      "key.doc.name": "noShape",
                      "key.doc.type": "Other",
                      "key.doclength": 52,
                      "key.docoffset": 470,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noShape</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 7,
                      "key.name": "noShape",
                      "key.namelength": 7,
                      "key.nameoffset": 531,
                      "key.offset": 531,
                      "key.parsed_declaration": "case noShape",
                      "key.parsed_scope.end": 17,
                      "key.parsed_scope.start": 17,
                      "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.NumpyScalarCompatibleError.Type) -> Tensor<Element>.NumpyScalarCompatibleError",
                      "key.typeusr": "$sy4main6TensorV26NumpyScalarCompatibleErrorOyx_GAFmcAA0B7NumericRzluD",
                      "key.usr": "s:4main6TensorV26NumpyScalarCompatibleErrorO7noShapeyAEyx_GAGmAA0B7NumericRzlF"
                    }
                  ]
                },
                {
                  "key.kind": "source.lang.swift.decl.enumcase",
                  "key.length": 14,
                  "key.namelength": 0,
                  "key.nameoffset": 0,
                  "key.offset": 598,
                  "key.substructure": [
                    {
                      "key.accessibility": "source.lang.swift.accessibility.public",
                      "key.annotated_decl": "<Declaration>case noPointer</Declaration>",
                      "key.doc.column": 10,
                      "key.doc.comment": "Cannot find data pointer from the numpy array.",
                      "key.doc.declaration": "",
                      "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"19\" column=\"10\"><Name>noPointer</Name><USR>s:4main6TensorV26NumpyScalarCompatibleErrorO9noPointeryAEyx_GAGmAA0B7NumericRzlF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Cannot find data pointer from the numpy array.</Para></Abstract></CommentParts></Other>",
                      "key.doc.line": 19,
                      "key.doc.name": "noPointer",
                      "key.doc.type": "Other",
                      "key.doclength": 51,
                      "key.docoffset": 543,
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                      "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noPointer</decl.name></decl.enumelement>",
                      "key.kind": "source.lang.swift.decl.enumelement",
                      "key.length": 9,
                      "key.name": "noPointer",
                      "key.namelength": 9,
                      "key.nameoffset": 603,
                      "key.offset": 603,
                      "key.parsed_declaration": "case noPointer",
                      "key.parsed_scope.end": 19,
                      "key.parsed_scope.start": 19,
                      "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.NumpyScalarCompatibleError.Type) -> Tensor<Element>.NumpyScalarCompatibleError",
                      "key.typeusr": "$sy4main6TensorV26NumpyScalarCompatibleErrorOyx_GAFmcAA0B7NumericRzluD",
                      "key.usr": "s:4main6TensorV26NumpyScalarCompatibleErrorO9noPointeryAEyx_GAGmAA0B7NumericRzlF"
                    }
                  ]
                }
              ],
              "key.typename": "Tensor<Element>.NumpyScalarCompatibleError.Type",
              "key.typeusr": "$s4main6TensorV26NumpyScalarCompatibleErrorOyx_GmD",
              "key.usr": "s:4main6TensorV26NumpyScalarCompatibleErrorO"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(numpy numpyArray: PythonObject) throws</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 821
                }
              ],
              "key.bodylength": 1258,
              "key.bodyoffset": 873,
              "key.doc.column": 10,
              "key.doc.comment": "Initialize a tensor from numpy object. This doesn't copy the data over, rather, we simply\nkeep the original numpyArray alive. That's also why we don't support any data conversion.",
              "key.doc.declaration": "public init(numpy numpyArray: PythonObject) throws",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"25\" column=\"10\"><Name>init(numpy:)</Name><USR>s:4main6TensorVyXeXecfc</USR><Declaration>public init(numpy numpyArray: PythonObject) throws</Declaration><CommentParts><Abstract><Para>Initialize a tensor from numpy object. This doesn’t copy the data over, rather, we simply keep the original numpyArray alive. That’s also why we don’t support any data conversion.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 25,
              "key.doc.name": "init(numpy:)",
              "key.doc.type": "Function",
              "key.doclength": 199,
              "key.docoffset": 619,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>numpy</decl.var.parameter.argument_label> <decl.var.parameter.name>numpyArray</decl.var.parameter.name>: <decl.var.parameter.type>PythonObject</decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1304,
              "key.name": "init(numpy:)",
              "key.namelength": 36,
              "key.nameoffset": 828,
              "key.offset": 828,
              "key.parsed_declaration": "public init(numpy numpyArray: PythonObject) throws",
              "key.parsed_scope.end": 54,
              "key.parsed_scope.start": 25,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let pyShape: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pyShape</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 53,
                  "key.name": "pyShape",
                  "key.namelength": 7,
                  "key.nameoffset": 1308,
                  "key.offset": 1304,
                  "key.parsed_declaration": "let pyShape = numpyArray.__array_interface__[\"shape\"]",
                  "key.parsed_scope.end": 35,
                  "key.parsed_scope.start": 35,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorVyXeXecfc7pyShapeL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let contiguousNumpyArray: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contiguousNumpyArray</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 59,
                  "key.name": "contiguousNumpyArray",
                  "key.namelength": 20,
                  "key.nameoffset": 1649,
                  "key.offset": 1645,
                  "key.parsed_declaration": "let contiguousNumpyArray = np.ascontiguousarray(numpyArray)",
                  "key.parsed_scope.end": 42,
                  "key.parsed_scope.start": 42,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorVyXeXecfc20contiguousNumpyArrayL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (<<error type>>) throws -> Tensor<Element>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main6TensorVyXeXecfc"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 412,
          "key.bodyoffset": 2191,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : AnyTensor <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 468,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 2146,
          "key.offset": 2136,
          "key.parsed_declaration": "extension Tensor where Element: NumpyScalarCompatible",
          "key.parsed_scope.end": 69,
          "key.parsed_scope.start": 57,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func makeNumpyArray() -&gt; PythonObject</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2252
                }
              ],
              "key.bodylength": 303,
              "key.bodyoffset": 2298,
              "key.doc.column": 15,
              "key.doc.comment": "Make a numpy object from a typed tensor.",
              "key.doc.declaration": "public func makeNumpyArray() -> PythonObject",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift\" line=\"61\" column=\"15\"><Name>makeNumpyArray()</Name><USR>s:4main6TensorV14makeNumpyArrayyXeXeF</USR><Declaration>public func makeNumpyArray() -&gt; PythonObject</Declaration><CommentParts><Abstract><Para>Make a numpy object from a typed tensor.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 61,
              "key.doc.name": "makeNumpyArray()",
              "key.doc.type": "Function",
              "key.doclength": 55,
              "key.docoffset": 2194,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>makeNumpyArray</decl.name>() -&gt; <decl.function.returntype>PythonObject</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 343,
              "key.name": "makeNumpyArray()",
              "key.namelength": 16,
              "key.nameoffset": 2264,
              "key.offset": 2259,
              "key.parsed_declaration": "public func makeNumpyArray() -> PythonObject",
              "key.parsed_scope.end": 68,
              "key.parsed_scope.start": 61,
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>) -> () -> <<error type>>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main6TensorV14makeNumpyArrayyXeXeF"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 68,
          "key.bodyoffset": 2680,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 17,
              "key.offset": 2624
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : AnyTensor <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "PythonConvertible"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 143,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 2616,
          "key.offset": 2606,
          "key.parsed_declaration": "extension Tensor: PythonConvertible where Element: NumpyScalarCompatible",
          "key.parsed_scope.end": 75,
          "key.parsed_scope.start": 71,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var pythonObject: PythonObject { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 2683
                }
              ],
              "key.bodylength": 24,
              "key.bodyoffset": 2722,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/PythonConversion.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pythonObject</decl.name>: <decl.var.type>PythonObject</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 57,
              "key.name": "pythonObject",
              "key.namelength": 12,
              "key.nameoffset": 2694,
              "key.offset": 2690,
              "key.parsed_declaration": "public var pythonObject: PythonObject",
              "key.parsed_scope.end": 74,
              "key.parsed_scope.start": 72,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main6TensorV12pythonObjectXevp"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 6108,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.annotated_decl": "<Declaration>public final class DynamicGraph</Declaration>",
          "key.bodylength": 6053,
          "key.bodyoffset": 53,
          "key.doc.column": 20,
          "key.doc.declaration": "public final class DynamicGraph",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph</Name><USR>s:4main12DynamicGraphC</USR><Declaration>public final class DynamicGraph</Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 5,
          "key.doc.name": "DynamicGraph",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/DynamicGraph.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DynamicGraph</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 6078,
          "key.name": "DynamicGraph",
          "key.namelength": 12,
          "key.nameoffset": 39,
          "key.offset": 29,
          "key.parsed_declaration": "extension DynamicGraph",
          "key.parsed_scope.end": 183,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>final class _Store</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.final",
                  "key.length": 5,
                  "key.offset": 57
                }
              ],
              "key.bodylength": 197,
              "key.bodyoffset": 77,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
              "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>_Store</decl.name></decl.class>",
              "key.kind": "source.lang.swift.decl.class",
              "key.length": 212,
              "key.name": "_Store",
              "key.namelength": 6,
              "key.nameoffset": 69,
              "key.offset": 63,
              "key.parsed_declaration": "final class _Store",
              "key.parsed_scope.end": 14,
              "key.parsed_scope.start": 6,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>let sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sqlite</decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 35,
                  "key.name": "sqlite",
                  "key.namelength": 6,
                  "key.nameoffset": 86,
                  "key.offset": 82,
                  "key.parsed_declaration": "let sqlite: UnsafeMutableRawPointer",
                  "key.parsed_scope.end": 7,
                  "key.parsed_scope.start": 7,
                  "key.typename": "UnsafeMutableRawPointer",
                  "key.typeusr": "$sSvD",
                  "key.usr": "s:4main12DynamicGraphC6_StoreC6sqliteSvvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(sqlite: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>)</Declaration>",
                  "key.bodylength": 57,
                  "key.bodyoffset": 151,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sqlite</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 87,
                  "key.name": "init(sqlite:)",
                  "key.namelength": 27,
                  "key.nameoffset": 122,
                  "key.offset": 122,
                  "key.parsed_declaration": "init(sqlite: OpaquePointer)",
                  "key.parsed_scope.end": 10,
                  "key.parsed_scope.start": 8,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph._Store.Type) -> (OpaquePointer) -> DynamicGraph._Store",
                  "key.typeusr": "$s6sqlite4main12DynamicGraphC6_StoreCs13OpaquePointerV_tcD",
                  "key.usr": "s:4main12DynamicGraphC6_StoreC6sqliteAEs13OpaquePointerV_tcfc"
                },
                {
                  "key.annotated_decl": "<Declaration>deinit</Declaration>",
                  "key.bodylength": 48,
                  "key.bodyoffset": 222,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 57,
                  "key.name": "deinit",
                  "key.namelength": 6,
                  "key.nameoffset": 214,
                  "key.offset": 214,
                  "key.parsed_declaration": "deinit",
                  "key.parsed_scope.end": 13,
                  "key.parsed_scope.start": 11,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph._Store) -> () -> ()",
                  "key.typeusr": "$syycD",
                  "key.usr": "s:4main12DynamicGraphC6_StoreCfd"
                }
              ],
              "key.typename": "DynamicGraph._Store.Type",
              "key.typeusr": "$s4main12DynamicGraphC6_StoreCmD",
              "key.usr": "s:4main12DynamicGraphC6_StoreC"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public struct Store</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 331
                }
              ],
              "key.bodylength": 5093,
              "key.bodyoffset": 352,
              "key.doc.column": 17,
              "key.doc.comment": "A key-value based parameter store.",
              "key.doc.declaration": "public struct Store",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
              "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"19\" column=\"17\"><Name>Store</Name><USR>s:4main12DynamicGraphC5StoreV</USR><Declaration>public struct Store</Declaration><CommentParts><Abstract><Para>A key-value based parameter store.</Para></Abstract></CommentParts></Class>",
              "key.doc.line": 19,
              "key.doc.name": "Store",
              "key.doc.type": "Class",
              "key.doclength": 49,
              "key.docoffset": 279,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
              "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Store</decl.name></decl.struct>",
              "key.kind": "source.lang.swift.decl.struct",
              "key.length": 5108,
              "key.name": "Store",
              "key.namelength": 5,
              "key.nameoffset": 345,
              "key.offset": 338,
              "key.parsed_declaration": "public struct Store",
              "key.parsed_scope.end": 163,
              "key.parsed_scope.start": 19,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 357
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>graph</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 23,
                  "key.name": "graph",
                  "key.namelength": 5,
                  "key.nameoffset": 369,
                  "key.offset": 365,
                  "key.parsed_declaration": "private let graph: DynamicGraph",
                  "key.parsed_scope.end": 20,
                  "key.parsed_scope.start": 20,
                  "key.typename": "DynamicGraph",
                  "key.typeusr": "$s4main12DynamicGraphCD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5graph33_FB88E2357CC5890C59B91A970B0C008ELLACvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.private",
                  "key.annotated_decl": "<Declaration>private let store: <Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.private",
                      "key.length": 7,
                      "key.offset": 393
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>store</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</ref.class></decl.var.type></decl.var.instance>",
                  "key.kind": "source.lang.swift.decl.var.instance",
                  "key.length": 17,
                  "key.name": "store",
                  "key.namelength": 5,
                  "key.nameoffset": 405,
                  "key.offset": 401,
                  "key.parsed_declaration": "private let store: _Store",
                  "key.parsed_scope.end": 21,
                  "key.parsed_scope.start": 21,
                  "key.typename": "DynamicGraph._Store",
                  "key.typeusr": "$s4main12DynamicGraphC6_StoreCD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5store33_FB88E2357CC5890C59B91A970B0C008ELLAC01_D0Cvp"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func read(_ key: <Type usr=\"s:SS\">String</Type>) -&gt; NNC.AnyTensor?</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 569
                    }
                  ],
                  "key.bodylength": 288,
                  "key.bodyoffset": 620,
                  "key.doc.column": 17,
                  "key.doc.comment": " Read a type-erased tensor from the store.\n\n - Parameter key: The key corresponding to that particular tensor.",
                  "key.doc.declaration": "public func read(_ key: String) -> NNC.AnyTensor?",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"28\" column=\"17\"><Name>read(_:)</Name><USR>s:4main12DynamicGraphC5StoreV4readyXeXeF</USR><Declaration>public func read(_ key: String) -&gt; NNC.AnyTensor?</Declaration><CommentParts><Abstract><Para>Read a type-erased tensor from the store.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to that particular tensor.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 28,
                  "key.doc.name": "read(_:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to that particular tensor."
                        }
                      ],
                      "name": "key"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 140,
                  "key.docoffset": 424,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>read</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>NNC.AnyTensor?</decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 333,
                  "key.name": "read(_:)",
                  "key.namelength": 19,
                  "key.nameoffset": 581,
                  "key.offset": 576,
                  "key.parsed_declaration": "public func read(_ key: String) -> NNC.AnyTensor?",
                  "key.parsed_scope.end": 34,
                  "key.parsed_scope.start": 28,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variableSbSS_AA0bC4_Any_ptF\">read(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA5ModelCtF\">read(_: String, model: Model)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA15AnyModelBuilderCtF\">read(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [
                    {
                      "key.annotated_decl": "<Declaration>var underlying: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>underlying</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 61,
                      "key.name": "underlying",
                      "key.namelength": 10,
                      "key.nameoffset": 631,
                      "key.offset": 627,
                      "key.parsed_declaration": "var underlying: UnsafeMutablePointer<ccv_nnc_tensor_t>? = nil",
                      "key.parsed_scope.end": 29,
                      "key.parsed_scope.start": 29,
                      "key.typename": "<<error type>>",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main12DynamicGraphC5StoreV4readyXeXeF10underlyingL_Xevp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>let result: &lt;&lt;error type&gt;&gt;</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 64,
                      "key.name": "result",
                      "key.namelength": 6,
                      "key.nameoffset": 699,
                      "key.offset": 695,
                      "key.parsed_declaration": "let result = ccv_nnc_tensor_read(store.sqlite, key, &underlying)",
                      "key.parsed_scope.end": 30,
                      "key.parsed_scope.start": 30,
                      "key.typename": "<<error type>>",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main12DynamicGraphC5StoreV4readyXeXeF6resultL_Xevp"
                    },
                    {
                      "key.annotated_decl": "<Declaration>let anyTensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                      "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                      "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>anyTensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                      "key.kind": "source.lang.swift.decl.var.local",
                      "key.length": 45,
                      "key.name": "anyTensor",
                      "key.namelength": 9,
                      "key.nameoffset": 825,
                      "key.offset": 821,
                      "key.parsed_declaration": "let anyTensor = AnyTensorStorage(underlying!)",
                      "key.parsed_scope.end": 32,
                      "key.parsed_scope.start": 32,
                      "key.typename": "<<error type>>",
                      "key.typeusr": "$sXeD",
                      "key.usr": "s:4main12DynamicGraphC5StoreV4readyXeXeF9anyTensorL_Xevp"
                    }
                  ],
                  "key.typename": "(DynamicGraph.Store) -> (String) -> <<error type>>",
                  "key.typeusr": "$syXeXecD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV4readyXeXeF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>@discardableResult public func read(_ key: <Type usr=\"s:SS\">String</Type>, variable: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 1263
                    },
                    {
                      "key.attribute": "source.decl.attribute.discardableResult",
                      "key.length": 18,
                      "key.offset": 1240
                    }
                  ],
                  "key.bodylength": 1497,
                  "key.bodyoffset": 1332,
                  "key.doc.column": 17,
                  "key.doc.comment": " Read a tensor from the store into tensor variable from dynamic graph.\n\n - Parameters:\n   - key: The key corresponding to that particular tensor.\n   - variable: The tensor variable to be initialized with.\n - Returns whether we successfully initialized the tensor variable.",
                  "key.doc.declaration": "public func read(_ key: String, variable: DynamicGraph_Any) -> Bool",
                  "key.doc.discussion": [
                    {
                      "List-Bullet": ""
                    }
                  ],
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"45\" column=\"17\"><Name>read(_:variable:)</Name><USR>s:4main12DynamicGraphC5StoreV4read_8variableSbSS_AA0bC4_Any_ptF</USR><Declaration>public func read(_ key: String, variable: DynamicGraph_Any) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Read a tensor from the store into tensor variable from dynamic graph.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to that particular tensor.</Para></Discussion></Parameter><Parameter><Name>variable</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The tensor variable to be initialized with.</Para></Discussion></Parameter></Parameters><Discussion><List-Bullet><Item><Para>Returns whether we successfully initialized the tensor variable.</Para></Item></List-Bullet></Discussion></CommentParts></Function>",
                  "key.doc.line": 45,
                  "key.doc.name": "read(_:variable:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to that particular tensor."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The tensor variable to be initialized with."
                        }
                      ],
                      "name": "variable"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 320,
                  "key.docoffset": 915,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>read</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variable</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 1560,
                  "key.name": "read(_:variable:)",
                  "key.namelength": 47,
                  "key.nameoffset": 1275,
                  "key.offset": 1270,
                  "key.parsed_declaration": "public func read(_ key: String, variable: DynamicGraph_Any) -> Bool",
                  "key.parsed_scope.end": 82,
                  "key.parsed_scope.start": 45,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA5ModelCtF\">read(_: String, model: Model)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA15AnyModelBuilderCtF\">read(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, DynamicGraph_Any) -> Bool",
                  "key.typeusr": "$s_8variableSbSS_4main16DynamicGraph_Any_ptcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV4read_8variableSbSS_AA0bC4_Any_ptF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func read(_ key: <Type usr=\"s:SS\">String</Type>, model: <Type usr=\"s:4main5ModelC\">Model</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3063
                    }
                  ],
                  "key.bodylength": 64,
                  "key.bodyoffset": 3110,
                  "key.doc.column": 17,
                  "key.doc.comment": " Read parameters into a given model.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model to be initialized with parameters from a given key.",
                  "key.doc.declaration": "public func read(_ key: String, model: Model)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"90\" column=\"17\"><Name>read(_:model:)</Name><USR>s:4main12DynamicGraphC5StoreV4read_5modelySS_AA5ModelCtF</USR><Declaration>public func read(_ key: String, model: Model)</Declaration><CommentParts><Abstract><Para>Read parameters into a given model.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular model.</Para></Discussion></Parameter><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The model to be initialized with parameters from a given key.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 90,
                  "key.doc.name": "read(_:model:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular model."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The model to be initialized with parameters from a given key."
                        }
                      ],
                      "name": "model"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 223,
                  "key.docoffset": 2835,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>read</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 105,
                  "key.name": "read(_:model:)",
                  "key.namelength": 33,
                  "key.nameoffset": 3075,
                  "key.offset": 3070,
                  "key.parsed_declaration": "public func read(_ key: String, model: Model)",
                  "key.parsed_scope.end": 92,
                  "key.parsed_scope.start": 90,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variableSbSS_AA0bC4_Any_ptF\">read(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA15AnyModelBuilderCtF\">read(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, Model) -> ()",
                  "key.typeusr": "$s_5modelySS_4main5ModelCtcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV4read_5modelySS_AA5ModelCtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func read(_ key: <Type usr=\"s:SS\">String</Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3424
                    }
                  ],
                  "key.bodylength": 40,
                  "key.bodyoffset": 3481,
                  "key.doc.column": 17,
                  "key.doc.comment": " Read parameters into a given model builder.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model builder to be initialized with parameters from a given key.",
                  "key.doc.declaration": "public func read(_ key: String, model: AnyModelBuilder)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"100\" column=\"17\"><Name>read(_:model:)</Name><USR>s:4main12DynamicGraphC5StoreV4read_5modelySS_AA15AnyModelBuilderCtF</USR><Declaration>public func read(_ key: String, model: AnyModelBuilder)</Declaration><CommentParts><Abstract><Para>Read parameters into a given model builder.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular model.</Para></Discussion></Parameter><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The model builder to be initialized with parameters from a given key.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 100,
                  "key.doc.name": "read(_:model:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular model."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The model builder to be initialized with parameters from a given key."
                        }
                      ],
                      "name": "model"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 239,
                  "key.docoffset": 3180,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>read</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 91,
                  "key.name": "read(_:model:)",
                  "key.namelength": 43,
                  "key.nameoffset": 3436,
                  "key.offset": 3431,
                  "key.parsed_declaration": "public func read(_ key: String, model: AnyModelBuilder)",
                  "key.parsed_scope.end": 102,
                  "key.parsed_scope.start": 100,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variableSbSS_AA0bC4_Any_ptF\">read(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5modelySS_AA5ModelCtF\">read(_: String, model: Model)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, AnyModelBuilder) -> ()",
                  "key.typeusr": "$s_5modelySS_4main15AnyModelBuilderCtcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV4read_5modelySS_AA15AnyModelBuilderCtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String</Type>, tensor: NNC.AnyTensor)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 3717
                    }
                  ],
                  "key.bodylength": 67,
                  "key.bodyoffset": 3774,
                  "key.doc.column": 17,
                  "key.doc.comment": " Write a tensor to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - tensor: The tensor to be persisted.",
                  "key.doc.declaration": "public func write(_ key: String, tensor: NNC.AnyTensor)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"111\" column=\"17\"><Name>write(_:tensor:)</Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF</USR><Declaration>public func write(_ key: String, tensor: NNC.AnyTensor)</Declaration><CommentParts><Abstract><Para>Write a tensor to the store.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular tensor.</Para></Discussion></Parameter><Parameter><Name>tensor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The tensor to be persisted.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 111,
                  "key.doc.name": "write(_:tensor:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular tensor."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The tensor to be persisted."
                        }
                      ],
                      "name": "tensor"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 184,
                  "key.docoffset": 3528,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tensor</decl.var.parameter.argument_label>: <decl.var.parameter.type>NNC.AnyTensor</decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 118,
                  "key.name": "write(_:tensor:)",
                  "key.namelength": 43,
                  "key.nameoffset": 3729,
                  "key.offset": 3724,
                  "key.parsed_declaration": "public func write(_ key: String, tensor: NNC.AnyTensor)",
                  "key.parsed_scope.end": 113,
                  "key.parsed_scope.start": 111,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variableySS_AA0bC4_Any_ptF\">write(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA5ModelCtF\">write(_: String, model: Model)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA15AnyModelBuilderCtF\">write(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, <<error type>>) -> ()",
                  "key.typeusr": "$syXeXecD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String</Type>, variable: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 4056
                    }
                  ],
                  "key.bodylength": 554,
                  "key.bodyoffset": 4118,
                  "key.doc.column": 17,
                  "key.doc.comment": " Write a tensor variable to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - variable: The tensor variable to be persisted.",
                  "key.doc.declaration": "public func write(_ key: String, variable: DynamicGraph_Any)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"121\" column=\"17\"><Name>write(_:variable:)</Name><USR>s:4main12DynamicGraphC5StoreV5write_8variableySS_AA0bC4_Any_ptF</USR><Declaration>public func write(_ key: String, variable: DynamicGraph_Any)</Declaration><CommentParts><Abstract><Para>Write a tensor variable to the store.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular tensor.</Para></Discussion></Parameter><Parameter><Name>variable</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The tensor variable to be persisted.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 121,
                  "key.doc.name": "write(_:variable:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular tensor."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The tensor variable to be persisted."
                        }
                      ],
                      "name": "variable"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 204,
                  "key.docoffset": 3847,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variable</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 610,
                  "key.name": "write(_:variable:)",
                  "key.namelength": 48,
                  "key.nameoffset": 4068,
                  "key.offset": 4063,
                  "key.parsed_declaration": "public func write(_ key: String, variable: DynamicGraph_Any)",
                  "key.parsed_scope.end": 136,
                  "key.parsed_scope.start": 121,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA5ModelCtF\">write(_: String, model: Model)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA15AnyModelBuilderCtF\">write(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, DynamicGraph_Any) -> ()",
                  "key.typeusr": "$s_8variableySS_4main16DynamicGraph_Any_ptcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5write_8variableySS_AA0bC4_Any_ptF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String</Type>, model: <Type usr=\"s:4main5ModelC\">Model</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 4884
                    }
                  ],
                  "key.bodylength": 65,
                  "key.bodyoffset": 4932,
                  "key.doc.column": 17,
                  "key.doc.comment": " Write a model to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model where its parameters to be persisted.",
                  "key.doc.declaration": "public func write(_ key: String, model: Model)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"144\" column=\"17\"><Name>write(_:model:)</Name><USR>s:4main12DynamicGraphC5StoreV5write_5modelySS_AA5ModelCtF</USR><Declaration>public func write(_ key: String, model: Model)</Declaration><CommentParts><Abstract><Para>Write a model to the store.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular model.</Para></Discussion></Parameter><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The model where its parameters to be persisted.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 144,
                  "key.doc.name": "write(_:model:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular model."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The model where its parameters to be persisted."
                        }
                      ],
                      "name": "model"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 201,
                  "key.docoffset": 4678,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 107,
                  "key.name": "write(_:model:)",
                  "key.namelength": 34,
                  "key.nameoffset": 4896,
                  "key.offset": 4891,
                  "key.parsed_declaration": "public func write(_ key: String, model: Model)",
                  "key.parsed_scope.end": 146,
                  "key.parsed_scope.start": 144,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variableySS_AA0bC4_Any_ptF\">write(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA15AnyModelBuilderCtF\">write(_: String, model: AnyModelBuilder)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, Model) -> ()",
                  "key.typeusr": "$s_5modelySS_4main5ModelCtcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5write_5modelySS_AA5ModelCtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String</Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</Type>)</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 5233
                    }
                  ],
                  "key.bodylength": 43,
                  "key.bodyoffset": 5291,
                  "key.doc.column": 17,
                  "key.doc.comment": " Write a model builder to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model builder.\n   - model builder: The model where its parameters to be persisted.",
                  "key.doc.declaration": "public func write(_ key: String, model: AnyModelBuilder)",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"154\" column=\"17\"><Name>write(_:model:)</Name><USR>s:4main12DynamicGraphC5StoreV5write_5modelySS_AA15AnyModelBuilderCtF</USR><Declaration>public func write(_ key: String, model: AnyModelBuilder)</Declaration><CommentParts><Abstract><Para>Write a model builder to the store.</Para></Abstract><Parameters><Parameter><Name>key</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The key corresponding to a particular model builder.</Para></Discussion></Parameter><Parameter><Name>model builder</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The model where its parameters to be persisted.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
                  "key.doc.line": 154,
                  "key.doc.name": "write(_:model:)",
                  "key.doc.parameters": [
                    {
                      "discussion": [
                        {
                          "Para": "The key corresponding to a particular model builder."
                        }
                      ],
                      "name": "key"
                    },
                    {
                      "discussion": [
                        {
                          "Para": "The model where its parameters to be persisted."
                        }
                      ],
                      "name": "model builder"
                    }
                  ],
                  "key.doc.type": "Function",
                  "key.doclength": 225,
                  "key.docoffset": 5003,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 95,
                  "key.name": "write(_:model:)",
                  "key.namelength": 44,
                  "key.nameoffset": 5245,
                  "key.offset": 5240,
                  "key.parsed_declaration": "public func write(_ key: String, model: AnyModelBuilder)",
                  "key.parsed_scope.end": 156,
                  "key.parsed_scope.start": 154,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variableySS_AA0bC4_Any_ptF\">write(_:variable:)</RelatedName>"
                    },
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_5modelySS_AA5ModelCtF\">write(_: String, model: Model)</RelatedName>"
                    }
                  ],
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store) -> (String, AnyModelBuilder) -> ()",
                  "key.typeusr": "$s_5modelySS_4main15AnyModelBuilderCtcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV5write_5modelySS_AA15AnyModelBuilderCtF"
                },
                {
                  "key.accessibility": "source.lang.swift.accessibility.internal",
                  "key.annotated_decl": "<Declaration>init(_ store: <Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</Type>, graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>)</Declaration>",
                  "key.bodylength": 55,
                  "key.bodyoffset": 5385,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>store</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>graph</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
                  "key.kind": "source.lang.swift.decl.function.method.instance",
                  "key.length": 100,
                  "key.name": "init(_:graph:)",
                  "key.namelength": 42,
                  "key.nameoffset": 5341,
                  "key.offset": 5341,
                  "key.parsed_declaration": "init(_ store: _Store, graph: DynamicGraph)",
                  "key.parsed_scope.end": 161,
                  "key.parsed_scope.start": 158,
                  "key.substructure": [],
                  "key.typename": "(DynamicGraph.Store.Type) -> (DynamicGraph._Store, DynamicGraph) -> DynamicGraph.Store",
                  "key.typeusr": "$s_5graph4main12DynamicGraphC5StoreVAD01_E0C_ADtcD",
                  "key.usr": "s:4main12DynamicGraphC5StoreV_5graphAeC01_D0C_ACtcfc"
                }
              ],
              "key.typename": "DynamicGraph.Store.Type",
              "key.typeusr": "$s4main12DynamicGraphC5StoreVmD",
              "key.usr": "s:4main12DynamicGraphC5StoreV"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@discardableResult public func openStore(_ filePath: <Type usr=\"s:SS\">String</Type>, procedure: (_ store: <Type usr=\"s:4main12DynamicGraphC5StoreV\">Store</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 5736
                },
                {
                  "key.attribute": "source.decl.attribute.discardableResult",
                  "key.length": 18,
                  "key.offset": 5715
                }
              ],
              "key.bodylength": 279,
              "key.bodyoffset": 5824,
              "key.doc.column": 15,
              "key.doc.comment": " Open the store from a file.\n\n - Parameters:\n   - filePath: The file path for the store.\n   - procedure: When the store is open, you can access it from this closure.\n - Returns: Wether this store can be successfully open or not.",
              "key.doc.declaration": "public func openStore(_ filePath: String, procedure: (_ store: Store) -> Void) -> Bool",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift\" line=\"174\" column=\"15\"><Name>openStore(_:procedure:)</Name><USR>s:4main12DynamicGraphC9openStore_9procedureSbSS_yAC0E0VXEtF</USR><Declaration>public func openStore(_ filePath: String, procedure: (_ store: Store) -&gt; Void) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Open the store from a file.</Para></Abstract><Parameters><Parameter><Name>filePath</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The file path for the store.</Para></Discussion></Parameter><Parameter><Name>procedure</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>When the store is open, you can access it from this closure.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Wether this store can be successfully open or not.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 174,
              "key.doc.name": "openStore(_:procedure:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The file path for the store."
                    }
                  ],
                  "name": "filePath"
                },
                {
                  "discussion": [
                    {
                      "Para": "When the store is open, you can access it from this closure."
                    }
                  ],
                  "name": "procedure"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "Wether this store can be successfully open or not."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 262,
              "key.docoffset": 5450,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>openStore</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>filePath</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>procedure</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>store</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 361,
              "key.name": "openStore(_:procedure:)",
              "key.namelength": 66,
              "key.nameoffset": 5748,
              "key.offset": 5743,
              "key.parsed_declaration": "public func openStore(_ filePath: String, procedure: (_ store: Store) -> Void) -> Bool",
              "key.parsed_scope.end": 181,
              "key.parsed_scope.start": 174,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var _sqlite: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_sqlite</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 33,
                  "key.name": "_sqlite",
                  "key.namelength": 7,
                  "key.nameoffset": 5833,
                  "key.offset": 5829,
                  "key.parsed_declaration": "var _sqlite: OpaquePointer? = nil",
                  "key.parsed_scope.end": 175,
                  "key.parsed_scope.start": 175,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main12DynamicGraphC9openStore_9procedureSbSS_yAC0E0VXEtF7_sqliteL_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let store: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph</Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Store.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>store</decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph</ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 54,
                  "key.name": "store",
                  "key.namelength": 5,
                  "key.nameoffset": 6013,
                  "key.offset": 6009,
                  "key.parsed_declaration": "let store = Store(_Store(sqlite: sqlite), graph: self)",
                  "key.parsed_scope.end": 178,
                  "key.parsed_scope.start": 178,
                  "key.typename": "DynamicGraph.Store",
                  "key.typeusr": "$s4main12DynamicGraphC5StoreVD",
                  "key.usr": "s:4main12DynamicGraphC9openStore_9procedureSbSS_yAC0E0VXEtF5storeL_AGvp"
                }
              ],
              "key.typename": "(DynamicGraph) -> (String, (DynamicGraph.Store) -> ()) -> Bool",
              "key.typeusr": "$s_9procedureSbSS_y4main12DynamicGraphC5StoreVXEtcD",
              "key.usr": "s:4main12DynamicGraphC9openStore_9procedureSbSS_yAC0E0VXEtF"
            }
          ],
          "key.typename": "DynamicGraph.Type",
          "key.typeusr": "$s4main12DynamicGraphCmD",
          "key.usr": "s:4main12DynamicGraphC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 1199,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class StreamContext</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 96
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 89
            }
          ],
          "key.bodylength": 1074,
          "key.bodyoffset": 123,
          "key.doc.column": 20,
          "key.doc.comment": "A stream context is an object that an execution can be performed upon.",
          "key.doc.declaration": "public final class StreamContext",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift\" line=\"4\" column=\"20\"><Name>StreamContext</Name><USR>s:4main13StreamContextC</USR><Declaration>public final class StreamContext</Declaration><CommentParts><Abstract><Para>A stream context is an object that an execution can be performed upon.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 4,
          "key.doc.name": "StreamContext",
          "key.doc.type": "Class",
          "key.doclength": 75,
          "key.docoffset": 14,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>StreamContext</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 1096,
          "key.name": "StreamContext",
          "key.namelength": 13,
          "key.nameoffset": 108,
          "key.offset": 102,
          "key.parsed_declaration": "public final class StreamContext",
          "key.parsed_scope.end": 47,
          "key.parsed_scope.start": 4,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>let _stream: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_stream</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 26,
              "key.name": "_stream",
              "key.namelength": 7,
              "key.nameoffset": 131,
              "key.offset": 127,
              "key.parsed_declaration": "let _stream: OpaquePointer",
              "key.parsed_scope.end": 6,
              "key.parsed_scope.start": 6,
              "key.typename": "OpaquePointer",
              "key.typeusr": "$ss13OpaquePointerVD",
              "key.usr": "s:4main13StreamContextC7_streams13OpaquePointerVvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 277
                }
              ],
              "key.bodylength": 241,
              "key.bodyoffset": 310,
              "key.doc.column": 10,
              "key.doc.comment": " Create a new stream context.\n\n - Parameter kind: Whether this stream context is on CPU or GPU.",
              "key.doc.declaration": "public init(_ kind: DeviceKind)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift\" line=\"13\" column=\"10\"><Name>init(_:)</Name><USR>s:4main13StreamContextCyAcA10DeviceKindOcfc</USR><Declaration>public init(_ kind: DeviceKind)</Declaration><CommentParts><Abstract><Para>Create a new stream context.</Para></Abstract><Parameters><Parameter><Name>kind</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether this stream context is on CPU or GPU.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 13,
              "key.doc.name": "init(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Whether this stream context is on CPU or GPU."
                    }
                  ],
                  "name": "kind"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 117,
              "key.docoffset": 157,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 268,
              "key.name": "init(_:)",
              "key.namelength": 24,
              "key.nameoffset": 284,
              "key.offset": 284,
              "key.parsed_declaration": "public init(_ kind: DeviceKind)",
              "key.parsed_scope.end": 22,
              "key.parsed_scope.start": 13,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let type: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 15,
                  "key.name": "type",
                  "key.namelength": 4,
                  "key.nameoffset": 319,
                  "key.offset": 315,
                  "key.parsed_declaration": "let type: Int32",
                  "key.parsed_scope.end": 14,
                  "key.parsed_scope.start": 14,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:s4type2ofq_x_tr0_lF\">type(of:)</RelatedName>"
                    }
                  ],
                  "key.typename": "Int32",
                  "key.typeusr": "$ss5Int32VD",
                  "key.usr": "s:4main13StreamContextCyAcA10DeviceKindOcfc4typeL_s5Int32Vvp"
                }
              ],
              "key.typename": "(StreamContext.Type) -> (DeviceKind) -> StreamContext",
              "key.typeusr": "$sy4main13StreamContextCAA10DeviceKindOcD",
              "key.usr": "s:4main13StreamContextCyAcA10DeviceKindOcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func joined()</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 633
                }
              ],
              "key.bodylength": 44,
              "key.bodyoffset": 655,
              "key.doc.column": 15,
              "key.doc.comment": "Wait until all executions on this stream context to finish.",
              "key.doc.declaration": "public func joined()",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift\" line=\"27\" column=\"15\"><Name>joined()</Name><USR>s:4main13StreamContextC6joinedyyF</USR><Declaration>public func joined()</Declaration><CommentParts><Abstract><Para>Wait until all executions on this stream context to finish.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 27,
              "key.doc.name": "joined()",
              "key.doc.type": "Function",
              "key.doclength": 74,
              "key.docoffset": 556,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>joined</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 60,
              "key.name": "joined()",
              "key.namelength": 8,
              "key.nameoffset": 645,
              "key.offset": 640,
              "key.parsed_declaration": "public func joined()",
              "key.parsed_scope.end": 29,
              "key.parsed_scope.start": 27,
              "key.substructure": [],
              "key.typename": "(StreamContext) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main13StreamContextC6joinedyyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func async(_ closure: @escaping () -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 823
                }
              ],
              "key.bodylength": 263,
              "key.bodyoffset": 875,
              "key.doc.column": 15,
              "key.doc.comment": "Dispatch a block to be executed when all previous executions prior to\nthis method call are done.",
              "key.doc.declaration": "public func async(_ closure: @escaping () -> Void)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift\" line=\"35\" column=\"15\"><Name>async(_:)</Name><USR>s:4main13StreamContextC5asyncyyyycF</USR><Declaration>public func async(_ closure: @escaping () -&gt; Void)</Declaration><CommentParts><Abstract><Para>Dispatch a block to be executed when all previous executions prior to this method call are done.</Para></Abstract></CommentParts></Function>",
              "key.doc.line": 35,
              "key.doc.name": "async(_:)",
              "key.doc.type": "Function",
              "key.doclength": 116,
              "key.docoffset": 704,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>async</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>closure</decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 309,
              "key.name": "async(_:)",
              "key.namelength": 38,
              "key.nameoffset": 835,
              "key.offset": 830,
              "key.parsed_declaration": "public func async(_ closure: @escaping () -> Void)",
              "key.parsed_scope.end": 42,
              "key.parsed_scope.start": 35,
              "key.substructure": [],
              "key.typename": "(StreamContext) -> (@escaping () -> ()) -> ()",
              "key.typeusr": "$syyyyccD",
              "key.usr": "s:4main13StreamContextC5asyncyyyycF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>deinit</Declaration>",
              "key.bodylength": 44,
              "key.bodyoffset": 1151,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/StreamContext.swift",
              "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 53,
              "key.name": "deinit",
              "key.namelength": 6,
              "key.nameoffset": 1143,
              "key.offset": 1143,
              "key.parsed_declaration": "deinit",
              "key.parsed_scope.end": 46,
              "key.parsed_scope.start": 44,
              "key.substructure": [],
              "key.typename": "(StreamContext) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main13StreamContextCfd"
            }
          ],
          "key.typename": "StreamContext.Type",
          "key.typeusr": "$s4main13StreamContextCmD",
          "key.usr": "s:4main13StreamContextC"
        }
      ]
    }
  },
  {
    "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift": {
      "key.diagnostic_stage": "source.diagnostic.stage.swift.parse",
      "key.length": 37121,
      "key.offset": 0,
      "key.substructure": [
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>final class CmdParamsFactory</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 14
            }
          ],
          "key.bodylength": 178,
          "key.bodyoffset": 44,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>CmdParamsFactory</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 203,
          "key.name": "CmdParamsFactory",
          "key.namelength": 16,
          "key.nameoffset": 26,
          "key.offset": 20,
          "key.parsed_declaration": "final class CmdParamsFactory",
          "key.parsed_scope.end": 13,
          "key.parsed_scope.start": 3,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>static let factory: <Type usr=\"s:4main16CmdParamsFactoryC\">CmdParamsFactory</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>factory</decl.name>: <decl.var.type><ref.class usr=\"s:4main16CmdParamsFactoryC\">CmdParamsFactory</ref.class></decl.var.type></decl.var.static>",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 39,
              "key.name": "factory",
              "key.namelength": 7,
              "key.nameoffset": 58,
              "key.offset": 47,
              "key.parsed_declaration": "static let factory = CmdParamsFactory()",
              "key.parsed_scope.end": 4,
              "key.parsed_scope.start": 4,
              "key.typename": "CmdParamsFactory",
              "key.typeusr": "$s4main16CmdParamsFactoryCD",
              "key.usr": "s:4main16CmdParamsFactoryC7factoryACvpZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init()</Declaration>",
              "key.bodylength": 22,
              "key.bodyoffset": 97,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 31,
              "key.name": "init()",
              "key.namelength": 6,
              "key.nameoffset": 89,
              "key.offset": 89,
              "key.parsed_declaration": "init()",
              "key.parsed_scope.end": 7,
              "key.parsed_scope.start": 5,
              "key.substructure": [],
              "key.typename": "(CmdParamsFactory.Type) -> () -> CmdParamsFactory",
              "key.typeusr": "$s4main16CmdParamsFactoryCycD",
              "key.usr": "s:4main16CmdParamsFactoryCACycfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>func newParams() -&gt; ccv_nnc_cmd_param_t</Declaration>",
              "key.bodylength": 36,
              "key.bodyoffset": 164,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>newParams</decl.name>() -&gt; <decl.function.returntype>ccv_nnc_cmd_param_t</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 78,
              "key.name": "newParams()",
              "key.namelength": 11,
              "key.nameoffset": 128,
              "key.offset": 123,
              "key.parsed_declaration": "func newParams() -> ccv_nnc_cmd_param_t",
              "key.parsed_scope.end": 10,
              "key.parsed_scope.start": 8,
              "key.substructure": [],
              "key.typename": "(CmdParamsFactory) -> () -> <<error type>>",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main16CmdParamsFactoryC03newC0yXeXeF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>func sink()</Declaration>",
              "key.bodylength": 3,
              "key.bodyoffset": 217,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sink</decl.name>()</decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 17,
              "key.name": "sink()",
              "key.namelength": 6,
              "key.nameoffset": 209,
              "key.offset": 204,
              "key.parsed_declaration": "func sink()",
              "key.parsed_scope.end": 12,
              "key.parsed_scope.start": 11,
              "key.typename": "(CmdParamsFactory) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main16CmdParamsFactoryC4sinkyyF"
            }
          ],
          "key.typename": "CmdParamsFactory.Type",
          "key.typeusr": "$s4main16CmdParamsFactoryCmD",
          "key.usr": "s:4main16CmdParamsFactoryC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum DeviceKind</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 272
            }
          ],
          "key.bodylength": 642,
          "key.bodyoffset": 296,
          "key.doc.column": 13,
          "key.doc.comment": "The kind of devices the tensor resides on.",
          "key.doc.declaration": "public enum DeviceKind",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"16\" column=\"13\"><Name>DeviceKind</Name><USR>s:4main10DeviceKindO</USR><Declaration>public enum DeviceKind</Declaration><CommentParts><Abstract><Para>The kind of devices the tensor resides on.</Para></Abstract></CommentParts></Other>",
          "key.doc.line": 16,
          "key.doc.name": "DeviceKind",
          "key.doc.type": "Other",
          "key.doclength": 47,
          "key.docoffset": 225,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>DeviceKind</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 660,
          "key.name": "DeviceKind",
          "key.namelength": 10,
          "key.nameoffset": 284,
          "key.offset": 279,
          "key.parsed_declaration": "public enum DeviceKind",
          "key.parsed_scope.end": 43,
          "key.parsed_scope.start": 16,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 8,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 299,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case CPU</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>CPU</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 3,
                  "key.name": "CPU",
                  "key.namelength": 3,
                  "key.nameoffset": 304,
                  "key.offset": 304,
                  "key.parsed_declaration": "case CPU",
                  "key.parsed_scope.end": 17,
                  "key.parsed_scope.start": 17,
                  "key.typename": "(DeviceKind.Type) -> DeviceKind",
                  "key.typeusr": "$sy4main10DeviceKindOACmcD",
                  "key.usr": "s:4main10DeviceKindO3CPUyA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 13,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 310,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case GPU(<Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>GPU</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 8,
                  "key.name": "GPU(_:)",
                  "key.namelength": 8,
                  "key.nameoffset": 315,
                  "key.offset": 315,
                  "key.parsed_declaration": "case GPU(Int)",
                  "key.parsed_scope.end": 18,
                  "key.parsed_scope.start": 18,
                  "key.substructure": [],
                  "key.typename": "(DeviceKind.Type) -> (Int) -> DeviceKind",
                  "key.typeusr": "$sy4main10DeviceKindOSicACmcD",
                  "key.usr": "s:4main10DeviceKindO3GPUyACSicACmF"
                }
              ]
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline static func from(cTensorParams: ccv_nnc_tensor_param_t) -&gt; <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 327
                }
              ],
              "key.bodylength": 283,
              "key.bodyoffset": 418,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>from</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cTensorParams</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_tensor_param_t</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 355,
              "key.name": "from(cTensorParams:)",
              "key.namelength": 43,
              "key.nameoffset": 359,
              "key.offset": 347,
              "key.parsed_declaration": "static func from(cTensorParams: ccv_nnc_tensor_param_t) -> DeviceKind",
              "key.parsed_scope.end": 30,
              "key.parsed_scope.start": 21,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let type: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 34,
                  "key.name": "type",
                  "key.namelength": 4,
                  "key.nameoffset": 427,
                  "key.offset": 423,
                  "key.parsed_declaration": "let type = Int(cTensorParams.type)",
                  "key.parsed_scope.end": 22,
                  "key.parsed_scope.start": 22,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:s4type2ofq_x_tr0_lF\">type(of:)</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main10DeviceKindO4fromyXeXeFZ4typeL_Xevp"
                }
              ],
              "key.typename": "(DeviceKind.Type) -> (<<error type>>) -> DeviceKind",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main10DeviceKindO4fromyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>.GPUs</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 755
                }
              ],
              "key.bodylength": 163,
              "key.bodyoffset": 773,
              "key.doc.column": 15,
              "key.doc.comment": "GPU device related information.",
              "key.doc.declaration": "public enum main.DeviceKind.GPUs",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"35\" column=\"15\"><Name>GPUs</Name><USR>s:4main10DeviceKindO4GPUsO</USR><Declaration>public enum main.DeviceKind.GPUs</Declaration><CommentParts><Abstract><Para>GPU device related information.</Para></Abstract></CommentParts></Other>",
              "key.doc.line": 35,
              "key.doc.name": "GPUs",
              "key.doc.type": "Other",
              "key.doclength": 46,
              "key.docoffset": 706,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum>.<decl.name>GPUs</decl.name></decl.enum>",
              "key.kind": "source.lang.swift.decl.enum",
              "key.length": 175,
              "key.name": "GPUs",
              "key.namelength": 4,
              "key.nameoffset": 767,
              "key.offset": 762,
              "key.parsed_declaration": "public enum GPUs",
              "key.parsed_scope.end": 42,
              "key.parsed_scope.start": 35,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>public static var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>",
                  "key.attributes": [
                    {
                      "key.attribute": "source.decl.attribute.public",
                      "key.length": 6,
                      "key.offset": 834
                    }
                  ],
                  "key.bodylength": 68,
                  "key.bodyoffset": 864,
                  "key.doc.column": 23,
                  "key.doc.comment": "Number of available GPU devices.",
                  "key.doc.declaration": "public static var count: Int { get }",
                  "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"39\" column=\"23\"><Name>count</Name><USR>s:4main10DeviceKindO4GPUsO5countSivpZ</USR><Declaration>public static var count: Int { get }</Declaration><CommentParts><Abstract><Para>Number of available GPU devices.</Para></Abstract></CommentParts></Other>",
                  "key.doc.line": 39,
                  "key.doc.name": "count",
                  "key.doc.type": "Other",
                  "key.doclength": 51,
                  "key.docoffset": 778,
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
                  "key.kind": "source.lang.swift.decl.var.static",
                  "key.length": 92,
                  "key.name": "count",
                  "key.namelength": 5,
                  "key.nameoffset": 852,
                  "key.offset": 841,
                  "key.parsed_declaration": "public static var count: Int",
                  "key.parsed_scope.end": 41,
                  "key.parsed_scope.start": 39,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main10DeviceKindO4GPUsO5countSivpZ"
                }
              ],
              "key.typename": "DeviceKind.GPUs.Type",
              "key.typeusr": "$s4main10DeviceKindO4GPUsOmD",
              "key.usr": "s:4main10DeviceKindO4GPUsO"
            }
          ],
          "key.typename": "DeviceKind.Type",
          "key.typeusr": "$s4main10DeviceKindOmD",
          "key.usr": "s:4main10DeviceKindO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum TensorFormat</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 966
            }
          ],
          "key.bodylength": 636,
          "key.bodyoffset": 992,
          "key.doc.column": 13,
          "key.doc.comment": "Tensor arrangements.",
          "key.doc.declaration": "public enum TensorFormat",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"46\" column=\"13\"><Name>TensorFormat</Name><USR>s:4main12TensorFormatO</USR><Declaration>public enum TensorFormat</Declaration><CommentParts><Abstract><Para>Tensor arrangements.</Para></Abstract></CommentParts></Other>",
          "key.doc.line": 46,
          "key.doc.name": "TensorFormat",
          "key.doc.type": "Other",
          "key.doclength": 25,
          "key.docoffset": 941,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>TensorFormat</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 656,
          "key.name": "TensorFormat",
          "key.namelength": 12,
          "key.nameoffset": 978,
          "key.offset": 973,
          "key.parsed_declaration": "public enum TensorFormat",
          "key.parsed_scope.end": 76,
          "key.parsed_scope.start": 46,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 9,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 995,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case NHWC</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>NHWC</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 4,
                  "key.name": "NHWC",
                  "key.namelength": 4,
                  "key.nameoffset": 1000,
                  "key.offset": 1000,
                  "key.parsed_declaration": "case NHWC",
                  "key.parsed_scope.end": 47,
                  "key.parsed_scope.start": 47,
                  "key.typename": "(TensorFormat.Type) -> TensorFormat",
                  "key.typeusr": "$sy4main12TensorFormatOACmcD",
                  "key.usr": "s:4main12TensorFormatO4NHWCyA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 9,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1007,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case NCHW</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>NCHW</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 4,
                  "key.name": "NCHW",
                  "key.namelength": 4,
                  "key.nameoffset": 1012,
                  "key.offset": 1012,
                  "key.parsed_declaration": "case NCHW",
                  "key.parsed_scope.end": 48,
                  "key.parsed_scope.start": 48,
                  "key.typename": "(TensorFormat.Type) -> TensorFormat",
                  "key.typeusr": "$sy4main12TensorFormatOACmcD",
                  "key.usr": "s:4main12TensorFormatO4NCHWyA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 9,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1019,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case CHWN</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>CHWN</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 4,
                  "key.name": "CHWN",
                  "key.namelength": 4,
                  "key.nameoffset": 1024,
                  "key.offset": 1024,
                  "key.parsed_declaration": "case CHWN",
                  "key.parsed_scope.end": 49,
                  "key.parsed_scope.start": 49,
                  "key.typename": "(TensorFormat.Type) -> TensorFormat",
                  "key.typeusr": "$sy4main12TensorFormatOACmcD",
                  "key.usr": "s:4main12TensorFormatO4CHWNyA2CmF"
                }
              ]
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline static func from(cTensorParams: ccv_nnc_tensor_param_t) -&gt; <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 1032
                }
              ],
              "key.bodylength": 256,
              "key.bodyoffset": 1125,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>from</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cTensorParams</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_tensor_param_t</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 330,
              "key.name": "from(cTensorParams:)",
              "key.namelength": 43,
              "key.nameoffset": 1064,
              "key.offset": 1052,
              "key.parsed_declaration": "static func from(cTensorParams: ccv_nnc_tensor_param_t) -> TensorFormat",
              "key.parsed_scope.end": 63,
              "key.parsed_scope.start": 52,
              "key.substructure": [],
              "key.typename": "(TensorFormat.Type) -> (<<error type>>) -> TensorFormat",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main12TensorFormatO4fromyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var toC: <Type usr=\"s:s5Int32V\">Int32</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 1386
                }
              ],
              "key.bodylength": 204,
              "key.bodyoffset": 1422,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toC</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 221,
              "key.name": "toC",
              "key.namelength": 3,
              "key.nameoffset": 1410,
              "key.offset": 1406,
              "key.parsed_declaration": "var toC: Int32",
              "key.parsed_scope.end": 75,
              "key.parsed_scope.start": 66,
              "key.typename": "Int32",
              "key.typeusr": "$ss5Int32VD",
              "key.usr": "s:4main12TensorFormatO3toCs5Int32Vvp"
            }
          ],
          "key.typename": "TensorFormat.Type",
          "key.typeusr": "$s4main12TensorFormatOmD",
          "key.usr": "s:4main12TensorFormatO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum TensorDimensionFormat</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 1675
            }
          ],
          "key.bodylength": 1423,
          "key.bodyoffset": 1710,
          "key.doc.column": 13,
          "key.doc.comment": "Tensor dimensions and its arrangements.",
          "key.doc.declaration": "public enum TensorDimensionFormat",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"79\" column=\"13\"><Name>TensorDimensionFormat</Name><USR>s:4main21TensorDimensionFormatO</USR><Declaration>public enum TensorDimensionFormat</Declaration><CommentParts><Abstract><Para>Tensor dimensions and its arrangements.</Para></Abstract></CommentParts></Other>",
          "key.doc.line": 79,
          "key.doc.name": "TensorDimensionFormat",
          "key.doc.type": "Other",
          "key.doclength": 44,
          "key.docoffset": 1631,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>TensorDimensionFormat</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 1452,
          "key.name": "TensorDimensionFormat",
          "key.namelength": 21,
          "key.nameoffset": 1687,
          "key.offset": 1682,
          "key.parsed_declaration": "public enum TensorDimensionFormat",
          "key.parsed_scope.end": 148,
          "key.parsed_scope.start": 79,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 11,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1713,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case C(<Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>C</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 6,
                  "key.name": "C(_:)",
                  "key.namelength": 6,
                  "key.nameoffset": 1718,
                  "key.offset": 1718,
                  "key.parsed_declaration": "case C(Int)",
                  "key.parsed_scope.end": 80,
                  "key.parsed_scope.start": 80,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSicACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO1CyACSicACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 17,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1745,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case NC(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>NC</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 12,
                  "key.name": "NC(_:_:)",
                  "key.namelength": 12,
                  "key.nameoffset": 1750,
                  "key.offset": 1750,
                  "key.parsed_declaration": "case NC(Int, Int)",
                  "key.parsed_scope.end": 81,
                  "key.parsed_scope.start": 81,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_SitcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO2NCyACSi_SitcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 23,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1783,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case HWC(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>HWC</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 18,
                  "key.name": "HWC(_:_:_:)",
                  "key.namelength": 18,
                  "key.nameoffset": 1788,
                  "key.offset": 1788,
                  "key.parsed_declaration": "case HWC(Int, Int, Int)",
                  "key.parsed_scope.end": 82,
                  "key.parsed_scope.start": 82,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_S2itcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO3HWCyACSi_S2itcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 23,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1827,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case CHW(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>CHW</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 18,
                  "key.name": "CHW(_:_:_:)",
                  "key.namelength": 18,
                  "key.nameoffset": 1832,
                  "key.offset": 1832,
                  "key.parsed_declaration": "case CHW(Int, Int, Int)",
                  "key.parsed_scope.end": 83,
                  "key.parsed_scope.start": 83,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_S2itcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO3CHWyACSi_S2itcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 29,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1871,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case NHWC(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>NHWC</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 24,
                  "key.name": "NHWC(_:_:_:_:)",
                  "key.namelength": 24,
                  "key.nameoffset": 1876,
                  "key.offset": 1876,
                  "key.parsed_declaration": "case NHWC(Int, Int, Int, Int)",
                  "key.parsed_scope.end": 84,
                  "key.parsed_scope.start": 84,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int, Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_S3itcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO4NHWCyACSi_S3itcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 29,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1903,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case NCHW(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>NCHW</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 24,
                  "key.name": "NCHW(_:_:_:_:)",
                  "key.namelength": 24,
                  "key.nameoffset": 1908,
                  "key.offset": 1908,
                  "key.parsed_declaration": "case NCHW(Int, Int, Int, Int)",
                  "key.parsed_scope.end": 85,
                  "key.parsed_scope.start": 85,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int, Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_S3itcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO4NCHWyACSi_S3itcACmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 29,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 1935,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case CHWN(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>CHWN</decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 24,
                  "key.name": "CHWN(_:_:_:_:)",
                  "key.namelength": 24,
                  "key.nameoffset": 1940,
                  "key.offset": 1940,
                  "key.parsed_declaration": "case CHWN(Int, Int, Int, Int)",
                  "key.parsed_scope.end": 86,
                  "key.parsed_scope.start": 86,
                  "key.substructure": [],
                  "key.typename": "(TensorDimensionFormat.Type) -> (Int, Int, Int, Int) -> TensorDimensionFormat",
                  "key.typeusr": "$sy4main21TensorDimensionFormatOSi_S3itcACmcD",
                  "key.usr": "s:4main21TensorDimensionFormatO4CHWNyACSi_S3itcACmF"
                }
              ]
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 1968
                }
              ],
              "key.bodylength": 265,
              "key.bodyoffset": 2014,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 292,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 1992,
              "key.offset": 1988,
              "key.parsed_declaration": "var format: TensorFormat",
              "key.parsed_scope.end": 106,
              "key.parsed_scope.start": 89,
              "key.typename": "TensorFormat",
              "key.typeusr": "$s4main12TensorFormatOD",
              "key.usr": "s:4main21TensorDimensionFormatO6formatAA0bD0Ovp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var dimensions: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 2284
                }
              ],
              "key.bodylength": 804,
              "key.bodyoffset": 2327,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 828,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 2308,
              "key.offset": 2304,
              "key.parsed_declaration": "var dimensions: [Int]",
              "key.parsed_scope.end": 147,
              "key.parsed_scope.start": 109,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main21TensorDimensionFormatO10dimensionsSaySiGvp"
            }
          ],
          "key.typename": "TensorDimensionFormat.Type",
          "key.typeusr": "$s4main21TensorDimensionFormatOmD",
          "key.usr": "s:4main21TensorDimensionFormatO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public enum DataType</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 3171
            }
          ],
          "key.bodylength": 901,
          "key.bodyoffset": 3193,
          "key.doc.column": 13,
          "key.doc.comment": "Data types for a given tensor.",
          "key.doc.declaration": "public enum DataType",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Other file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"151\" column=\"13\"><Name>DataType</Name><USR>s:4main8DataTypeO</USR><Declaration>public enum DataType</Declaration><CommentParts><Abstract><Para>Data types for a given tensor.</Para></Abstract></CommentParts></Other>",
          "key.doc.line": 151,
          "key.doc.name": "DataType",
          "key.doc.type": "Other",
          "key.doclength": 35,
          "key.docoffset": 3136,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>DataType</decl.name></decl.enum>",
          "key.kind": "source.lang.swift.decl.enum",
          "key.length": 917,
          "key.name": "DataType",
          "key.namelength": 8,
          "key.nameoffset": 3183,
          "key.offset": 3178,
          "key.parsed_declaration": "public enum DataType",
          "key.parsed_scope.end": 196,
          "key.parsed_scope.start": 151,
          "key.substructure": [
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 12,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3196,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Float64</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Float64</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 7,
                  "key.name": "Float64",
                  "key.namelength": 7,
                  "key.nameoffset": 3201,
                  "key.offset": 3201,
                  "key.parsed_declaration": "case Float64",
                  "key.parsed_scope.end": 152,
                  "key.parsed_scope.start": 152,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO7Float64yA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 10,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3211,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Int64</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Int64</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 5,
                  "key.name": "Int64",
                  "key.namelength": 5,
                  "key.nameoffset": 3216,
                  "key.offset": 3216,
                  "key.parsed_declaration": "case Int64",
                  "key.parsed_scope.end": 153,
                  "key.parsed_scope.start": 153,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO5Int64yA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 12,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3224,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Float32</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Float32</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 7,
                  "key.name": "Float32",
                  "key.namelength": 7,
                  "key.nameoffset": 3229,
                  "key.offset": 3229,
                  "key.parsed_declaration": "case Float32",
                  "key.parsed_scope.end": 154,
                  "key.parsed_scope.start": 154,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO7Float32yA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 10,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3239,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Int32</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Int32</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 5,
                  "key.name": "Int32",
                  "key.namelength": 5,
                  "key.nameoffset": 3244,
                  "key.offset": 3244,
                  "key.parsed_declaration": "case Int32",
                  "key.parsed_scope.end": 155,
                  "key.parsed_scope.start": 155,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO5Int32yA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 12,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3252,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case Float16</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Float16</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 7,
                  "key.name": "Float16",
                  "key.namelength": 7,
                  "key.nameoffset": 3257,
                  "key.offset": 3257,
                  "key.parsed_declaration": "case Float16",
                  "key.parsed_scope.end": 156,
                  "key.parsed_scope.start": 156,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO7Float16yA2CmF"
                }
              ]
            },
            {
              "key.kind": "source.lang.swift.decl.enumcase",
              "key.length": 10,
              "key.namelength": 0,
              "key.nameoffset": 0,
              "key.offset": 3267,
              "key.substructure": [
                {
                  "key.accessibility": "source.lang.swift.accessibility.public",
                  "key.annotated_decl": "<Declaration>case UInt8</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>UInt8</decl.name></decl.enumelement>",
                  "key.kind": "source.lang.swift.decl.enumelement",
                  "key.length": 5,
                  "key.name": "UInt8",
                  "key.namelength": 5,
                  "key.nameoffset": 3272,
                  "key.offset": 3272,
                  "key.parsed_declaration": "case UInt8",
                  "key.parsed_scope.end": 157,
                  "key.parsed_scope.start": 157,
                  "key.typename": "(DataType.Type) -> DataType",
                  "key.typeusr": "$sy4main8DataTypeOACmcD",
                  "key.usr": "s:4main8DataTypeO5UInt8yA2CmF"
                }
              ]
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline static func from(cTensorParams: ccv_nnc_tensor_param_t) -&gt; <Type usr=\"s:4main8DataTypeO\">DataType</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 3281
                }
              ],
              "key.bodylength": 337,
              "key.bodyoffset": 3370,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>from</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cTensorParams</decl.var.parameter.argument_label>: <decl.var.parameter.type>ccv_nnc_tensor_param_t</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.function.returntype></decl.function.method.static>",
              "key.kind": "source.lang.swift.decl.function.method.static",
              "key.length": 407,
              "key.name": "from(cTensorParams:)",
              "key.namelength": 43,
              "key.nameoffset": 3313,
              "key.offset": 3301,
              "key.parsed_declaration": "static func from(cTensorParams: ccv_nnc_tensor_param_t) -> DataType",
              "key.parsed_scope.end": 177,
              "key.parsed_scope.start": 160,
              "key.substructure": [],
              "key.typename": "(DataType.Type) -> (<<error type>>) -> DataType",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main8DataTypeO4fromyXeXeFZ"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var toC: Swift.<Type usr=\"s:s5Int32V\">Int32</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 3712
                }
              ],
              "key.bodylength": 338,
              "key.bodyoffset": 3754,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toC</decl.name>: <decl.var.type>Swift.<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 361,
              "key.name": "toC",
              "key.namelength": 3,
              "key.nameoffset": 3736,
              "key.offset": 3732,
              "key.parsed_declaration": "var toC: Swift.Int32",
              "key.parsed_scope.end": 195,
              "key.parsed_scope.start": 180,
              "key.typename": "Int32",
              "key.typeusr": "$ss5Int32VD",
              "key.usr": "s:4main8DataTypeO3toCs5Int32Vvp"
            }
          ],
          "key.typename": "DataType.Type",
          "key.typeusr": "$s4main8DataTypeOmD",
          "key.usr": "s:4main8DataTypeO"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol TensorNumeric : <Type usr=\"s:Sj\">Numeric</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4097
            }
          ],
          "key.bodylength": 41,
          "key.bodyoffset": 4137,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 7,
              "key.offset": 4128
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>TensorNumeric</decl.name> : <ref.protocol usr=\"s:Sj\">Numeric</ref.protocol></decl.protocol>",
          "key.inheritedtypes": [
            {
              "key.name": "Numeric"
            }
          ],
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 75,
          "key.name": "TensorNumeric",
          "key.namelength": 13,
          "key.nameoffset": 4113,
          "key.offset": 4104,
          "key.parsed_declaration": "public protocol TensorNumeric: Numeric",
          "key.parsed_scope.end": 200,
          "key.parsed_scope.start": 198,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 4171,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 37,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4151,
              "key.offset": 4140,
              "key.parsed_declaration": "static var dataType: DataType",
              "key.parsed_scope.end": 199,
              "key.parsed_scope.start": 199,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
            }
          ],
          "key.typename": "TensorNumeric.Protocol",
          "key.typeusr": "$s4main13TensorNumeric_pmD",
          "key.usr": "s:4main13TensorNumericP"
        },
        {
          "key.annotated_decl": "<Declaration>typealias Float64 = <Type usr=\"s:Sd\">Double</Type></Declaration>",
          "key.bodylength": 53,
          "key.bodyoffset": 4215,
          "key.doc.declaration": "typealias Float64 = Double",
          "key.doc.full_as_xml": "<Other><Name>Float64</Name><USR>s:s7Float64a</USR><Declaration>typealias Float64 = Double</Declaration><CommentParts><Abstract><Para>A 64-bit floating point type.</Para></Abstract></CommentParts></Other>",
          "key.doc.name": "Float64",
          "key.doc.type": "Other",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4200
            }
          ],
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>Float64</decl.name> = <ref.struct usr=\"s:Sd\">Double</ref.struct></decl.typealias>",
          "key.groupname": "Misc",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 88,
          "key.modulename": "Swift",
          "key.name": "Float64",
          "key.namelength": 7,
          "key.nameoffset": 4191,
          "key.offset": 4181,
          "key.parsed_declaration": "extension Float64: TensorNumeric",
          "key.parsed_scope.end": 204,
          "key.parsed_scope.start": 202,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4218
                }
              ],
              "key.bodylength": 10,
              "key.bodyoffset": 4256,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Floating",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 42,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4236,
              "key.offset": 4225,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 203,
              "key.parsed_scope.start": 203,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:Sd4mainE8dataTypeAA04DataC0OvpZ"
            }
          ],
          "key.typename": "Double.Type",
          "key.typeusr": "$sSdmD",
          "key.usr": "s:s7Float64a"
        },
        {
          "key.annotated_decl": "<Declaration>@frozen struct Int64 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</Type>, <Type usr=\"s:SZ\">SignedInteger</Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</Type></Declaration>",
          "key.bodylength": 51,
          "key.bodyoffset": 4303,
          "key.doc.declaration": "@frozen struct Int64 : FixedWidthInteger, SignedInteger",
          "key.doc.full_as_xml": "<Class><Name>Int64</Name><USR>s:s5Int64V</USR><Declaration>@frozen struct Int64 : FixedWidthInteger, SignedInteger</Declaration><CommentParts><Abstract><Para>A 64-bit signed integer value type.</Para></Abstract></CommentParts></Class>",
          "key.doc.name": "Int64",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4288
            }
          ],
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Int64</decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger</ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</ref.protocol></decl.struct>",
          "key.groupname": "Math/Integers",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 84,
          "key.modulename": "Swift",
          "key.name": "Int64",
          "key.namelength": 5,
          "key.nameoffset": 4281,
          "key.offset": 4271,
          "key.parsed_declaration": "extension Int64: TensorNumeric",
          "key.parsed_scope.end": 208,
          "key.parsed_scope.start": 206,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4306
                }
              ],
              "key.bodylength": 8,
              "key.bodyoffset": 4344,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Integers",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 40,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4324,
              "key.offset": 4313,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 207,
              "key.parsed_scope.start": 207,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:s5Int64V4mainE8dataTypeAC04DataD0OvpZ"
            }
          ],
          "key.typename": "Int64.Type",
          "key.typeusr": "$ss5Int64VmD",
          "key.usr": "s:s5Int64V"
        },
        {
          "key.annotated_decl": "<Declaration>typealias Float32 = <Type usr=\"s:Sf\">Float</Type></Declaration>",
          "key.bodylength": 53,
          "key.bodyoffset": 4391,
          "key.doc.declaration": "typealias Float32 = Float",
          "key.doc.full_as_xml": "<Other><Name>Float32</Name><USR>s:s7Float32a</USR><Declaration>typealias Float32 = Float</Declaration><CommentParts><Abstract><Para>A 32-bit floating point type.</Para></Abstract></CommentParts></Other>",
          "key.doc.name": "Float32",
          "key.doc.type": "Other",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4376
            }
          ],
          "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>Float32</decl.name> = <ref.struct usr=\"s:Sf\">Float</ref.struct></decl.typealias>",
          "key.groupname": "Misc",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 88,
          "key.modulename": "Swift",
          "key.name": "Float32",
          "key.namelength": 7,
          "key.nameoffset": 4367,
          "key.offset": 4357,
          "key.parsed_declaration": "extension Float32: TensorNumeric",
          "key.parsed_scope.end": 212,
          "key.parsed_scope.start": 210,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4394
                }
              ],
              "key.bodylength": 10,
              "key.bodyoffset": 4432,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Floating",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 42,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4412,
              "key.offset": 4401,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 211,
              "key.parsed_scope.start": 211,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:Sf4mainE8dataTypeAA04DataC0OvpZ"
            }
          ],
          "key.typename": "Float.Type",
          "key.typeusr": "$sSfmD",
          "key.usr": "s:s7Float32a"
        },
        {
          "key.annotated_decl": "<Declaration>@frozen struct Int32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</Type>, <Type usr=\"s:SZ\">SignedInteger</Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</Type></Declaration>",
          "key.bodylength": 51,
          "key.bodyoffset": 4479,
          "key.doc.declaration": "@frozen struct Int32 : FixedWidthInteger, SignedInteger",
          "key.doc.full_as_xml": "<Class><Name>Int32</Name><USR>s:s5Int32V</USR><Declaration>@frozen struct Int32 : FixedWidthInteger, SignedInteger</Declaration><CommentParts><Abstract><Para>A 32-bit signed integer value type.</Para></Abstract></CommentParts></Class>",
          "key.doc.name": "Int32",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4464
            }
          ],
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Int32</decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger</ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</ref.protocol></decl.struct>",
          "key.groupname": "Math/Integers",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 84,
          "key.modulename": "Swift",
          "key.name": "Int32",
          "key.namelength": 5,
          "key.nameoffset": 4457,
          "key.offset": 4447,
          "key.parsed_declaration": "extension Int32: TensorNumeric",
          "key.parsed_scope.end": 216,
          "key.parsed_scope.start": 214,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4482
                }
              ],
              "key.bodylength": 8,
              "key.bodyoffset": 4520,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Integers",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 40,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4500,
              "key.offset": 4489,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 215,
              "key.parsed_scope.start": 215,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:s5Int32V4mainE8dataTypeAC04DataD0OvpZ"
            }
          ],
          "key.typename": "Int32.Type",
          "key.typeusr": "$ss5Int32VmD",
          "key.usr": "s:s5Int32V"
        },
        {
          "key.annotated_decl": "<Declaration>@frozen struct Float16</Declaration>",
          "key.bodylength": 53,
          "key.bodyoffset": 4567,
          "key.doc.declaration": "@available(macOS 11.0, iOS 14.0, watchOS 7.0, tvOS 14.0, *)\n@frozen struct Float16",
          "key.doc.full_as_xml": "<Class><Name>Float16</Name><USR>s:s7Float16V</USR><Declaration>@available(macOS 11.0, iOS 14.0, watchOS 7.0, tvOS 14.0, *)\n@frozen struct Float16</Declaration><CommentParts><Abstract><Para>A half-precision (16b), floating-point value type.</Para></Abstract></CommentParts></Class>",
          "key.doc.name": "Float16",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4552
            }
          ],
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Float16</decl.name></decl.struct>",
          "key.groupname": "Math/Floating",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 88,
          "key.modulename": "Swift",
          "key.name": "Float16",
          "key.namelength": 7,
          "key.nameoffset": 4543,
          "key.offset": 4533,
          "key.parsed_declaration": "extension Float16: TensorNumeric",
          "key.parsed_scope.end": 220,
          "key.parsed_scope.start": 218,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4570
                }
              ],
              "key.bodylength": 10,
              "key.bodyoffset": 4608,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Floating",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 42,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4588,
              "key.offset": 4577,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 219,
              "key.parsed_scope.start": 219,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:s7Float16V4mainE8dataTypeAC04DataD0OvpZ"
            }
          ],
          "key.typename": "Float16.Type",
          "key.typeusr": "$ss7Float16VmD",
          "key.usr": "s:s7Float16V"
        },
        {
          "key.annotated_decl": "<Declaration>@frozen struct UInt8 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</Type>, <Type usr=\"s:SU\">UnsignedInteger</Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</Type></Declaration>",
          "key.bodylength": 51,
          "key.bodyoffset": 4655,
          "key.doc.declaration": "@frozen struct UInt8 : FixedWidthInteger, UnsignedInteger",
          "key.doc.full_as_xml": "<Class><Name>UInt8</Name><USR>s:s5UInt8V</USR><Declaration>@frozen struct UInt8 : FixedWidthInteger, UnsignedInteger</Declaration><CommentParts><Abstract><Para>An 8-bit unsigned integer value type.</Para></Abstract></CommentParts></Class>",
          "key.doc.name": "UInt8",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 13,
              "key.offset": 4640
            }
          ],
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>UInt8</decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger</ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral</ref.protocol></decl.struct>",
          "key.groupname": "Math/Integers",
          "key.inheritedtypes": [
            {
              "key.name": "TensorNumeric"
            }
          ],
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 84,
          "key.modulename": "Swift",
          "key.name": "UInt8",
          "key.namelength": 5,
          "key.nameoffset": 4633,
          "key.offset": 4623,
          "key.parsed_declaration": "extension UInt8: TensorNumeric",
          "key.parsed_scope.end": 224,
          "key.parsed_scope.start": 222,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public static var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 4658
                }
              ],
              "key.bodylength": 8,
              "key.bodyoffset": 4696,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>",
              "key.groupname": "Math/Integers",
              "key.kind": "source.lang.swift.decl.var.static",
              "key.length": 40,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 4676,
              "key.offset": 4665,
              "key.overrides": [
                {
                  "key.usr": "s:4main13TensorNumericP8dataTypeAA04DataE0OvpZ"
                }
              ],
              "key.parsed_declaration": "public static var dataType: DataType",
              "key.parsed_scope.end": 223,
              "key.parsed_scope.start": 223,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:s5UInt8V4mainE8dataTypeAC04DataD0OvpZ"
            }
          ],
          "key.typename": "UInt8.Type",
          "key.typeusr": "$ss5UInt8VmD",
          "key.usr": "s:s5UInt8V"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public final class AnyTensorStorage</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.final",
              "key.length": 5,
              "key.offset": 4716
            },
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 4709
            }
          ],
          "key.bodylength": 2041,
          "key.bodyoffset": 4746,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyTensorStorage</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.class",
          "key.length": 2066,
          "key.name": "AnyTensorStorage",
          "key.namelength": 16,
          "key.nameoffset": 4728,
          "key.offset": 4722,
          "key.parsed_declaration": "public final class AnyTensorStorage",
          "key.parsed_scope.end": 293,
          "key.parsed_scope.start": 226,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate let cTensor: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 4749
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 51,
              "key.name": "cTensor",
              "key.namelength": 7,
              "key.nameoffset": 4765,
              "key.offset": 4761,
              "key.parsed_declaration": "fileprivate let cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>",
              "key.parsed_scope.end": 227,
              "key.parsed_scope.start": 227,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageC01cC033_C59670EF05D79618B17EDFA5C2551CEDLLXevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.fileprivate",
              "key.annotated_decl": "<Declaration>fileprivate let original: Any?</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.fileprivate",
                  "key.length": 11,
                  "key.offset": 4815
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>fileprivate</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>original</decl.name>: <decl.var.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 18,
              "key.name": "original",
              "key.namelength": 8,
              "key.nameoffset": 4831,
              "key.offset": 4827,
              "key.parsed_declaration": "fileprivate let original: Any?",
              "key.parsed_scope.end": 228,
              "key.parsed_scope.start": 228,
              "key.typename": "Any?",
              "key.typeusr": "$sypSgD",
              "key.usr": "s:4main16AnyTensorStorageC8original33_C59670EF05D79618B17EDFA5C2551CEDLLypSgvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private let selfOwned: <Type usr=\"s:Sb\">Bool</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 4848
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>selfOwned</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 19,
              "key.name": "selfOwned",
              "key.namelength": 9,
              "key.nameoffset": 4860,
              "key.offset": 4856,
              "key.parsed_declaration": "private let selfOwned: Bool",
              "key.parsed_scope.end": 229,
              "key.parsed_scope.start": 229,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main16AnyTensorStorageC9selfOwned33_C59670EF05D79618B17EDFA5C2551CEDLLSbvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>init(_ cTensor: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;, original: Any? = nil, selfOwned: <Type usr=\"s:Sb\">Bool</Type> = true)</Declaration>",
              "key.bodylength": 90,
              "key.bodyoffset": 4990,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>cTensor</decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>original</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>selfOwned</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 202,
              "key.name": "init(_:original:selfOwned:)",
              "key.namelength": 109,
              "key.nameoffset": 4879,
              "key.offset": 4879,
              "key.parsed_declaration": "init(\n  _ cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>, original: Any? = nil, selfOwned: Bool = true\n)",
              "key.parsed_scope.end": 237,
              "key.parsed_scope.start": 231,
              "key.substructure": [],
              "key.typename": "(AnyTensorStorage.Type) -> (<<error type>>, Any?, Bool) -> AnyTensorStorage",
              "key.typeusr": "$syXeXecD",
              "key.usr": "s:4main16AnyTensorStorageCyXeXecfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>deinit</Declaration>",
              "key.bodylength": 114,
              "key.bodyoffset": 5093,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 123,
              "key.name": "deinit",
              "key.namelength": 6,
              "key.nameoffset": 5085,
              "key.offset": 5085,
              "key.parsed_declaration": "deinit",
              "key.parsed_scope.end": 243,
              "key.parsed_scope.start": 239,
              "key.substructure": [],
              "key.typename": "(AnyTensorStorage) -> () -> ()",
              "key.typeusr": "$syycD",
              "key.usr": "s:4main16AnyTensorStorageCfd"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 5212
                }
              ],
              "key.bodylength": 58,
              "key.bodyoffset": 5256,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 83,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 5236,
              "key.offset": 5232,
              "key.parsed_declaration": "var dataType: DataType",
              "key.parsed_scope.end": 248,
              "key.parsed_scope.start": 246,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:4main16AnyTensorStorageC8dataTypeAA04DataF0Ovp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline func copy() -&gt; <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 5319
                }
              ],
              "key.bodylength": 343,
              "key.bodyoffset": 5372,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>copy</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 377,
              "key.name": "copy()",
              "key.namelength": 6,
              "key.nameoffset": 5344,
              "key.offset": 5339,
              "key.parsed_declaration": "func copy() -> AnyTensorStorage",
              "key.parsed_scope.end": 258,
              "key.parsed_scope.start": 251,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var input: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>input</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "input",
                  "key.namelength": 5,
                  "key.nameoffset": 5381,
                  "key.offset": 5377,
                  "key.parsed_declaration": "var input: UnsafeMutablePointer<ccv_nnc_tensor_t>? = cTensor",
                  "key.parsed_scope.end": 252,
                  "key.parsed_scope.start": 252,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main16AnyTensorStorageC4copyACyF5inputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var output: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 61,
                  "key.name": "output",
                  "key.namelength": 6,
                  "key.nameoffset": 5446,
                  "key.offset": 5442,
                  "key.parsed_declaration": "var output = ccv_nnc_tensor_new(nil, cTensor.pointee.info, 0)",
                  "key.parsed_scope.end": 253,
                  "key.parsed_scope.start": 253,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main16AnyTensorStorageC4copyACyF6outputL_Xevp"
                }
              ],
              "key.typename": "(AnyTensorStorage) -> () -> AnyTensorStorage",
              "key.typeusr": "$s4main16AnyTensorStorageCycD",
              "key.usr": "s:4main16AnyTensorStorageC4copyACyF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var increments: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 5720
                }
              ],
              "key.bodylength": 38,
              "key.bodyoffset": 5763,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 62,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 5744,
              "key.offset": 5740,
              "key.parsed_declaration": "var increments: [Int]",
              "key.parsed_scope.end": 263,
              "key.parsed_scope.start": 261,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageC10incrementsSaySiGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline subscript&lt;Element&gt;(indices: [<Type usr=\"s:Si\">Int</Type>], type: <Type usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</Type>.Type) -&gt; <Type usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 5806
                }
              ],
              "key.bodylength": 877,
              "key.bodyoffset": 5908,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>subscript</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 960,
              "key.name": "subscript(_:_:)",
              "key.namelength": 69,
              "key.nameoffset": 5826,
              "key.offset": 5826,
              "key.parsed_declaration": "subscript<Element: TensorNumeric>(indices: [Int], type: Element.Type) -> Element",
              "key.parsed_scope.end": 292,
              "key.parsed_scope.start": 266,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip\">subscript(_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 5845
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 5836,
                  "key.offset": 5836,
                  "key.parsed_declaration": "subscript<Element: TensorNumeric",
                  "key.parsed_scope.end": 266,
                  "key.parsed_scope.start": 266,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> ([Int], Element.Type) -> Element",
              "key.typeusr": "$syxSaySiG_xmtc4main13TensorNumericRzluD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 5929,
              "key.offset": 5925,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 268,
              "key.parsed_scope.start": 268,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluig10incrementsL_ADvp"
            },
            {
              "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 6016,
              "key.offset": 6012,
              "key.parsed_declaration": "let count = increments.reduce(1, *)",
              "key.parsed_scope.end": 270,
              "key.parsed_scope.start": 270,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluig5countL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let pointer: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 84,
              "key.name": "pointer",
              "key.namelength": 7,
              "key.nameoffset": 6058,
              "key.offset": 6054,
              "key.parsed_declaration": "let pointer = cTensor.pointee.data.ptr.bindMemory(to: Element.self, capacity: count)",
              "key.parsed_scope.end": 271,
              "key.parsed_scope.start": 271,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluig7pointerL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var offset: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 14,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 6149,
              "key.offset": 6145,
              "key.parsed_declaration": "var offset = 0",
              "key.parsed_scope.end": 272,
              "key.parsed_scope.start": 272,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluig6offsetL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 6348,
              "key.offset": 6344,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 280,
              "key.parsed_scope.start": 280,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluis10incrementsL_ADvp"
            },
            {
              "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 6435,
              "key.offset": 6431,
              "key.parsed_declaration": "let count = increments.reduce(1, *)",
              "key.parsed_scope.end": 282,
              "key.parsed_scope.start": 282,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluis5countL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let pointer: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 84,
              "key.name": "pointer",
              "key.namelength": 7,
              "key.nameoffset": 6519,
              "key.offset": 6515,
              "key.parsed_declaration": "let pointer = cTensor.pointee.data.ptr.bindMemory(to: Element.self, capacity: count)",
              "key.parsed_scope.end": 284,
              "key.parsed_scope.start": 284,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluis7pointerL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var offset: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 14,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 6610,
              "key.offset": 6606,
              "key.parsed_declaration": "var offset = 0",
              "key.parsed_scope.end": 285,
              "key.parsed_scope.start": 285,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluis6offsetL_Sivp"
            }
          ],
          "key.typename": "AnyTensorStorage.Type",
          "key.typeusr": "$s4main16AnyTensorStorageCmD",
          "key.usr": "s:4main16AnyTensorStorageC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class AnyTensorStorage</Declaration>",
          "key.bodylength": 3108,
          "key.bodyoffset": 6818,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyTensorStorage</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 3137,
          "key.name": "AnyTensorStorage",
          "key.namelength": 16,
          "key.nameoffset": 6800,
          "key.offset": 6790,
          "key.parsed_declaration": "extension AnyTensorStorage",
          "key.parsed_scope.end": 365,
          "key.parsed_scope.start": 295,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>@usableFromInline subscript&lt;Element&gt;(ranges: [<Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;], type: <Type usr=\"s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</Type>.Type) -&gt; <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 6821
                }
              ],
              "key.bodylength": 2986,
              "key.bodyoffset": 6938,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>subscript</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>ranges</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 3084,
              "key.name": "subscript(_:_:)",
              "key.namelength": 75,
              "key.nameoffset": 6841,
              "key.offset": 6841,
              "key.parsed_declaration": "subscript<Element: TensorNumeric>(ranges: [Range<Int>], type: Element.Type) -> AnyTensorStorage",
              "key.parsed_scope.end": 364,
              "key.parsed_scope.start": 297,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip\">subscript(_:_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 6860
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 6851,
                  "key.offset": 6851,
                  "key.parsed_declaration": "subscript<Element: TensorNumeric",
                  "key.parsed_scope.end": 297,
                  "key.parsed_scope.start": 297,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> ([Range<Int>], Element.Type) -> AnyTensorStorage",
              "key.typeusr": "$sy4main16AnyTensorStorageCSaySnySiGG_xmtcAA0C7NumericRzluD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip"
            },
            {
              "key.annotated_decl": "<Declaration>let cTensorParams: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensorParams</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 40,
              "key.name": "cTensorParams",
              "key.namelength": 13,
              "key.nameoffset": 7005,
              "key.offset": 7001,
              "key.parsed_declaration": "let cTensorParams = cTensor.pointee.info",
              "key.parsed_scope.end": 300,
              "key.parsed_scope.start": 300,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig01cC6ParamsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let device: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>device</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 58,
              "key.name": "device",
              "key.namelength": 6,
              "key.nameoffset": 7052,
              "key.offset": 7048,
              "key.parsed_declaration": "let device = DeviceKind.from(cTensorParams: cTensorParams)",
              "key.parsed_scope.end": 301,
              "key.parsed_scope.start": 301,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig6deviceL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let format: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 60,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 7117,
              "key.offset": 7113,
              "key.parsed_declaration": "let format = TensorFormat.from(cTensorParams: cTensorParams)",
              "key.parsed_scope.end": 302,
              "key.parsed_scope.start": 302,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig6formatL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 7184,
              "key.offset": 7180,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 303,
              "key.parsed_scope.start": 303,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 7472,
              "key.offset": 7468,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 309,
              "key.parsed_scope.start": 309,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 40,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 7520,
              "key.offset": 7516,
              "key.parsed_declaration": "let dimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 310,
              "key.parsed_scope.start": 310,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>var cOffset: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cOffset</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "cOffset",
              "key.namelength": 7,
              "key.nameoffset": 7567,
              "key.offset": 7563,
              "key.parsed_declaration": "var cOffset = toCDimensions(offset)",
              "key.parsed_scope.end": 311,
              "key.parsed_scope.start": 311,
              "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
              "key.typeusr": "$ss5Int32V_A7BtD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig7cOffsetL_s5Int32V_A7Itvp"
            },
            {
              "key.annotated_decl": "<Declaration>var cIncrements: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cIncrements</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "cIncrements",
              "key.namelength": 11,
              "key.nameoffset": 7609,
              "key.offset": 7605,
              "key.parsed_declaration": "var cIncrements = toCDimensions(increments)",
              "key.parsed_scope.end": 312,
              "key.parsed_scope.start": 312,
              "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
              "key.typeusr": "$ss5Int32V_A7BtD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig11cIncrementsL_s5Int32V_A7Itvp"
            },
            {
              "key.annotated_decl": "<Declaration>let newt: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newt</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 349,
              "key.name": "newt",
              "key.namelength": 4,
              "key.nameoffset": 7659,
              "key.offset": 7655,
              "key.parsed_declaration": "let newt = withUnsafePointer(to: &cOffset.0) { cOffset in\n  withUnsafePointer(to: &cIncrements.0) { cIncrements in\n    ccv_nnc_tensor_view_new(\n      cTensor,\n      toCTensorParams(\n        device, dataType: Element.dataType, format: format, dimensions: dimensions), cOffset,\n      cIncrements)!\n  }\n}",
              "key.parsed_scope.end": 313,
              "key.parsed_scope.start": 313,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluig4newtL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let cTensorParams: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensorParams</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 40,
              "key.name": "cTensorParams",
              "key.namelength": 13,
              "key.nameoffset": 8165,
              "key.offset": 8161,
              "key.parsed_declaration": "let cTensorParams = cTensor.pointee.info",
              "key.parsed_scope.end": 327,
              "key.parsed_scope.start": 327,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis01cC6ParamsL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let device: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>device</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 58,
              "key.name": "device",
              "key.namelength": 6,
              "key.nameoffset": 8212,
              "key.offset": 8208,
              "key.parsed_declaration": "let device = DeviceKind.from(cTensorParams: cTensorParams)",
              "key.parsed_scope.end": 328,
              "key.parsed_scope.start": 328,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis6deviceL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let vFormat: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>vFormat</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 70,
              "key.name": "vFormat",
              "key.namelength": 7,
              "key.nameoffset": 8371,
              "key.offset": 8367,
              "key.parsed_declaration": "let vFormat = TensorFormat.from(cTensorParams: v.cTensor.pointee.info)",
              "key.parsed_scope.end": 330,
              "key.parsed_scope.start": 330,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis7vFormatL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 8448,
              "key.offset": 8444,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 331,
              "key.parsed_scope.start": 331,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis10incrementsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let offset: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 41,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 8736,
              "key.offset": 8732,
              "key.parsed_declaration": "let offset = ranges.map { $0.lowerBound }",
              "key.parsed_scope.end": 337,
              "key.parsed_scope.start": 337,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis6offsetL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 40,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 8784,
              "key.offset": 8780,
              "key.parsed_declaration": "let dimensions = ranges.map { $0.count }",
              "key.parsed_scope.end": 338,
              "key.parsed_scope.start": 338,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis10dimensionsL_SaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>var cOffset: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cOffset</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "cOffset",
              "key.namelength": 7,
              "key.nameoffset": 8831,
              "key.offset": 8827,
              "key.parsed_declaration": "var cOffset = toCDimensions(offset)",
              "key.parsed_scope.end": 339,
              "key.parsed_scope.start": 339,
              "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
              "key.typeusr": "$ss5Int32V_A7BtD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis7cOffsetL_s5Int32V_A7Itvp"
            },
            {
              "key.annotated_decl": "<Declaration>var cIncrements: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cIncrements</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 43,
              "key.name": "cIncrements",
              "key.namelength": 11,
              "key.nameoffset": 8873,
              "key.offset": 8869,
              "key.parsed_declaration": "var cIncrements = toCDimensions(increments)",
              "key.parsed_scope.end": 340,
              "key.parsed_scope.start": 340,
              "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
              "key.typeusr": "$ss5Int32V_A7BtD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis11cIncrementsL_s5Int32V_A7Itvp"
            },
            {
              "key.annotated_decl": "<Declaration>var newt: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newt</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 345,
              "key.name": "newt",
              "key.namelength": 4,
              "key.nameoffset": 8923,
              "key.offset": 8919,
              "key.parsed_declaration": "var newt = withUnsafePointer(to: &cOffset.0) { cOffset in\n  withUnsafePointer(to: &cIncrements.0) { cIncrements in\n    ccv_nnc_tensor_view(\n      cTensor,\n      toCTensorParams(\n        device, dataType: Element.dataType, format: vFormat, dimensions: dimensions), cOffset,\n      cIncrements)\n  }\n}",
              "key.parsed_scope.end": 341,
              "key.parsed_scope.start": 341,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis4newtL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let inputDim: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inputDim</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 58,
              "key.name": "inputDim",
              "key.namelength": 8,
              "key.nameoffset": 9275,
              "key.offset": 9271,
              "key.parsed_declaration": "let inputDim = fromCDimensions(v.cTensor.pointee.info.dim)",
              "key.parsed_scope.end": 350,
              "key.parsed_scope.start": 350,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis8inputDimL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var input: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>input</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 62,
              "key.name": "input",
              "key.namelength": 5,
              "key.nameoffset": 9443,
              "key.offset": 9439,
              "key.parsed_declaration": "var input: UnsafeMutablePointer<ccv_nnc_tensor_t>? = v.cTensor",
              "key.parsed_scope.end": 354,
              "key.parsed_scope.start": 354,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluis5inputL_Xevp"
            }
          ],
          "key.typename": "AnyTensorStorage.Type",
          "key.typeusr": "$s4main16AnyTensorStorageCmD",
          "key.usr": "s:4main16AnyTensorStorageC"
        },
        {
          "key.annotated_decl": "<Declaration>public final class AnyTensorStorage</Declaration>",
          "key.bodylength": 1669,
          "key.bodyoffset": 9957,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyTensorStorage</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1698,
          "key.name": "AnyTensorStorage",
          "key.namelength": 16,
          "key.nameoffset": 9939,
          "key.offset": 9929,
          "key.parsed_declaration": "extension AnyTensorStorage",
          "key.parsed_scope.end": 408,
          "key.parsed_scope.start": 367,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>@usableFromInline subscript&lt;Element&gt;(indices: [<Type usr=\"s:Si\">Int</Type>], range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;, type: <Type usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</Type>.Type) -&gt; [<Type usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</Type>] where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 9960
                }
              ],
              "key.bodylength": 1535,
              "key.bodyoffset": 10089,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>subscript</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp\">Element</ref.generic_type_param>]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 1645,
              "key.name": "subscript(_:_:_:)",
              "key.namelength": 88,
              "key.nameoffset": 9980,
              "key.offset": 9980,
              "key.parsed_declaration": "subscript<Element: TensorNumeric>(indices: [Int], range: Range<Int>, type: Element.Type)\n  -> [Element]",
              "key.parsed_scope.end": 407,
              "key.parsed_scope.start": 369,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCyxSaySiG_xmtcAA0C7NumericRzluip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageCyACSaySnySiGG_xmtcAA0C7NumericRzluip\">subscript(_:_:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 13,
                      "key.offset": 9999
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "TensorNumeric"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 22,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 9990,
                  "key.offset": 9990,
                  "key.parsed_declaration": "subscript<Element: TensorNumeric",
                  "key.parsed_scope.end": 369,
                  "key.parsed_scope.start": 369,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> ([Int], Range<Int>, Element.Type) -> [Element]",
              "key.typeusr": "$sySayxGSaySiG_SnySiGxmtc4main13TensorNumericRzluD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluip"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 10110,
              "key.offset": 10106,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 373,
              "key.parsed_scope.start": 373,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluig10incrementsL_AEvp"
            },
            {
              "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 10201,
              "key.offset": 10197,
              "key.parsed_declaration": "let count = increments.reduce(1, *)",
              "key.parsed_scope.end": 375,
              "key.parsed_scope.start": 375,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluig5countL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let pointer: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 84,
              "key.name": "pointer",
              "key.namelength": 7,
              "key.nameoffset": 10243,
              "key.offset": 10239,
              "key.parsed_declaration": "let pointer = cTensor.pointee.data.ptr.bindMemory(to: Element.self, capacity: count)",
              "key.parsed_scope.end": 376,
              "key.parsed_scope.start": 376,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluig7pointerL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var offset: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 14,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 10502,
              "key.offset": 10498,
              "key.parsed_declaration": "var offset = 0",
              "key.parsed_scope.end": 379,
              "key.parsed_scope.start": 379,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluig6offsetL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let increments: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 10843,
              "key.offset": 10839,
              "key.parsed_declaration": "let increments = self.increments",
              "key.parsed_scope.end": 389,
              "key.parsed_scope.start": 389,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main16AnyTensorStorageC10incrementsSaySiGvp\">increments</RelatedName>"
                }
              ],
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluis10incrementsL_AEvp"
            },
            {
              "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 35,
              "key.name": "count",
              "key.namelength": 5,
              "key.nameoffset": 10934,
              "key.offset": 10930,
              "key.parsed_declaration": "let count = increments.reduce(1, *)",
              "key.parsed_scope.end": 391,
              "key.parsed_scope.start": 391,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluis5countL_Sivp"
            },
            {
              "key.annotated_decl": "<Declaration>let pointer: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 84,
              "key.name": "pointer",
              "key.namelength": 7,
              "key.nameoffset": 10976,
              "key.offset": 10972,
              "key.parsed_declaration": "let pointer = cTensor.pointee.data.ptr.bindMemory(to: Element.self, capacity: count)",
              "key.parsed_scope.end": 392,
              "key.parsed_scope.start": 392,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluis7pointerL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>var offset: <Type usr=\"s:Si\">Int</Type></Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 14,
              "key.name": "offset",
              "key.namelength": 6,
              "key.nameoffset": 11272,
              "key.offset": 11268,
              "key.parsed_declaration": "var offset = 0",
              "key.parsed_scope.end": 396,
              "key.parsed_scope.start": 396,
              "key.typename": "Int",
              "key.typeusr": "$sSiD",
              "key.usr": "s:4main16AnyTensorStorageCySayxGSaySiG_SnySiGxmtcAA0C7NumericRzluis6offsetL_Sivp"
            }
          ],
          "key.typename": "AnyTensorStorage.Type",
          "key.typeusr": "$s4main16AnyTensorStorageCmD",
          "key.usr": "s:4main16AnyTensorStorageC"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public protocol AnyTensor</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 11655
            }
          ],
          "key.bodylength": 103,
          "key.bodyoffset": 11682,
          "key.doc.column": 17,
          "key.doc.comment": "A type-erased tensor.",
          "key.doc.declaration": "public protocol AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"411\" column=\"17\"><Name>AnyTensor</Name><USR>s:4main9AnyTensorP</USR><Declaration>public protocol AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 411,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.doclength": 26,
          "key.docoffset": 11629,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>AnyTensor</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.protocol",
          "key.length": 124,
          "key.name": "AnyTensor",
          "key.namelength": 9,
          "key.nameoffset": 11671,
          "key.offset": 11662,
          "key.parsed_declaration": "public protocol AnyTensor",
          "key.parsed_scope.end": 414,
          "key.parsed_scope.start": 411,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var storage: <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type> { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 11716,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>storage</decl.name>: <decl.var.type><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 37,
              "key.name": "storage",
              "key.namelength": 7,
              "key.nameoffset": 11689,
              "key.offset": 11685,
              "key.parsed_declaration": "var storage: AnyTensorStorage",
              "key.parsed_scope.end": 412,
              "key.parsed_scope.start": 412,
              "key.typename": "AnyTensorStorage",
              "key.typeusr": "$s4main16AnyTensorStorageCD",
              "key.usr": "s:4main9AnyTensorP7storageAA0bC7StorageCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>var cTensor: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt; { get }</Declaration>",
              "key.bodylength": 5,
              "key.bodyoffset": 11778,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 59,
              "key.name": "cTensor",
              "key.namelength": 7,
              "key.nameoffset": 11729,
              "key.offset": 11725,
              "key.parsed_declaration": "var cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>",
              "key.parsed_scope.end": 413,
              "key.parsed_scope.start": 413,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9AnyTensorP01cC0Xevp"
            }
          ],
          "key.typename": "AnyTensor.Protocol",
          "key.typeusr": "$s4main9AnyTensor_pmD",
          "key.usr": "s:4main9AnyTensorP"
        },
        {
          "key.annotated_decl": "<Declaration>public protocol AnyTensor</Declaration>",
          "key.bodylength": 842,
          "key.bodyoffset": 11809,
          "key.doc.column": 17,
          "key.doc.declaration": "public protocol AnyTensor",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"411\" column=\"17\"><Name>AnyTensor</Name><USR>s:4main9AnyTensorP</USR><Declaration>public protocol AnyTensor</Declaration><CommentParts><Abstract><Para>A type-erased tensor.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 411,
          "key.doc.name": "AnyTensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>AnyTensor</decl.name></decl.protocol>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 864,
          "key.name": "AnyTensor",
          "key.namelength": 9,
          "key.nameoffset": 11798,
          "key.offset": 11788,
          "key.parsed_declaration": "extension AnyTensor",
          "key.parsed_scope.end": 453,
          "key.parsed_scope.start": 416,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11825
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 11812
                }
              ],
              "key.bodylength": 58,
              "key.bodyoffset": 11856,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dataType</decl.name>: <decl.var.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 83,
              "key.name": "dataType",
              "key.namelength": 8,
              "key.nameoffset": 11836,
              "key.offset": 11832,
              "key.parsed_declaration": "public var dataType: DataType",
              "key.parsed_scope.end": 420,
              "key.parsed_scope.start": 418,
              "key.typename": "DataType",
              "key.typeusr": "$s4main8DataTypeOD",
              "key.usr": "s:4main9AnyTensorPAAE8dataTypeAA04DataE0Ovp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 11932
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 11919
                }
              ],
              "key.bodylength": 60,
              "key.bodyoffset": 11961,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>kind</decl.name>: <decl.var.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 83,
              "key.name": "kind",
              "key.namelength": 4,
              "key.nameoffset": 11943,
              "key.offset": 11939,
              "key.parsed_declaration": "public var kind: DeviceKind",
              "key.parsed_scope.end": 425,
              "key.parsed_scope.start": 423,
              "key.typename": "DeviceKind",
              "key.typeusr": "$s4main10DeviceKindOD",
              "key.usr": "s:4main9AnyTensorPAAE4kindAA10DeviceKindOvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12039
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 12026
                }
              ],
              "key.bodylength": 62,
              "key.bodyoffset": 12072,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 89,
              "key.name": "format",
              "key.namelength": 6,
              "key.nameoffset": 12050,
              "key.offset": 12046,
              "key.parsed_declaration": "public var format: TensorFormat",
              "key.parsed_scope.end": 430,
              "key.parsed_scope.start": 428,
              "key.typename": "TensorFormat",
              "key.typeusr": "$s4main12TensorFormatOD",
              "key.usr": "s:4main9AnyTensorPAAE6formatAA0C6FormatOvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var dimensions: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12152
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 12139
                }
              ],
              "key.bodylength": 49,
              "key.bodyoffset": 12182,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 73,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 12163,
              "key.offset": 12159,
              "key.parsed_declaration": "public var dimensions: [Int]",
              "key.parsed_scope.end": 435,
              "key.parsed_scope.start": 433,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main9AnyTensorPAAE10dimensionsSaySiGvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var isTensorView: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12249
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 12236
                }
              ],
              "key.bodylength": 99,
              "key.bodyoffset": 12280,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isTensorView</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 124,
              "key.name": "isTensorView",
              "key.namelength": 12,
              "key.nameoffset": 12260,
              "key.offset": 12256,
              "key.parsed_declaration": "public var isTensorView: Bool",
              "key.parsed_scope.end": 441,
              "key.parsed_scope.start": 438,
              "key.typename": "Bool",
              "key.typeusr": "$sSbD",
              "key.usr": "s:4main9AnyTensorPAAE02isC4ViewSbvp"
            },
            {
              "key.annotated_decl": "<Declaration>let type: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 36,
              "key.name": "type",
              "key.namelength": 4,
              "key.nameoffset": 12289,
              "key.offset": 12285,
              "key.parsed_declaration": "let type = Int(cTensor.pointee.type)",
              "key.parsed_scope.end": 439,
              "key.parsed_scope.start": 439,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s4type2ofq_x_tr0_lF\">type(of:)</RelatedName>"
                }
              ],
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9AnyTensorPAAE02isC4ViewSbvg4typeL_Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public var increments: [<Type usr=\"s:Si\">Int</Type>] { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12397
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 12384
                }
              ],
              "key.bodylength": 222,
              "key.bodyoffset": 12427,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>increments</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 246,
              "key.name": "increments",
              "key.namelength": 10,
              "key.nameoffset": 12408,
              "key.offset": 12404,
              "key.parsed_declaration": "public var increments: [Int]",
              "key.parsed_scope.end": 452,
              "key.parsed_scope.start": 444,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main9AnyTensorPAAE10incrementsSaySiGvp"
            },
            {
              "key.annotated_decl": "<Declaration>let inc: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inc</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 122,
              "key.name": "inc",
              "key.namelength": 3,
              "key.nameoffset": 12496,
              "key.offset": 12492,
              "key.parsed_declaration": "let inc = UnsafeMutableRawPointer(cTensor).bindMemory(\n  to: ccv_nnc_tensor_view_t.self, capacity: 1\n).pointee.inc",
              "key.parsed_scope.end": 448,
              "key.parsed_scope.start": 448,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main9AnyTensorPAAE10incrementsSaySiGvg3incL_Xevp"
            }
          ],
          "key.typename": "AnyTensor.Protocol",
          "key.typeusr": "$s4main9AnyTensor_pmD",
          "key.usr": "s:4main9AnyTensorP"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 255,
          "key.bodyoffset": 12672,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 274,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 12664,
          "key.offset": 12654,
          "key.parsed_declaration": "extension Tensor",
          "key.parsed_scope.end": 460,
          "key.parsed_scope.start": 455,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func withUnsafeBytes&lt;R&gt;(_ body: (<Type usr=\"s:SW\">UnsafeRawBufferPointer</Type>) throws -&gt; <Type usr=\"s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp\">R</Type>) rethrows -&gt; <Type usr=\"s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp\">R</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.rethrows",
                  "key.length": 8,
                  "key.offset": 12752
                },
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 12675
                }
              ],
              "key.bodylength": 158,
              "key.bodyoffset": 12767,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>withUnsafeBytes</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp\"><decl.generic_type_param.name>R</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>body</decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SW\">UnsafeRawBufferPointer</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp\">R</ref.generic_type_param></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>rethrows</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp\">R</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 244,
              "key.name": "withUnsafeBytes(_:)",
              "key.namelength": 64,
              "key.nameoffset": 12687,
              "key.offset": 12682,
              "key.parsed_declaration": "public func withUnsafeBytes<R>(_ body: (UnsafeRawBufferPointer) throws -> R) rethrows -> R",
              "key.parsed_scope.end": 459,
              "key.parsed_scope.start": 456,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>R</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>R</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 1,
                  "key.name": "R",
                  "key.namelength": 1,
                  "key.nameoffset": 12703,
                  "key.offset": 12703,
                  "key.parsed_declaration": "public func withUnsafeBytes<R",
                  "key.parsed_scope.end": 456,
                  "key.parsed_scope.start": 456,
                  "key.typename": "R.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF1RL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let count: <Type usr=\"s:Si\">Int</Type></Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 60,
                  "key.name": "count",
                  "key.namelength": 5,
                  "key.nameoffset": 12776,
                  "key.offset": 12772,
                  "key.parsed_declaration": "let count = increments.reduce(MemoryLayout<Element>.size, *)",
                  "key.parsed_scope.end": 457,
                  "key.parsed_scope.start": 457,
                  "key.typename": "Int",
                  "key.typeusr": "$sSiD",
                  "key.usr": "s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF5countL_Sivp"
                }
              ],
              "key.typename": "<Element, R where Element : TensorNumeric> (Tensor<Element>) -> ((UnsafeRawBufferPointer) throws -> R) throws -> R",
              "key.typeusr": "$syqd__qd__SWKXEKcluD",
              "key.usr": "s:4main6TensorV15withUnsafeBytesyqd__qd__SWKXEKlF"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.public",
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.public",
              "key.length": 6,
              "key.offset": 12953
            }
          ],
          "key.bodylength": 5986,
          "key.bodyoffset": 13010,
          "key.doc.column": 15,
          "key.doc.comment": "Basic tensor type.",
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.doclength": 23,
          "key.docoffset": 12930,
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 9,
              "key.offset": 12999
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "AnyTensor"
            }
          ],
          "key.kind": "source.lang.swift.decl.struct",
          "key.length": 6037,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 12967,
          "key.offset": 12960,
          "key.parsed_declaration": "public struct Tensor<Element: TensorNumeric>: AnyTensor",
          "key.parsed_scope.end": 652,
          "key.parsed_scope.start": 463,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
              "key.elements": [
                {
                  "key.kind": "source.lang.swift.structure.elem.typeref",
                  "key.length": 13,
                  "key.offset": 12983
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
              "key.inheritedtypes": [
                {
                  "key.name": "TensorNumeric"
                }
              ],
              "key.kind": "source.lang.swift.decl.generic_type_param",
              "key.length": 22,
              "key.name": "Element",
              "key.namelength": 7,
              "key.nameoffset": 12974,
              "key.offset": 12974,
              "key.parsed_declaration": "public struct Tensor<Element: TensorNumeric",
              "key.parsed_scope.end": 463,
              "key.parsed_scope.start": 463,
              "key.typename": "Element.Type",
              "key.typeusr": "$sxmD",
              "key.usr": "s:4main6TensorV7Elementxmfp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var storage: <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13014
                }
              ],
              "key.bodylength": 10,
              "key.bodyoffset": 13052,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>storage</decl.name>: <decl.var.type><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 42,
              "key.name": "storage",
              "key.namelength": 7,
              "key.nameoffset": 13025,
              "key.offset": 13021,
              "key.parsed_declaration": "public var storage: AnyTensorStorage",
              "key.parsed_scope.end": 465,
              "key.parsed_scope.start": 465,
              "key.typename": "AnyTensorStorage",
              "key.typeusr": "$s4main16AnyTensorStorageCD",
              "key.usr": "s:4main6TensorV7storageAA03AnyB7StorageCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var cTensor: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt; { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13066
                }
              ],
              "key.bodylength": 18,
              "key.bodyoffset": 13126,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 72,
              "key.name": "cTensor",
              "key.namelength": 7,
              "key.nameoffset": 13077,
              "key.offset": 13073,
              "key.parsed_declaration": "public var cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>",
              "key.parsed_scope.end": 466,
              "key.parsed_scope.start": 466,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main6TensorV01cB0Xevp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline var _storage: <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 13149
                }
              ],
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_storage</decl.name>: <decl.var.type><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.var.type></decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 30,
              "key.name": "_storage",
              "key.namelength": 8,
              "key.nameoffset": 13173,
              "key.offset": 13169,
              "key.parsed_declaration": "var _storage: AnyTensorStorage",
              "key.parsed_scope.end": 469,
              "key.parsed_scope.start": 469,
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.typename": "AnyTensorStorage",
              "key.typeusr": "$s4main16AnyTensorStorageCD",
              "key.usr": "s:4main6TensorV8_storageAA03AnyB7StorageCvp"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>])</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 13203
                }
              ],
              "key.bodylength": 192,
              "key.bodyoffset": 13298,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 280,
              "key.name": "init(_:dataType:format:dimensions:)",
              "key.namelength": 85,
              "key.nameoffset": 13211,
              "key.offset": 13211,
              "key.parsed_declaration": "private init(_ kind: DeviceKind, dataType: DataType, format: TensorFormat, dimensions: [Int])",
              "key.parsed_scope.end": 477,
              "key.parsed_scope.start": 471,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let cTensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 143,
                  "key.name": "cTensor",
                  "key.namelength": 7,
                  "key.nameoffset": 13307,
                  "key.offset": 13303,
                  "key.parsed_declaration": "let cTensor = ccv_nnc_tensor_new(\n  nil,\n  toCTensorParams(kind, dataType: dataType, format: format, dimensions: dimensions),\n  0)!",
                  "key.parsed_scope.end": 472,
                  "key.parsed_scope.start": 472,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV01cB0Xevp\">cTensor</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc01cB0L_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (DeviceKind, DataType, TensorFormat, [Int]) -> Tensor<Element>",
              "key.typeusr": "$s_8dataType6format10dimensions4main6TensorVyxGAD10DeviceKindO_AD04DataB0OAD0F6FormatOSaySiGtcD",
              "key.usr": "s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.private",
              "key.annotated_decl": "<Declaration>private init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, _ dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type>, _ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.private",
                  "key.length": 7,
                  "key.offset": 13495
                }
              ],
              "key.bodylength": 128,
              "key.bodyoffset": 13593,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>private</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dataType</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 219,
              "key.name": "init(_:_:_:)",
              "key.namelength": 88,
              "key.nameoffset": 13503,
              "key.offset": 13503,
              "key.parsed_declaration": "private init(_ kind: DeviceKind, _ dataType: DataType, _ dimensionFormat: TensorDimensionFormat)",
              "key.parsed_scope.end": 483,
              "key.parsed_scope.start": 479,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (DeviceKind, DataType, TensorDimensionFormat) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtcD",
              "key.usr": "s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline init(_ tensor: <Type usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 13726
                }
              ],
              "key.bodylength": 25,
              "key.bodyoffset": 13780,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main16AnyTensorStorageC\">AnyTensorStorage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 60,
              "key.name": "init(_:)",
              "key.namelength": 32,
              "key.nameoffset": 13746,
              "key.offset": 13746,
              "key.parsed_declaration": "init(_ tensor: AnyTensorStorage)",
              "key.parsed_scope.end": 488,
              "key.parsed_scope.start": 486,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (AnyTensorStorage) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGAA03AnyB7StorageCcD",
              "key.usr": "s:4main6TensorVyACyxGAA03AnyB7StorageCcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ tensor: <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 13928
                }
              ],
              "key.bodylength": 87,
              "key.bodyoffset": 13962,
              "key.doc.column": 10,
              "key.doc.comment": " Create a typed tensor from a type-erased tensor.\n\n - Parameter tensor: A type-erased tensor.",
              "key.doc.declaration": "public init(_ tensor: AnyTensor)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"495\" column=\"10\"><Name>init(_:)</Name><USR>s:4main6TensorVyACyxGAA03AnyB0_pcfc</USR><Declaration>public init(_ tensor: AnyTensor)</Declaration><CommentParts><Abstract><Para>Create a typed tensor from a type-erased tensor.</Para></Abstract><Parameters><Parameter><Name>tensor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A type-erased tensor.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 495,
              "key.doc.name": "init(_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "A type-erased tensor."
                    }
                  ],
                  "name": "tensor"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 115,
              "key.docoffset": 13810,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 115,
              "key.name": "init(_:)",
              "key.namelength": 25,
              "key.nameoffset": 13935,
              "key.offset": 13935,
              "key.parsed_declaration": "public init(_ tensor: AnyTensor)",
              "key.parsed_scope.end": 498,
              "key.parsed_scope.start": 495,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (AnyTensor) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGAA03AnyB0_pcD",
              "key.usr": "s:4main6TensorVyACyxGAA03AnyB0_pcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(from tensor: <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14171
                }
              ],
              "key.bodylength": 618,
              "key.bodyoffset": 14208,
              "key.doc.column": 10,
              "key.doc.comment": "Convert from a different type tensor to this tensor.\n- Parameter tensor: A type-erased tensor.",
              "key.doc.declaration": "public init(from tensor: AnyTensor)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"504\" column=\"10\"><Name>init(from:)</Name><USR>s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc</USR><Declaration>public init(from tensor: AnyTensor)</Declaration><CommentParts><Abstract><Para>Convert from a different type tensor to this tensor.</Para></Abstract><Parameters><Parameter><Name>tensor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A type-erased tensor.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 504,
              "key.doc.name": "init(from:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "A type-erased tensor."
                    }
                  ],
                  "name": "tensor"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 114,
              "key.docoffset": 14054,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>tensor</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 649,
              "key.name": "init(from:)",
              "key.namelength": 28,
              "key.nameoffset": 14178,
              "key.offset": 14178,
              "key.parsed_declaration": "public init(from tensor: AnyTensor)",
              "key.parsed_scope.end": 521,
              "key.parsed_scope.start": 504,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (AnyTensor) -> Tensor<Element>",
              "key.typeusr": "$s4from4main6TensorVyxGAB03AnyC0_p_tcD",
              "key.usr": "s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>])</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 14831
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 14905,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 159,
              "key.name": "init(_:format:dimensions:)",
              "key.namelength": 65,
              "key.nameoffset": 14838,
              "key.offset": 14838,
              "key.parsed_declaration": "public init(_ kind: DeviceKind, format: TensorFormat, dimensions: [Int])",
              "key.parsed_scope.end": 525,
              "key.parsed_scope.start": 523,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (DeviceKind, TensorFormat, [Int]) -> Tensor<Element>",
              "key.typeusr": "$s_6format10dimensions4main6TensorVyxGAC10DeviceKindO_AC0D6FormatOSaySiGtcD",
              "key.usr": "s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, _ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15199
                }
              ],
              "key.bodylength": 58,
              "key.bodyoffset": 15274,
              "key.doc.column": 10,
              "key.doc.comment": " Create a new uninitialized tensor.\n\n - Parameters:\n   - kind: Which device this new tensor is on.\n   - dimensionFormat: The format and dimensions of the new tensor.",
              "key.doc.declaration": "public init(_ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat)",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"534\" column=\"10\"><Name>init(_:_:)</Name><USR>s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc</USR><Declaration>public init(_ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat)</Declaration><CommentParts><Abstract><Para>Create a new uninitialized tensor.</Para></Abstract><Parameters><Parameter><Name>kind</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Which device this new tensor is on.</Para></Discussion></Parameter><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The format and dimensions of the new tensor.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 534,
              "key.doc.name": "init(_:_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Which device this new tensor is on."
                    }
                  ],
                  "name": "kind"
                },
                {
                  "discussion": [
                    {
                      "Para": "The format and dimensions of the new tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 195,
              "key.docoffset": 15001,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 127,
              "key.name": "init(_:_:)",
              "key.namelength": 66,
              "key.nameoffset": 15206,
              "key.offset": 15206,
              "key.parsed_declaration": "public init(_ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat)",
              "key.parsed_scope.end": 536,
              "key.parsed_scope.start": 534,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (DeviceKind, TensorDimensionFormat) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGAA10DeviceKindO_AA0B15DimensionFormatOtcD",
              "key.usr": "s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init&lt;S&gt;(_ sequence: <Type usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S</Type>, kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>]) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 15337
                }
              ],
              "key.bodylength": 723,
              "key.bodyoffset": 15466,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>kind</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element</decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 846,
              "key.name": "init(_:kind:format:dimensions:)",
              "key.namelength": 91,
              "key.nameoffset": 15344,
              "key.offset": 15344,
              "key.parsed_declaration": "public init<S: Sequence>(_ sequence: S, kind: DeviceKind, format: TensorFormat, dimensions: [Int])\nwhere S.Element == Element",
              "key.parsed_scope.end": 555,
              "key.parsed_scope.start": 538,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 15352
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 15349,
                  "key.offset": 15349,
                  "key.parsed_declaration": "public init<S: Sequence",
                  "key.parsed_scope.end": 538,
                  "key.parsed_scope.start": 538,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cArray: <Type usr=\"s:s15ContiguousArrayV\">ContiguousArray</Type>&lt;Element&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cArray</decl.name>: <decl.var.type><ref.struct usr=\"s:s15ContiguousArrayV\">ContiguousArray</ref.struct>&lt;Element&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 38,
                  "key.name": "cArray",
                  "key.namelength": 6,
                  "key.nameoffset": 15535,
                  "key.offset": 15531,
                  "key.parsed_declaration": "let cArray = ContiguousArray(sequence)",
                  "key.parsed_scope.end": 541,
                  "key.parsed_scope.start": 541,
                  "key.typename": "ContiguousArray<Element>",
                  "key.typeusr": "$ss15ContiguousArrayVyxGD",
                  "key.usr": "s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc6cArrayL_s010ContiguousJ0VyxGvp"
                }
              ],
              "key.typename": "<Element, S where Element : TensorNumeric, Element == S.Element, S : Sequence> (Tensor<Element>.Type) -> (S, DeviceKind, TensorFormat, [Int]) -> Tensor<Element>",
              "key.typeusr": "$s_4kind6format10dimensions4main6TensorVyxGqd___AD10DeviceKindOAD0E6FormatOSaySiGtc7ElementQyd__RszSTRd__luD",
              "key.usr": "s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init&lt;S&gt;(_ sequence: <Type usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S</Type>, _ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, _ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16438
                }
              ],
              "key.bodylength": 118,
              "key.bodyoffset": 16578,
              "key.doc.column": 10,
              "key.doc.comment": " Create a new tensor and initialize with content from a sequence.\n\n - Parameters:\n   - sequence: The sequence to initialize the new tensor with.\n   - dimensionFormat: The format and dimensions of the new tensor.",
              "key.doc.declaration": "public init<S>(_ sequence: S, _ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat) where Element == S.Element, S : Sequence",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"564\" column=\"10\"><Name>init(_:_:_:)</Name><USR>s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc</USR><Declaration>public init&lt;S&gt;(_ sequence: S, _ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat) where Element == S.Element, S : Sequence</Declaration><CommentParts><Abstract><Para>Create a new tensor and initialize with content from a sequence.</Para></Abstract><Parameters><Parameter><Name>sequence</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The sequence to initialize the new tensor with.</Para></Discussion></Parameter><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The format and dimensions of the new tensor.</Para></Discussion></Parameter></Parameters></CommentParts></Function>",
              "key.doc.line": 564,
              "key.doc.name": "init(_:_:_:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "The sequence to initialize the new tensor with."
                    }
                  ],
                  "name": "sequence"
                },
                {
                  "discussion": [
                    {
                      "Para": "The format and dimensions of the new tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 241,
              "key.docoffset": 16194,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element</decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 252,
              "key.name": "init(_:_:_:)",
              "key.namelength": 102,
              "key.nameoffset": 16445,
              "key.offset": 16445,
              "key.parsed_declaration": "public init<S: Sequence>(\n  _ sequence: S, _ kind: DeviceKind, _ dimensionFormat: TensorDimensionFormat\n)\nwhere S.Element == Element",
              "key.parsed_scope.end": 570,
              "key.parsed_scope.start": 564,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc\">init(_:format:dimensions:unsafeMutablePointer:keepAlive:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
                  "key.elements": [
                    {
                      "key.kind": "source.lang.swift.structure.elem.typeref",
                      "key.length": 8,
                      "key.offset": 16453
                    }
                  ],
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>",
                  "key.inheritedtypes": [
                    {
                      "key.name": "Sequence"
                    }
                  ],
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 11,
                  "key.name": "S",
                  "key.namelength": 1,
                  "key.nameoffset": 16450,
                  "key.offset": 16450,
                  "key.parsed_declaration": "public init<S: Sequence",
                  "key.parsed_scope.end": 564,
                  "key.parsed_scope.start": 564,
                  "key.typename": "S.Type",
                  "key.typeusr": "$sqd__mD",
                  "key.usr": "s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc1SL_qd__mfp"
                }
              ],
              "key.typename": "<Element, S where Element : TensorNumeric, Element == S.Element, S : Sequence> (Tensor<Element>.Type) -> (S, DeviceKind, TensorDimensionFormat) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__luD",
              "key.usr": "s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public init(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], unsafeMutablePointer: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>&gt;, keepAlive: Any)</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 16701
                }
              ],
              "key.bodylength": 238,
              "key.bodyoffset": 16856,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>unsafeMutablePointer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>keepAlive</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 387,
              "key.name": "init(_:format:dimensions:unsafeMutablePointer:keepAlive:)",
              "key.namelength": 146,
              "key.nameoffset": 16708,
              "key.offset": 16708,
              "key.parsed_declaration": "public init(\n  _ kind: DeviceKind, format: TensorFormat, dimensions: [Int],\n  unsafeMutablePointer: UnsafeMutablePointer<Element>, keepAlive: Any\n)",
              "key.parsed_scope.end": 581,
              "key.parsed_scope.start": 572,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_8dataType6format10dimensionsACyxGAA10DeviceKindO_AA04DataD0OAA0B6FormatOSaySiGtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_:dataType:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA8DataTypeOAA0B15DimensionFormatOtc33_C59670EF05D79618B17EDFA5C2551CEDLlfc\">init(_: DeviceKind, _: DataType, _: TensorDimensionFormat)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB7StorageCcfc\">init(_: AnyTensorStorage)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA03AnyB0_pcfc\">init(_: AnyTensor)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV4fromACyxGAA03AnyB0_p_tcfc\">init(from:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_6format10dimensionsACyxGAA10DeviceKindO_AA0B6FormatOSaySiGtcfc\">init(_:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGAA10DeviceKindO_AA0B15DimensionFormatOtcfc\">init(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV_4kind6format10dimensionsACyxGqd___AA10DeviceKindOAA0B6FormatOSaySiGtc7ElementQyd__RszSTRd__lufc\">init(_:kind:format:dimensions:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGqd___AA10DeviceKindOAA0B15DimensionFormatOtc7ElementQyd__RszSTRd__lufc\">init&lt;S&gt;(_: S, _: DeviceKind, _: TensorDimensionFormat) where Element == S.Element, S : Sequence</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyXeXecfc\">init(numpy:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let cTensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 168,
                  "key.name": "cTensor",
                  "key.namelength": 7,
                  "key.nameoffset": 16865,
                  "key.offset": 16861,
                  "key.parsed_declaration": "let cTensor = ccv_nnc_tensor_new(\n  unsafeMutablePointer,\n  toCTensorParams(kind, dataType: Element.dataType, format: format, dimensions: dimensions),\n  0)!",
                  "key.parsed_scope.end": 576,
                  "key.parsed_scope.start": 576,
                  "key.related_decls": [
                    {
                      "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV01cB0Xevp\">cTensor</RelatedName>"
                    }
                  ],
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc01cB0L_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>.Type) -> (DeviceKind, TensorFormat, [Int], UnsafeMutablePointer<Element>, Any) -> Tensor<Element>",
              "key.typeusr": "$s_6format10dimensions20unsafeMutablePointer9keepAlive4main6TensorVyxGAE10DeviceKindO_AE0I6FormatOSaySiGSpyxGyptcD",
              "key.usr": "s:4main6TensorV_6format10dimensions20unsafeMutablePointer9keepAliveACyxGAA10DeviceKindO_AA0B6FormatOSaySiGSpyxGyptcfc"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(indices: <Type usr=\"s:Si\">Int</Type>...) -&gt; <Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type> { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17112
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 17099
                }
              ],
              "key.bodylength": 352,
              "key.bodyoffset": 17158,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 392,
              "key.name": "subscript(_:)",
              "key.namelength": 26,
              "key.nameoffset": 17119,
              "key.offset": 17119,
              "key.parsed_declaration": "public subscript(indices: Int...) -> Element",
              "key.parsed_scope.end": 598,
              "key.parsed_scope.start": 584,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int...) -> Element",
              "key.typeusr": "$syxSid_tcD",
              "key.usr": "s:4main6TensorVyxSid_tcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(ranges: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;...) -&gt; <Type usr=\"s:4main6TensorV\">Tensor</Type>&lt;<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>&gt; { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 17528
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 17515
                }
              ],
              "key.bodylength": 376,
              "key.bodyoffset": 17588,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>ranges</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type>...</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main6TensorV\">Tensor</ref.struct>&lt;<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>&gt;</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 430,
              "key.name": "subscript(_:)",
              "key.namelength": 32,
              "key.nameoffset": 17535,
              "key.offset": 17535,
              "key.parsed_declaration": "public subscript(ranges: Range<Int>...) -> Tensor<Element>",
              "key.parsed_scope.end": 615,
              "key.parsed_scope.start": 601,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Range<Int>...) -> Tensor<Element>",
              "key.typeusr": "$sy4main6TensorVyxGSnySiGd_tcD",
              "key.usr": "s:4main6TensorVyACyxGSnySiGd_tcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline subscript(indices: [<Type usr=\"s:Si\">Int</Type>], range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 17969
                }
              ],
              "key.bodylength": 366,
              "key.bodyoffset": 18048,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 426,
              "key.name": "subscript(_:_:)",
              "key.namelength": 44,
              "key.nameoffset": 17989,
              "key.offset": 17989,
              "key.parsed_declaration": "subscript(indices: [Int], range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 632,
              "key.parsed_scope.start": 618,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> ([Int], Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSaySiG_SnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSaySiG_SnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.internal",
              "key.annotated_decl": "<Declaration>@usableFromInline subscript(indices: [<Type usr=\"s:Si\">Int</Type>], range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.usableFromInline",
                  "key.length": 17,
                  "key.offset": 18419
                }
              ],
              "key.bodylength": 492,
              "key.bodyoffset": 18502,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 556,
              "key.name": "subscript(_:_:)",
              "key.namelength": 48,
              "key.nameoffset": 18439,
              "key.offset": 18439,
              "key.parsed_declaration": "subscript(indices: [Int], range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 651,
              "key.parsed_scope.start": 635,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.internal",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> ([Int], (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSaySiG_ys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 18523,
              "key.offset": 18519,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 637,
              "key.parsed_scope.start": 637,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcig10dimensionsL_AEvp"
            },
            {
              "key.annotated_decl": "<Declaration>let dimensions: [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dimensions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 32,
              "key.name": "dimensions",
              "key.namelength": 10,
              "key.nameoffset": 18884,
              "key.offset": 18880,
              "key.parsed_declaration": "let dimensions = self.dimensions",
              "key.parsed_scope.end": 648,
              "key.parsed_scope.start": 648,
              "key.typename": "[Int]",
              "key.typeusr": "$sSaySiGD",
              "key.usr": "s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcis10dimensionsL_AEvp"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1564,
          "key.bodyoffset": 19017,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1583,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 19009,
          "key.offset": 18999,
          "key.parsed_declaration": "extension Tensor",
          "key.parsed_scope.end": 706,
          "key.parsed_scope.start": 654,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19033
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19020
                }
              ],
              "key.bodylength": 70,
              "key.bodyoffset": 19083,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 114,
              "key.name": "subscript(_:)",
              "key.namelength": 28,
              "key.nameoffset": 19040,
              "key.offset": 19040,
              "key.parsed_declaration": "public subscript(range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 659,
              "key.parsed_scope.start": 656,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSnySiGcD",
              "key.usr": "s:4main6TensorVySayxGSnySiGcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19171
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19158
                }
              ],
              "key.bodylength": 74,
              "key.bodyoffset": 19230,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 127,
              "key.name": "subscript(_:_:)",
              "key.namelength": 37,
              "key.nameoffset": 19178,
              "key.offset": 19178,
              "key.parsed_declaration": "public subscript(i0: Int, range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 665,
              "key.parsed_scope.start": 662,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_SnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_SnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19322
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19309
                }
              ],
              "key.bodylength": 82,
              "key.bodyoffset": 19390,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 144,
              "key.name": "subscript(_:_:_:)",
              "key.namelength": 46,
              "key.nameoffset": 19329,
              "key.offset": 19329,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 671,
              "key.parsed_scope.start": 668,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_SiSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_SiSnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19490
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19477
                }
              ],
              "key.bodylength": 90,
              "key.bodyoffset": 19567,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 161,
              "key.name": "subscript(_:_:_:_:)",
              "key.namelength": 55,
              "key.nameoffset": 19497,
              "key.offset": 19497,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 677,
              "key.parsed_scope.start": 674,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_S2iSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S2iSnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19675
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19662
                }
              ],
              "key.bodylength": 98,
              "key.bodyoffset": 19761,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 178,
              "key.name": "subscript(_:_:_:_:_:)",
              "key.namelength": 64,
              "key.nameoffset": 19682,
              "key.offset": 19682,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 683,
              "key.parsed_scope.start": 680,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_S3iSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S3iSnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 19877
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 19864
                }
              ],
              "key.bodylength": 106,
              "key.bodyoffset": 19972,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 195,
              "key.name": "subscript(_:_:_:_:_:_:)",
              "key.namelength": 73,
              "key.nameoffset": 19884,
              "key.offset": 19884,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, range: Range<Int>) -> [Element]",
              "key.parsed_scope.end": 689,
              "key.parsed_scope.start": 686,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_S4iSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S4iSnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, i5: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20096
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 20083
                }
              ],
              "key.bodylength": 114,
              "key.bodyoffset": 20206,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i5</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 218,
              "key.name": "subscript(_:_:_:_:_:_:_:)",
              "key.namelength": 82,
              "key.nameoffset": 20103,
              "key.offset": 20103,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, i5: Int, range: Range<Int>)\n  -> [Element]",
              "key.parsed_scope.end": 697,
              "key.parsed_scope.start": 692,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_S5iSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S5iSnySiGtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, i5: <Type usr=\"s:Si\">Int</Type>, i6: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:Sn\">Range</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20338
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 20325
                }
              ],
              "key.bodylength": 122,
              "key.bodyoffset": 20457,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i5</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i6</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 235,
              "key.name": "subscript(_:_:_:_:_:_:_:_:)",
              "key.namelength": 91,
              "key.nameoffset": 20345,
              "key.offset": 20345,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, i5: Int, i6: Int, range: Range<Int>)\n  -> [Element]",
              "key.parsed_scope.end": 705,
              "key.parsed_scope.start": 700,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, Int, Int, Range<Int>) -> [Element]",
              "key.typeusr": "$sySayxGSi_S6iSnySiGtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S6iSnySiGtcip"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1605,
          "key.bodyoffset": 20602,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1624,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 20594,
          "key.offset": 20584,
          "key.parsed_declaration": "extension Tensor",
          "key.parsed_scope.end": 763,
          "key.parsed_scope.start": 708,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20618
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 20605
                }
              ],
              "key.bodylength": 70,
              "key.bodyoffset": 20672,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 118,
              "key.name": "subscript(_:)",
              "key.namelength": 32,
              "key.nameoffset": 20625,
              "key.offset": 20625,
              "key.parsed_declaration": "public subscript(range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 713,
              "key.parsed_scope.start": 710,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> ((UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGys15UnboundedRange_OXEcD",
              "key.usr": "s:4main6TensorVySayxGys15UnboundedRange_OXEcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20760
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 20747
                }
              ],
              "key.bodylength": 74,
              "key.bodyoffset": 20823,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 131,
              "key.name": "subscript(_:_:)",
              "key.namelength": 41,
              "key.nameoffset": 20767,
              "key.offset": 20767,
              "key.parsed_declaration": "public subscript(i0: Int, range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 719,
              "key.parsed_scope.start": 716,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_ys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 20915
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 20902
                }
              ],
              "key.bodylength": 82,
              "key.bodyoffset": 20987,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 148,
              "key.name": "subscript(_:_:_:)",
              "key.namelength": 50,
              "key.nameoffset": 20922,
              "key.offset": 20922,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 725,
              "key.parsed_scope.start": 722,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_Siys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21087
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 21074
                }
              ],
              "key.bodylength": 90,
              "key.bodyoffset": 21168,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 165,
              "key.name": "subscript(_:_:_:_:)",
              "key.namelength": 59,
              "key.nameoffset": 21094,
              "key.offset": 21094,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 731,
              "key.parsed_scope.start": 728,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_S2iys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21276
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 21263
                }
              ],
              "key.bodylength": 98,
              "key.bodyoffset": 21366,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 182,
              "key.name": "subscript(_:_:_:_:_:)",
              "key.namelength": 68,
              "key.nameoffset": 21283,
              "key.offset": 21283,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 737,
              "key.parsed_scope.start": 734,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_S3iys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21482
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 21469
                }
              ],
              "key.bodylength": 106,
              "key.bodyoffset": 21583,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 201,
              "key.name": "subscript(_:_:_:_:_:_:)",
              "key.namelength": 77,
              "key.nameoffset": 21489,
              "key.offset": 21489,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, range: UnboundedRange) -> [Element]",
              "key.parsed_scope.end": 744,
              "key.parsed_scope.start": 740,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_S4iys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, i5: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21707
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 21694
                }
              ],
              "key.bodylength": 114,
              "key.bodyoffset": 21821,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i5</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 222,
              "key.name": "subscript(_:_:_:_:_:_:_:)",
              "key.namelength": 86,
              "key.nameoffset": 21714,
              "key.offset": 21714,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, i5: Int, range: UnboundedRange)\n  -> [Element]",
              "key.parsed_scope.end": 752,
              "key.parsed_scope.start": 747,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_S5iys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>@inlinable public subscript(i0: <Type usr=\"s:Si\">Int</Type>, i1: <Type usr=\"s:Si\">Int</Type>, i2: <Type usr=\"s:Si\">Int</Type>, i3: <Type usr=\"s:Si\">Int</Type>, i4: <Type usr=\"s:Si\">Int</Type>, i5: <Type usr=\"s:Si\">Int</Type>, i6: <Type usr=\"s:Si\">Int</Type>, range: <Type usr=\"s:s14UnboundedRangea\">UnboundedRange</Type>) -&gt; [<Type usr=\"s:4main6TensorV7Elementxmfp\">Element</Type>] { get set }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 21953
                },
                {
                  "key.attribute": "source.decl.attribute.inlinable",
                  "key.length": 10,
                  "key.offset": 21940
                }
              ],
              "key.bodylength": 122,
              "key.bodyoffset": 22083,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>i0</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i1</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i2</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i3</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i4</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i5</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>i6</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>range</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s14UnboundedRangea\">UnboundedRange</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>",
              "key.kind": "source.lang.swift.decl.function.subscript",
              "key.length": 246,
              "key.name": "subscript(_:_:_:_:_:_:_:_:)",
              "key.namelength": 102,
              "key.nameoffset": 21960,
              "key.offset": 21960,
              "key.parsed_declaration": "public subscript(i0: Int, i1: Int, i2: Int, i3: Int, i4: Int, i5: Int, i6: Int,\n  range: UnboundedRange\n)\n  -> [Element]",
              "key.parsed_scope.end": 762,
              "key.parsed_scope.start": 755,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyxSid_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVyACyxGSnySiGd_tcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSaySiG_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSnySiGcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SnySiGtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_SiSnySiGtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iSnySiGtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iSnySiGtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iSnySiGtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iSnySiGtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S6iSnySiGtcip\">subscript(_:_:_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGys15UnboundedRange_OXEcip\">subscript(_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_ys15UnboundedRange_OXEtcip\">subscript(_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_Siys15UnboundedRange_OXEtcip\">subscript(_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S2iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S3iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S4iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:)</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorVySayxGSi_S5iys15UnboundedRange_OXEtcip\">subscript(_:_:_:_:_:_:_:)</RelatedName>"
                }
              ],
              "key.setter_accessibility": "source.lang.swift.accessibility.public",
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> [Element]",
              "key.typeusr": "$sySayxGSi_S6iys15UnboundedRange_OXEtcD",
              "key.usr": "s:4main6TensorVySayxGSi_S6iys15UnboundedRange_OXEtcip"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1601,
          "key.bodyoffset": 22228,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1620,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 22220,
          "key.offset": 22210,
          "key.parsed_declaration": "extension Tensor",
          "key.parsed_scope.end": 808,
          "key.parsed_scope.start": 765,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toGPU(_ ordinal: <Type usr=\"s:Si\">Int</Type> = 0, streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main6TensorV\">Tensor</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 22471
                }
              ],
              "key.bodylength": 514,
              "key.bodyoffset": 22555,
              "key.doc.column": 15,
              "key.doc.comment": " Move this tensor from CPU to GPU.\n\n - Parameters:\n   - ordinal: Which GPU the new tensor will reside.\n   - streamContext: Run the operation on the given stream context.\n - Returns: A new tensor on GPU.",
              "key.doc.declaration": "public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil) -> main.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"775\" column=\"15\"><Name>toGPU(_:streamContext:)</Name><USR>s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF</USR><Declaration>public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil) -&gt; main.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Move this tensor from CPU to GPU.</Para></Abstract><Parameters><Parameter><Name>ordinal</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Which GPU the new tensor will reside.</Para></Discussion></Parameter><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Run the operation on the given stream context.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new tensor on GPU.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 775,
              "key.doc.name": "toGPU(_:streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Which GPU the new tensor will reside."
                    }
                  ],
                  "name": "ordinal"
                },
                {
                  "discussion": [
                    {
                      "Para": "Run the operation on the given stream context."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new tensor on GPU."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 236,
              "key.docoffset": 22232,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toGPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>ordinal</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main6TensorV\">Tensor</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 592,
              "key.name": "toGPU(_:streamContext:)",
              "key.namelength": 62,
              "key.nameoffset": 22483,
              "key.offset": 22478,
              "key.parsed_declaration": "public func toGPU(_ ordinal: Int = 0, streamContext: StreamContext? = nil) -> Self",
              "key.parsed_scope.end": 786,
              "key.parsed_scope.start": 775,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var _output: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 151,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 22564,
                  "key.offset": 22560,
                  "key.parsed_declaration": "var _output = ccv_nnc_tensor_new(\n  nil,\n  toCTensorParams(.GPU(ordinal), dataType: dataType, format: format, dimensions: dimensions),\n  0)",
                  "key.parsed_scope.end": 776,
                  "key.parsed_scope.start": 776,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 105,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 22720,
                  "key.offset": 22716,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(\n  CCV_NNC_DATA_TRANSFER_FORWARD, nil, CmdParamsFactory.factory.newParams(), 0)",
                  "key.parsed_scope.end": 780,
                  "key.parsed_scope.start": 780,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 43,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 22830,
                  "key.offset": 22826,
                  "key.parsed_declaration": "let _streamContext = streamContext?._stream",
                  "key.parsed_scope.end": 782,
                  "key.parsed_scope.start": 782,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF01_eF0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _input: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 61,
                  "key.name": "_input",
                  "key.namelength": 6,
                  "key.nameoffset": 22878,
                  "key.offset": 22874,
                  "key.parsed_declaration": "var _input: UnsafeMutablePointer<ccv_nnc_tensor_t>? = cTensor",
                  "key.parsed_scope.end": 783,
                  "key.parsed_scope.start": 783,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF6_inputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>) -> (Int, StreamContext?) -> Tensor<Element>",
              "key.typeusr": "$s_13streamContext4main6TensorVyxGSi_AB06StreamB0CSgtcD",
              "key.usr": "s:4main6TensorV5toGPU_13streamContextACyxGSi_AA06StreamF0CSgtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func toCPU(streamContext: <Type usr=\"s:4main13StreamContextC\">StreamContext</Type>? = nil) -&gt; <Type usr=\"s:4main6TensorV\">Tensor</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23257
                }
              ],
              "key.bodylength": 505,
              "key.bodyoffset": 23321,
              "key.doc.column": 15,
              "key.doc.comment": " Move this tensor from GPU to CPU.\n\n - Parameters:\n   - streamContext: Run the operation on the given stream context.\n - Returns: A new tensor on CPU.",
              "key.doc.declaration": "public func toCPU(streamContext: StreamContext? = nil) -> main.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"795\" column=\"15\"><Name>toCPU(streamContext:)</Name><USR>s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF</USR><Declaration>public func toCPU(streamContext: StreamContext? = nil) -&gt; main.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Move this tensor from GPU to CPU.</Para></Abstract><Parameters><Parameter><Name>streamContext</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Run the operation on the given stream context.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new tensor on CPU.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 795,
              "key.doc.name": "toCPU(streamContext:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "Run the operation on the given stream context."
                    }
                  ],
                  "name": "streamContext"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "A new tensor on CPU."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 180,
              "key.docoffset": 23074,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCPU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>streamContext</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main13StreamContextC\">StreamContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main6TensorV\">Tensor</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 563,
              "key.name": "toCPU(streamContext:)",
              "key.namelength": 42,
              "key.nameoffset": 23269,
              "key.offset": 23264,
              "key.parsed_declaration": "public func toCPU(streamContext: StreamContext? = nil) -> Self",
              "key.parsed_scope.end": 806,
              "key.parsed_scope.start": 795,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>var _output: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_output</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 142,
                  "key.name": "_output",
                  "key.namelength": 7,
                  "key.nameoffset": 23330,
                  "key.offset": 23326,
                  "key.parsed_declaration": "var _output = ccv_nnc_tensor_new(\n  nil,\n  toCTensorParams(.CPU, dataType: dataType, format: format, dimensions: dimensions),\n  0)",
                  "key.parsed_scope.end": 796,
                  "key.parsed_scope.start": 796,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF7_outputL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cmd</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 105,
                  "key.name": "cmd",
                  "key.namelength": 3,
                  "key.nameoffset": 23477,
                  "key.offset": 23473,
                  "key.parsed_declaration": "let cmd = ccv_nnc_cmd(\n  CCV_NNC_DATA_TRANSFER_FORWARD, nil, CmdParamsFactory.factory.newParams(), 0)",
                  "key.parsed_scope.end": 800,
                  "key.parsed_scope.start": 800,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF3cmdL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let _streamContext: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer</Type>?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>_streamContext</decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer</ref.struct>?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 43,
                  "key.name": "_streamContext",
                  "key.namelength": 14,
                  "key.nameoffset": 23587,
                  "key.offset": 23583,
                  "key.parsed_declaration": "let _streamContext = streamContext?._stream",
                  "key.parsed_scope.end": 802,
                  "key.parsed_scope.start": 802,
                  "key.typename": "OpaquePointer?",
                  "key.typeusr": "$ss13OpaquePointerVSgD",
                  "key.usr": "s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF01_eF0L_s13OpaquePointerVSgvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var _input: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>_input</decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 61,
                  "key.name": "_input",
                  "key.namelength": 6,
                  "key.nameoffset": 23635,
                  "key.offset": 23631,
                  "key.parsed_declaration": "var _input: UnsafeMutablePointer<ccv_nnc_tensor_t>? = cTensor",
                  "key.parsed_scope.end": 803,
                  "key.parsed_scope.start": 803,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF6_inputL_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>) -> (StreamContext?) -> Tensor<Element>",
              "key.typeusr": "$s13streamContext4main6TensorVyxGAB06StreamB0CSg_tcD",
              "key.usr": "s:4main6TensorV5toCPU13streamContextACyxGAA06StreamF0CSg_tF"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 1809,
          "key.bodyoffset": 23850,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1828,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 23842,
          "key.offset": 23832,
          "key.parsed_declaration": "extension Tensor",
          "key.parsed_scope.end": 858,
          "key.parsed_scope.start": 810,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main6TensorV\">Tensor</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 23854
                }
              ],
              "key.bodylength": 1020,
              "key.bodyoffset": 23981,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main6TensorV\">Tensor</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 1141,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 23866,
              "key.offset": 23861,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 839,
              "key.parsed_scope.start": 812,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV8reshaped_6offset10incrementsACyxGAA0B15DimensionFormatO_SaySiGSgAKtF\">reshaped(_:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>let cTensorParams: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>cTensorParams</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 40,
                  "key.name": "cTensorParams",
                  "key.namelength": 13,
                  "key.nameoffset": 23990,
                  "key.offset": 23986,
                  "key.parsed_declaration": "let cTensorParams = cTensor.pointee.info",
                  "key.parsed_scope.end": 815,
                  "key.parsed_scope.start": 815,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF01cB6ParamsL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let device: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>device</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 58,
                  "key.name": "device",
                  "key.namelength": 6,
                  "key.nameoffset": 24035,
                  "key.offset": 24031,
                  "key.parsed_declaration": "let device = DeviceKind.from(cTensorParams: cTensorParams)",
                  "key.parsed_scope.end": 816,
                  "key.parsed_scope.start": 816,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF6deviceL_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>var cOffset: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cOffset</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 35,
                  "key.name": "cOffset",
                  "key.namelength": 7,
                  "key.nameoffset": 24416,
                  "key.offset": 24412,
                  "key.parsed_declaration": "var cOffset = toCDimensions(offset)",
                  "key.parsed_scope.end": 824,
                  "key.parsed_scope.start": 824,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF7cOffsetL_s5Int32V_A7Ptvp"
                },
                {
                  "key.annotated_decl": "<Declaration>var cIncrements: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cIncrements</decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 43,
                  "key.name": "cIncrements",
                  "key.namelength": 11,
                  "key.nameoffset": 24456,
                  "key.offset": 24452,
                  "key.parsed_declaration": "var cIncrements = toCDimensions(increments)",
                  "key.parsed_scope.end": 825,
                  "key.parsed_scope.start": 825,
                  "key.typename": "(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
                  "key.typeusr": "$ss5Int32V_A7BtD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF11cIncrementsL_s5Int32V_A7Ptvp"
                },
                {
                  "key.annotated_decl": "<Declaration>let newt: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newt</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 333,
                  "key.name": "newt",
                  "key.namelength": 4,
                  "key.nameoffset": 24504,
                  "key.offset": 24500,
                  "key.parsed_declaration": "let newt = withUnsafePointer(to: &cOffset.0) { cOffset in\n  withUnsafePointer(to: &cIncrements.0) { cIncrements in\n    ccv_nnc_tensor_view_new(\n      cTensor,\n      toCTensorParams(\n        device, dataType: Element.dataType, format: format, dimensions: dimensions), cOffset,\n      cIncrements)!\n  }\n}",
                  "key.parsed_scope.end": 826,
                  "key.parsed_scope.start": 826,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF4newtL0_Xevp"
                },
                {
                  "key.annotated_decl": "<Declaration>let anyTensor: &lt;&lt;error type&gt;&gt;</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>anyTensor</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
                  "key.kind": "source.lang.swift.decl.var.local",
                  "key.length": 133,
                  "key.name": "anyTensor",
                  "key.namelength": 9,
                  "key.nameoffset": 24842,
                  "key.offset": 24838,
                  "key.parsed_declaration": "let anyTensor = newt.withMemoryRebound(to: ccv_nnc_tensor_t.self, capacity: 1) {\n  AnyTensorStorage($0, original: _storage)\n}",
                  "key.parsed_scope.end": 835,
                  "key.parsed_scope.start": 835,
                  "key.typename": "<<error type>>",
                  "key.typeusr": "$sXeD",
                  "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF03anyB0L_Xevp"
                }
              ],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>) -> (TensorFormat, [Int], [Int]?, [Int]?) -> Tensor<Element>",
              "key.typeusr": "$s6format10dimensions6offset10increments4main6TensorVyxGAE0F6FormatO_SaySiGAKSgALtcD",
              "key.usr": "s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; <Type usr=\"s:4main6TensorV\">Tensor</Type>&lt;Element&gt;</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 25380
                }
              ],
              "key.bodylength": 148,
              "key.bodyoffset": 25508,
              "key.doc.column": 15,
              "key.doc.comment": " Create a new tensor pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensor with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> main.Tensor<Element>",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"850\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:4main6TensorV8reshaped_6offset10incrementsACyxGAA0B15DimensionFormatO_SaySiGSgAKtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; main.Tensor&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>Create a new tensor pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensor with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 850,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensor with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 25006,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main6TensorV\">Tensor</ref.struct>&lt;Element&gt;</decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 270,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 25392,
              "key.offset": 25387,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> Self",
              "key.parsed_scope.end": 856,
              "key.parsed_scope.start": 850,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:4main6TensorV8reshaped6format10dimensions6offset10incrementsACyxGAA0B6FormatO_SaySiGALSgAMtF\">reshaped(format:dimensions:offset:increments:)</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Element where Element : TensorNumeric> (Tensor<Element>) -> (TensorDimensionFormat, [Int]?, [Int]?) -> Tensor<Element>",
              "key.typeusr": "$s_6offset10increments4main6TensorVyxGAC0D15DimensionFormatO_SaySiGSgAJtcD",
              "key.usr": "s:4main6TensorV8reshaped_6offset10incrementsACyxGAA0B15DimensionFormatO_SaySiGSgAKtF"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 25717,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 919,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 25672,
          "key.offset": 25662,
          "key.parsed_declaration": "extension Collection where Element == Tensor<Float64>",
          "key.parsed_scope.end": 882,
          "key.parsed_scope.start": 860,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 25720
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 25852,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 25732,
              "key.offset": 25727,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 867,
              "key.parsed_scope.start": 861,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Double>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVySdGGAE0F6FormatO_SaySiGALSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 26354
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 26487,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"877\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 877,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 25980,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 26366,
              "key.offset": 26361,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 881,
              "key.parsed_scope.start": 877,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Double>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVySdGGAC0D15DimensionFormatO_SaySiGSgAKtcD",
              "key.usr": "s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 26636,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 917,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 26593,
          "key.offset": 26583,
          "key.parsed_declaration": "extension Collection where Element == Tensor<Int64>",
          "key.parsed_scope.end": 906,
          "key.parsed_scope.start": 884,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 26639
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 26771,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 26651,
              "key.offset": 26646,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 891,
              "key.parsed_scope.start": 885,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Int64>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVys5Int64VGGAE0F6FormatO_SaySiGANSgAOtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 27273
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 27406,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"901\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 901,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 26899,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 27285,
              "key.offset": 27280,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 905,
              "key.parsed_scope.start": 901,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Int64>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVys5Int64VGGAC0D15DimensionFormatO_SaySiGSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 27557,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 919,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 27512,
          "key.offset": 27502,
          "key.parsed_declaration": "extension Collection where Element == Tensor<Float32>",
          "key.parsed_scope.end": 930,
          "key.parsed_scope.start": 908,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 27560
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 27692,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 27572,
              "key.offset": 27567,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 915,
              "key.parsed_scope.start": 909,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Float>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVySfGGAE0F6FormatO_SaySiGALSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 28194
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 28327,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"925\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 925,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 27820,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 28206,
              "key.offset": 28201,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 929,
              "key.parsed_scope.start": 925,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Float>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVySfGGAC0D15DimensionFormatO_SaySiGSgAKtcD",
              "key.usr": "s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 28476,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 917,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 28433,
          "key.offset": 28423,
          "key.parsed_declaration": "extension Collection where Element == Tensor<Int32>",
          "key.parsed_scope.end": 954,
          "key.parsed_scope.start": 932,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 28479
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 28611,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 28491,
              "key.offset": 28486,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 939,
              "key.parsed_scope.start": 933,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Int32>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVys5Int32VGGAE0F6FormatO_SaySiGANSgAOtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 29113
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 29246,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"949\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 949,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 28739,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 29125,
              "key.offset": 29120,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 953,
              "key.parsed_scope.start": 949,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Int32>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVys5Int32VGGAC0D15DimensionFormatO_SaySiGSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 29397,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 919,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 29352,
          "key.offset": 29342,
          "key.parsed_declaration": "extension Collection where Element == Tensor<Float16>",
          "key.parsed_scope.end": 978,
          "key.parsed_scope.start": 956,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 29400
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 29532,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 29412,
              "key.offset": 29407,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 963,
              "key.parsed_scope.start": 957,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Float16>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVys7Float16VGGAE0F6FormatO_SaySiGANSgAOtcD",
              "key.usr": "s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 30034
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 30167,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"973\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 973,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 29660,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 30046,
              "key.offset": 30041,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 977,
              "key.parsed_scope.start": 973,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<Float16>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVys7Float16VGGAC0D15DimensionFormatO_SaySiGSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence</Type></Declaration>",
          "key.bodylength": 863,
          "key.bodyoffset": 30316,
          "key.doc.declaration": "protocol Collection : Sequence",
          "key.doc.discussion": [
            {
              "Para": "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para": "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para": "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para": "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para": "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para": "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para": "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para": "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para": "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number": ""
            },
            {
              "Para": "Here’s an implementation of those steps:"
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para": "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para": "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing": ""
            },
            {
              "Para": "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet": ""
            },
            {
              "Para": "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para": "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml": "<Class><Name>Collection</Name><USR>s:Sl</USR><Declaration>protocol Collection : Sequence</Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.</Para></Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection</codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence</codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.</Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>firstSpace</codeVoice> constant is an index into the <codeVoice>text</codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace</codeVoice> is used to extract the prefix that contains elements up to that index.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Individual Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex</codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.</Para><Para>Here’s an example of accessing the first character in a string through its subscript:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"B\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>Collection</codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text</codeVoice> using the <codeVoice>first</codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil</codeVoice> if the collection is empty.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"B\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex</codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex</codeVoice> property. All other values of the <codeVoice>Index</codeVoice> type, such as the <codeVoice>startIndex</codeVoice> property of a different collection, are invalid indices for this collection.</Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection</codeVoice> and <codeVoice>RangeReplaceableCollection</codeVoice> protocols, as well as for the specific type you’re using.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)</codeVoice> or <codeVoice>suffix(_:)</codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.</Para><Para>The following example creates a <codeVoice>firstWord</codeVoice> constant by using the <codeVoice>prefix(while:)</codeVoice> method to get a slice of the <codeVoice>text</codeVoice> string.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // Prints \"Buffalo\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The retrieved slice of <codeVoice>text</codeVoice> is equivalent in each of these cases.</Para><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Share Indices<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.</Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:</Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences</codeVoice> array that holds the second half of the days.</Para></Item><Item><Para>Use the <codeVoice>max(by:)</codeVoice> method to determine the index of the day with the most absences.</Para></Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences</codeVoice> array.</Para></Item></List-Number><Para>Here’s an implementation of those steps:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count / 2)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Highest second-half absences: 3\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[</h2>]]></rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.</Para><Para>For example, if you update the last element of the <codeVoice>absences</codeVoice> array from <codeVoice>0</codeVoice> to <codeVoice>2</codeVoice>, the <codeVoice>secondHalf</codeVoice> slice is unchanged.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 3, 1, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Traversing a Collection<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass</emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)</codeVoice> method to test whether a collection includes an element.</Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters</codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"S\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"w\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"i\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"f\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"t\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[</h1>]]></rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection</codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection</codeVoice> conformance to your type, you must declare at least the following requirements:</Para><List-Bullet><Item><Para>The <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties</Para></Item><Item><Para>A subscript that provides at least read-only access to your type’s elements</Para></Item><Item><Para>The <codeVoice>index(after:)</codeVoice> method for advancing an index into your collection</Para></Item></List-Bullet><rawHTML><![CDATA[<h1>]]></rawHTML>Expected Performance<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Types that conform to <codeVoice>Collection</codeVoice> are expected to provide the <codeVoice>startIndex</codeVoice> and <codeVoice>endIndex</codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.</Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count</codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count</codeVoice> property is an O(<emphasis>n</emphasis>) operation.</Para></Discussion></CommentParts></Class>",
          "key.doc.name": "Collection",
          "key.doc.type": "Class",
          "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Collection</decl.name> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.protocol>",
          "key.groupname": "Collection",
          "key.is_system": true,
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 917,
          "key.modulename": "Swift",
          "key.name": "Collection",
          "key.namelength": 10,
          "key.nameoffset": 30273,
          "key.offset": 30263,
          "key.parsed_declaration": "extension Collection where Element == Tensor<UInt8>",
          "key.parsed_scope.end": 1002,
          "key.parsed_scope.start": 980,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>], offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 30319
                }
              ],
              "key.bodylength": 124,
              "key.bodyoffset": 30451,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 250,
              "key.name": "reshaped(format:dimensions:offset:increments:)",
              "key.namelength": 105,
              "key.nameoffset": 30331,
              "key.offset": 30326,
              "key.parsed_declaration": "public func reshaped(\n  format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 987,
              "key.parsed_scope.start": 981,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<UInt8>> (Self) -> (TensorFormat, [Int], [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s6format10dimensions6offset10incrementsSay4main6TensorVys5UInt8VGGAE0F6FormatO_SaySiGANSgAOtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF"
            },
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public func reshaped(_ dimensionFormat: <Type usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</Type>, offset: [<Type usr=\"s:Si\">Int</Type>]? = nil, increments: [<Type usr=\"s:Si\">Int</Type>]? = nil) -&gt; [<Type usr=\"s:Sl7ElementQa\">Element</Type>]</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 30953
                }
              ],
              "key.bodylength": 91,
              "key.bodyoffset": 31086,
              "key.doc.column": 15,
              "key.doc.comment": " Create new tensors pointing to the same memory region but with different sizes.\n\n - Parameters:\n   - dimensionFormat: New format and dimensions for the tensor.\n   - offset: Whether offset on each dimensions.\n   - increments: The step on each dimensions.\n - Returns: The new tensors with different format but the same memory content.",
              "key.doc.declaration": "public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -> [Element]",
              "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.doc.full_as_xml": "<Function file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"997\" column=\"15\"><Name>reshaped(_:offset:increments:)</Name><USR>s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF</USR><Declaration>public func reshaped(_ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Create new tensors pointing to the same memory region but with different sizes.</Para></Abstract><Parameters><Parameter><Name>dimensionFormat</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>New format and dimensions for the tensor.</Para></Discussion></Parameter><Parameter><Name>offset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Whether offset on each dimensions.</Para></Discussion></Parameter><Parameter><Name>increments</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The step on each dimensions.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The new tensors with different format but the same memory content.</Para></ResultDiscussion></CommentParts></Function>",
              "key.doc.line": 997,
              "key.doc.name": "reshaped(_:offset:increments:)",
              "key.doc.parameters": [
                {
                  "discussion": [
                    {
                      "Para": "New format and dimensions for the tensor."
                    }
                  ],
                  "name": "dimensionFormat"
                },
                {
                  "discussion": [
                    {
                      "Para": "Whether offset on each dimensions."
                    }
                  ],
                  "name": "offset"
                },
                {
                  "discussion": [
                    {
                      "Para": "The step on each dimensions."
                    }
                  ],
                  "name": "increments"
                }
              ],
              "key.doc.result_discussion": [
                {
                  "Para": "The new tensors with different format but the same memory content."
                }
              ],
              "key.doc.type": "Function",
              "key.doclength": 371,
              "key.docoffset": 30579,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionFormat</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main21TensorDimensionFormatO\">TensorDimensionFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>increments</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>",
              "key.groupname": "Collection",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 218,
              "key.name": "reshaped(_:offset:increments:)",
              "key.namelength": 106,
              "key.nameoffset": 30965,
              "key.offset": 30960,
              "key.parsed_declaration": "public func reshaped(\n  _ dimensionFormat: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil\n) -> [Element]",
              "key.parsed_scope.end": 1001,
              "key.parsed_scope.start": 997,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySdG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int64VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayADGAA0B6FormatO_SaySiGAOSgAPtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVySfG7ElementRtzrlE8reshaped_6offset10incrementsSayADGAA0B15DimensionFormatO_SaySiGSgANtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5Int32VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys7Float16VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF\">reshaped(_: TensorDimensionFormat, offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                },
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped6format10dimensions6offset10incrementsSayAFGAA0B6FormatO_SaySiGAQSgARtF\">reshaped(format: TensorFormat, dimensions: [Int], offset: [Int]? = nil, increments: [Int]? = nil) -&gt; [Element]</RelatedName>"
                }
              ],
              "key.substructure": [],
              "key.typename": "<Self where Self : Collection, Self.Element == Tensor<UInt8>> (Self) -> (TensorDimensionFormat, [Int]?, [Int]?) -> [Self.Element]",
              "key.typeusr": "$s_6offset10incrementsSay4main6TensorVys5UInt8VGGAC0D15DimensionFormatO_SaySiGSgAMtcD",
              "key.usr": "s:Sl4mainAA6TensorVys5UInt8VG7ElementRtzrlE8reshaped_6offset10incrementsSayAFGAA0B15DimensionFormatO_SaySiGSgAPtF"
            }
          ],
          "key.typename": "Collection.Protocol",
          "key.typeusr": "$sSl_pmD",
          "key.usr": "s:Sl"
        },
        {
          "key.annotated_decl": "<Declaration>public final class AnyTensorStorage</Declaration>",
          "key.bodylength": 986,
          "key.bodyoffset": 31210,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>AnyTensorStorage</decl.name></decl.class>",
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 1015,
          "key.name": "AnyTensorStorage",
          "key.namelength": 16,
          "key.nameoffset": 31192,
          "key.offset": 31182,
          "key.parsed_declaration": "extension AnyTensorStorage",
          "key.parsed_scope.end": 1040,
          "key.parsed_scope.start": 1004,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>func toAnyTensor() -&gt; <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type></Declaration>",
              "key.bodylength": 343,
              "key.bodyoffset": 31247,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toAnyTensor</decl.name>() -&gt; <decl.function.returntype><ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 377,
              "key.name": "toAnyTensor()",
              "key.namelength": 13,
              "key.nameoffset": 31219,
              "key.offset": 31214,
              "key.parsed_declaration": "func toAnyTensor() -> AnyTensor",
              "key.parsed_scope.end": 1021,
              "key.parsed_scope.start": 1006,
              "key.substructure": [],
              "key.typename": "(AnyTensorStorage) -> () -> AnyTensor",
              "key.typeusr": "$s4main9AnyTensor_pycD",
              "key.usr": "s:4main16AnyTensorStorageC02tobC0AA0bC0_pyF"
            },
            {
              "key.annotated_decl": "<Declaration>func toTensor&lt;Element&gt;(_ type: <Type usr=\"s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp\">Element</Type>.Type) -&gt; <Type usr=\"s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp\">Element</Type></Declaration>",
              "key.bodylength": 541,
              "key.bodyoffset": 31652,
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toTensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>type</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp\">Element</ref.generic_type_param>.Type</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp\">Element</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>",
              "key.kind": "source.lang.swift.decl.function.method.instance",
              "key.length": 599,
              "key.name": "toTensor(_:)",
              "key.namelength": 39,
              "key.nameoffset": 31600,
              "key.offset": 31595,
              "key.parsed_declaration": "func toTensor<Element>(_ type: Element.Type) -> Element",
              "key.parsed_scope.end": 1038,
              "key.parsed_scope.start": 1023,
              "key.substructure": [
                {
                  "key.annotated_decl": "<Declaration>Element</Declaration>",
                  "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
                  "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>",
                  "key.kind": "source.lang.swift.decl.generic_type_param",
                  "key.length": 7,
                  "key.name": "Element",
                  "key.namelength": 7,
                  "key.nameoffset": 31609,
                  "key.offset": 31609,
                  "key.parsed_declaration": "func toTensor<Element",
                  "key.parsed_scope.end": 1023,
                  "key.parsed_scope.start": 1023,
                  "key.typename": "Element.Type",
                  "key.typeusr": "$sxmD",
                  "key.usr": "s:4main16AnyTensorStorageC02toC0yxxmlF7ElementL_xmfp"
                }
              ],
              "key.typename": "<Element> (AnyTensorStorage) -> (Element.Type) -> Element",
              "key.typeusr": "$syxxmcluD",
              "key.usr": "s:4main16AnyTensorStorageC02toC0yxxmlF"
            }
          ],
          "key.typename": "AnyTensorStorage.Type",
          "key.typeusr": "$s4main16AnyTensorStorageCmD",
          "key.usr": "s:4main16AnyTensorStorageC"
        },
        {
          "key.annotated_decl": "<Declaration>public struct Tensor&lt;Element&gt; : <Type usr=\"s:4main9AnyTensorP\">AnyTensor</Type> where Element : <Type usr=\"s:4main13TensorNumericP\">TensorNumeric</Type></Declaration>",
          "key.bodylength": 169,
          "key.bodyoffset": 32242,
          "key.doc.column": 15,
          "key.doc.declaration": "public struct Tensor<Element> : AnyTensor where Element : main.TensorNumeric",
          "key.doc.file": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.doc.full_as_xml": "<Class file=\"/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift\" line=\"463\" column=\"15\"><Name>Tensor</Name><USR>s:4main6TensorV</USR><Declaration>public struct Tensor&lt;Element&gt; : AnyTensor where Element : main.TensorNumeric</Declaration><CommentParts><Abstract><Para>Basic tensor type.</Para></Abstract></CommentParts></Class>",
          "key.doc.line": 463,
          "key.doc.name": "Tensor",
          "key.doc.type": "Class",
          "key.elements": [
            {
              "key.kind": "source.lang.swift.structure.elem.typeref",
              "key.length": 23,
              "key.offset": 32217
            }
          ],
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Tensor</decl.name>&lt;<decl.generic_type_param usr=\"s:4main6TensorV7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4main9AnyTensorP\">AnyTensor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:4main13TensorNumericP\">TensorNumeric</ref.protocol></decl.generic_type_requirement></decl.struct>",
          "key.inheritedtypes": [
            {
              "key.name": "CustomStringConvertible"
            }
          ],
          "key.kind": "source.lang.swift.decl.extension",
          "key.length": 213,
          "key.name": "Tensor",
          "key.namelength": 6,
          "key.nameoffset": 32209,
          "key.offset": 32199,
          "key.parsed_declaration": "extension Tensor: CustomStringConvertible",
          "key.parsed_scope.end": 1047,
          "key.parsed_scope.start": 1042,
          "key.substructure": [
            {
              "key.accessibility": "source.lang.swift.accessibility.public",
              "key.annotated_decl": "<Declaration>public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>",
              "key.attributes": [
                {
                  "key.attribute": "source.decl.attribute.public",
                  "key.length": 6,
                  "key.offset": 32245
                }
              ],
              "key.bodylength": 132,
              "key.bodyoffset": 32277,
              "key.doc.declaration": "var description: String { get }",
              "key.doc.discussion": [
                {
                  "Para": "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
                },
                {
                  "CodeListing": ""
                },
                {
                  "Para": "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                },
                {
                  "Note": ""
                }
              ],
              "key.doc.full_as_xml": "<Other><Name>description</Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp</USR><Declaration>var description: String { get }</Declaration><CommentParts><Abstract><Para>A textual representation of this instance.</Para></Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)</codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description</codeVoice> property for types that conform to <codeVoice>CustomStringConvertible</codeVoice>:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"(21, 30)\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The conversion of <codeVoice>p</codeVoice> to a string in the assignment to <codeVoice>s</codeVoice> uses the <codeVoice>Point</codeVoice> type’s <codeVoice>description</codeVoice> property.</Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible</codeVoice>.</Para></Note></Discussion></CommentParts></Other>",
              "key.doc.name": "description",
              "key.doc.type": "Other",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>",
              "key.kind": "source.lang.swift.decl.var.instance",
              "key.length": 158,
              "key.name": "description",
              "key.namelength": 11,
              "key.nameoffset": 32256,
              "key.offset": 32252,
              "key.overrides": [
                {
                  "key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"
                }
              ],
              "key.parsed_declaration": "public var description: String",
              "key.parsed_scope.end": 1046,
              "key.parsed_scope.start": 1043,
              "key.typename": "String",
              "key.typeusr": "$sSSD",
              "key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"
            }
          ],
          "key.typename": "Tensor<Element>.Type",
          "key.typeusr": "$s4main6TensorVyxGmD",
          "key.usr": "s:4main6TensorV"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func toCDimensions(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]?) -&gt; (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.length": 17,
              "key.offset": 32414
            }
          ],
          "key.bodylength": 1357,
          "key.bodyoffset": 32534,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCDimensions</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 1460,
          "key.name": "toCDimensions(_:)",
          "key.namelength": 35,
          "key.nameoffset": 32437,
          "key.offset": 32432,
          "key.parsed_declaration": "func toCDimensions(_ dimensions: [Int]?) -> (Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
          "key.parsed_scope.end": 1091,
          "key.parsed_scope.start": 1050,
          "key.substructure": [],
          "key.typename": "([Int]?) -> (Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)",
          "key.typeusr": "$sys5Int32V_A7BtSaySiGSgcD",
          "key.usr": "s:4main13toCDimensionsys5Int32V_A7DtSaySiGSgF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func toCDimensionsArray(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]?) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.length": 17,
              "key.offset": 33894
            }
          ],
          "key.bodylength": 1362,
          "key.bodyoffset": 33970,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCDimensionsArray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 1421,
          "key.name": "toCDimensionsArray(_:)",
          "key.namelength": 40,
          "key.nameoffset": 33917,
          "key.offset": 33912,
          "key.parsed_declaration": "func toCDimensionsArray(_ dimensions: [Int]?) -> [Int32]",
          "key.parsed_scope.end": 1134,
          "key.parsed_scope.start": 1094,
          "key.substructure": [],
          "key.typename": "([Int]?) -> [Int32]",
          "key.typeusr": "$sySays5Int32VGSaySiGSgcD",
          "key.usr": "s:4main18toCDimensionsArrayySays5Int32VGSaySiGSgF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func fromCDimensions(_ dim: (<Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>, <Type usr=\"s:s5Int32V\">Int32</Type>)) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.length": 17,
              "key.offset": 35335
            }
          ],
          "key.bodylength": 770,
          "key.bodyoffset": 35449,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromCDimensions</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dim</decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 867,
          "key.name": "fromCDimensions(_:)",
          "key.namelength": 80,
          "key.nameoffset": 35358,
          "key.offset": 35353,
          "key.parsed_declaration": "func fromCDimensions(_ dim: (Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)) -> [Int]",
          "key.parsed_scope.end": 1160,
          "key.parsed_scope.start": 1137,
          "key.substructure": [],
          "key.typename": "((Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)) -> [Int]",
          "key.typeusr": "$sySaySiGs5Int32V_A7Ct_tcD",
          "key.usr": "s:4main15fromCDimensionsySaySiGs5Int32V_A7Et_tF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func fromCTensorIncrements(_ cTensor: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.length": 17,
              "key.offset": 36222
            }
          ],
          "key.bodylength": 307,
          "key.bodyoffset": 36328,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromCTensorIncrements</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>cTensor</decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 396,
          "key.name": "fromCTensorIncrements(_:)",
          "key.namelength": 72,
          "key.nameoffset": 36245,
          "key.offset": 36240,
          "key.parsed_declaration": "func fromCTensorIncrements(_ cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>) -> [Int]",
          "key.parsed_scope.end": 1172,
          "key.parsed_scope.start": 1163,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>let type: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 36,
              "key.name": "type",
              "key.namelength": 4,
              "key.nameoffset": 36335,
              "key.offset": 36331,
              "key.parsed_declaration": "let type = Int(cTensor.pointee.type)",
              "key.parsed_scope.end": 1164,
              "key.parsed_scope.start": 1164,
              "key.related_decls": [
                {
                  "key.annotated_decl": "<RelatedName usr=\"s:s4type2ofq_x_tr0_lF\">type(of:)</RelatedName>"
                }
              ],
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main21fromCTensorIncrementsyXeXeF4typeL_Xevp"
            },
            {
              "key.annotated_decl": "<Declaration>let inc: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>inc</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 118,
              "key.name": "inc",
              "key.namelength": 3,
              "key.nameoffset": 36490,
              "key.offset": 36486,
              "key.parsed_declaration": "let inc = UnsafeMutableRawPointer(cTensor).bindMemory(\n  to: ccv_nnc_tensor_view_t.self, capacity: 1\n).pointee.inc",
              "key.parsed_scope.end": 1168,
              "key.parsed_scope.start": 1168,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main21fromCTensorIncrementsyXeXeF3incL_Xevp"
            }
          ],
          "key.typename": "(<<error type>>) -> [Int]",
          "key.typeusr": "$syXeXecD",
          "key.usr": "s:4main21fromCTensorIncrementsyXeXeF"
        },
        {
          "key.accessibility": "source.lang.swift.accessibility.internal",
          "key.annotated_decl": "<Declaration>@usableFromInline func toCTensorParams(_ kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind</Type>, dataType: <Type usr=\"s:4main8DataTypeO\">DataType</Type>, format: <Type usr=\"s:4main12TensorFormatO\">TensorFormat</Type>, dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; ccv_nnc_tensor_param_t</Declaration>",
          "key.attributes": [
            {
              "key.attribute": "source.decl.attribute.usableFromInline",
              "key.length": 17,
              "key.offset": 36638
            }
          ],
          "key.bodylength": 330,
          "key.bodyoffset": 36789,
          "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
          "key.fully_annotated_decl": "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCTensorParams</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>kind</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dimensions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>ccv_nnc_tensor_param_t</decl.function.returntype></decl.function.free>",
          "key.kind": "source.lang.swift.decl.function.free",
          "key.length": 464,
          "key.name": "toCTensorParams(_:dataType:format:dimensions:)",
          "key.namelength": 100,
          "key.nameoffset": 36661,
          "key.offset": 36656,
          "key.parsed_declaration": "func toCTensorParams(\n  _ kind: DeviceKind, dataType: DataType, format: TensorFormat, dimensions: [Int]\n) -> ccv_nnc_tensor_param_t",
          "key.parsed_scope.end": 1189,
          "key.parsed_scope.start": 1175,
          "key.substructure": [
            {
              "key.annotated_decl": "<Declaration>var params: &lt;&lt;error type&gt;&gt;</Declaration>",
              "key.filepath": "/home/liu/Dropbox/workspace/s4nnc/nnc/Tensor.swift",
              "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>params</decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;</decl.var.type></decl.var.local>",
              "key.kind": "source.lang.swift.decl.var.local",
              "key.length": 37,
              "key.name": "params",
              "key.namelength": 6,
              "key.nameoffset": 36796,
              "key.offset": 36792,
              "key.parsed_declaration": "var params = ccv_nnc_tensor_param_t()",
              "key.parsed_scope.end": 1178,
              "key.parsed_scope.start": 1178,
              "key.typename": "<<error type>>",
              "key.typeusr": "$sXeD",
              "key.usr": "s:4main15toCTensorParamsyXeXeF6paramsL_Xevp"
            }
          ],
          "key.typename": "(DeviceKind, DataType, TensorFormat, [Int]) -> <<error type>>",
          "key.typeusr": "$syXeXecD",
          "key.usr": "s:4main15toCTensorParamsyXeXeF"
        }
      ]
    }
  }
]
