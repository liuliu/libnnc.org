{
  "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2704,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model<\/Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO<\/Type><\/Declaration>",
        "key.bodylength" : 679,
        "key.bodyoffset" : 42,
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Model.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model<\/ref.class>.<decl.name>Parameters<\/decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 708,
        "key.name" : "Model.Parameters",
        "key.namelength" : 16,
        "key.nameoffset" : 24,
        "key.offset" : 14,
        "key.parsed_declaration" : "extension Model.Parameters",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func copy(from parameters: <Type usr=\"s:4main5ModelC\">Model<\/Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 210
              }
            ],
            "key.bodylength" : 456,
            "key.bodyoffset" : 263,
            "key.doc.column" : 15,
            "key.doc.comment" : " Copy parameters from one model to another.\n\n - Parameter parameters: The parameters of another model, it must match the parameters copy to.",
            "key.doc.declaration" : "public func copy(from parameters: Model.Parameters)",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift\" line=\"9\" column=\"15\"><Name>copy(from:)<\/Name><USR>s:4main5ModelC10ParametersC4copy4fromyAE_tF<\/USR><Declaration>public func copy(from parameters: Model.Parameters)<\/Declaration><CommentParts><Abstract><Para>Copy parameters from one model to another.<\/Para><\/Abstract><Parameters><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The parameters of another model, it must match the parameters copy to.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 9,
            "key.doc.name" : "copy(from:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The parameters of another model, it must match the parameters copy to."
                  }
                ],
                "name" : "parameters"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 162,
            "key.docoffset" : 45,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 503,
            "key.name" : "copy(from:)",
            "key.namelength" : 39,
            "key.nameoffset" : 222,
            "key.offset" : 217,
            "key.parsed_declaration" : "public func copy(from parameters: Model.Parameters)",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 9,
            "key.substructure" : [

            ],
            "key.typename" : "(Model.Parameters) -> (Model.Parameters) -> ()",
            "key.typeusr" : "$s4fromy4main5ModelC10ParametersC_tcD",
            "key.usr" : "s:4main5ModelC10ParametersC4copy4fromyAE_tF"
          }
        ],
        "key.typename" : "Model.Parameters.Type",
        "key.typeusr" : "$s4main5ModelC10ParametersCmD",
        "key.usr" : "s:4main5ModelC10ParametersC"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model<\/Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO<\/Type><\/Declaration>",
        "key.bodylength" : 1161,
        "key.bodyoffset" : 752,
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Model.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model<\/ref.class>.<decl.name>Parameters<\/decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1190,
        "key.name" : "Model.Parameters",
        "key.namelength" : 16,
        "key.nameoffset" : 734,
        "key.offset" : 724,
        "key.parsed_declaration" : "extension Model.Parameters",
        "key.parsed_scope.end" : 58,
        "key.parsed_scope.start" : 27,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func lerp(_ weight: <Type usr=\"s:Sf\">Float<\/Type>, to parameters: <Type usr=\"s:4main5ModelC\">Model<\/Type>.<Type usr=\"s:4main5ModelC10ParametersC\">Parameters<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1093
              }
            ],
            "key.bodylength" : 750,
            "key.bodyoffset" : 1161,
            "key.doc.column" : 15,
            "key.doc.comment" : " Interpolate from current parameters to the another.\n\n parameters = (1 - weight) * parameters + weight * other\n\n - Parameter weight: How much the other parameter should weight, it must be between [0, 1].\n - Parameter parameters: The parameters of another model, it must match the parameters to update.",
            "key.doc.declaration" : "public func lerp(_ weight: Float, to parameters: Model.Parameters)",
            "key.doc.discussion" : [
              {
                "Para" : "parameters = (1 - weight) * parameters + weight * other"
              }
            ],
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift\" line=\"36\" column=\"15\"><Name>lerp(_:to:)<\/Name><USR>s:4main5ModelC10ParametersC4lerp_2toySf_AEtF<\/USR><Declaration>public func lerp(_ weight: Float, to parameters: Model.Parameters)<\/Declaration><CommentParts><Abstract><Para>Interpolate from current parameters to the another.<\/Para><\/Abstract><Parameters><Parameter><Name>weight<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>How much the other parameter should weight, it must be between [0, 1].<\/Para><\/Discussion><\/Parameter><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The parameters of another model, it must match the parameters to update.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>parameters = (1 - weight) * parameters + weight * other<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 36,
            "key.doc.name" : "lerp(_:to:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "How much the other parameter should weight, it must be between [0, 1]."
                  }
                ],
                "name" : "weight"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The parameters of another model, it must match the parameters to update."
                  }
                ],
                "name" : "parameters"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 335,
            "key.docoffset" : 755,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>lerp<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>weight<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class>.<ref.class usr=\"s:4main5ModelC10ParametersC\">Parameters<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 812,
            "key.name" : "lerp(_:to:)",
            "key.namelength" : 54,
            "key.nameoffset" : 1105,
            "key.offset" : 1100,
            "key.parsed_declaration" : "public func lerp(_ weight: Float, to parameters: Model.Parameters)",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 36,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var params: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>params<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 49,
                "key.name" : "params",
                "key.namelength" : 6,
                "key.nameoffset" : 1579,
                "key.offset" : 1575,
                "key.parsed_declaration" : "var params = CmdParamsFactory.factory.newParams()",
                "key.parsed_scope.end" : 51,
                "key.parsed_scope.start" : 51,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF6paramsL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cmd<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 58,
                "key.name" : "cmd",
                "key.namelength" : 3,
                "key.nameoffset" : 1724,
                "key.offset" : 1720,
                "key.parsed_declaration" : "let cmd = ccv_nnc_cmd(CCV_NNC_ADD_FORWARD, nil, params, 0)",
                "key.parsed_scope.end" : 54,
                "key.parsed_scope.start" : 54,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF3cmdL_Xevp"
              }
            ],
            "key.typename" : "(Model.Parameters) -> (Float, Model.Parameters) -> ()",
            "key.typeusr" : "$s_2toySf_4main5ModelC10ParametersCtcD",
            "key.usr" : "s:4main5ModelC10ParametersC4lerp_2toySf_AEtF"
          }
        ],
        "key.typename" : "Model.Parameters.Type",
        "key.typeusr" : "$s4main5ModelC10ParametersCmD",
        "key.usr" : "s:4main5ModelC10ParametersC"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class <Type usr=\"s:4main5ModelC\">Model<\/Type>.Parameters : <Type usr=\"s:4main5ModelC2IOC\">IO<\/Type><\/Declaration>",
        "key.bodylength" : 758,
        "key.bodyoffset" : 1944,
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Model.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <ref.class usr=\"s:4main5ModelC\">Model<\/ref.class>.<decl.name>Parameters<\/decl.name> : <ref.class usr=\"s:4main5ModelC2IOC\">IO<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 787,
        "key.name" : "Model.Parameters",
        "key.namelength" : 16,
        "key.nameoffset" : 1926,
        "key.offset" : 1916,
        "key.parsed_declaration" : "extension Model.Parameters",
        "key.parsed_scope.end" : 82,
        "key.parsed_scope.start" : 60,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func clamp(min: <Type usr=\"s:Sf\">Float<\/Type>? = nil, max: <Type usr=\"s:Sf\">Float<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2009
              }
            ],
            "key.bodylength" : 634,
            "key.bodyoffset" : 2066,
            "key.doc.column" : 15,
            "key.doc.comment" : "Clamp current parameters between two values.",
            "key.doc.declaration" : "public func clamp(min: Float? = nil, max: Float? = nil)",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift\" line=\"64\" column=\"15\"><Name>clamp(min:max:)<\/Name><USR>s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF<\/USR><Declaration>public func clamp(min: Float? = nil, max: Float? = nil)<\/Declaration><CommentParts><Abstract><Para>Clamp current parameters between two values.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 64,
            "key.doc.name" : "clamp(min:max:)",
            "key.doc.type" : "Function",
            "key.doclength" : 59,
            "key.docoffset" : 1947,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>clamp<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>min<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 685,
            "key.name" : "clamp(min:max:)",
            "key.namelength" : 43,
            "key.nameoffset" : 2021,
            "key.offset" : 2016,
            "key.parsed_declaration" : "public func clamp(min: Float? = nil, max: Float? = nil)",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 64,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var params: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>params<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 49,
                "key.name" : "params",
                "key.namelength" : 6,
                "key.nameoffset" : 2368,
                "key.offset" : 2364,
                "key.parsed_declaration" : "var params = CmdParamsFactory.factory.newParams()",
                "key.parsed_scope.end" : 74,
                "key.parsed_scope.start" : 74,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF6paramsL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let cmd: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/ModelIOAddons.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cmd<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 60,
                "key.name" : "cmd",
                "key.namelength" : 3,
                "key.nameoffset" : 2549,
                "key.offset" : 2545,
                "key.parsed_declaration" : "let cmd = ccv_nnc_cmd(CCV_NNC_CLAMP_FORWARD, nil, params, 0)",
                "key.parsed_scope.end" : 78,
                "key.parsed_scope.start" : 78,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF3cmdL_Xevp"
              }
            ],
            "key.typename" : "(Model.Parameters) -> (Float?, Float?) -> ()",
            "key.typeusr" : "$s3min3maxySfSg_ACtcD",
            "key.usr" : "s:4main5ModelC10ParametersC5clamp3min3maxySfSg_AItF"
          }
        ],
        "key.typename" : "Model.Parameters.Type",
        "key.typeusr" : "$s4main5ModelC10ParametersCmD",
        "key.usr" : "s:4main5ModelC10ParametersC"
      }
    ]
  }
}
