{
  "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 11722,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class Swimmer : <Type usr=\"s:4main9MuJoCoEnvP\">MuJoCoEnv<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 8144
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 8137
          }
        ],
        "key.bodylength" : 899,
        "key.bodyoffset" : 8176,
        "key.column" : 20,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 20,
        "key.doc.comment" : "### Description\nThis environment corresponds to the Swimmer environment described in Rémi Coulom's PhD thesis\n[\"Reinforcement Learning Using Neural Networks, with Applications to Motor Control\"](https:\/\/tel.archives-ouvertes.fr\/tel-00003985\/document).\nThe environment aims to increase the number of independent state and control\nvariables as compared to the classic control environments. The swimmers\nconsist of three or more segments ('***links***') and one less articulation\njoints ('***rotors***') - one rotor joint connecting exactly two links to\nform a linear chain. The swimmer is suspended in a two dimensional pool and\nalways starts in the same position (subject to some deviation drawn from an\nuniform distribution), and the goal is to move as fast as possible towards\nthe right by applying torque on the rotors and using the fluids friction.\n### Notes\nThe problem parameters are:\nProblem parameters:\n* *n*: number of body parts\n* *m<sub>i<\/sub>*: mass of part *i* (*i* ∈ {1...n})\n* *l<sub>i<\/sub>*: length of part *i* (*i* ∈ {1...n})\n* *k*: viscous-friction coefficient\nWhile the default environment has *n* = 3, *l<sub>i<\/sub>* = 0.1,\nand *k* = 0.1. It is possible to pass a custom MuJoCo XML file during construction to increase the\nnumber of links, or to tweak any of the parameters.\n### Action Space\nThe action space is a `Box(-1, 1, (2,), float32)`. An action represents the torques applied between *links*\n| Num | Action                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         |\n|-----|------------------------------------|-------------|-------------|----------------------------------|-------|--------------|\n| 0   | Torque applied on the first rotor  | -1          | 1           | motor1_rot                       | hinge | torque (N m) |\n| 1   | Torque applied on the second rotor | -1          | 1           | motor2_rot                       | hinge | torque (N m) |\n### Observation Space\nBy default, observations consists of:\n* θ<sub>i<\/sub>: angle of part *i* with respect to the *x* axis\n* θ<sub>i<\/sub>': its derivative with respect to time (angular velocity)\nIn the default case, observations do not include the x- and y-coordinates of the front tip. These may\nbe included by passing `exclude_current_positions_from_observation=False` during construction.\nThen, the observation space will have 10 dimensions where the first two dimensions\nrepresent the x- and y-coordinates of the front tip.\nRegardless of whether `exclude_current_positions_from_observation` was set to true or false, the x- and y-coordinates\nwill be returned in `info` with keys `\"x_position\"` and `\"y_position\"`, respectively.\nBy default, the observation is a `ndarray` with shape `(8,)` where the elements correspond to the following:\n| Num | Observation                          | Min  | Max | Name (in corresponding XML file) | Joint | Unit                     |\n| --- | ------------------------------------ | ---- | --- | -------------------------------- | ----- | ------------------------ |\n| 0   | angle of the front tip               | -Inf | Inf | free_body_rot                    | hinge | angle (rad)              |\n| 1   | angle of the first rotor             | -Inf | Inf | motor1_rot                       | hinge | angle (rad)              |\n| 2   | angle of the second rotor            | -Inf | Inf | motor2_rot                       | hinge | angle (rad)              |\n| 3   | velocity of the tip along the x-axis | -Inf | Inf | slider1                          | slide | velocity (m\/s)           |\n| 4   | velocity of the tip along the y-axis | -Inf | Inf | slider2                          | slide | velocity (m\/s)           |\n| 5   | angular velocity of front tip        | -Inf | Inf | free_body_rot                    | hinge | angular velocity (rad\/s) |\n| 6   | angular velocity of first rotor      | -Inf | Inf | motor1_rot                       | hinge | angular velocity (rad\/s) |\n| 7   | angular velocity of second rotor     | -Inf | Inf | motor2_rot                             | hinge | angular velocity (rad\/s) |\n### Rewards\nThe reward consists of two parts:\n- *forward_reward*: A reward of moving forward which is measured\nas *`forward_reward_weight` * (x-coordinate before action - x-coordinate after action)\/dt*. *dt* is\nthe time between actions and is dependent on the frame_skip parameter\n(default is 4), where the frametime is 0.01 - making the\ndefault *dt = 4 * 0.01 = 0.04*. This reward would be positive if the swimmer\nswims right as desired.\n- *ctrl_cost*: A cost for penalising the swimmer if it takes\nactions that are too large. It is measured as *`ctrl_cost_weight` *\nsum(action<sup>2<\/sup>)* where *`ctrl_cost_weight`* is a parameter set for the\ncontrol and has a default value of 1e-4\nThe total reward returned is ***reward*** *=* *forward_reward - ctrl_cost* and `info` will also contain the individual reward terms\n### Starting State\nAll observations start in state (0,0,0,0,0,0,0,0) with a Uniform noise in the range of [-`reset_noise_scale`, `reset_noise_scale`] is added to the initial state for stochasticity.\n### Episode End\nThe episode truncates when the episode length is greater than 1000.\n### Arguments\nNo additional arguments are currently supported in v2 and lower.\n```\ngym.make('Swimmer-v4')\n```\nv3 and v4 take gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc.\n```\nenv = gym.make('Swimmer-v4', ctrl_cost_weight=0.1, ....)\n```\n| Parameter                                    | Type      | Default         | Description                                                                                                                                                               |\n| -------------------------------------------- | --------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `xml_file`                                   | **str**   | `\"swimmer.xml\"` | Path to a MuJoCo model                                                                                                                                                    |\n| `forward_reward_weight`                      | **float** | `1.0`           | Weight for _forward_reward_ term (see section on reward)                                                                                                                  |\n| `ctrl_cost_weight`                           | **float** | `1e-4`          | Weight for _ctrl_cost_ term (see section on reward)                                                                                                                       |\n| `reset_noise_scale`                          | **float** | `0.1`           | Scale of random perturbations of initial position and velocity (see section on Starting State)                                                                            |\n| `exclude_current_positions_from_observation` | **bool**  | `True`          | Whether or not to omit the x- and y-coordinates from observations. Excluding the position can serve as an inductive bias to induce position-agnostic behavior in policies |\n### Version History\n* v4: all mujoco environments now use the mujoco bindings in mujoco>=2.1.3\n* v3: support for gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc. rgb rendering comes from tracking camera (so agent does not run away from screen)\n* v2: All continuous control environments now use mujoco_py >= 1.50\n* v1: max_time_steps raised to 1000 for robot based tasks. Added reward_threshold to environments.\n* v0: Initial versions release (1.0.0)",
        "key.doc.declaration" : "public final class Swimmer : MuJoCoEnv",
        "key.doc.discussion" : [
          {
            "Para" : "This environment corresponds to the Swimmer environment described in Rémi Coulom’s PhD thesis . The environment aims to increase the number of independent state and control variables as compared to the classic control environments. The swimmers consist of three or more segments (’’) and one less articulation joints (’’) - one rotor joint connecting exactly two links to form a linear chain. The swimmer is suspended in a two dimensional pool and always starts in the same position (subject to some deviation drawn from an uniform distribution), and the goal is to move as fast as possible towards the right by applying torque on the rotors and using the fluids friction."
          },
          {
            "Para" : "The problem parameters are: Problem parameters:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The action space is a `Box(-1, 1, (2,), float32)`. An action represents the torques applied between  | Num | Action                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         | |—–|————————————|———––|———––|–––––––––––––––––|—––|–––––––| | 0   | Torque applied on the first rotor  | -1          | 1           | motor1_rot                       | hinge | torque (N m) | | 1   | Torque applied on the second rotor | -1          | 1           | motor2_rot                       | hinge | torque (N m) |"
          },
          {
            "Para" : "By default, observations consists of:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The reward consists of two parts:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "All observations start in state (0,0,0,0,0,0,0,0) with a Uniform noise in the range of [-`reset_noise_scale`, `reset_noise_scale`] is added to the initial state for stochasticity."
          },
          {
            "Para" : "The episode truncates when the episode length is greater than 1000."
          },
          {
            "Para" : "No additional arguments are currently supported in v2 and lower."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "v3 and v4 take gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "| Parameter                                    | Type      | Default         | Description                                                                                                                                                               | | –––––––––––––––––––––– | ——— | ————— | ———————————————————————————————————————————————————————–– | | `xml_file`                                   |    | `\"swimmer.xml\"` | Path to a MuJoCo model                                                                                                                                                    | | `forward_reward_weight`                      |  | `1.0`           | Weight for  term (see section on reward)                                                                                                                  | | `ctrl_cost_weight`                           |  | `1e-4`          | Weight for  term (see section on reward)                                                                                                                       | | `reset_noise_scale`                          |  | `0.1`           | Scale of random perturbations of initial position and velocity (see section on Starting State)                                                                            | | `exclude_current_positions_from_observation` |   | `True`          | Whether or not to omit the x- and y-coordinates from observations. Excluding the position can serve as an inductive bias to induce position-agnostic behavior in policies |"
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift\" line=\"94\" column=\"20\"><Name>Swimmer<\/Name><USR>s:4main7SwimmerC<\/USR><Declaration>public final class Swimmer : MuJoCoEnv<\/Declaration><CommentParts><Discussion><rawHTML><![CDATA[<h3>]]><\/rawHTML>Description<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>This environment corresponds to the Swimmer environment described in Rémi Coulom’s PhD thesis <Link href=\"https:\/\/tel.archives-ouvertes.fr\/tel-00003985\/document\">“Reinforcement Learning Using Neural Networks, with Applications to Motor Control”<\/Link>. The environment aims to increase the number of independent state and control variables as compared to the classic control environments. The swimmers consist of three or more segments (’<emphasis><bold>links<\/bold><\/emphasis>’) and one less articulation joints (’<emphasis><bold>rotors<\/bold><\/emphasis>’) - one rotor joint connecting exactly two links to form a linear chain. The swimmer is suspended in a two dimensional pool and always starts in the same position (subject to some deviation drawn from an uniform distribution), and the goal is to move as fast as possible towards the right by applying torque on the rotors and using the fluids friction.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Notes<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The problem parameters are: Problem parameters:<\/Para><List-Bullet><Item><Para><emphasis>n<\/emphasis>: number of body parts<\/Para><\/Item><Item><Para><emphasis>m<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis>: mass of part <emphasis>i<\/emphasis> (<emphasis>i<\/emphasis> ∈ {1…n})<\/Para><\/Item><Item><Para><emphasis>l<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis>: length of part <emphasis>i<\/emphasis> (<emphasis>i<\/emphasis> ∈ {1…n})<\/Para><\/Item><Item><Para><emphasis>k<\/emphasis>: viscous-friction coefficient While the default environment has <emphasis>n<\/emphasis> = 3, <emphasis>l<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis> = 0.1, and <emphasis>k<\/emphasis> = 0.1. It is possible to pass a custom MuJoCo XML file during construction to increase the number of links, or to tweak any of the parameters.<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Action Space<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The action space is a <codeVoice>Box(-1, 1, (2,), float32)<\/codeVoice>. An action represents the torques applied between <emphasis>links<\/emphasis> | Num | Action                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         | |—–|————————————|———––|———––|–––––––––––––––––|—––|–––––––| | 0   | Torque applied on the first rotor  | -1          | 1           | motor1_rot                       | hinge | torque (N m) | | 1   | Torque applied on the second rotor | -1          | 1           | motor2_rot                       | hinge | torque (N m) |<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Observation Space<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>By default, observations consists of:<\/Para><List-Bullet><Item><Para>θ<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML>: angle of part <emphasis>i<\/emphasis> with respect to the <emphasis>x<\/emphasis> axis<\/Para><\/Item><Item><Para>θ<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML>’: its derivative with respect to time (angular velocity) In the default case, observations do not include the x- and y-coordinates of the front tip. These may be included by passing <codeVoice>exclude_current_positions_from_observation=False<\/codeVoice> during construction. Then, the observation space will have 10 dimensions where the first two dimensions represent the x- and y-coordinates of the front tip. Regardless of whether <codeVoice>exclude_current_positions_from_observation<\/codeVoice> was set to true or false, the x- and y-coordinates will be returned in <codeVoice>info<\/codeVoice> with keys <codeVoice>&quot;x_position&quot;<\/codeVoice> and <codeVoice>&quot;y_position&quot;<\/codeVoice>, respectively. By default, the observation is a <codeVoice>ndarray<\/codeVoice> with shape <codeVoice>(8,)<\/codeVoice> where the elements correspond to the following: | Num | Observation                          | Min  | Max | Name (in corresponding XML file) | Joint | Unit                     | | — | ———————————— | –– | — | –––––––––––––––– | —– | ———————— | | 0   | angle of the front tip               | -Inf | Inf | free_body_rot                    | hinge | angle (rad)              | | 1   | angle of the first rotor             | -Inf | Inf | motor1_rot                       | hinge | angle (rad)              | | 2   | angle of the second rotor            | -Inf | Inf | motor2_rot                       | hinge | angle (rad)              | | 3   | velocity of the tip along the x-axis | -Inf | Inf | slider1                          | slide | velocity (m\/s)           | | 4   | velocity of the tip along the y-axis | -Inf | Inf | slider2                          | slide | velocity (m\/s)           | | 5   | angular velocity of front tip        | -Inf | Inf | free_body_rot                    | hinge | angular velocity (rad\/s) | | 6   | angular velocity of first rotor      | -Inf | Inf | motor1_rot                       | hinge | angular velocity (rad\/s) | | 7   | angular velocity of second rotor     | -Inf | Inf | motor2_rot                             | hinge | angular velocity (rad\/s) |<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Rewards<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The reward consists of two parts:<\/Para><List-Bullet><Item><Para><emphasis>forward_reward<\/emphasis>: A reward of moving forward which is measured as <emphasis><codeVoice>forward_reward_weight<\/codeVoice> * (x-coordinate before action - x-coordinate after action)\/dt<\/emphasis>. <emphasis>dt<\/emphasis> is the time between actions and is dependent on the frame_skip parameter (default is 4), where the frametime is 0.01 - making the default <emphasis>dt = 4 * 0.01 = 0.04<\/emphasis>. This reward would be positive if the swimmer swims right as desired.<\/Para><\/Item><Item><Para><emphasis>ctrl_cost<\/emphasis>: A cost for penalising the swimmer if it takes actions that are too large. It is measured as <emphasis><codeVoice>ctrl_cost_weight<\/codeVoice> * sum(action<rawHTML><![CDATA[<sup>]]><\/rawHTML>2<rawHTML><![CDATA[<\/sup>]]><\/rawHTML>)<\/emphasis> where <emphasis><codeVoice>ctrl_cost_weight<\/codeVoice><\/emphasis> is a parameter set for the control and has a default value of 1e-4 The total reward returned is <emphasis><bold>reward<\/bold><\/emphasis> <emphasis>=<\/emphasis> <emphasis>forward_reward - ctrl_cost<\/emphasis> and <codeVoice>info<\/codeVoice> will also contain the individual reward terms<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Starting State<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>All observations start in state (0,0,0,0,0,0,0,0) with a Uniform noise in the range of [-<codeVoice>reset_noise_scale<\/codeVoice>, <codeVoice>reset_noise_scale<\/codeVoice>] is added to the initial state for stochasticity.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Episode End<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The episode truncates when the episode length is greater than 1000.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Arguments<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>No additional arguments are currently supported in v2 and lower.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[gym.make('Swimmer-v4')]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>v3 and v4 take gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[env = gym.make('Swimmer-v4', ctrl_cost_weight=0.1, ....)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>| Parameter                                    | Type      | Default         | Description                                                                                                                                                               | | –––––––––––––––––––––– | ——— | ————— | ———————————————————————————————————————————————————————–– | | <codeVoice>xml_file<\/codeVoice>                                   | <bold>str<\/bold>   | <codeVoice>&quot;swimmer.xml&quot;<\/codeVoice> | Path to a MuJoCo model                                                                                                                                                    | | <codeVoice>forward_reward_weight<\/codeVoice>                      | <bold>float<\/bold> | <codeVoice>1.0<\/codeVoice>           | Weight for <emphasis>forward_reward<\/emphasis> term (see section on reward)                                                                                                                  | | <codeVoice>ctrl_cost_weight<\/codeVoice>                           | <bold>float<\/bold> | <codeVoice>1e-4<\/codeVoice>          | Weight for <emphasis>ctrl_cost<\/emphasis> term (see section on reward)                                                                                                                       | | <codeVoice>reset_noise_scale<\/codeVoice>                          | <bold>float<\/bold> | <codeVoice>0.1<\/codeVoice>           | Scale of random perturbations of initial position and velocity (see section on Starting State)                                                                            | | <codeVoice>exclude_current_positions_from_observation<\/codeVoice> | <bold>bool<\/bold>  | <codeVoice>True<\/codeVoice>          | Whether or not to omit the x- and y-coordinates from observations. Excluding the position can serve as an inductive bias to induce position-agnostic behavior in policies |<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Version History<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para>v4: all mujoco environments now use the mujoco bindings in mujoco&gt;=2.1.3<\/Para><\/Item><Item><Para>v3: support for gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc. rgb rendering comes from tracking camera (so agent does not run away from screen)<\/Para><\/Item><Item><Para>v2: All continuous control environments now use mujoco_py &gt;= 1.50<\/Para><\/Item><Item><Para>v1: max_time_steps raised to 1000 for robot based tasks. Added reward_threshold to environments.<\/Para><\/Item><Item><Para>v0: Initial versions release (1.0.0)<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 94,
        "key.doc.name" : "Swimmer",
        "key.doc.type" : "Class",
        "key.doclength" : 8050,
        "key.docoffset" : 87,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 8165
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Swimmer<\/decl.name> : <ref.protocol usr=\"s:4main9MuJoCoEnvP\">MuJoCoEnv<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "MuJoCoEnv"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 926,
        "key.line" : 94,
        "key.modulename" : "main",
        "key.name" : "Swimmer",
        "key.namelength" : 7,
        "key.nameoffset" : 8156,
        "key.offset" : 8150,
        "key.parsed_declaration" : "public final class Swimmer: MuJoCoEnv",
        "key.parsed_scope.end" : 121,
        "key.parsed_scope.start" : 94,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let model: MjModel<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8179
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>model<\/decl.name>: <decl.var.type>MjModel<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.line" : 95,
            "key.modulename" : "main",
            "key.name" : "model",
            "key.namelength" : 5,
            "key.nameoffset" : 8190,
            "key.offset" : 8186,
            "key.parsed_declaration" : "public let model: MjModel",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 95,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main7SwimmerC5modelXevp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var data: MjData<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8207
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type>MjData<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.line" : 96,
            "key.modulename" : "main",
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 8218,
            "key.offset" : 8214,
            "key.parsed_declaration" : "public var data: MjData",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 96,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main7SwimmerC4dataXevp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let initData: MjData<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8234
              }
            ],
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>initData<\/decl.name>: <decl.var.type>MjData<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.line" : 98,
            "key.modulename" : "main",
            "key.name" : "initData",
            "key.namelength" : 8,
            "key.nameoffset" : 8246,
            "key.offset" : 8242,
            "key.parsed_declaration" : "private let initData: MjData",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 98,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main7SwimmerC8initData33_7B5A124BC1AE680412312ADA5D6A9719LLXevp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let forwardRewardWeight: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8265
              }
            ],
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>forwardRewardWeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 99,
            "key.modulename" : "main",
            "key.name" : "forwardRewardWeight",
            "key.namelength" : 19,
            "key.nameoffset" : 8277,
            "key.offset" : 8273,
            "key.parsed_declaration" : "private let forwardRewardWeight: Double",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 99,
            "key.reusingastcontext" : false,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:4main7SwimmerC19forwardRewardWeight33_7B5A124BC1AE680412312ADA5D6A9719LLSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let ctrlCostWeight: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8307
              }
            ],
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ctrlCostWeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 100,
            "key.modulename" : "main",
            "key.name" : "ctrlCostWeight",
            "key.namelength" : 14,
            "key.nameoffset" : 8319,
            "key.offset" : 8315,
            "key.parsed_declaration" : "private let ctrlCostWeight: Double",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 100,
            "key.reusingastcontext" : false,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:4main7SwimmerC14ctrlCostWeight33_7B5A124BC1AE680412312ADA5D6A9719LLSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let resetNoiseScale: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8344
              }
            ],
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>resetNoiseScale<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 101,
            "key.modulename" : "main",
            "key.name" : "resetNoiseScale",
            "key.namelength" : 15,
            "key.nameoffset" : 8356,
            "key.offset" : 8352,
            "key.parsed_declaration" : "private let resetNoiseScale: Double",
            "key.parsed_scope.end" : 101,
            "key.parsed_scope.start" : 101,
            "key.reusingastcontext" : false,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:4main7SwimmerC15resetNoiseScale33_7B5A124BC1AE680412312ADA5D6A9719LLSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var sfmt: <Type usr=\"s:4main4SFMTV\">SFMT<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8383
              }
            ],
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sfmt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4main4SFMTV\">SFMT<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 14,
            "key.line" : 103,
            "key.modulename" : "main",
            "key.name" : "sfmt",
            "key.namelength" : 4,
            "key.nameoffset" : 8395,
            "key.offset" : 8391,
            "key.parsed_declaration" : "private var sfmt: SFMT",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 103,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "SFMT",
            "key.typeusr" : "$s4main4SFMTVD",
            "key.usr" : "s:4main7SwimmerC4sfmt33_7B5A124BC1AE680412312ADA5D6A9719LLAA4SFMTVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(forwardRewardWeight: <Type usr=\"s:Sd\">Double<\/Type> = 1.0, ctrlCostWeight: <Type usr=\"s:Sd\">Double<\/Type> = 1e-4, resetNoiseScale: <Type usr=\"s:Sd\">Double<\/Type> = 0.1) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8409
              }
            ],
            "key.bodylength" : 539,
            "key.bodyoffset" : 8534,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>forwardRewardWeight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type> = 1.0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ctrlCostWeight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type> = 1e-4<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>resetNoiseScale<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type> = 0.1<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 658,
            "key.line" : 105,
            "key.modulename" : "main",
            "key.name" : "init(forwardRewardWeight:ctrlCostWeight:resetNoiseScale:)",
            "key.namelength" : 109,
            "key.nameoffset" : 8416,
            "key.offset" : 8416,
            "key.parsed_declaration" : "public init(\n  forwardRewardWeight: Double = 1.0, ctrlCostWeight: Double = 1e-4, resetNoiseScale: Double = 0.1\n) throws",
            "key.parsed_scope.end" : 120,
            "key.parsed_scope.start" : 105,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var g: <Type usr=\"s:s27SystemRandomNumberGeneratorV\">SystemRandomNumberGenerator<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>g<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s27SystemRandomNumberGeneratorV\">SystemRandomNumberGenerator<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.line" : 115,
                "key.modulename" : "main",
                "key.name" : "g",
                "key.namelength" : 1,
                "key.nameoffset" : 8870,
                "key.offset" : 8866,
                "key.parsed_declaration" : "var g = SystemRandomNumberGenerator()",
                "key.parsed_scope.end" : 115,
                "key.parsed_scope.start" : 115,
                "key.reusingastcontext" : false,
                "key.typename" : "SystemRandomNumberGenerator",
                "key.typeusr" : "$ss27SystemRandomNumberGeneratorVD",
                "key.usr" : "s:4main7SwimmerC19forwardRewardWeight08ctrlCostE015resetNoiseScaleACSd_S2dtKcfc1gL_s27SystemRandomNumberGeneratorVvp"
              }
            ],
            "key.typename" : "(Swimmer.Type) -> (Double, Double, Double) throws -> Swimmer",
            "key.typeusr" : "$s19forwardRewardWeight08ctrlCostC015resetNoiseScale4main7SwimmerCSd_S2dtKcD",
            "key.usr" : "s:4main7SwimmerC19forwardRewardWeight08ctrlCostE015resetNoiseScaleACSd_S2dtKcfc"
          }
        ],
        "key.typename" : "Swimmer.Type",
        "key.typeusr" : "$s4main7SwimmerCmD",
        "key.usr" : "s:4main7SwimmerC"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class Swimmer : <Type usr=\"s:4main9MuJoCoEnvP\">MuJoCoEnv<\/Type><\/Declaration>",
        "key.bodylength" : 2618,
        "key.bodyoffset" : 9102,
        "key.column" : 20,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Swimmer : MuJoCoEnv",
        "key.doc.discussion" : [
          {
            "Para" : "This environment corresponds to the Swimmer environment described in Rémi Coulom’s PhD thesis . The environment aims to increase the number of independent state and control variables as compared to the classic control environments. The swimmers consist of three or more segments (’’) and one less articulation joints (’’) - one rotor joint connecting exactly two links to form a linear chain. The swimmer is suspended in a two dimensional pool and always starts in the same position (subject to some deviation drawn from an uniform distribution), and the goal is to move as fast as possible towards the right by applying torque on the rotors and using the fluids friction."
          },
          {
            "Para" : "The problem parameters are: Problem parameters:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The action space is a `Box(-1, 1, (2,), float32)`. An action represents the torques applied between  | Num | Action                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         | |—–|————————————|———––|———––|–––––––––––––––––|—––|–––––––| | 0   | Torque applied on the first rotor  | -1          | 1           | motor1_rot                       | hinge | torque (N m) | | 1   | Torque applied on the second rotor | -1          | 1           | motor2_rot                       | hinge | torque (N m) |"
          },
          {
            "Para" : "By default, observations consists of:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The reward consists of two parts:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "All observations start in state (0,0,0,0,0,0,0,0) with a Uniform noise in the range of [-`reset_noise_scale`, `reset_noise_scale`] is added to the initial state for stochasticity."
          },
          {
            "Para" : "The episode truncates when the episode length is greater than 1000."
          },
          {
            "Para" : "No additional arguments are currently supported in v2 and lower."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "v3 and v4 take gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "| Parameter                                    | Type      | Default         | Description                                                                                                                                                               | | –––––––––––––––––––––– | ——— | ————— | ———————————————————————————————————————————————————————–– | | `xml_file`                                   |    | `\"swimmer.xml\"` | Path to a MuJoCo model                                                                                                                                                    | | `forward_reward_weight`                      |  | `1.0`           | Weight for  term (see section on reward)                                                                                                                  | | `ctrl_cost_weight`                           |  | `1e-4`          | Weight for  term (see section on reward)                                                                                                                       | | `reset_noise_scale`                          |  | `0.1`           | Scale of random perturbations of initial position and velocity (see section on Starting State)                                                                            | | `exclude_current_positions_from_observation` |   | `True`          | Whether or not to omit the x- and y-coordinates from observations. Excluding the position can serve as an inductive bias to induce position-agnostic behavior in policies |"
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift\" line=\"94\" column=\"20\"><Name>Swimmer<\/Name><USR>s:4main7SwimmerC<\/USR><Declaration>public final class Swimmer : MuJoCoEnv<\/Declaration><CommentParts><Discussion><rawHTML><![CDATA[<h3>]]><\/rawHTML>Description<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>This environment corresponds to the Swimmer environment described in Rémi Coulom’s PhD thesis <Link href=\"https:\/\/tel.archives-ouvertes.fr\/tel-00003985\/document\">“Reinforcement Learning Using Neural Networks, with Applications to Motor Control”<\/Link>. The environment aims to increase the number of independent state and control variables as compared to the classic control environments. The swimmers consist of three or more segments (’<emphasis><bold>links<\/bold><\/emphasis>’) and one less articulation joints (’<emphasis><bold>rotors<\/bold><\/emphasis>’) - one rotor joint connecting exactly two links to form a linear chain. The swimmer is suspended in a two dimensional pool and always starts in the same position (subject to some deviation drawn from an uniform distribution), and the goal is to move as fast as possible towards the right by applying torque on the rotors and using the fluids friction.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Notes<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The problem parameters are: Problem parameters:<\/Para><List-Bullet><Item><Para><emphasis>n<\/emphasis>: number of body parts<\/Para><\/Item><Item><Para><emphasis>m<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis>: mass of part <emphasis>i<\/emphasis> (<emphasis>i<\/emphasis> ∈ {1…n})<\/Para><\/Item><Item><Para><emphasis>l<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis>: length of part <emphasis>i<\/emphasis> (<emphasis>i<\/emphasis> ∈ {1…n})<\/Para><\/Item><Item><Para><emphasis>k<\/emphasis>: viscous-friction coefficient While the default environment has <emphasis>n<\/emphasis> = 3, <emphasis>l<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML><\/emphasis> = 0.1, and <emphasis>k<\/emphasis> = 0.1. It is possible to pass a custom MuJoCo XML file during construction to increase the number of links, or to tweak any of the parameters.<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Action Space<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The action space is a <codeVoice>Box(-1, 1, (2,), float32)<\/codeVoice>. An action represents the torques applied between <emphasis>links<\/emphasis> | Num | Action                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         | |—–|————————————|———––|———––|–––––––––––––––––|—––|–––––––| | 0   | Torque applied on the first rotor  | -1          | 1           | motor1_rot                       | hinge | torque (N m) | | 1   | Torque applied on the second rotor | -1          | 1           | motor2_rot                       | hinge | torque (N m) |<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Observation Space<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>By default, observations consists of:<\/Para><List-Bullet><Item><Para>θ<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML>: angle of part <emphasis>i<\/emphasis> with respect to the <emphasis>x<\/emphasis> axis<\/Para><\/Item><Item><Para>θ<rawHTML><![CDATA[<sub>]]><\/rawHTML>i<rawHTML><![CDATA[<\/sub>]]><\/rawHTML>’: its derivative with respect to time (angular velocity) In the default case, observations do not include the x- and y-coordinates of the front tip. These may be included by passing <codeVoice>exclude_current_positions_from_observation=False<\/codeVoice> during construction. Then, the observation space will have 10 dimensions where the first two dimensions represent the x- and y-coordinates of the front tip. Regardless of whether <codeVoice>exclude_current_positions_from_observation<\/codeVoice> was set to true or false, the x- and y-coordinates will be returned in <codeVoice>info<\/codeVoice> with keys <codeVoice>&quot;x_position&quot;<\/codeVoice> and <codeVoice>&quot;y_position&quot;<\/codeVoice>, respectively. By default, the observation is a <codeVoice>ndarray<\/codeVoice> with shape <codeVoice>(8,)<\/codeVoice> where the elements correspond to the following: | Num | Observation                          | Min  | Max | Name (in corresponding XML file) | Joint | Unit                     | | — | ———————————— | –– | — | –––––––––––––––– | —– | ———————— | | 0   | angle of the front tip               | -Inf | Inf | free_body_rot                    | hinge | angle (rad)              | | 1   | angle of the first rotor             | -Inf | Inf | motor1_rot                       | hinge | angle (rad)              | | 2   | angle of the second rotor            | -Inf | Inf | motor2_rot                       | hinge | angle (rad)              | | 3   | velocity of the tip along the x-axis | -Inf | Inf | slider1                          | slide | velocity (m\/s)           | | 4   | velocity of the tip along the y-axis | -Inf | Inf | slider2                          | slide | velocity (m\/s)           | | 5   | angular velocity of front tip        | -Inf | Inf | free_body_rot                    | hinge | angular velocity (rad\/s) | | 6   | angular velocity of first rotor      | -Inf | Inf | motor1_rot                       | hinge | angular velocity (rad\/s) | | 7   | angular velocity of second rotor     | -Inf | Inf | motor2_rot                             | hinge | angular velocity (rad\/s) |<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Rewards<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The reward consists of two parts:<\/Para><List-Bullet><Item><Para><emphasis>forward_reward<\/emphasis>: A reward of moving forward which is measured as <emphasis><codeVoice>forward_reward_weight<\/codeVoice> * (x-coordinate before action - x-coordinate after action)\/dt<\/emphasis>. <emphasis>dt<\/emphasis> is the time between actions and is dependent on the frame_skip parameter (default is 4), where the frametime is 0.01 - making the default <emphasis>dt = 4 * 0.01 = 0.04<\/emphasis>. This reward would be positive if the swimmer swims right as desired.<\/Para><\/Item><Item><Para><emphasis>ctrl_cost<\/emphasis>: A cost for penalising the swimmer if it takes actions that are too large. It is measured as <emphasis><codeVoice>ctrl_cost_weight<\/codeVoice> * sum(action<rawHTML><![CDATA[<sup>]]><\/rawHTML>2<rawHTML><![CDATA[<\/sup>]]><\/rawHTML>)<\/emphasis> where <emphasis><codeVoice>ctrl_cost_weight<\/codeVoice><\/emphasis> is a parameter set for the control and has a default value of 1e-4 The total reward returned is <emphasis><bold>reward<\/bold><\/emphasis> <emphasis>=<\/emphasis> <emphasis>forward_reward - ctrl_cost<\/emphasis> and <codeVoice>info<\/codeVoice> will also contain the individual reward terms<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Starting State<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>All observations start in state (0,0,0,0,0,0,0,0) with a Uniform noise in the range of [-<codeVoice>reset_noise_scale<\/codeVoice>, <codeVoice>reset_noise_scale<\/codeVoice>] is added to the initial state for stochasticity.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Episode End<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>The episode truncates when the episode length is greater than 1000.<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Arguments<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><Para>No additional arguments are currently supported in v2 and lower.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[gym.make('Swimmer-v4')]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>v3 and v4 take gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[env = gym.make('Swimmer-v4', ctrl_cost_weight=0.1, ....)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>| Parameter                                    | Type      | Default         | Description                                                                                                                                                               | | –––––––––––––––––––––– | ——— | ————— | ———————————————————————————————————————————————————————–– | | <codeVoice>xml_file<\/codeVoice>                                   | <bold>str<\/bold>   | <codeVoice>&quot;swimmer.xml&quot;<\/codeVoice> | Path to a MuJoCo model                                                                                                                                                    | | <codeVoice>forward_reward_weight<\/codeVoice>                      | <bold>float<\/bold> | <codeVoice>1.0<\/codeVoice>           | Weight for <emphasis>forward_reward<\/emphasis> term (see section on reward)                                                                                                                  | | <codeVoice>ctrl_cost_weight<\/codeVoice>                           | <bold>float<\/bold> | <codeVoice>1e-4<\/codeVoice>          | Weight for <emphasis>ctrl_cost<\/emphasis> term (see section on reward)                                                                                                                       | | <codeVoice>reset_noise_scale<\/codeVoice>                          | <bold>float<\/bold> | <codeVoice>0.1<\/codeVoice>           | Scale of random perturbations of initial position and velocity (see section on Starting State)                                                                            | | <codeVoice>exclude_current_positions_from_observation<\/codeVoice> | <bold>bool<\/bold>  | <codeVoice>True<\/codeVoice>          | Whether or not to omit the x- and y-coordinates from observations. Excluding the position can serve as an inductive bias to induce position-agnostic behavior in policies |<\/Para><rawHTML><![CDATA[<h3>]]><\/rawHTML>Version History<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para>v4: all mujoco environments now use the mujoco bindings in mujoco&gt;=2.1.3<\/Para><\/Item><Item><Para>v3: support for gym.make kwargs such as xml_file, ctrl_cost_weight, reset_noise_scale etc. rgb rendering comes from tracking camera (so agent does not run away from screen)<\/Para><\/Item><Item><Para>v2: All continuous control environments now use mujoco_py &gt;= 1.50<\/Para><\/Item><Item><Para>v1: max_time_steps raised to 1000 for robot based tasks. Added reward_threshold to environments.<\/Para><\/Item><Item><Para>v0: Initial versions release (1.0.0)<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 94,
        "key.doc.name" : "Swimmer",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 3,
            "key.offset" : 9097
          }
        ],
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Swimmer<\/decl.name> : <ref.protocol usr=\"s:4main9MuJoCoEnvP\">MuJoCoEnv<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Env"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2643,
        "key.line" : 94,
        "key.modulename" : "main",
        "key.name" : "Swimmer",
        "key.namelength" : 7,
        "key.nameoffset" : 9088,
        "key.offset" : 9078,
        "key.parsed_declaration" : "extension Swimmer: Env",
        "key.parsed_scope.end" : 199,
        "key.parsed_scope.start" : 123,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias ActType = Tensor&lt;Float64&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9105
              }
            ],
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>ActType<\/decl.name> = Tensor&lt;Float64&gt;<\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 35,
            "key.line" : 124,
            "key.modulename" : "main",
            "key.name" : "ActType",
            "key.namelength" : 7,
            "key.nameoffset" : 9122,
            "key.offset" : 9112,
            "key.parsed_declaration" : "public typealias ActType = Tensor<Float64>",
            "key.parsed_scope.end" : 124,
            "key.parsed_scope.start" : 124,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4main7SwimmerC7ActTypea\">ActType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main7SwimmerC7ActTypea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias ObsType = Tensor&lt;Float64&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9150
              }
            ],
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>ObsType<\/decl.name> = Tensor&lt;Float64&gt;<\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 35,
            "key.line" : 125,
            "key.modulename" : "main",
            "key.name" : "ObsType",
            "key.namelength" : 7,
            "key.nameoffset" : 9167,
            "key.offset" : 9157,
            "key.parsed_declaration" : "public typealias ObsType = Tensor<Float64>",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 125,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:4main7SwimmerC7ObsTypea\">ObsType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main7SwimmerC7ObsTypea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias RewardType = <Type usr=\"s:Sf\">Float<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9195
              }
            ],
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>RewardType<\/decl.name> = <ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 28,
            "key.line" : 126,
            "key.modulename" : "main",
            "key.name" : "RewardType",
            "key.namelength" : 10,
            "key.nameoffset" : 9212,
            "key.offset" : 9202,
            "key.parsed_declaration" : "public typealias RewardType = Float",
            "key.parsed_scope.end" : 126,
            "key.parsed_scope.start" : 126,
            "key.reusingastcontext" : false,
            "key.typename" : "Float.Type",
            "key.typeusr" : "$sSfmD",
            "key.usr" : "s:4main7SwimmerC10RewardTypea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias TerminatedType = <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9233
              }
            ],
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>TerminatedType<\/decl.name> = <ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 31,
            "key.line" : 127,
            "key.modulename" : "main",
            "key.name" : "TerminatedType",
            "key.namelength" : 14,
            "key.nameoffset" : 9250,
            "key.offset" : 9240,
            "key.parsed_declaration" : "public typealias TerminatedType = Bool",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 127,
            "key.reusingastcontext" : false,
            "key.typename" : "Bool.Type",
            "key.typeusr" : "$sSbmD",
            "key.usr" : "s:4main7SwimmerC14TerminatedTypea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func observations() -&gt; Tensor&lt;Float64&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 9275
              }
            ],
            "key.bodylength" : 178,
            "key.bodyoffset" : 9323,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>observations<\/decl.name>() -&gt; <decl.function.returntype>Tensor&lt;Float64&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 219,
            "key.line" : 129,
            "key.modulename" : "main",
            "key.name" : "observations()",
            "key.namelength" : 14,
            "key.nameoffset" : 9288,
            "key.offset" : 9283,
            "key.parsed_declaration" : "private func observations() -> Tensor<Float64>",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 129,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let qpos: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>qpos<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.line" : 130,
                "key.modulename" : "main",
                "key.name" : "qpos",
                "key.namelength" : 4,
                "key.nameoffset" : 9332,
                "key.offset" : 9328,
                "key.parsed_declaration" : "let qpos = data.qpos",
                "key.parsed_scope.end" : 130,
                "key.parsed_scope.start" : 130,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC12observations33_7B5A124BC1AE680412312ADA5D6A9719LLyXeXeF4qposL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let qvel: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>qvel<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.line" : 131,
                "key.modulename" : "main",
                "key.name" : "qvel",
                "key.namelength" : 4,
                "key.nameoffset" : 9357,
                "key.offset" : 9353,
                "key.parsed_declaration" : "let qvel = data.qvel",
                "key.parsed_scope.end" : 131,
                "key.parsed_scope.start" : 131,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC12observations33_7B5A124BC1AE680412312ADA5D6A9719LLyXeXeF4qvelL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>var tensor: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>tensor<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.line" : 132,
                "key.modulename" : "main",
                "key.name" : "tensor",
                "key.namelength" : 6,
                "key.nameoffset" : 9382,
                "key.offset" : 9378,
                "key.parsed_declaration" : "var tensor = Tensor<Float64>(.CPU, .C(8))",
                "key.parsed_scope.end" : 132,
                "key.parsed_scope.start" : 132,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC12observations33_7B5A124BC1AE680412312ADA5D6A9719LLyXeXeF6tensorL_Xevp"
              }
            ],
            "key.typename" : "(Swimmer) -> () -> <<error type>>",
            "key.typeusr" : "$syXeXecD",
            "key.usr" : "s:4main7SwimmerC12observations33_7B5A124BC1AE680412312ADA5D6A9719LLyXeXeF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func step(action: ActType) -&gt; (ObsType, <Type usr=\"s:4main7SwimmerC10RewardTypea\">RewardType<\/Type>, <Type usr=\"s:4main7SwimmerC14TerminatedTypea\">TerminatedType<\/Type>, [<Type usr=\"s:SS\">String<\/Type> : Any])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9506
              }
            ],
            "key.bodylength" : 1296,
            "key.bodyoffset" : 9597,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>step<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>action<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>ActType<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type>ObsType<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.typealias usr=\"s:4main7SwimmerC10RewardTypea\">RewardType<\/ref.typealias><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.typealias usr=\"s:4main7SwimmerC14TerminatedTypea\">TerminatedType<\/ref.typealias><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1381,
            "key.line" : 138,
            "key.modulename" : "main",
            "key.name" : "step(action:)",
            "key.namelength" : 21,
            "key.nameoffset" : 9518,
            "key.offset" : 9513,
            "key.parsed_declaration" : "public func step(action: ActType) -> (ObsType, RewardType, TerminatedType, [String: Any])",
            "key.parsed_scope.end" : 174,
            "key.parsed_scope.start" : 138,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let qpos: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>qpos<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.line" : 139,
                "key.modulename" : "main",
                "key.name" : "qpos",
                "key.namelength" : 4,
                "key.nameoffset" : 9606,
                "key.offset" : 9602,
                "key.parsed_declaration" : "let qpos = data.qpos",
                "key.parsed_scope.end" : 139,
                "key.parsed_scope.start" : 139,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF4qposL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let xyPositionBefore: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>xyPositionBefore<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.line" : 140,
                "key.modulename" : "main",
                "key.name" : "xyPositionBefore",
                "key.namelength" : 16,
                "key.nameoffset" : 9631,
                "key.offset" : 9627,
                "key.parsed_declaration" : "let xyPositionBefore = (qpos[0], qpos[1])",
                "key.parsed_scope.end" : 140,
                "key.parsed_scope.start" : 140,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF16xyPositionBeforeL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let xyPositionAfter: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>xyPositionAfter<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 40,
                "key.line" : 149,
                "key.modulename" : "main",
                "key.name" : "xyPositionAfter",
                "key.namelength" : 15,
                "key.nameoffset" : 9984,
                "key.offset" : 9980,
                "key.parsed_declaration" : "let xyPositionAfter = (qpos[0], qpos[1])",
                "key.parsed_scope.end" : 149,
                "key.parsed_scope.start" : 149,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF15xyPositionAfterL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let dt: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>dt<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 31,
                "key.line" : 150,
                "key.modulename" : "main",
                "key.name" : "dt",
                "key.namelength" : 2,
                "key.nameoffset" : 10029,
                "key.offset" : 10025,
                "key.parsed_declaration" : "let dt = model.opt.timestep * 4",
                "key.parsed_scope.end" : 150,
                "key.parsed_scope.start" : 150,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF2dtL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let xyVelocity: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>xyVelocity<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 123,
                "key.line" : 151,
                "key.modulename" : "main",
                "key.name" : "xyVelocity",
                "key.namelength" : 10,
                "key.nameoffset" : 10065,
                "key.offset" : 10061,
                "key.parsed_declaration" : "let xyVelocity = (\n  (xyPositionAfter.0 - xyPositionBefore.0) \/ dt, (xyPositionAfter.1 - xyPositionBefore.1) \/ dt\n)",
                "key.parsed_scope.end" : 151,
                "key.parsed_scope.start" : 151,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF10xyVelocityL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let forwardReward: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>forwardReward<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 54,
                "key.line" : 154,
                "key.modulename" : "main",
                "key.name" : "forwardReward",
                "key.namelength" : 13,
                "key.nameoffset" : 10193,
                "key.offset" : 10189,
                "key.parsed_declaration" : "let forwardReward = forwardRewardWeight * xyVelocity.0",
                "key.parsed_scope.end" : 154,
                "key.parsed_scope.start" : 154,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF13forwardRewardL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>var ctrlCost: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>ctrlCost<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.line" : 155,
                "key.modulename" : "main",
                "key.name" : "ctrlCost",
                "key.namelength" : 8,
                "key.nameoffset" : 10252,
                "key.offset" : 10248,
                "key.parsed_declaration" : "var ctrlCost: Double = 0",
                "key.parsed_scope.end" : 155,
                "key.parsed_scope.start" : 155,
                "key.reusingastcontext" : false,
                "key.typename" : "Double",
                "key.typeusr" : "$sSdD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF8ctrlCostL_Sdvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let obs: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>obs<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.line" : 160,
                "key.modulename" : "main",
                "key.name" : "obs",
                "key.namelength" : 3,
                "key.nameoffset" : 10387,
                "key.offset" : 10383,
                "key.parsed_declaration" : "let obs = observations()",
                "key.parsed_scope.end" : 160,
                "key.parsed_scope.start" : 160,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF3obsL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let reward: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reward<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 44,
                "key.line" : 161,
                "key.modulename" : "main",
                "key.name" : "reward",
                "key.namelength" : 6,
                "key.nameoffset" : 10416,
                "key.offset" : 10412,
                "key.parsed_declaration" : "let reward = Float(forwardReward - ctrlCost)",
                "key.parsed_scope.end" : 161,
                "key.parsed_scope.start" : 161,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF6rewardL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let info: [<Type usr=\"s:SS\">String<\/Type> : Any]<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>info<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 391,
                "key.line" : 162,
                "key.modulename" : "main",
                "key.name" : "info",
                "key.namelength" : 4,
                "key.nameoffset" : 10465,
                "key.offset" : 10461,
                "key.parsed_declaration" : "let info: [String: Any] = [\n  \"reward_forward\": forwardReward,\n  \"reward_ctrl\": -ctrlCost,\n  \"x_position\": xyPositionAfter.0,\n  \"y_position\": xyPositionAfter.1,\n  \"distance_from_origin\":\n    (xyPositionAfter.0 * xyPositionAfter.0 + xyPositionAfter.1 * xyPositionAfter.1)\n    .squareRoot(),\n  \"x_velocity\": xyVelocity.0,\n  \"y_velocity\": xyVelocity.1,\n]",
                "key.parsed_scope.end" : 162,
                "key.parsed_scope.start" : 162,
                "key.reusingastcontext" : false,
                "key.typename" : "[String : Any]",
                "key.typeusr" : "$sSDySSypGD",
                "key.usr" : "s:4main7SwimmerC4stepyXeXeF4infoL_SDySSypGvp"
              }
            ],
            "key.typename" : "(Swimmer) -> (<<error type>>) -> <<error type>>",
            "key.typeusr" : "$syXeXecD",
            "key.usr" : "s:4main7SwimmerC4stepyXeXeF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func reset(seed: <Type usr=\"s:Si\">Int<\/Type>?) -&gt; (ObsType, [<Type usr=\"s:SS\">String<\/Type> : Any])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10898
              }
            ],
            "key.bodylength" : 575,
            "key.bodyoffset" : 10957,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>reset<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>seed<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type>ObsType<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 628,
            "key.line" : 176,
            "key.modulename" : "main",
            "key.name" : "reset(seed:)",
            "key.namelength" : 17,
            "key.nameoffset" : 10910,
            "key.offset" : 10905,
            "key.parsed_declaration" : "public func reset(seed: Int?) -> (ObsType, [String: Any])",
            "key.parsed_scope.end" : 194,
            "key.parsed_scope.start" : 176,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let initQpos: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>initQpos<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.line" : 177,
                "key.modulename" : "main",
                "key.name" : "initQpos",
                "key.namelength" : 8,
                "key.nameoffset" : 10966,
                "key.offset" : 10962,
                "key.parsed_declaration" : "let initQpos = initData.qpos",
                "key.parsed_scope.end" : 177,
                "key.parsed_scope.start" : 177,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC5resetyXeXeF8initQposL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let initQvel: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>initQvel<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.line" : 178,
                "key.modulename" : "main",
                "key.name" : "initQvel",
                "key.namelength" : 8,
                "key.nameoffset" : 10999,
                "key.offset" : 10995,
                "key.parsed_declaration" : "let initQvel = initData.qvel",
                "key.parsed_scope.end" : 178,
                "key.parsed_scope.start" : 178,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC5resetyXeXeF8initQvelL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>var qpos: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>qpos<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.line" : 179,
                "key.modulename" : "main",
                "key.name" : "qpos",
                "key.namelength" : 4,
                "key.nameoffset" : 11032,
                "key.offset" : 11028,
                "key.parsed_declaration" : "var qpos = data.qpos",
                "key.parsed_scope.end" : 179,
                "key.parsed_scope.start" : 179,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC5resetyXeXeF4qposL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>var qvel: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>qvel<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.line" : 180,
                "key.modulename" : "main",
                "key.name" : "qvel",
                "key.namelength" : 4,
                "key.nameoffset" : 11057,
                "key.offset" : 11053,
                "key.parsed_declaration" : "var qvel = data.qvel",
                "key.parsed_scope.end" : 180,
                "key.parsed_scope.start" : 180,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC5resetyXeXeF4qvelL_Xevp"
              },
              {
                "key.annotated_decl" : "<Declaration>let obs: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>obs<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.line" : 192,
                "key.modulename" : "main",
                "key.name" : "obs",
                "key.namelength" : 3,
                "key.nameoffset" : 11487,
                "key.offset" : 11483,
                "key.parsed_declaration" : "let obs = observations()",
                "key.parsed_scope.end" : 192,
                "key.parsed_scope.start" : 192,
                "key.reusingastcontext" : false,
                "key.typename" : "<<error type>>",
                "key.typeusr" : "$sXeD",
                "key.usr" : "s:4main7SwimmerC5resetyXeXeF3obsL_Xevp"
              }
            ],
            "key.typename" : "(Swimmer) -> (Int?) -> <<error type>>",
            "key.typeusr" : "$syXeXecD",
            "key.usr" : "s:4main7SwimmerC5resetyXeXeF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var rewardThreshold: <Type usr=\"s:Sf\">Float<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11537
              }
            ],
            "key.bodylength" : 5,
            "key.bodyoffset" : 11579,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rewardThreshold<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 41,
            "key.line" : 196,
            "key.modulename" : "main",
            "key.name" : "rewardThreshold",
            "key.namelength" : 15,
            "key.nameoffset" : 11555,
            "key.offset" : 11544,
            "key.parsed_declaration" : "public static var rewardThreshold: Float",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 196,
            "key.reusingastcontext" : false,
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:4main7SwimmerC15rewardThresholdSfvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var actionSpace: [<Type usr=\"s:SN\">ClosedRange<\/Type>&lt;<Type usr=\"s:Sf\">Float<\/Type>&gt;] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11588
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 11641,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>actionSpace<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SN\">ClosedRange<\/ref.struct>&lt;<ref.struct usr=\"s:Sf\">Float<\/ref.struct>&gt;]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 83,
            "key.line" : 197,
            "key.modulename" : "main",
            "key.name" : "actionSpace",
            "key.namelength" : 11,
            "key.nameoffset" : 11606,
            "key.offset" : 11595,
            "key.parsed_declaration" : "public static var actionSpace: [ClosedRange<Float>]",
            "key.parsed_scope.end" : 197,
            "key.parsed_scope.start" : 197,
            "key.reusingastcontext" : false,
            "key.typename" : "[ClosedRange<Float>]",
            "key.typeusr" : "$sSaySNySfGGD",
            "key.usr" : "s:4main7SwimmerC11actionSpaceSaySNySfGGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var stateSize: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11681
              }
            ],
            "key.bodylength" : 3,
            "key.bodyoffset" : 11715,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/gym\/envs\/Swimmer.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stateSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 31,
            "key.line" : 198,
            "key.modulename" : "main",
            "key.name" : "stateSize",
            "key.namelength" : 9,
            "key.nameoffset" : 11699,
            "key.offset" : 11688,
            "key.parsed_declaration" : "public static var stateSize: Int",
            "key.parsed_scope.end" : 198,
            "key.parsed_scope.start" : 198,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main7SwimmerC9stateSizeSivpZ"
          }
        ],
        "key.typename" : "Swimmer.Type",
        "key.typeusr" : "$s4main7SwimmerCmD",
        "key.usr" : "s:4main7SwimmerC"
      }
    ]
  }
}
