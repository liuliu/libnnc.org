{
  "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 212734,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 127
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 4113,
        "key.line" : 10,
        "key.modulename" : "main",
        "key.name" : "q4pEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 139,
        "key.offset" : 135,
        "key.parsed_declaration" : "private let q4pEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else {\n      guard (dataType & 0xFF000) == Int32(CCV_QX), let dimensions = dimensions, let data = data,\n        var encoded = encoded, let encodedSize = encodedSize, let params = params,\n        dimensionCount > 0\n      else { return 0 }\n      let qbits = (dataType & 0xF00) >> 8\n      guard qbits == 4 else { return 0 }\n      let originalDataType = (dataType & 0xFF) << 12\n      let numberInBlocks = params.pointee.reserved\n      encoded.storeBytes(of: UInt32(numberInBlocks), as: UInt32.self)\n      encoded += MemoryLayout<UInt32>.size\n      memcpy(encoded, data, min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize))\n      encodedSize[0] =\n        min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize) + MemoryLayout<UInt32>.size\n      \/\/ Restore parameters to be ordinary one.\n      params.pointee.datatype = originalDataType\n      params.pointee.reserved = 0\n      identifier?[0] = 0x8a1e4b\n      return 1\n    }\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    var elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      elementSize = MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      elementSize = MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      elementSize = MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    let numberOfBlocks = (numberOfElements + 511) \/ 512\n    guard\n      (numberOfElements + 1) \/ 2 + numberOfBlocks * 16 * elementSize + MemoryLayout<UInt32>.size\n        <= encodedSize[0]\n    else { return 0 }\n    encoded.storeBytes(of: UInt32(512), as: UInt32.self)\n    encoded += MemoryLayout<UInt32>.size\n    DispatchQueue.concurrentPerform(iterations: numberOfBlocks) { blockIdx in\n      let indices = UnsafeMutablePointer<Int32>.allocate(capacity: min(512, numberOfElements))\n      let centroids = UnsafeMutablePointer<Double>.allocate(capacity: 16)\n      let nI = min(512, numberOfElements - blockIdx * 512)\n      var input = ccv_dense_matrix(\n        1, Int32(nI), dataType | Int32(CCV_C1),\n        UnsafeMutableRawPointer(mutating: data + 512 * blockIdx * elementSize), 0)\n      ccv_kmeans1d(&input, 16, indices, centroids)\n      let encodedBlock = encoded + (16 * elementSize + 256) * blockIdx\n      switch dataType {\n      case Int32(CCV_64F):\n        \/\/ Write centroids directly to the output.\n        memcpy(encodedBlock, centroids, elementSize * 16)\n      case Int32(CCV_32F):\n        let f32 = encodedBlock.assumingMemoryBound(to: Float32.self)\n        for i in 0..<16 {\n          f32[i] = Float(centroids[i])\n        }\n      case Int32(CCV_16F):\n        let f32 = UnsafeMutableRawPointer(centroids).assumingMemoryBound(to: Float32.self)\n        for i in 0..<16 {\n          f32[i] = Float(centroids[i])\n        }\n        ccv_float_to_half_precision(f32, encodedBlock.assumingMemoryBound(to: UInt16.self), 16)\n      default:\n        return\n      }\n      let u8 = encodedBlock.assumingMemoryBound(to: UInt8.self) + 16 * elementSize\n      var j = 0\n      for i in stride(from: 0, to: nI, by: 2) {\n        let i0 = UInt8(indices[i])\n        let i1 = i + 1 < nI ? UInt8(indices[i + 1]) : 0\n        let u0 = (i0 << 4) | i1\n        u8[j] = u0\n        j += 1\n      }\n      centroids.deallocate()\n      indices.deallocate()\n    }\n    identifier?[0] = 0x8a1e4b\n    encodedSize[0] =\n      (numberOfElements + 1) \/ 2 + numberOfBlocks * 16 * elementSize + MemoryLayout<UInt32>.size\n    return 1\n  }",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 10,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q4pEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q4pDecode(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 4250
          }
        ],
        "key.bodylength" : 4615,
        "key.bodyoffset" : 4686,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q4pDecode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 5044,
        "key.line" : 110,
        "key.modulename" : "main",
        "key.name" : "q4pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 412,
        "key.nameoffset" : 4263,
        "key.offset" : 4258,
        "key.parsed_declaration" : "private func q4pDecode(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 247,
        "key.parsed_scope.start" : 110,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q4pDecode<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 123,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 4954,
            "key.offset" : 4950,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 123,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let elementSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 20,
            "key.line" : 127,
            "key.modulename" : "main",
            "key.name" : "elementSize",
            "key.namelength" : 11,
            "key.nameoffset" : 5210,
            "key.offset" : 5206,
            "key.parsed_declaration" : "let elementSize: Int",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 127,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF11elementSizeL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 138,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 5481,
            "key.offset" : 5477,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 138,
            "key.parsed_scope.start" : 138,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let numberOfBlocks: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>numberOfBlocks<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 67,
            "key.line" : 143,
            "key.modulename" : "main",
            "key.name" : "numberOfBlocks",
            "key.namelength" : 14,
            "key.nameoffset" : 5682,
            "key.offset" : 5678,
            "key.parsed_declaration" : "let numberOfBlocks = (numberOfElements + blockSize - 1) \/ blockSize",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 143,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF14numberOfBlocksL_Sivp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 9304
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 804,
        "key.line" : 249,
        "key.modulename" : "main",
        "key.name" : "q4pDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 9316,
        "key.offset" : 9312,
        "key.parsed_declaration" : "private let q4pDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q4pDecode(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 249,
        "key.parsed_scope.start" : 249,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q4pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q4pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 10140
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 4736,
        "key.line" : 267,
        "key.modulename" : "main",
        "key.name" : "q5pEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 10152,
        "key.offset" : 10148,
        "key.parsed_declaration" : "private let q5pEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else {\n      guard (dataType & 0xFF000) == Int32(CCV_QX), let dimensions = dimensions, let data = data,\n        var encoded = encoded, let encodedSize = encodedSize, let params = params,\n        dimensionCount > 0\n      else { return 0 }\n      let qbits = (dataType & 0xF00) >> 8\n      guard qbits == 5 else { return 0 }\n      let originalDataType = (dataType & 0xFF) << 12\n      let numberInBlocks = params.pointee.reserved\n      encoded.storeBytes(of: UInt32(numberInBlocks), as: UInt32.self)\n      encoded += MemoryLayout<UInt32>.size\n      memcpy(encoded, data, min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize))\n      encodedSize[0] =\n        min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize) + MemoryLayout<UInt32>.size\n      \/\/ Restore parameters to be ordinary one.\n      params.pointee.datatype = originalDataType\n      params.pointee.reserved = 0\n      identifier?[0] = 0x8a1e5b\n      return 1\n    }\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    var elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      elementSize = MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      elementSize = MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      elementSize = MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    let numberOfBlocks = (numberOfElements + 1023) \/ 1024\n    guard\n      (numberOfElements + 7) \/ 8 * 5 + numberOfBlocks * 32 * elementSize + MemoryLayout<UInt32>.size\n        <= encodedSize[0]\n    else { return 0 }\n    encoded.storeBytes(of: UInt32(1024), as: UInt32.self)\n    encoded += MemoryLayout<UInt32>.size\n    DispatchQueue.concurrentPerform(iterations: numberOfBlocks) { blockIdx in\n      let indices = UnsafeMutablePointer<Int32>.allocate(capacity: min(1024, numberOfElements))\n      let centroids = UnsafeMutablePointer<Double>.allocate(capacity: 32)\n      let nI = min(1024, numberOfElements - blockIdx * 1024)\n      var input = ccv_dense_matrix(\n        1, Int32(nI), dataType | Int32(CCV_C1),\n        UnsafeMutableRawPointer(mutating: data + blockIdx * 1024 * elementSize), 0)\n      ccv_kmeans1d(&input, 32, indices, centroids)\n      let encodedBlock = encoded + (32 * elementSize + 640) * blockIdx\n      switch dataType {\n      case Int32(CCV_64F):\n        \/\/ Write centroids directly to the output.\n        memcpy(encodedBlock, centroids, elementSize * 32)\n      case Int32(CCV_32F):\n        let f32 = encodedBlock.assumingMemoryBound(to: Float32.self)\n        for i in 0..<32 {\n          f32[i] = Float(centroids[i])\n        }\n      case Int32(CCV_16F):\n        let f32 = UnsafeMutableRawPointer(centroids).assumingMemoryBound(to: Float32.self)\n        for i in 0..<32 {\n          f32[i] = Float(centroids[i])\n        }\n        ccv_float_to_half_precision(f32, encodedBlock.assumingMemoryBound(to: UInt16.self), 32)\n      default:\n        return\n      }\n      let u8 = encodedBlock.assumingMemoryBound(to: UInt8.self) + 32 * elementSize\n      var j = 0\n      for i in stride(from: 0, to: nI, by: 8) {\n        let i0 = UInt8(indices[i])\n        let i1 = i + 1 < nI ? UInt8(indices[i + 1]) : 0\n        let i2 = i + 2 < nI ? UInt8(indices[i + 2]) : 0\n        let i3 = i + 3 < nI ? UInt8(indices[i + 3]) : 0\n        let i4 = i + 4 < nI ? UInt8(indices[i + 4]) : 0\n        let i5 = i + 5 < nI ? UInt8(indices[i + 5]) : 0\n        let i6 = i + 6 < nI ? UInt8(indices[i + 6]) : 0\n        let i7 = i + 7 < nI ? UInt8(indices[i + 7]) : 0\n        let u0 = (i0 << 3) | (i1 >> 2)\n        let u1 = (i1 << 6) | (i2 << 1) | (i3 >> 4)\n        let u2 = (i3 << 4) | (i4 >> 1)\n        let u3 = (i4 << 7) | (i5 << 2) | (i6 >> 3)\n        let u4 = (i6 << 5) | i7\n        u8[j] = u0\n        u8[j + 1] = u1\n        u8[j + 2] = u2\n        u8[j + 3] = u3\n        u8[j + 4] = u4\n        j += 5\n      }\n      centroids.deallocate()\n      indices.deallocate()\n    }\n    identifier?[0] = 0x8a1e5b\n    encodedSize[0] =\n      (numberOfElements + 7) \/ 8 * 5 + numberOfBlocks * 32 * elementSize + MemoryLayout<UInt32>.size\n    return 1\n  }",
        "key.parsed_scope.end" : 267,
        "key.parsed_scope.start" : 267,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q5pEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q5pDecode(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 14886
          }
        ],
        "key.bodylength" : 9029,
        "key.bodyoffset" : 15322,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q5pDecode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 9458,
        "key.line" : 381,
        "key.modulename" : "main",
        "key.name" : "q5pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 412,
        "key.nameoffset" : 14899,
        "key.offset" : 14894,
        "key.parsed_declaration" : "private func q5pDecode(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 650,
        "key.parsed_scope.start" : 381,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q5pDecode<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 394,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 15590,
            "key.offset" : 15586,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 394,
            "key.parsed_scope.start" : 394,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let elementSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 20,
            "key.line" : 398,
            "key.modulename" : "main",
            "key.name" : "elementSize",
            "key.namelength" : 11,
            "key.nameoffset" : 15846,
            "key.offset" : 15842,
            "key.parsed_declaration" : "let elementSize: Int",
            "key.parsed_scope.end" : 398,
            "key.parsed_scope.start" : 398,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF11elementSizeL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 409,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 16117,
            "key.offset" : 16113,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 409,
            "key.parsed_scope.start" : 409,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let numberOfBlocks: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>numberOfBlocks<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 67,
            "key.line" : 414,
            "key.modulename" : "main",
            "key.name" : "numberOfBlocks",
            "key.namelength" : 14,
            "key.nameoffset" : 16318,
            "key.offset" : 16314,
            "key.parsed_declaration" : "let numberOfBlocks = (numberOfElements + blockSize - 1) \/ blockSize",
            "key.parsed_scope.end" : 414,
            "key.parsed_scope.start" : 414,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF14numberOfBlocksL_Sivp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 24354
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 804,
        "key.line" : 652,
        "key.modulename" : "main",
        "key.name" : "q5pDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 24366,
        "key.offset" : 24362,
        "key.parsed_declaration" : "private let q5pDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q5pDecode(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 652,
        "key.parsed_scope.start" : 652,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q5pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q5pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 25190
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 4365,
        "key.line" : 670,
        "key.modulename" : "main",
        "key.name" : "q6pEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 25202,
        "key.offset" : 25198,
        "key.parsed_declaration" : "private let q6pEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else {\n      guard (dataType & 0xFF000) == Int32(CCV_QX), let dimensions = dimensions, let data = data,\n        var encoded = encoded, let encodedSize = encodedSize, let params = params,\n        dimensionCount > 0\n      else { return 0 }\n      let qbits = (dataType & 0xF00) >> 8\n      guard qbits == 6 else { return 0 }\n      let originalDataType = (dataType & 0xFF) << 12\n      let numberInBlocks = params.pointee.reserved\n      encoded.storeBytes(of: UInt32(numberInBlocks), as: UInt32.self)\n      encoded += MemoryLayout<UInt32>.size\n      memcpy(encoded, data, min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize))\n      encodedSize[0] =\n        min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize) + MemoryLayout<UInt32>.size\n      \/\/ Restore parameters to be ordinary one.\n      params.pointee.datatype = originalDataType\n      params.pointee.reserved = 0\n      identifier?[0] = 0x8a1e6b\n      return 1\n    }\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    var elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      elementSize = MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      elementSize = MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      elementSize = MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    let numberOfBlocks = (numberOfElements + 4095) \/ 4096\n    guard\n      (numberOfElements + 3) \/ 4 * 3 + numberOfBlocks * 64 * elementSize + MemoryLayout<UInt32>.size\n        <= encodedSize[0]\n    else { return 0 }\n    encoded.storeBytes(of: UInt32(4096), as: UInt32.self)\n    encoded += MemoryLayout<UInt32>.size\n    DispatchQueue.concurrentPerform(iterations: numberOfBlocks) { blockIdx in\n      let indices = UnsafeMutablePointer<Int32>.allocate(capacity: min(4096, numberOfElements))\n      let centroids = UnsafeMutablePointer<Double>.allocate(capacity: 64)\n      let nI = min(4096, numberOfElements - blockIdx * 4096)\n      var input = ccv_dense_matrix(\n        1, Int32(nI), dataType | Int32(CCV_C1),\n        UnsafeMutableRawPointer(mutating: data + 4096 * elementSize * blockIdx), 0)\n      ccv_kmeans1d(&input, 64, indices, centroids)\n      let encodedBlock = encoded + (64 * elementSize + 3072) * blockIdx\n      switch dataType {\n      case Int32(CCV_64F):\n        \/\/ Write centroids directly to the output.\n        memcpy(encodedBlock, centroids, elementSize * 64)\n      case Int32(CCV_32F):\n        let f32 = encodedBlock.assumingMemoryBound(to: Float32.self)\n        for i in 0..<64 {\n          f32[i] = Float(centroids[i])\n        }\n      case Int32(CCV_16F):\n        let f32 = UnsafeMutableRawPointer(centroids).assumingMemoryBound(to: Float32.self)\n        for i in 0..<64 {\n          f32[i] = Float(centroids[i])\n        }\n        ccv_float_to_half_precision(f32, encodedBlock.assumingMemoryBound(to: UInt16.self), 64)\n      default:\n        return\n      }\n      let u8 = encodedBlock.assumingMemoryBound(to: UInt8.self) + 64 * elementSize\n      var j = 0\n      for i in stride(from: 0, to: nI, by: 4) {\n        let i0 = UInt8(indices[i])\n        let i1 = i + 1 < nI ? UInt8(indices[i + 1]) : 0\n        let i2 = i + 2 < nI ? UInt8(indices[i + 2]) : 0\n        let i3 = i + 3 < nI ? UInt8(indices[i + 3]) : 0\n        let u0 = (i0 << 2) | (i1 >> 4)\n        let u1 = (i1 << 4) | (i2 >> 2)\n        let u2 = (i2 << 6) | i3\n        u8[j] = u0\n        u8[j + 1] = u1\n        u8[j + 2] = u2\n        j += 3\n      }\n      centroids.deallocate()\n      indices.deallocate()\n    }\n    identifier?[0] = 0x8a1e6b\n    encodedSize[0] =\n      (numberOfElements + 3) \/ 4 * 3 + numberOfBlocks * 64 * elementSize + MemoryLayout<UInt32>.size\n    return 1\n  }",
        "key.parsed_scope.end" : 670,
        "key.parsed_scope.start" : 670,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q6pEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q6pDecode(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 29565
          }
        ],
        "key.bodylength" : 6269,
        "key.bodyoffset" : 30001,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q6pDecode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 6698,
        "key.line" : 776,
        "key.modulename" : "main",
        "key.name" : "q6pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 412,
        "key.nameoffset" : 29578,
        "key.offset" : 29573,
        "key.parsed_declaration" : "private func q6pDecode(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 961,
        "key.parsed_scope.start" : 776,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q6pDecode<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 789,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 30269,
            "key.offset" : 30265,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 789,
            "key.parsed_scope.start" : 789,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let elementSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 20,
            "key.line" : 793,
            "key.modulename" : "main",
            "key.name" : "elementSize",
            "key.namelength" : 11,
            "key.nameoffset" : 30525,
            "key.offset" : 30521,
            "key.parsed_declaration" : "let elementSize: Int",
            "key.parsed_scope.end" : 793,
            "key.parsed_scope.start" : 793,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF11elementSizeL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 804,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 30796,
            "key.offset" : 30792,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 804,
            "key.parsed_scope.start" : 804,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let numberOfBlocks: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>numberOfBlocks<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 67,
            "key.line" : 809,
            "key.modulename" : "main",
            "key.name" : "numberOfBlocks",
            "key.namelength" : 14,
            "key.nameoffset" : 30997,
            "key.offset" : 30993,
            "key.parsed_declaration" : "let numberOfBlocks = (numberOfElements + blockSize - 1) \/ blockSize",
            "key.parsed_scope.end" : 809,
            "key.parsed_scope.start" : 809,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF14numberOfBlocksL_Sivp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 36273
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 804,
        "key.line" : 963,
        "key.modulename" : "main",
        "key.name" : "q6pDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 36285,
        "key.offset" : 36281,
        "key.parsed_declaration" : "private let q6pDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q6pDecode(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 963,
        "key.parsed_scope.start" : 963,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q6pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q6pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 37109
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 4861,
        "key.line" : 981,
        "key.modulename" : "main",
        "key.name" : "q7pEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 37121,
        "key.offset" : 37117,
        "key.parsed_declaration" : "private let q7pEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else {\n      guard (dataType & 0xFF000) == Int32(CCV_QX), let dimensions = dimensions, let data = data,\n        var encoded = encoded, let encodedSize = encodedSize, let params = params,\n        dimensionCount > 0\n      else { return 0 }\n      let qbits = (dataType & 0xF00) >> 8\n      guard qbits == 7 else { return 0 }\n      let originalDataType = (dataType & 0xFF) << 12\n      let numberInBlocks = params.pointee.reserved\n      encoded.storeBytes(of: UInt32(numberInBlocks), as: UInt32.self)\n      encoded += MemoryLayout<UInt32>.size\n      memcpy(encoded, data, min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize))\n      encodedSize[0] =\n        min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize) + MemoryLayout<UInt32>.size\n      \/\/ Restore parameters to be ordinary one.\n      params.pointee.datatype = originalDataType\n      params.pointee.reserved = 0\n      identifier?[0] = 0x8a1e7b\n      return 1\n    }\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    var elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      elementSize = MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      elementSize = MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      elementSize = MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    let numberOfBlocks = (numberOfElements + 8191) \/ 8192\n    guard\n      (numberOfElements + 7) \/ 8 * 7 + numberOfBlocks * 128 * elementSize\n        + MemoryLayout<UInt32>.size\n        <= encodedSize[0]\n    else { return 0 }\n    encoded.storeBytes(of: UInt32(8192), as: UInt32.self)\n    encoded += MemoryLayout<UInt32>.size\n    DispatchQueue.concurrentPerform(iterations: numberOfBlocks) { blockIdx in\n      let indices = UnsafeMutablePointer<Int32>.allocate(capacity: min(8192, numberOfElements))\n      let centroids = UnsafeMutablePointer<Double>.allocate(capacity: 128)\n      let nI = min(8192, numberOfElements - blockIdx * 8192)\n      var input = ccv_dense_matrix(\n        1, Int32(nI), dataType | Int32(CCV_C1),\n        UnsafeMutableRawPointer(mutating: data + 8192 * elementSize * blockIdx), 0)\n      ccv_kmeans1d(&input, 128, indices, centroids)\n      let encodedBlock = encoded + (128 * elementSize + 7168) * blockIdx\n      switch dataType {\n      case Int32(CCV_64F):\n        \/\/ Write centroids directly to the output.\n        memcpy(encodedBlock, centroids, elementSize * 128)\n      case Int32(CCV_32F):\n        let f32 = encodedBlock.assumingMemoryBound(to: Float32.self)\n        for i in 0..<128 {\n          f32[i] = Float(centroids[i])\n        }\n      case Int32(CCV_16F):\n        let f32 = UnsafeMutableRawPointer(centroids).assumingMemoryBound(to: Float32.self)\n        for i in 0..<128 {\n          f32[i] = Float(centroids[i])\n        }\n        ccv_float_to_half_precision(f32, encodedBlock.assumingMemoryBound(to: UInt16.self), 128)\n      default:\n        return\n      }\n      let u8 = encodedBlock.assumingMemoryBound(to: UInt8.self) + 128 * elementSize\n      var j = 0\n      for i in stride(from: 0, to: nI, by: 8) {\n        let i0 = UInt8(indices[i])\n        let i1 = i + 1 < nI ? UInt8(indices[i + 1]) : 0\n        let i2 = i + 2 < nI ? UInt8(indices[i + 2]) : 0\n        let i3 = i + 3 < nI ? UInt8(indices[i + 3]) : 0\n        let i4 = i + 4 < nI ? UInt8(indices[i + 4]) : 0\n        let i5 = i + 5 < nI ? UInt8(indices[i + 5]) : 0\n        let i6 = i + 6 < nI ? UInt8(indices[i + 6]) : 0\n        let i7 = i + 7 < nI ? UInt8(indices[i + 7]) : 0\n        let u0 = (i0 << 1) | (i1 >> 6)\n        let u1 = (i1 << 2) | (i2 >> 5)\n        let u2 = (i2 << 3) | (i3 >> 4)\n        let u3 = (i3 << 4) | (i4 >> 3)\n        let u4 = (i4 << 5) | (i5 >> 2)\n        let u5 = (i5 << 6) | (i6 >> 1)\n        let u6 = (i6 << 7) | i7\n        u8[j] = u0\n        u8[j + 1] = u1\n        u8[j + 2] = u2\n        u8[j + 3] = u3\n        u8[j + 4] = u4\n        u8[j + 5] = u5\n        u8[j + 6] = u6\n        j += 7\n      }\n      centroids.deallocate()\n      indices.deallocate()\n    }\n    identifier?[0] = 0x8a1e7b\n    encodedSize[0] =\n      (numberOfElements + 7) \/ 8 * 7 + numberOfBlocks * 128 * elementSize\n      + MemoryLayout<UInt32>.size\n    return 1\n  }",
        "key.parsed_scope.end" : 981,
        "key.parsed_scope.start" : 981,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q7pEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q7pDecode(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 41980
          }
        ],
        "key.bodylength" : 9558,
        "key.bodyoffset" : 42416,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q7pDecode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 9987,
        "key.line" : 1101,
        "key.modulename" : "main",
        "key.name" : "q7pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 412,
        "key.nameoffset" : 41993,
        "key.offset" : 41988,
        "key.parsed_declaration" : "private func q7pDecode(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 1382,
        "key.parsed_scope.start" : 1101,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q7pDecode<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 1114,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 42684,
            "key.offset" : 42680,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 1114,
            "key.parsed_scope.start" : 1114,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let elementSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 20,
            "key.line" : 1118,
            "key.modulename" : "main",
            "key.name" : "elementSize",
            "key.namelength" : 11,
            "key.nameoffset" : 42940,
            "key.offset" : 42936,
            "key.parsed_declaration" : "let elementSize: Int",
            "key.parsed_scope.end" : 1118,
            "key.parsed_scope.start" : 1118,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF11elementSizeL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 1129,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 43211,
            "key.offset" : 43207,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 1129,
            "key.parsed_scope.start" : 1129,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let numberOfBlocks: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>numberOfBlocks<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 67,
            "key.line" : 1134,
            "key.modulename" : "main",
            "key.name" : "numberOfBlocks",
            "key.namelength" : 14,
            "key.nameoffset" : 43412,
            "key.offset" : 43408,
            "key.parsed_declaration" : "let numberOfBlocks = (numberOfElements + blockSize - 1) \/ blockSize",
            "key.parsed_scope.end" : 1134,
            "key.parsed_scope.start" : 1134,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF14numberOfBlocksL_Sivp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 51977
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 804,
        "key.line" : 1384,
        "key.modulename" : "main",
        "key.name" : "q7pDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 51989,
        "key.offset" : 51985,
        "key.parsed_declaration" : "private let q7pDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q7pDecode(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 1384,
        "key.parsed_scope.start" : 1384,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q7pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q7pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 52813
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 3985,
        "key.line" : 1402,
        "key.modulename" : "main",
        "key.name" : "q8pEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 52825,
        "key.offset" : 52821,
        "key.parsed_declaration" : "private let q8pEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else {\n      guard (dataType & 0xFF000) == Int32(CCV_QX), let dimensions = dimensions, let data = data,\n        var encoded = encoded, let encodedSize = encodedSize, let params = params,\n        dimensionCount > 0\n      else { return 0 }\n      let qbits = (dataType & 0xF00) >> 8\n      guard qbits == 8 else { return 0 }\n      let originalDataType = (dataType & 0xFF) << 12\n      let numberInBlocks = params.pointee.reserved\n      encoded.storeBytes(of: UInt32(numberInBlocks), as: UInt32.self)\n      encoded += MemoryLayout<UInt32>.size\n      memcpy(encoded, data, min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize))\n      encodedSize[0] =\n        min(encodedSize[0] - MemoryLayout<UInt32>.size, dataSize) + MemoryLayout<UInt32>.size\n      \/\/ Restore parameters to be ordinary one.\n      params.pointee.datatype = originalDataType\n      params.pointee.reserved = 0\n      identifier?[0] = 0x8a1e8b\n      return 1\n    }\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    var elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      elementSize = MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      elementSize = MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      elementSize = MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    let numberOfBlocks = (numberOfElements + 16_383) \/ 16_384\n    guard\n      numberOfElements + numberOfBlocks * 256 * elementSize + MemoryLayout<UInt32>.size\n        <= encodedSize[0]\n    else {\n      return 0\n    }\n    encoded.storeBytes(of: UInt32(16_384), as: UInt32.self)\n    encoded += MemoryLayout<UInt32>.size\n    DispatchQueue.concurrentPerform(iterations: numberOfBlocks) { blockIdx in\n      let indices = UnsafeMutablePointer<Int32>.allocate(capacity: min(16_384, numberOfElements))\n      let centroids = UnsafeMutablePointer<Double>.allocate(capacity: 256)\n      let nI = min(16_384, numberOfElements - blockIdx * 16_384)\n      var input = ccv_dense_matrix(\n        1, Int32(nI), dataType | Int32(CCV_C1),\n        UnsafeMutableRawPointer(mutating: data + 16_384 * elementSize * blockIdx), 0)\n      ccv_kmeans1d(&input, 256, indices, centroids)\n      let encodedBlock = encoded + (256 * elementSize + 16_384) * blockIdx\n      switch dataType {\n      case Int32(CCV_64F):\n        \/\/ Write centroids directly to the output.\n        memcpy(encodedBlock, centroids, elementSize * 256)\n      case Int32(CCV_32F):\n        let f32 = encodedBlock.assumingMemoryBound(to: Float32.self)\n        for i in 0..<256 {\n          f32[i] = Float(centroids[i])\n        }\n      case Int32(CCV_16F):\n        let f32 = UnsafeMutableRawPointer(centroids).assumingMemoryBound(to: Float32.self)\n        for i in 0..<256 {\n          f32[i] = Float(centroids[i])\n        }\n        ccv_float_to_half_precision(\n          f32, encodedBlock.assumingMemoryBound(to: UInt16.self), 256)\n      default:\n        return\n      }\n      let u8 = encodedBlock.assumingMemoryBound(to: UInt8.self) + 256 * elementSize\n      for i in 0..<nI {\n        u8[i] = UInt8(indices[i])\n      }\n      centroids.deallocate()\n      indices.deallocate()\n    }\n    identifier?[0] = 0x8a1e8b\n    encodedSize[0] =\n      numberOfElements + numberOfBlocks * 256 * elementSize + MemoryLayout<UInt32>.size\n    return 1\n  }",
        "key.parsed_scope.end" : 1402,
        "key.parsed_scope.start" : 1402,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q8pEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q8pDecode(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 56808
          }
        ],
        "key.bodylength" : 3074,
        "key.bodyoffset" : 57244,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q8pDecode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 3503,
        "key.line" : 1500,
        "key.modulename" : "main",
        "key.name" : "q8pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 412,
        "key.nameoffset" : 56821,
        "key.offset" : 56816,
        "key.parsed_declaration" : "private func q8pDecode(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 1579,
        "key.parsed_scope.start" : 1500,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q8pDecode<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 1513,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 57512,
            "key.offset" : 57508,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 1513,
            "key.parsed_scope.start" : 1513,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let elementSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 20,
            "key.line" : 1517,
            "key.modulename" : "main",
            "key.name" : "elementSize",
            "key.namelength" : 11,
            "key.nameoffset" : 57768,
            "key.offset" : 57764,
            "key.parsed_declaration" : "let elementSize: Int",
            "key.parsed_scope.end" : 1517,
            "key.parsed_scope.start" : 1517,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF11elementSizeL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 1528,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 58039,
            "key.offset" : 58035,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 1528,
            "key.parsed_scope.start" : 1528,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let numberOfBlocks: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>numberOfBlocks<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 67,
            "key.line" : 1533,
            "key.modulename" : "main",
            "key.name" : "numberOfBlocks",
            "key.namelength" : 14,
            "key.nameoffset" : 58240,
            "key.offset" : 58236,
            "key.parsed_declaration" : "let numberOfBlocks = (numberOfElements + blockSize - 1) \/ blockSize",
            "key.parsed_scope.end" : 1533,
            "key.parsed_scope.start" : 1533,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF14numberOfBlocksL_Sivp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 60321
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 804,
        "key.line" : 1581,
        "key.modulename" : "main",
        "key.name" : "q8pDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 60333,
        "key.offset" : 60329,
        "key.parsed_declaration" : "private let q8pDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q8pDecode(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 1581,
        "key.parsed_scope.start" : 1581,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q8pDecode(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9q8pDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 61135
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2700,
        "key.line" : 1598,
        "key.modulename" : "main",
        "key.name" : "fpzipEncode",
        "key.namelength" : 11,
        "key.nameoffset" : 61147,
        "key.offset" : 61143,
        "key.parsed_declaration" : "private let fpzipEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else { return 0 }\n    guard let data = data, let dimensions = dimensions, let encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    guard let fpz = fpzip_write_to_buffer(encoded, encodedSize[0]) else { return 0 }\n    defer { fpzip_write_close(fpz) }\n    fpz.pointee.type = Int32(FPZIP_TYPE_FLOAT)\n    switch dataType {\n    case Int32(CCV_64F):\n      fpz.pointee.type = Int32(FPZIP_TYPE_DOUBLE)\n      fpz.pointee.prec = 64\n    case Int32(CCV_32F):\n      fpz.pointee.type = Int32(FPZIP_TYPE_FLOAT)\n      fpz.pointee.prec = 32\n    case Int32(CCV_16F):\n      fpz.pointee.type = Int32(FPZIP_TYPE_FLOAT)\n      fpz.pointee.prec = 19  \/\/ Since we have to retain all exponetial components (i.e. 8, in Float16, that is 5), we need to specify a precision at least 19.\n    default:\n      return 0\n    }\n    fpz.pointee.nx = dimensions[Int(dimensionCount) - 1]\n    fpz.pointee.ny = dimensionCount >= 2 ? dimensions[Int(dimensionCount) - 2] : 1\n    fpz.pointee.nz = dimensionCount >= 3 ? dimensions[Int(dimensionCount) - 3] : 1\n    if dimensionCount == 4 {\n      fpz.pointee.nf = dimensions[0]\n    } else if dimensionCount > 4 {\n      var remainingCount = dimensions[Int(dimensionCount) - 4]\n      for i in 4..<Int(dimensionCount) {\n        remainingCount *= dimensions[Int(dimensionCount) - i - 1]\n      }\n      fpz.pointee.nf = remainingCount\n    }\n    fpzip_write_header(fpz)\n    var inputData = data\n    let f32: UnsafeMutablePointer<Float32>?\n    if dataType == Int32(CCV_16F) {\n      \/\/ Need to do the conversion\n      let len =\n        Int(fpz.pointee.nx) * Int(fpz.pointee.ny) * Int(fpz.pointee.nz) * Int(fpz.pointee.nf)\n      let f32p = UnsafeMutablePointer<Float32>.allocate(capacity: len)\n      ccv_half_precision_to_float(\n        UnsafeMutableRawPointer(mutating: data).assumingMemoryBound(to: UInt16.self), f32p, len)\n      inputData = UnsafeRawPointer(f32p)\n      f32 = f32p\n    } else {\n      f32 = nil\n    }\n    let outbytes = fpzip_write(fpz, inputData)\n    if let f32 = f32 {\n      f32.deallocate()\n    }\n    guard outbytes > 0 && outbytes <= dataSize else { return 0 }\n    identifier?[0] = 0xf7217\n    encodedSize[0] = outbytes\n    return 1\n  }",
        "key.parsed_scope.end" : 1598,
        "key.parsed_scope.start" : 1598,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main11fpzipEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 63845
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 3164,
        "key.line" : 1665,
        "key.modulename" : "main",
        "key.name" : "fpzipDecode",
        "key.namelength" : 11,
        "key.nameoffset" : 63857,
        "key.offset" : 63853,
        "key.parsed_declaration" : "private let fpzipDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard identifier == 0xf7217 else { return 0 }\n    guard dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F)\n    else { return 0 }\n    if tensorOut!.pointee == nil {\n      tensorOut!.pointee = ccv_nnc_tensor_new(nil, params, 0)\n    }\n    let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }\n    guard let data = data, let dimensions = dimensions, let decoded = decoded ?? tensorData,\n      let decodedSize = decodedSize, dimensionCount > 0\n    else { return 0 }\n    guard let fpz = fpzip_read_from_buffer(data) else { return 0 }\n    defer { fpzip_read_close(fpz) }\n    guard fpzip_read_header(fpz) != 0 else { return 0 }\n    let truncatedCount: Int\n    let truncatedLength: Int\n    let elementSize: Int\n    switch dataType {\n    case Int32(CCV_64F):\n      guard fpz.pointee.type == Int32(FPZIP_TYPE_DOUBLE) else { return 0 }\n      elementSize = MemoryLayout<Double>.size\n      truncatedCount = decodedSize[0] \/ MemoryLayout<Double>.size\n      truncatedLength = truncatedCount * MemoryLayout<Double>.size\n    case Int32(CCV_32F):\n      guard fpz.pointee.type == Int32(FPZIP_TYPE_FLOAT) else { return 0 }\n      elementSize = MemoryLayout<Float>.size\n      truncatedCount = decodedSize[0] \/ MemoryLayout<Float>.size\n      truncatedLength = truncatedCount * MemoryLayout<Float>.size\n    case Int32(CCV_16F):\n      guard fpz.pointee.type == Int32(FPZIP_TYPE_FLOAT) else { return 0 }\n      elementSize = MemoryLayout<Float>.size\n      truncatedCount = decodedSize[0] \/ MemoryLayout<UInt16>.size\n      truncatedLength = truncatedCount * MemoryLayout<UInt16>.size\n    default:\n      return 0\n    }\n    let len = Int(fpz.pointee.nx) * Int(fpz.pointee.ny) * Int(fpz.pointee.nz) * Int(fpz.pointee.nf)\n    if decodedSize[0] < elementSize * len {\n      let buffer = UnsafeMutableRawPointer.allocate(\n        byteCount: elementSize * len, alignment: elementSize)\n      defer { buffer.deallocate() }\n      guard fpzip_read(fpz, buffer) != 0 else { return 0 }\n      if dataType == Int32(CCV_16F) {\n        ccv_float_to_half_precision(\n          buffer.assumingMemoryBound(to: Float.self), buffer.assumingMemoryBound(to: UInt16.self),\n          truncatedCount)\n      }\n      memcpy(decoded, buffer, truncatedLength)\n      decodedSize[0] = truncatedLength\n      return 1\n    } else {\n      \/\/ Decode directly, and then we do conversion, if it is CCV_16F.\n      guard fpzip_read(fpz, decoded) != 0 else { return 0 }\n      if dataType == Int32(CCV_16F) {\n        ccv_float_to_half_precision(\n          decoded.assumingMemoryBound(to: Float.self), decoded.assumingMemoryBound(to: UInt16.self),\n          len)\n      }\n      decodedSize[0] = elementSize * len\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 1665,
        "key.parsed_scope.start" : 1665,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main11fpzipDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let zipEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 67019
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zipEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 728,
        "key.line" : 1736,
        "key.modulename" : "main",
        "key.name" : "zipEncode",
        "key.namelength" : 9,
        "key.nameoffset" : 67031,
        "key.offset" : 67027,
        "key.parsed_declaration" : "private let zipEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let data = data, let dimensions = dimensions, let encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    guard zip(data: data, dataSize: dataSize, zippedData: encoded, zippedDataSize: encodedSize)\n    else {\n      return 0\n    }\n    identifier?[0] = 0x217\n    return 1\n  }",
        "key.parsed_scope.end" : 1736,
        "key.parsed_scope.start" : 1736,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9zipEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let zipDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 67757
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zipDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 990,
        "key.line" : 1756,
        "key.modulename" : "main",
        "key.name" : "zipDecode",
        "key.namelength" : 9,
        "key.nameoffset" : 67769,
        "key.offset" : 67765,
        "key.parsed_declaration" : "private let zipDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard identifier == 0x217 else { return 0 }\n    if tensorOut!.pointee == nil {\n      tensorOut!.pointee = ccv_nnc_tensor_new(nil, params, 0)\n    }\n    let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }\n    guard let data = data, let dimensions = dimensions, let decoded = decoded ?? tensorData,\n      let decodedSize = decodedSize, dimensionCount > 0\n    else { return 0 }\n    guard\n      unzip(data: data, dataSize: dataSize, unzippedData: decoded, unzippedDataSize: decodedSize)\n    else { return 0 }\n    return 1\n  }",
        "key.parsed_scope.end" : 1756,
        "key.parsed_scope.start" : 1756,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main9zipDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func truncatedBits(_ number: <Type usr=\"s:s6UInt16V\">UInt16<\/Type>, bitCount: <Type usr=\"s:s6UInt16V\">UInt16<\/Type>) -&gt; <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
        "key.bodylength" : 328,
        "key.bodyoffset" : 68823,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>truncatedBits<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>number<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bitCount<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 395,
        "key.line" : 1779,
        "key.modulename" : "main",
        "key.name" : "truncatedBits(_:bitCount:)",
        "key.namelength" : 49,
        "key.nameoffset" : 68762,
        "key.offset" : 68757,
        "key.parsed_declaration" : "func truncatedBits(_ number: UInt16, bitCount: UInt16) -> UInt16",
        "key.parsed_scope.end" : 1789,
        "key.parsed_scope.start" : 1779,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let mask: <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>mask<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 38,
            "key.line" : 1781,
            "key.modulename" : "main",
            "key.name" : "mask",
            "key.namelength" : 4,
            "key.nameoffset" : 68874,
            "key.offset" : 68870,
            "key.parsed_declaration" : "let mask: UInt16 = (1 << bitCount) - 1",
            "key.parsed_scope.end" : 1781,
            "key.parsed_scope.start" : 1781,
            "key.reusingastcontext" : false,
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:4main13truncatedBits_8bitCounts6UInt16VAE_AEtF4maskL_AEvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let discard: <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>discard<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 27,
            "key.line" : 1782,
            "key.modulename" : "main",
            "key.name" : "discard",
            "key.namelength" : 7,
            "key.nameoffset" : 68915,
            "key.offset" : 68911,
            "key.parsed_declaration" : "let discard = number & mask",
            "key.parsed_scope.end" : 1782,
            "key.parsed_scope.start" : 1782,
            "key.reusingastcontext" : false,
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:4main13truncatedBits_8bitCounts6UInt16VAE_AEtF7discardL_AEvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let threshold: <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>threshold<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 43,
            "key.line" : 1783,
            "key.modulename" : "main",
            "key.name" : "threshold",
            "key.namelength" : 9,
            "key.nameoffset" : 68945,
            "key.offset" : 68941,
            "key.parsed_declaration" : "let threshold: UInt16 = 1 << (bitCount - 1)",
            "key.parsed_scope.end" : 1783,
            "key.parsed_scope.start" : 1783,
            "key.reusingastcontext" : false,
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:4main13truncatedBits_8bitCounts6UInt16VAE_AEtF9thresholdL_AEvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var shifted: <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>shifted<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 32,
            "key.line" : 1784,
            "key.modulename" : "main",
            "key.name" : "shifted",
            "key.namelength" : 7,
            "key.nameoffset" : 68991,
            "key.offset" : 68987,
            "key.parsed_declaration" : "var shifted = number >> bitCount",
            "key.parsed_scope.end" : 1784,
            "key.parsed_scope.start" : 1784,
            "key.reusingastcontext" : false,
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:4main13truncatedBits_8bitCounts6UInt16VAE_AEtF7shiftedL_AEvp"
          }
        ],
        "key.typename" : "(UInt16, UInt16) -> UInt16",
        "key.typeusr" : "$s_8bitCounts6UInt16VAC_ACtcD",
        "key.usr" : "s:4main13truncatedBits_8bitCounts6UInt16VAE_AEtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let ezm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 69572
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ezm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2345,
        "key.line" : 1797,
        "key.modulename" : "main",
        "key.name" : "ezm7Encode",
        "key.namelength" : 10,
        "key.nameoffset" : 69584,
        "key.offset" : 69580,
        "key.parsed_declaration" : "private let ezm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let data = data, let dimensions = dimensions, let encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    guard dataType == Int32(CCV_16F) else { return 0 }\n    var floatCount = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      floatCount *= Int(dimensions[i])\n    }\n    let floatBytesBuffer = data.assumingMemoryBound(to: UInt16.self)\n    let floatsWithoutExp = UnsafeMutablePointer<UInt8>.allocate(capacity: floatCount)\n    let exponents = UnsafeMutablePointer<UInt8>.allocate(capacity: floatCount)\n    defer {\n      exponents.deallocate()\n      floatsWithoutExp.deallocate()\n    }\n    for i in 0..<floatCount {\n      let floatBytes = floatBytesBuffer[i]\n      let exponent = UInt8((floatBytes >> 10) & ((1 << 5) - 1))\n      let signBit = UInt8(floatBytes >> 15)\n      let mantissa = floatBytes & ((1 << 10) - 1)\n      var truncatedMantissa = UInt8(truncatedBits(mantissa, bitCount: 3))\n      if (truncatedMantissa & (1 << 7)) != 0 {\n        \/\/ If rounding would cause overflow, just round down instead\n        truncatedMantissa = UInt8(mantissa >> 3)\n      }\n      exponents[i] = UInt8(exponent)\n      floatsWithoutExp[i] = (signBit << 7) | truncatedMantissa\n    }\n    guard encodedSize[0] > 4 else { return 0 }\n    var zippedDataSize = encodedSize[0] - 4\n    guard\n      zip(\n        data: exponents,\n        dataSize: floatCount,\n        zippedData: encoded.advanced(by: 4),\n        zippedDataSize: &zippedDataSize)\n    else { return 0 }\n    encoded.assumingMemoryBound(to: Int32.self)[0] = Int32(zippedDataSize)\n    guard 4 + zippedDataSize + floatCount <= encodedSize[0] else { return 0 }\n    memcpy(encoded.advanced(by: 4 + zippedDataSize), floatsWithoutExp, floatCount)\n    identifier?[0] = 0x511\n    encodedSize[0] =\n      4 \/* for compressed exponents size *\/\n      + zippedDataSize \/* exponents *\/\n      + floatCount \/* floats without exponent *\/\n    return 1\n  }",
        "key.parsed_scope.end" : 1797,
        "key.parsed_scope.start" : 1797,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main10ezm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let ezm7Decode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 71927
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ezm7Decode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2157,
        "key.line" : 1854,
        "key.modulename" : "main",
        "key.name" : "ezm7Decode",
        "key.namelength" : 10,
        "key.nameoffset" : 71939,
        "key.offset" : 71935,
        "key.parsed_declaration" : "private let ezm7Decode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard dataType == Int32(CCV_16F) else { return 0 }\n    guard identifier == 0x511 else { return 0 }\n    if tensorOut!.pointee == nil {\n      tensorOut!.pointee = ccv_nnc_tensor_new(nil, params, 0)\n    }\n    let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }\n    guard let data = data, let dimensions = dimensions, let decoded = decoded ?? tensorData,\n      let decodedSize = decodedSize, dimensionCount > 0\n    else { return 0 }\n    var floatCount = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      floatCount *= Int(dimensions[i])\n    }\n    floatCount = min(floatCount, decodedSize[0] \/ 2)\n    let exponentZipSize = Int(data.assumingMemoryBound(to: Int32.self)[0])\n    guard dataSize >= 4 + exponentZipSize + floatCount else { return 0 }\n    let exponentZipData = data.advanced(by: MemoryLayout<Int32>.size)\n    let exponentBuffer = UnsafeMutablePointer<UInt8>.allocate(capacity: floatCount)\n    defer { exponentBuffer.deallocate() }\n    var unzippedDataSize = floatCount\n    guard\n      unzip(\n        data: exponentZipData,\n        dataSize: exponentZipSize,\n        unzippedData: exponentBuffer,\n        unzippedDataSize: &unzippedDataSize)\n    else { return 0 }\n    let floatsWithoutExp = exponentZipData.advanced(by: exponentZipSize).assumingMemoryBound(\n      to: UInt8.self)\n    let decodedAsInts = decoded.assumingMemoryBound(to: UInt16.self)\n    for i in 0..<floatCount {\n      let floatWithoutExp = UInt16(floatsWithoutExp[i])\n      let signBit = floatWithoutExp >> 7\n      let mantissa = (floatWithoutExp & 0x7f) << 3\n      let exponent = UInt16(exponentBuffer[i])\n      decodedAsInts[i] = (signBit << 15) | (exponent << 10) | mantissa\n    }\n\n    return 1\n  }",
        "key.parsed_scope.end" : 1854,
        "key.parsed_scope.start" : 1854,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main10ezm7Decode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.bodylength" : 303,
        "key.bodyoffset" : 74294,
        "key.internal_diagnostic" : "Unable to resolve cursor info.",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 453,
        "key.name" : "zip(data:dataSize:zippedData:zippedDataSize:)",
        "key.namelength" : 134,
        "key.nameoffset" : 74150,
        "key.offset" : 74145,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let outputSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>outputSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 197,
            "key.line" : 1911,
            "key.modulename" : "main",
            "key.name" : "outputSize",
            "key.namelength" : 10,
            "key.nameoffset" : 74303,
            "key.offset" : 74299,
            "key.parsed_declaration" : "let outputSize = compression_encode_buffer(\n  zippedData.assumingMemoryBound(to: UInt8.self), zippedDataSize[0],\n  data.assumingMemoryBound(to: UInt8.self), dataSize, nil, COMPRESSION_ZLIB)",
            "key.parsed_scope.end" : 1911,
            "key.parsed_scope.start" : 1911,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main3zip4data0C4Size10zippedData0efD0SbSV_SiSvSpySiGtF06outputD0L_Xevp"
          }
        ],
        "key.typename" : "Bool"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 74602
          }
        ],
        "key.bodylength" : 942,
        "key.bodyoffset" : 74765,
        "key.internal_diagnostic" : "Unable to resolve cursor info.",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 1098,
        "key.name" : "unzip(data:dataSize:unzippedData:unzippedDataSize:)",
        "key.namelength" : 140,
        "key.nameoffset" : 74615,
        "key.offset" : 74610,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>let nextIn: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nextIn<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 53,
            "key.line" : 1923,
            "key.modulename" : "main",
            "key.name" : "nextIn",
            "key.namelength" : 6,
            "key.nameoffset" : 74774,
            "key.offset" : 74770,
            "key.parsed_declaration" : "let nextIn = data.assumingMemoryBound(to: UInt8.self)",
            "key.parsed_scope.end" : 1923,
            "key.parsed_scope.start" : 1923,
            "key.reusingastcontext" : true,
            "key.typename" : "UnsafePointer<UInt8>",
            "key.typeusr" : "$sSPys5UInt8VGD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6nextInL_SPys5UInt8VGvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let nextOut: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>nextOut<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 62,
            "key.line" : 1924,
            "key.modulename" : "main",
            "key.name" : "nextOut",
            "key.namelength" : 7,
            "key.nameoffset" : 74832,
            "key.offset" : 74828,
            "key.parsed_declaration" : "let nextOut = unzippedData.assumingMemoryBound(to: UInt8.self)",
            "key.parsed_scope.end" : 1924,
            "key.parsed_scope.start" : 1924,
            "key.reusingastcontext" : true,
            "key.typename" : "UnsafeMutablePointer<UInt8>",
            "key.typeusr" : "$sSpys5UInt8VGD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF7nextOutL0_Spys5UInt8VGvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var stream: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stream<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 142,
            "key.line" : 1925,
            "key.modulename" : "main",
            "key.name" : "stream",
            "key.namelength" : 6,
            "key.nameoffset" : 74899,
            "key.offset" : 74895,
            "key.parsed_declaration" : "var stream = compression_stream(\n  dst_ptr: nextOut, dst_size: unzippedDataSize[0], src_ptr: nextIn, src_size: dataSize,\n  state: nil)",
            "key.parsed_scope.end" : 1925,
            "key.parsed_scope.start" : 1925,
            "key.reusingastcontext" : true,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6streamL1_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>var status: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 90,
            "key.line" : 1928,
            "key.modulename" : "main",
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 75046,
            "key.offset" : 75042,
            "key.parsed_declaration" : "var status = compression_stream_init(&stream, COMPRESSION_STREAM_DECODE, COMPRESSION_ZLIB)",
            "key.parsed_scope.end" : 1928,
            "key.parsed_scope.start" : 1928,
            "key.reusingastcontext" : true,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6statusL2_Xevp"
          }
        ],
        "key.typename" : "Bool"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func zip(data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>, dataSize: <Type usr=\"s:Si\">Int<\/Type>, zippedData: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>, zippedDataSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 75719
          }
        ],
        "key.bodylength" : 1561,
        "key.bodyoffset" : 75876,
        "key.column" : 16,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>zippedData<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>zippedDataSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 1711,
        "key.line" : 1945,
        "key.modulename" : "main",
        "key.name" : "zip(data:dataSize:zippedData:zippedDataSize:)",
        "key.namelength" : 134,
        "key.nameoffset" : 75732,
        "key.offset" : 75727,
        "key.parsed_declaration" : "private func zip(\n  data: UnsafeRawPointer, dataSize: Int, zippedData: UnsafeMutableRawPointer,\n  zippedDataSize: UnsafeMutablePointer<Int>\n) -> Bool",
        "key.parsed_scope.end" : 1983,
        "key.parsed_scope.start" : 1945,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var stream: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stream<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 23,
            "key.line" : 1949,
            "key.modulename" : "main",
            "key.name" : "stream",
            "key.namelength" : 6,
            "key.nameoffset" : 75885,
            "key.offset" : 75881,
            "key.parsed_declaration" : "var stream = z_stream()",
            "key.parsed_scope.end" : 1949,
            "key.parsed_scope.start" : 1949,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF6streamL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let streamSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>streamSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 51,
            "key.line" : 1950,
            "key.modulename" : "main",
            "key.name" : "streamSize",
            "key.namelength" : 10,
            "key.nameoffset" : 75913,
            "key.offset" : 75909,
            "key.parsed_declaration" : "let streamSize = Int32(MemoryLayout<z_stream>.size)",
            "key.parsed_scope.end" : 1950,
            "key.parsed_scope.start" : 1950,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF06streamL0L_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let result: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 144,
            "key.line" : 1951,
            "key.modulename" : "main",
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 75969,
            "key.offset" : 75965,
            "key.parsed_declaration" : "let result = deflateInit2_(\n  &stream, Z_DEFAULT_COMPRESSION, Z_DEFLATED, -MAX_WBITS, 9, Z_DEFAULT_STRATEGY, ZLIB_VERSION,\n  streamSize)",
            "key.parsed_scope.end" : 1951,
            "key.parsed_scope.start" : 1951,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF6resultL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let chunkSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 27,
            "key.line" : 1956,
            "key.modulename" : "main",
            "key.name" : "chunkSize",
            "key.namelength" : 9,
            "key.nameoffset" : 76199,
            "key.offset" : 76195,
            "key.parsed_declaration" : "let chunkSize = 0x8000_0000",
            "key.parsed_scope.end" : 1956,
            "key.parsed_scope.start" : 1956,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF05chunkL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var availableSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 28,
            "key.line" : 1957,
            "key.modulename" : "main",
            "key.name" : "availableSize",
            "key.namelength" : 13,
            "key.nameoffset" : 76231,
            "key.offset" : 76227,
            "key.parsed_declaration" : "var availableSize = dataSize",
            "key.parsed_scope.end" : 1957,
            "key.parsed_scope.start" : 1957,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF09availableL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var outputSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>outputSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 18,
            "key.line" : 1958,
            "key.modulename" : "main",
            "key.name" : "outputSize",
            "key.namelength" : 10,
            "key.nameoffset" : 76264,
            "key.offset" : 76260,
            "key.parsed_declaration" : "var outputSize = 0",
            "key.parsed_scope.end" : 1958,
            "key.parsed_scope.start" : 1958,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF06outputL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var availableOutputSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableOutputSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 43,
            "key.line" : 1959,
            "key.modulename" : "main",
            "key.name" : "availableOutputSize",
            "key.namelength" : 19,
            "key.nameoffset" : 76287,
            "key.offset" : 76283,
            "key.parsed_declaration" : "var availableOutputSize = zippedDataSize[0]",
            "key.parsed_scope.end" : 1959,
            "key.parsed_scope.start" : 1959,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF015availableOutputL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var flush: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>flush<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 22,
            "key.line" : 1960,
            "key.modulename" : "main",
            "key.name" : "flush",
            "key.namelength" : 5,
            "key.nameoffset" : 76335,
            "key.offset" : 76331,
            "key.parsed_declaration" : "var flush = Z_NO_FLUSH",
            "key.parsed_scope.end" : 1960,
            "key.parsed_scope.start" : 1960,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF5flushL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>var nextIn: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nextIn<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 92,
            "key.line" : 1961,
            "key.modulename" : "main",
            "key.name" : "nextIn",
            "key.namelength" : 6,
            "key.nameoffset" : 76362,
            "key.offset" : 76358,
            "key.parsed_declaration" : "var nextIn = UnsafeMutablePointer<UInt8>(mutating: data.assumingMemoryBound(to: UInt8.self))",
            "key.parsed_scope.end" : 1961,
            "key.parsed_scope.start" : 1961,
            "key.reusingastcontext" : false,
            "key.typename" : "UnsafeMutablePointer<UInt8>",
            "key.typeusr" : "$sSpys5UInt8VGD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF6nextInL_Spys5UInt8VGvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var nextOut: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nextOut<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 60,
            "key.line" : 1962,
            "key.modulename" : "main",
            "key.name" : "nextOut",
            "key.namelength" : 7,
            "key.nameoffset" : 76459,
            "key.offset" : 76455,
            "key.parsed_declaration" : "var nextOut = zippedData.assumingMemoryBound(to: UInt8.self)",
            "key.parsed_scope.end" : 1962,
            "key.parsed_scope.start" : 1962,
            "key.reusingastcontext" : false,
            "key.typename" : "UnsafeMutablePointer<UInt8>",
            "key.typeusr" : "$sSpys5UInt8VGD",
            "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF7nextOutL_Spys5UInt8VGvp"
          }
        ],
        "key.typename" : "(UnsafeRawPointer, Int, UnsafeMutableRawPointer, UnsafeMutablePointer<Int>) -> Bool",
        "key.typeusr" : "$s4data0A4Size10zippedData0cdB0SbSV_SiSvSpySiGtcD",
        "key.usr" : "s:4main3zip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size10zippedData0mnL0SbSV_SiSvSpySiGtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func unzip(data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>, dataSize: <Type usr=\"s:Si\">Int<\/Type>, unzippedData: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>, unzippedDataSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 77442
          }
        ],
        "key.bodylength" : 1532,
        "key.bodyoffset" : 77605,
        "key.column" : 16,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>unzip<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>unzippedData<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>unzippedDataSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 1688,
        "key.line" : 1985,
        "key.modulename" : "main",
        "key.name" : "unzip(data:dataSize:unzippedData:unzippedDataSize:)",
        "key.namelength" : 140,
        "key.nameoffset" : 77455,
        "key.offset" : 77450,
        "key.parsed_declaration" : "private func unzip(\n  data: UnsafeRawPointer, dataSize: Int, unzippedData: UnsafeMutableRawPointer,\n  unzippedDataSize: UnsafeMutablePointer<Int>\n) -> Bool",
        "key.parsed_scope.end" : 2021,
        "key.parsed_scope.start" : 1985,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var stream: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stream<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 23,
            "key.line" : 1989,
            "key.modulename" : "main",
            "key.name" : "stream",
            "key.namelength" : 6,
            "key.nameoffset" : 77614,
            "key.offset" : 77610,
            "key.parsed_declaration" : "var stream = z_stream()",
            "key.parsed_scope.end" : 1989,
            "key.parsed_scope.start" : 1989,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6streamL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let streamSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>streamSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 51,
            "key.line" : 1990,
            "key.modulename" : "main",
            "key.name" : "streamSize",
            "key.namelength" : 10,
            "key.nameoffset" : 77642,
            "key.offset" : 77638,
            "key.parsed_declaration" : "let streamSize = Int32(MemoryLayout<z_stream>.size)",
            "key.parsed_scope.end" : 1990,
            "key.parsed_scope.start" : 1990,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF06streamL0L_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>var result: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 73,
            "key.line" : 1991,
            "key.modulename" : "main",
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 77698,
            "key.offset" : 77694,
            "key.parsed_declaration" : "var result = inflateInit2_(&stream, -MAX_WBITS, ZLIB_VERSION, streamSize)",
            "key.parsed_scope.end" : 1991,
            "key.parsed_scope.start" : 1991,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6resultL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let chunkSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 27,
            "key.line" : 1994,
            "key.modulename" : "main",
            "key.name" : "chunkSize",
            "key.namelength" : 9,
            "key.nameoffset" : 77857,
            "key.offset" : 77853,
            "key.parsed_declaration" : "let chunkSize = 0x8000_0000",
            "key.parsed_scope.end" : 1994,
            "key.parsed_scope.start" : 1994,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF05chunkL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var availableSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 28,
            "key.line" : 1995,
            "key.modulename" : "main",
            "key.name" : "availableSize",
            "key.namelength" : 13,
            "key.nameoffset" : 77889,
            "key.offset" : 77885,
            "key.parsed_declaration" : "var availableSize = dataSize",
            "key.parsed_scope.end" : 1995,
            "key.parsed_scope.start" : 1995,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF09availableL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var outputSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>outputSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 18,
            "key.line" : 1996,
            "key.modulename" : "main",
            "key.name" : "outputSize",
            "key.namelength" : 10,
            "key.nameoffset" : 77922,
            "key.offset" : 77918,
            "key.parsed_declaration" : "var outputSize = 0",
            "key.parsed_scope.end" : 1996,
            "key.parsed_scope.start" : 1996,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF06outputL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var availableOutputSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>availableOutputSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 45,
            "key.line" : 1997,
            "key.modulename" : "main",
            "key.name" : "availableOutputSize",
            "key.namelength" : 19,
            "key.nameoffset" : 77945,
            "key.offset" : 77941,
            "key.parsed_declaration" : "var availableOutputSize = unzippedDataSize[0]",
            "key.parsed_scope.end" : 1997,
            "key.parsed_scope.start" : 1997,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF015availableOutputL0L_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>var nextIn: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nextIn<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 92,
            "key.line" : 1998,
            "key.modulename" : "main",
            "key.name" : "nextIn",
            "key.namelength" : 6,
            "key.nameoffset" : 77995,
            "key.offset" : 77991,
            "key.parsed_declaration" : "var nextIn = UnsafeMutablePointer<UInt8>(mutating: data.assumingMemoryBound(to: UInt8.self))",
            "key.parsed_scope.end" : 1998,
            "key.parsed_scope.start" : 1998,
            "key.reusingastcontext" : false,
            "key.typename" : "UnsafeMutablePointer<UInt8>",
            "key.typeusr" : "$sSpys5UInt8VGD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF6nextInL_Spys5UInt8VGvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var nextOut: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nextOut<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 62,
            "key.line" : 1999,
            "key.modulename" : "main",
            "key.name" : "nextOut",
            "key.namelength" : 7,
            "key.nameoffset" : 78092,
            "key.offset" : 78088,
            "key.parsed_declaration" : "var nextOut = unzippedData.assumingMemoryBound(to: UInt8.self)",
            "key.parsed_scope.end" : 1999,
            "key.parsed_scope.start" : 1999,
            "key.reusingastcontext" : false,
            "key.typename" : "UnsafeMutablePointer<UInt8>",
            "key.typeusr" : "$sSpys5UInt8VGD",
            "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF7nextOutL_Spys5UInt8VGvp"
          }
        ],
        "key.typename" : "(UnsafeRawPointer, Int, UnsafeMutableRawPointer, UnsafeMutablePointer<Int>) -> Bool",
        "key.typeusr" : "$s4data0A4Size12unzippedData0cdB0SbSV_SiSvSpySiGtcD",
        "key.usr" : "s:4main5unzip33_FB88E2357CC5890C59B91A970B0C008ELL4data0K4Size12unzippedData0mnL0SbSV_SiSvSpySiGtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pAndEzm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 79147
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pAndEzm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 725,
        "key.line" : 2024,
        "key.modulename" : "main",
        "key.name" : "q4pAndEzm7Encode",
        "key.namelength" : 16,
        "key.nameoffset" : 79159,
        "key.offset" : 79155,
        "key.parsed_declaration" : "private let q4pAndEzm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q4pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7Encode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2024,
        "key.parsed_scope.start" : 2024,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main16q4pAndEzm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pAndEzm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 79882
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pAndEzm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 725,
        "key.line" : 2043,
        "key.modulename" : "main",
        "key.name" : "q5pAndEzm7Encode",
        "key.namelength" : 16,
        "key.nameoffset" : 79894,
        "key.offset" : 79890,
        "key.parsed_declaration" : "private let q5pAndEzm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q5pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7Encode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2043,
        "key.parsed_scope.start" : 2043,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main16q5pAndEzm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pAndEzm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 80617
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pAndEzm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 725,
        "key.line" : 2062,
        "key.modulename" : "main",
        "key.name" : "q6pAndEzm7Encode",
        "key.namelength" : 16,
        "key.nameoffset" : 80629,
        "key.offset" : 80625,
        "key.parsed_declaration" : "private let q6pAndEzm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q6pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7Encode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2062,
        "key.parsed_scope.start" : 2062,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main16q6pAndEzm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pAndEzm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 81352
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pAndEzm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 725,
        "key.line" : 2081,
        "key.modulename" : "main",
        "key.name" : "q7pAndEzm7Encode",
        "key.namelength" : 16,
        "key.nameoffset" : 81364,
        "key.offset" : 81360,
        "key.parsed_declaration" : "private let q7pAndEzm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q7pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7Encode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2081,
        "key.parsed_scope.start" : 2081,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main16q7pAndEzm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pAndEzm7Encode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 82087
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pAndEzm7Encode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 725,
        "key.line" : 2100,
        "key.modulename" : "main",
        "key.name" : "q8pAndEzm7Encode",
        "key.namelength" : 16,
        "key.nameoffset" : 82099,
        "key.offset" : 82095,
        "key.parsed_declaration" : "private let q8pAndEzm7Encode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q8pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7Encode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2100,
        "key.parsed_scope.start" : 2100,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main16q8pAndEzm7Encode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipAndZipEncode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 82822
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipAndZipEncode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 834,
        "key.line" : 2119,
        "key.modulename" : "main",
        "key.name" : "fpzipAndZipEncode",
        "key.namelength" : 17,
        "key.nameoffset" : 82834,
        "key.offset" : 82830,
        "key.parsed_declaration" : "private let fpzipAndZipEncode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    \/\/ Floating point to use fpzip\n    if dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F) {\n      return fpzipEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier)\n    }\n    return zipEncode(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2119,
        "key.parsed_scope.start" : 2119,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main17fpzipAndZipEncode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pAndEzm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 83666
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pAndEzm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 776,
        "key.line" : 2139,
        "key.modulename" : "main",
        "key.name" : "q4pAndEzm7EncodeWithExternalStore",
        "key.namelength" : 33,
        "key.nameoffset" : 83678,
        "key.offset" : 83674,
        "key.parsed_declaration" : "private let q4pAndEzm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q4pEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7EncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2139,
        "key.parsed_scope.start" : 2139,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main33q4pAndEzm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pAndEzm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 84452
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pAndEzm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 776,
        "key.line" : 2158,
        "key.modulename" : "main",
        "key.name" : "q5pAndEzm7EncodeWithExternalStore",
        "key.namelength" : 33,
        "key.nameoffset" : 84464,
        "key.offset" : 84460,
        "key.parsed_declaration" : "private let q5pAndEzm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q5pEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7EncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2158,
        "key.parsed_scope.start" : 2158,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main33q5pAndEzm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pAndEzm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 85238
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pAndEzm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 776,
        "key.line" : 2177,
        "key.modulename" : "main",
        "key.name" : "q6pAndEzm7EncodeWithExternalStore",
        "key.namelength" : 33,
        "key.nameoffset" : 85250,
        "key.offset" : 85246,
        "key.parsed_declaration" : "private let q6pAndEzm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q6pEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7EncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2177,
        "key.parsed_scope.start" : 2177,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main33q6pAndEzm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pAndEzm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 86024
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pAndEzm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 776,
        "key.line" : 2196,
        "key.modulename" : "main",
        "key.name" : "q7pAndEzm7EncodeWithExternalStore",
        "key.namelength" : 33,
        "key.nameoffset" : 86036,
        "key.offset" : 86032,
        "key.parsed_declaration" : "private let q7pAndEzm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q7pEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7EncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2196,
        "key.parsed_scope.start" : 2196,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main33q7pAndEzm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pAndEzm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 86810
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pAndEzm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 776,
        "key.line" : 2215,
        "key.modulename" : "main",
        "key.name" : "q8pAndEzm7EncodeWithExternalStore",
        "key.namelength" : 33,
        "key.nameoffset" : 86822,
        "key.offset" : 86818,
        "key.parsed_declaration" : "private let q8pAndEzm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard\n      q8pEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) == 0\n    else { return 1 }\n    return ezm7EncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2215,
        "key.parsed_scope.start" : 2215,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main33q8pAndEzm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let ezm7EncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 87596
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ezm7EncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1088,
        "key.line" : 2234,
        "key.modulename" : "main",
        "key.name" : "ezm7EncodeWithExternalStore",
        "key.namelength" : 27,
        "key.nameoffset" : 87608,
        "key.offset" : 87604,
        "key.parsed_declaration" : "private let ezm7EncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      ezm7Encode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0]\n    let offset = store.writeBytes(encoded, length: length)\n    guard offset >= 0 else { return 0 }\n    encodedSize[0] = 8 + 8  \/\/ Start offset, length.\n    encoded.storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(length), as: UInt64.self)\n    return 1\n  }",
        "key.parsed_scope.end" : 2234,
        "key.parsed_scope.start" : 2234,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main27ezm7EncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 88694
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1302,
        "key.line" : 2258,
        "key.modulename" : "main",
        "key.name" : "q4pEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 88706,
        "key.offset" : 88702,
        "key.parsed_declaration" : "private let q4pEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      q4pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0] - MemoryLayout<UInt32>.size\n    let offset = store.writeBytes(encoded + MemoryLayout<UInt32>.size, length: length)\n    encodedSize[0] = 8 + 8 + 8  \/\/ Block size, start offset, length.\n    encoded.storeBytes(of: UInt32(512), as: UInt32.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size * 2).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2258,
        "key.parsed_scope.start" : 2258,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q4pEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 90006
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1303,
        "key.line" : 2285,
        "key.modulename" : "main",
        "key.name" : "q5pEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 90018,
        "key.offset" : 90014,
        "key.parsed_declaration" : "private let q5pEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      q5pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0] - MemoryLayout<UInt32>.size\n    let offset = store.writeBytes(encoded + MemoryLayout<UInt32>.size, length: length)\n    encodedSize[0] = 8 + 8 + 8  \/\/ Block size, start offset, length.\n    encoded.storeBytes(of: UInt32(1024), as: UInt32.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size * 2).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2285,
        "key.parsed_scope.start" : 2285,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q5pEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 91319
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1303,
        "key.line" : 2312,
        "key.modulename" : "main",
        "key.name" : "q6pEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 91331,
        "key.offset" : 91327,
        "key.parsed_declaration" : "private let q6pEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      q6pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0] - MemoryLayout<UInt32>.size\n    let offset = store.writeBytes(encoded + MemoryLayout<UInt32>.size, length: length)\n    encodedSize[0] = 8 + 8 + 8  \/\/ Block size, start offset, length.\n    encoded.storeBytes(of: UInt32(4096), as: UInt32.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size * 2).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2312,
        "key.parsed_scope.start" : 2312,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q6pEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 92632
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1303,
        "key.line" : 2339,
        "key.modulename" : "main",
        "key.name" : "q7pEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 92644,
        "key.offset" : 92640,
        "key.parsed_declaration" : "private let q7pEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      q7pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0] - MemoryLayout<UInt32>.size\n    let offset = store.writeBytes(encoded + MemoryLayout<UInt32>.size, length: length)\n    encodedSize[0] = 8 + 8 + 8  \/\/ Block size, start offset, length.\n    encoded.storeBytes(of: UInt32(8192), as: UInt32.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size * 2).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2339,
        "key.parsed_scope.start" : 2339,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q7pEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 93945
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1305,
        "key.line" : 2366,
        "key.modulename" : "main",
        "key.name" : "q8pEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 93957,
        "key.offset" : 93953,
        "key.parsed_declaration" : "private let q8pEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      q8pEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0] - MemoryLayout<UInt32>.size\n    let offset = store.writeBytes(encoded + MemoryLayout<UInt32>.size, length: length)\n    encodedSize[0] = 8 + 8 + 8  \/\/ Block size, start offset, length.\n    encoded.storeBytes(of: UInt32(16_384), as: UInt32.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size * 2).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2366,
        "key.parsed_scope.start" : 2366,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q8pEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipAndZipEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 95260
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipAndZipEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 885,
        "key.line" : 2393,
        "key.modulename" : "main",
        "key.name" : "fpzipAndZipEncodeWithExternalStore",
        "key.namelength" : 34,
        "key.nameoffset" : 95272,
        "key.offset" : 95268,
        "key.parsed_declaration" : "private let fpzipAndZipEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    \/\/ Floating point to use fpzip\n    if dataType == Int32(CCV_64F) || dataType == Int32(CCV_32F) || dataType == Int32(CCV_16F) {\n      return fpzipEncodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier)\n    }\n    return zipEncodeWithExternalStore(\n      data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n      identifier)\n  }",
        "key.parsed_scope.end" : 2393,
        "key.parsed_scope.start" : 2393,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main34fpzipAndZipEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 96155
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1183,
        "key.line" : 2413,
        "key.modulename" : "main",
        "key.name" : "fpzipEncodeWithExternalStore",
        "key.namelength" : 28,
        "key.nameoffset" : 96167,
        "key.offset" : 96163,
        "key.parsed_declaration" : "private let fpzipEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      fpzipEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0]\n    let offset = store.writeBytes(encoded, length: length)\n    guard offset >= 0 else { return 0 }\n    encodedSize[0] = 8 + 8  \/\/ Start offset, length.\n    encoded.storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2413,
        "key.parsed_scope.start" : 2413,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main28fpzipEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let zipEncodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 97348
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zipEncodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1179,
        "key.line" : 2440,
        "key.modulename" : "main",
        "key.name" : "zipEncodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 97360,
        "key.offset" : 97356,
        "key.parsed_declaration" : "private let zipEncodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let encoded = encoded, let encodedSize = encodedSize,\n      zipEncode(\n        data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n        identifier) != 0\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = encodedSize[0]\n    let offset = store.writeBytes(encoded, length: length)\n    guard offset >= 0 else { return 0 }\n    encodedSize[0] = 8 + 8  \/\/ Start offset, length.\n    encoded.storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = identifier[0] | 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2440,
        "key.parsed_scope.start" : 2440,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26zipEncodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let encodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 98537
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 2467,
        "key.modulename" : "main",
        "key.name" : "encodeWithExternalStore",
        "key.namelength" : 23,
        "key.nameoffset" : 98549,
        "key.offset" : 98545,
        "key.parsed_declaration" : "private let encodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n    UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, context, encoded, encodedSize, params,\n    identifier\n    in\n    guard let data = data, let dimensions = dimensions, var encoded = encoded,\n      let encodedSize = encodedSize, dimensionCount > 0\n    else { return 0 }\n    guard MemoryLayout<UInt64>.size * 2 <= encodedSize[0] else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let length = dataSize\n    let offset = store.writeBytes(data, length: length)\n    guard offset >= 0 else { return 0 }\n    encodedSize[0] = 8 + 8  \/\/ Start offset, length.\n    encoded.storeBytes(of: UInt64(offset), as: UInt64.self)\n    (encoded + MemoryLayout<UInt64>.size).storeBytes(of: UInt64(length), as: UInt64.self)\n    if let identifier = identifier {\n      identifier[0] = 0x1000_0000\n    }\n    return 1\n  }",
        "key.parsed_scope.end" : 2467,
        "key.parsed_scope.start" : 2467,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main23encodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q4pDecodeJit(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 99702
          }
        ],
        "key.bodylength" : 1984,
        "key.bodyoffset" : 100141,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q4pDecodeJit<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 2416,
        "key.line" : 2493,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 415,
        "key.nameoffset" : 99715,
        "key.offset" : 99710,
        "key.parsed_declaration" : "private func q4pDecodeJit(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 2550,
        "key.parsed_scope.start" : 2493,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q4pDecodeJit<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 2521,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 100980,
            "key.offset" : 100976,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 2521,
            "key.parsed_scope.start" : 2521,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let palettizeParams: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>palettizeParams<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 75,
            "key.line" : 2534,
            "key.modulename" : "main",
            "key.name" : "palettizeParams",
            "key.namelength" : 15,
            "key.nameoffset" : 101419,
            "key.offset" : 101415,
            "key.parsed_declaration" : "let palettizeParams = ccv_nnc_tensor_palettize(params, 4, Int32(blockSize))",
            "key.parsed_scope.end" : 2534,
            "key.parsed_scope.start" : 2534,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15palettizeParamsL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decodedDataSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodedDataSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 79,
            "key.line" : 2535,
            "key.modulename" : "main",
            "key.name" : "decodedDataSize",
            "key.namelength" : 15,
            "key.nameoffset" : 101497,
            "key.offset" : 101493,
            "key.parsed_declaration" : "let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)",
            "key.parsed_scope.end" : 2535,
            "key.parsed_scope.start" : 2535,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15decodedDataSizeL0_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 2545,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 101914,
            "key.offset" : 101910,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 2545,
            "key.parsed_scope.start" : 2545,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decoded: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoded<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 36,
            "key.line" : 2546,
            "key.modulename" : "main",
            "key.name" : "decoded",
            "key.namelength" : 7,
            "key.nameoffset" : 102005,
            "key.offset" : 102001,
            "key.parsed_declaration" : "let decoded = decoded ?? tensorData!",
            "key.parsed_scope.end" : 2546,
            "key.parsed_scope.start" : 2546,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF7decodedL1_Xevp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 102128
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 810,
        "key.line" : 2552,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeJit",
        "key.namelength" : 12,
        "key.nameoffset" : 102140,
        "key.offset" : 102136,
        "key.parsed_declaration" : "private let q4pDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q4pDecodeJit(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2552,
        "key.parsed_scope.start" : 2552,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q4pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main12q4pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q5pDecodeJit(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 102948
          }
        ],
        "key.bodylength" : 1984,
        "key.bodyoffset" : 103387,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q5pDecodeJit<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 2416,
        "key.line" : 2569,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 415,
        "key.nameoffset" : 102961,
        "key.offset" : 102956,
        "key.parsed_declaration" : "private func q5pDecodeJit(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 2626,
        "key.parsed_scope.start" : 2569,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q5pDecodeJit<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 2597,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 104226,
            "key.offset" : 104222,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 2597,
            "key.parsed_scope.start" : 2597,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let palettizeParams: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>palettizeParams<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 75,
            "key.line" : 2610,
            "key.modulename" : "main",
            "key.name" : "palettizeParams",
            "key.namelength" : 15,
            "key.nameoffset" : 104665,
            "key.offset" : 104661,
            "key.parsed_declaration" : "let palettizeParams = ccv_nnc_tensor_palettize(params, 5, Int32(blockSize))",
            "key.parsed_scope.end" : 2610,
            "key.parsed_scope.start" : 2610,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15palettizeParamsL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decodedDataSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodedDataSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 79,
            "key.line" : 2611,
            "key.modulename" : "main",
            "key.name" : "decodedDataSize",
            "key.namelength" : 15,
            "key.nameoffset" : 104743,
            "key.offset" : 104739,
            "key.parsed_declaration" : "let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)",
            "key.parsed_scope.end" : 2611,
            "key.parsed_scope.start" : 2611,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15decodedDataSizeL0_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 2621,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 105160,
            "key.offset" : 105156,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 2621,
            "key.parsed_scope.start" : 2621,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decoded: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoded<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 36,
            "key.line" : 2622,
            "key.modulename" : "main",
            "key.name" : "decoded",
            "key.namelength" : 7,
            "key.nameoffset" : 105251,
            "key.offset" : 105247,
            "key.parsed_declaration" : "let decoded = decoded ?? tensorData!",
            "key.parsed_scope.end" : 2622,
            "key.parsed_scope.start" : 2622,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF7decodedL1_Xevp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 105374
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 810,
        "key.line" : 2628,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeJit",
        "key.namelength" : 12,
        "key.nameoffset" : 105386,
        "key.offset" : 105382,
        "key.parsed_declaration" : "private let q5pDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q5pDecodeJit(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2628,
        "key.parsed_scope.start" : 2628,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q5pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main12q5pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q6pDecodeJit(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 106194
          }
        ],
        "key.bodylength" : 1984,
        "key.bodyoffset" : 106633,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q6pDecodeJit<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 2416,
        "key.line" : 2645,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 415,
        "key.nameoffset" : 106207,
        "key.offset" : 106202,
        "key.parsed_declaration" : "private func q6pDecodeJit(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 2702,
        "key.parsed_scope.start" : 2645,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q6pDecodeJit<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 2673,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 107472,
            "key.offset" : 107468,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 2673,
            "key.parsed_scope.start" : 2673,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let palettizeParams: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>palettizeParams<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 75,
            "key.line" : 2686,
            "key.modulename" : "main",
            "key.name" : "palettizeParams",
            "key.namelength" : 15,
            "key.nameoffset" : 107911,
            "key.offset" : 107907,
            "key.parsed_declaration" : "let palettizeParams = ccv_nnc_tensor_palettize(params, 6, Int32(blockSize))",
            "key.parsed_scope.end" : 2686,
            "key.parsed_scope.start" : 2686,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15palettizeParamsL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decodedDataSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodedDataSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 79,
            "key.line" : 2687,
            "key.modulename" : "main",
            "key.name" : "decodedDataSize",
            "key.namelength" : 15,
            "key.nameoffset" : 107989,
            "key.offset" : 107985,
            "key.parsed_declaration" : "let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)",
            "key.parsed_scope.end" : 2687,
            "key.parsed_scope.start" : 2687,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15decodedDataSizeL0_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 2697,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 108406,
            "key.offset" : 108402,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 2697,
            "key.parsed_scope.start" : 2697,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decoded: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoded<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 36,
            "key.line" : 2698,
            "key.modulename" : "main",
            "key.name" : "decoded",
            "key.namelength" : 7,
            "key.nameoffset" : 108497,
            "key.offset" : 108493,
            "key.parsed_declaration" : "let decoded = decoded ?? tensorData!",
            "key.parsed_scope.end" : 2698,
            "key.parsed_scope.start" : 2698,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF7decodedL1_Xevp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 108620
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 810,
        "key.line" : 2704,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeJit",
        "key.namelength" : 12,
        "key.nameoffset" : 108632,
        "key.offset" : 108628,
        "key.parsed_declaration" : "private let q6pDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q6pDecodeJit(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2704,
        "key.parsed_scope.start" : 2704,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q6pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main12q6pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q7pDecodeJit(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 109440
          }
        ],
        "key.bodylength" : 1984,
        "key.bodyoffset" : 109879,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q7pDecodeJit<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 2416,
        "key.line" : 2721,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 415,
        "key.nameoffset" : 109453,
        "key.offset" : 109448,
        "key.parsed_declaration" : "private func q7pDecodeJit(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 2778,
        "key.parsed_scope.start" : 2721,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q7pDecodeJit<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 2749,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 110718,
            "key.offset" : 110714,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 2749,
            "key.parsed_scope.start" : 2749,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let palettizeParams: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>palettizeParams<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 75,
            "key.line" : 2762,
            "key.modulename" : "main",
            "key.name" : "palettizeParams",
            "key.namelength" : 15,
            "key.nameoffset" : 111157,
            "key.offset" : 111153,
            "key.parsed_declaration" : "let palettizeParams = ccv_nnc_tensor_palettize(params, 7, Int32(blockSize))",
            "key.parsed_scope.end" : 2762,
            "key.parsed_scope.start" : 2762,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15palettizeParamsL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decodedDataSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodedDataSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 79,
            "key.line" : 2763,
            "key.modulename" : "main",
            "key.name" : "decodedDataSize",
            "key.namelength" : 15,
            "key.nameoffset" : 111235,
            "key.offset" : 111231,
            "key.parsed_declaration" : "let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)",
            "key.parsed_scope.end" : 2763,
            "key.parsed_scope.start" : 2763,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15decodedDataSizeL0_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 2773,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 111652,
            "key.offset" : 111648,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 2773,
            "key.parsed_scope.start" : 2773,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decoded: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoded<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 36,
            "key.line" : 2774,
            "key.modulename" : "main",
            "key.name" : "decoded",
            "key.namelength" : 7,
            "key.nameoffset" : 111743,
            "key.offset" : 111739,
            "key.parsed_declaration" : "let decoded = decoded ?? tensorData!",
            "key.parsed_scope.end" : 2774,
            "key.parsed_scope.start" : 2774,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF7decodedL1_Xevp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 111866
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 810,
        "key.line" : 2780,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeJit",
        "key.namelength" : 12,
        "key.nameoffset" : 111878,
        "key.offset" : 111874,
        "key.parsed_declaration" : "private let q7pDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q7pDecodeJit(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2780,
        "key.parsed_scope.start" : 2780,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q7pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main12q7pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func q8pDecodeJit(blockSize: <Type usr=\"s:Si\">Int<\/Type>, _ data: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, _ dataSize: <Type usr=\"s:Si\">Int<\/Type>, _ dataType: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ dimensions: <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, _ dimensionCount: <Type usr=\"s:s5Int32V\">Int32<\/Type>, _ identifier: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, _ context: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ params: ccv_nnc_tensor_param_t, _ tensorOut: UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, _ decoded: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, _ decodedSize: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 112686
          }
        ],
        "key.bodylength" : 2073,
        "key.bodyoffset" : 113125,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>q8pDecodeJit<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>blockSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dimensionCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>identifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>params<\/decl.var.parameter.name>: <decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tensorOut<\/decl.var.parameter.name>: <decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoded<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodedSize<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 2505,
        "key.line" : 2797,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)",
        "key.namelength" : 415,
        "key.nameoffset" : 112699,
        "key.offset" : 112694,
        "key.parsed_declaration" : "private func q8pDecodeJit(\n  blockSize: Int, _ data: UnsafeRawPointer?, _ dataSize: Int, _ dataType: Int32,\n  _ dimensions: UnsafePointer<Int32>?, _ dimensionCount: Int32, _ identifier: UInt32,\n  _ context: UnsafeMutableRawPointer?, _ params: ccv_nnc_tensor_param_t,\n  _ tensorOut: UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n  _ decoded: UnsafeMutableRawPointer?, _ decodedSize: UnsafeMutablePointer<Int>?\n) -> Int32",
        "key.parsed_scope.end" : 2855,
        "key.parsed_scope.start" : 2797,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp\">q8pDecodeJit<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var numberOfElements: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberOfElements<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 41,
            "key.line" : 2825,
            "key.modulename" : "main",
            "key.name" : "numberOfElements",
            "key.namelength" : 16,
            "key.nameoffset" : 113964,
            "key.offset" : 113960,
            "key.parsed_declaration" : "var numberOfElements = Int(dimensions[0])",
            "key.parsed_scope.end" : 2825,
            "key.parsed_scope.start" : 2825,
            "key.reusingastcontext" : false,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF16numberOfElementsL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let palettizeParams: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>palettizeParams<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 75,
            "key.line" : 2839,
            "key.modulename" : "main",
            "key.name" : "palettizeParams",
            "key.namelength" : 15,
            "key.nameoffset" : 114492,
            "key.offset" : 114488,
            "key.parsed_declaration" : "let palettizeParams = ccv_nnc_tensor_palettize(params, 8, Int32(blockSize))",
            "key.parsed_scope.end" : 2839,
            "key.parsed_scope.start" : 2839,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15palettizeParamsL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decodedDataSize: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodedDataSize<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 79,
            "key.line" : 2840,
            "key.modulename" : "main",
            "key.name" : "decodedDataSize",
            "key.namelength" : 15,
            "key.nameoffset" : 114570,
            "key.offset" : 114566,
            "key.parsed_declaration" : "let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)",
            "key.parsed_scope.end" : 2840,
            "key.parsed_scope.start" : 2840,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF15decodedDataSizeL0_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let tensorData: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensorData<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 88,
            "key.line" : 2850,
            "key.modulename" : "main",
            "key.name" : "tensorData",
            "key.namelength" : 10,
            "key.nameoffset" : 114987,
            "key.offset" : 114983,
            "key.parsed_declaration" : "let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }",
            "key.parsed_scope.end" : 2850,
            "key.parsed_scope.start" : 2850,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF10tensorDataL_Xevp"
          },
          {
            "key.annotated_decl" : "<Declaration>let decoded: &lt;&lt;error type&gt;&gt;<\/Declaration>",
            "key.column" : 7,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoded<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 36,
            "key.line" : 2851,
            "key.modulename" : "main",
            "key.name" : "decoded",
            "key.namelength" : 7,
            "key.nameoffset" : 115078,
            "key.offset" : 115074,
            "key.parsed_declaration" : "let decoded = decoded ?? tensorData!",
            "key.parsed_scope.end" : 2851,
            "key.parsed_scope.start" : 2851,
            "key.reusingastcontext" : false,
            "key.typename" : "<<error type>>",
            "key.typeusr" : "$sXeD",
            "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF7decodedL1_Xevp"
          }
        ],
        "key.typename" : "(Int, UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?, <<error type>>, <<error type>>, UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?) -> Int32",
        "key.typeusr" : "$syXeXecD",
        "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 115201
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 810,
        "key.line" : 2857,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeJit",
        "key.namelength" : 12,
        "key.nameoffset" : 115213,
        "key.offset" : 115209,
        "key.parsed_declaration" : "private let q8pDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard var data = data, dataSize > MemoryLayout<UInt32>.size else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    data += MemoryLayout<UInt32>.size\n    return q8pDecodeJit(\n      blockSize: blockSize, data, dataSize - MemoryLayout<UInt32>.size, dataType, dimensions,\n      dimensionCount, identifier, context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2857,
        "key.parsed_scope.start" : 2857,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLyXeXeF\">q8pDecodeJit(blockSize:_:_:_:_:_:_:_:_:_:_:_:)<\/RelatedName>"
          }
        ],
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main12q8pDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecodeJit: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 116021
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecodeJit<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1902,
        "key.line" : 2874,
        "key.modulename" : "main",
        "key.name" : "uDecodeJit",
        "key.namelength" : 10,
        "key.nameoffset" : 116033,
        "key.offset" : 116029,
        "key.parsed_declaration" : "private let uDecodeJit:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    switch identifier {\n    case 0xf7217:\n      return fpzipDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7Decode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return 0\n    }\n  }",
        "key.parsed_scope.end" : 2874,
        "key.parsed_scope.start" : 2874,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main10uDecodeJit33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let fpzipDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 117933
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzipDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1093,
        "key.line" : 2921,
        "key.modulename" : "main",
        "key.name" : "fpzipDecodeWithExternalStore",
        "key.namelength" : 28,
        "key.nameoffset" : 117945,
        "key.offset" : 117941,
        "key.parsed_declaration" : "private let fpzipDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 else { return 0 }\n    let offset = Int(data.load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    let fileData = UnsafeRawPointer(mappedData)\n    return fpzipDecode(\n      fileData, length, dataType, dimensions, dimensionCount, identifier, context, params,\n      tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2921,
        "key.parsed_scope.start" : 2921,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main28fpzipDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let zipDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 119036
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zipDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1089,
        "key.line" : 2943,
        "key.modulename" : "main",
        "key.name" : "zipDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 119048,
        "key.offset" : 119044,
        "key.parsed_declaration" : "private let zipDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 else { return 0 }\n    let offset = Int(data.load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    let fileData = UnsafeRawPointer(mappedData)\n    return zipDecode(\n      fileData, length, dataType, dimensions, dimensionCount, identifier, context, params,\n      tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2943,
        "key.parsed_scope.start" : 2943,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26zipDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let ezm7DecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 120135
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ezm7DecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1091,
        "key.line" : 2965,
        "key.modulename" : "main",
        "key.name" : "ezm7DecodeWithExternalStore",
        "key.namelength" : 27,
        "key.nameoffset" : 120147,
        "key.offset" : 120143,
        "key.parsed_declaration" : "private let ezm7DecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 else { return 0 }\n    let offset = Int(data.load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    let fileData = UnsafeRawPointer(mappedData)\n    return ezm7Decode(\n      fileData, length, dataType, dimensions, dimensionCount, identifier, context, params,\n      tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 2965,
        "key.parsed_scope.start" : 2965,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main27ezm7DecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let decodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 121236
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1276,
        "key.line" : 2987,
        "key.modulename" : "main",
        "key.name" : "decodeWithExternalStore",
        "key.namelength" : 23,
        "key.nameoffset" : 121248,
        "key.offset" : 121244,
        "key.parsed_declaration" : "private let decodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    if tensorOut!.pointee == nil {\n      tensorOut!.pointee = ccv_nnc_tensor_new(nil, params, 0)\n    }\n    let tensorData = tensorOut?.pointee?.pointee.data.u8.map { UnsafeMutableRawPointer($0) }\n    guard let data = data, let dimensions = dimensions, let decoded = decoded ?? tensorData,\n      let decodedSize = decodedSize, dimensionCount > 0, dataSize >= 8 + 8\n    else { return 0 }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let offset = Int(data.load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    guard let bytes = store.loadBytes(offset: offset, length: length) else { return 0 }\n    let copiedSize = min(Int(length), decodedSize[0])\n    memcpy(decoded, bytes, copiedSize)\n    decodedSize[0] = copiedSize\n    return 1\n  }",
        "key.parsed_scope.end" : 2987,
        "key.parsed_scope.start" : 2987,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main23decodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 122522
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3013,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeJitWithExternalStore",
        "key.namelength" : 29,
        "key.nameoffset" : 122534,
        "key.offset" : 122530,
        "key.parsed_declaration" : "private let q4pDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q4pDecodeJit(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3013,
        "key.parsed_scope.start" : 3013,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q4pDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 123693
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3035,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeJitWithExternalStore",
        "key.namelength" : 29,
        "key.nameoffset" : 123705,
        "key.offset" : 123701,
        "key.parsed_declaration" : "private let q5pDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q5pDecodeJit(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3035,
        "key.parsed_scope.start" : 3035,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q5pDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 124864
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3057,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeJitWithExternalStore",
        "key.namelength" : 29,
        "key.nameoffset" : 124876,
        "key.offset" : 124872,
        "key.parsed_declaration" : "private let q6pDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q6pDecodeJit(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3057,
        "key.parsed_scope.start" : 3057,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q6pDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 126035
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3079,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeJitWithExternalStore",
        "key.namelength" : 29,
        "key.nameoffset" : 126047,
        "key.offset" : 126043,
        "key.parsed_declaration" : "private let q7pDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q7pDecodeJit(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3079,
        "key.parsed_scope.start" : 3079,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q7pDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 127206
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3101,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeJitWithExternalStore",
        "key.namelength" : 29,
        "key.nameoffset" : 127218,
        "key.offset" : 127214,
        "key.parsed_declaration" : "private let q8pDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q8pDecodeJit(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3101,
        "key.parsed_scope.start" : 3101,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q8pDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecodeJitWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 128377
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecodeJitWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2520,
        "key.line" : 3123,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeJitWithExternalEager",
        "key.namelength" : 29,
        "key.nameoffset" : 128389,
        "key.offset" : 128385,
        "key.parsed_declaration" : "private let q4pDecodeJitWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q4pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q4pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 4, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q4pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3123,
        "key.parsed_scope.start" : 3123,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q4pDecodeJitWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecodeJitWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 130907
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecodeJitWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2520,
        "key.line" : 3176,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeJitWithExternalEager",
        "key.namelength" : 29,
        "key.nameoffset" : 130919,
        "key.offset" : 130915,
        "key.parsed_declaration" : "private let q5pDecodeJitWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q5pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q5pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 5, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q5pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3176,
        "key.parsed_scope.start" : 3176,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q5pDecodeJitWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecodeJitWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 133437
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecodeJitWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2520,
        "key.line" : 3229,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeJitWithExternalEager",
        "key.namelength" : 29,
        "key.nameoffset" : 133449,
        "key.offset" : 133445,
        "key.parsed_declaration" : "private let q6pDecodeJitWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q6pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q6pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 6, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q6pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3229,
        "key.parsed_scope.start" : 3229,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q6pDecodeJitWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecodeJitWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 135967
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecodeJitWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2520,
        "key.line" : 3282,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeJitWithExternalEager",
        "key.namelength" : 29,
        "key.nameoffset" : 135979,
        "key.offset" : 135975,
        "key.parsed_declaration" : "private let q7pDecodeJitWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q7pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q7pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 7, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q7pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3282,
        "key.parsed_scope.start" : 3282,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q7pDecodeJitWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecodeJitWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 138497
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecodeJitWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2611,
        "key.line" : 3335,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeJitWithExternalEager",
        "key.namelength" : 29,
        "key.nameoffset" : 138509,
        "key.offset" : 138505,
        "key.parsed_declaration" : "private let q8pDecodeJitWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q8pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % (256 * 4)) == 0\n        && (blockSize % (256 * 4)) == 0  \/\/ We support non-block size length for q8p only.\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q8pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 8, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q8pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3335,
        "key.parsed_scope.start" : 3335,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main29q8pDecodeJitWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let decodeWithExternalEager: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 141118
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodeWithExternalEager<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1154,
        "key.line" : 3389,
        "key.modulename" : "main",
        "key.name" : "decodeWithExternalEager",
        "key.namelength" : 23,
        "key.nameoffset" : 141130,
        "key.offset" : 141126,
        "key.parsed_declaration" : "private let decodeWithExternalEager:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let decodedSize = decodedSize, dimensionCount > 0 else { return 0 }\n    guard tensorOut!.pointee == nil, dataType == params.datatype else {\n      return decodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let offset = Int(data.load(as: UInt64.self))\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      params, store.externalStore, off_t(offset), Int32(CCV_NNC_TENSOR_MEMORY_MAP_EAGER))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3389,
        "key.parsed_scope.start" : 3389,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main23decodeWithExternalEager33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecodeJitWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 142282
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecodeJitWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2436,
        "key.line" : 3412,
        "key.modulename" : "main",
        "key.name" : "uDecodeJitWithExternalStore",
        "key.namelength" : 27,
        "key.nameoffset" : 142294,
        "key.offset" : 142290,
        "key.parsed_declaration" : "private let uDecodeJitWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard (identifier & 0x1000_0000) != 0 else {\n      return uDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    switch identifier & 0x0fff_ffff {\n    case 0xf7217:\n      return fpzipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7DecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecodeJitWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecodeJitWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecodeJitWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecodeJitWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecodeJitWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return decodeWithExternalEager(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n  }",
        "key.parsed_scope.end" : 3412,
        "key.parsed_scope.start" : 3412,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main27uDecodeJitWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 144728
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2527,
        "key.line" : 3466,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeJitWithExternalOnDemand",
        "key.namelength" : 32,
        "key.nameoffset" : 144740,
        "key.offset" : 144736,
        "key.parsed_declaration" : "private let q4pDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q4pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q4pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 4, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q4pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3466,
        "key.parsed_scope.start" : 3466,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main32q4pDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 147265
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2527,
        "key.line" : 3519,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeJitWithExternalOnDemand",
        "key.namelength" : 32,
        "key.nameoffset" : 147277,
        "key.offset" : 147273,
        "key.parsed_declaration" : "private let q5pDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q5pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q5pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 5, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q5pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3519,
        "key.parsed_scope.start" : 3519,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main32q5pDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 149802
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2527,
        "key.line" : 3572,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeJitWithExternalOnDemand",
        "key.namelength" : 32,
        "key.nameoffset" : 149814,
        "key.offset" : 149810,
        "key.parsed_declaration" : "private let q6pDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q6pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q6pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 6, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q6pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3572,
        "key.parsed_scope.start" : 3572,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main32q6pDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 152339
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2527,
        "key.line" : 3625,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeJitWithExternalOnDemand",
        "key.namelength" : 32,
        "key.nameoffset" : 152351,
        "key.offset" : 152347,
        "key.parsed_declaration" : "private let q7pDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q7pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % blockSize) == 0\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q7pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 7, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q7pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3625,
        "key.parsed_scope.start" : 3625,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main32q7pDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 154876
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2618,
        "key.line" : 3678,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeJitWithExternalOnDemand",
        "key.namelength" : 32,
        "key.nameoffset" : 154888,
        "key.offset" : 154884,
        "key.parsed_declaration" : "private let q8pDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let dimensions = dimensions, let decodedSize = decodedSize,\n      dimensionCount > 0, dataSize >= 8 + 8 + 8\n    else { return 0 }\n    guard tensorOut!.pointee == nil else {\n      return q8pDecodeJitWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    var numberOfElements = Int(dimensions[0])\n    for i in 1..<Int(dimensionCount) {\n      numberOfElements *= Int(dimensions[i])\n    }\n    guard\n      TensorShape(dims: params.dim).reduce(1, *) == numberOfElements\n        && (numberOfElements % (256 * 4)) == 0\n        && (blockSize % (256 * 4)) == 0  \/\/ We support non-block size length for q8p only.\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q8pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    let palettizeParams = ccv_nnc_tensor_palettize(params, 8, Int32(blockSize))\n    let decodedDataSize = ccv_nnc_tensor_data_size_without_padding(palettizeParams)\n    guard\n      length >= decodedDataSize && decodedSize[0] >= decodedDataSize\n    else {\n      let mappedData = store.loadBytes(offset: offset, length: length)\n      return q8pDecodeJit(\n        blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n        context, params, tensorOut, decoded, decodedSize)\n    }\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      palettizeParams, store.externalStore, off_t(offset),\n      Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3678,
        "key.parsed_scope.start" : 3678,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main32q8pDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let decodeWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 157504
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decodeWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1161,
        "key.line" : 3732,
        "key.modulename" : "main",
        "key.name" : "decodeWithExternalOnDemand",
        "key.namelength" : 26,
        "key.nameoffset" : 157516,
        "key.offset" : 157512,
        "key.parsed_declaration" : "private let decodeWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard let data = data, let decodedSize = decodedSize, dimensionCount > 0 else { return 0 }\n    guard tensorOut!.pointee == nil, dataType == params.datatype else {\n      return decodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    let offset = Int(data.load(as: UInt64.self))\n    tensorOut!.pointee = ccv_nnc_tensor_new_from_file(\n      params, store.externalStore, off_t(offset), Int32(CCV_NNC_TENSOR_MEMORY_MAP_ON_DEMAND))\n    decodedSize[0] = 0  \/\/ Mark that there is nothing to be copied.\n    return 1\n  }",
        "key.parsed_scope.end" : 3732,
        "key.parsed_scope.start" : 3732,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26decodeWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecodeJitWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 158675
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecodeJitWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2457,
        "key.line" : 3755,
        "key.modulename" : "main",
        "key.name" : "uDecodeJitWithExternalOnDemand",
        "key.namelength" : 30,
        "key.nameoffset" : 158687,
        "key.offset" : 158683,
        "key.parsed_declaration" : "private let uDecodeJitWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard (identifier & 0x1000_0000) != 0 else {\n      return uDecodeJit(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    switch identifier & 0x0fff_ffff {\n    case 0xf7217:\n      return fpzipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7DecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecodeJitWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecodeJitWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecodeJitWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecodeJitWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecodeJitWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return decodeWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n  }",
        "key.parsed_scope.end" : 3755,
        "key.parsed_scope.start" : 3755,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main30uDecodeJitWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q4pDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 161142
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4pDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 3809,
        "key.modulename" : "main",
        "key.name" : "q4pDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 161154,
        "key.offset" : 161150,
        "key.parsed_declaration" : "private let q4pDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q4pDecode(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3809,
        "key.parsed_scope.start" : 3809,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q4pDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q5pDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 162307
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5pDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 3831,
        "key.modulename" : "main",
        "key.name" : "q5pDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 162319,
        "key.offset" : 162315,
        "key.parsed_declaration" : "private let q5pDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q5pDecode(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3831,
        "key.parsed_scope.start" : 3831,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q5pDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q6pDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 163472
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6pDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 3853,
        "key.modulename" : "main",
        "key.name" : "q6pDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 163484,
        "key.offset" : 163480,
        "key.parsed_declaration" : "private let q6pDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q6pDecode(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3853,
        "key.parsed_scope.start" : 3853,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q6pDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q7pDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 164637
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7pDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 3875,
        "key.modulename" : "main",
        "key.name" : "q7pDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 164649,
        "key.offset" : 164645,
        "key.parsed_declaration" : "private let q7pDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q7pDecode(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3875,
        "key.parsed_scope.start" : 3875,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q7pDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let q8pDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 165802
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8pDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1155,
        "key.line" : 3897,
        "key.modulename" : "main",
        "key.name" : "q8pDecodeWithExternalStore",
        "key.namelength" : 26,
        "key.nameoffset" : 165814,
        "key.offset" : 165810,
        "key.parsed_declaration" : "private let q8pDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    assert((identifier & 0x1000_0000) != 0)\n    let identifier = identifier & 0x0fff_ffff\n    let store = Unmanaged<DynamicGraph._Store>.fromOpaque(context!).takeUnretainedValue()\n    guard let data = data, dataSize >= 8 + 8 + 8 else { return 0 }\n    let blockSize = Int(data.load(as: UInt32.self))\n    let offset = Int((data + MemoryLayout<UInt64>.size).load(as: UInt64.self))\n    let length = Int((data + MemoryLayout<UInt64>.size * 2).load(as: UInt64.self))\n    let mappedData = store.loadBytes(offset: offset, length: length)\n    return q8pDecode(\n      blockSize: blockSize, mappedData, length, dataType, dimensions, dimensionCount, identifier,\n      context, params, tensorOut, decoded, decodedSize)\n  }",
        "key.parsed_scope.end" : 3897,
        "key.parsed_scope.start" : 3897,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main26q8pDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecodeWithExternalOnDemand: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 166967
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecodeWithExternalOnDemand<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2421,
        "key.line" : 3919,
        "key.modulename" : "main",
        "key.name" : "uDecodeWithExternalOnDemand",
        "key.namelength" : 27,
        "key.nameoffset" : 166979,
        "key.offset" : 166975,
        "key.parsed_declaration" : "private let uDecodeWithExternalOnDemand:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard (identifier & 0x1000_0000) != 0 else {\n      return uDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    switch identifier & 0x0fff_ffff {\n    case 0xf7217:\n      return fpzipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7DecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return decodeWithExternalOnDemand(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n  }",
        "key.parsed_scope.end" : 3919,
        "key.parsed_scope.start" : 3919,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main27uDecodeWithExternalOnDemand33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecodeWithExternalStore: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 169398
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecodeWithExternalStore<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 2415,
        "key.line" : 3973,
        "key.modulename" : "main",
        "key.name" : "uDecodeWithExternalStore",
        "key.namelength" : 24,
        "key.nameoffset" : 169410,
        "key.offset" : 169406,
        "key.parsed_declaration" : "private let uDecodeWithExternalStore:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    guard (identifier & 0x1000_0000) != 0 else {\n      return uDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n    switch identifier & 0x0fff_ffff {\n    case 0xf7217:\n      return fpzipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7DecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return decodeWithExternalStore(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    }\n  }",
        "key.parsed_scope.end" : 3973,
        "key.parsed_scope.start" : 3973,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main24uDecodeWithExternalStore33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let uDecode: @convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 171823
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>uDecode<\/decl.name>: <decl.var.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 1884,
        "key.line" : 4027,
        "key.modulename" : "main",
        "key.name" : "uDecode",
        "key.namelength" : 7,
        "key.nameoffset" : 171835,
        "key.offset" : 171831,
        "key.parsed_declaration" : "private let uDecode:\n  @convention(c) (\n    UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32, UnsafeMutableRawPointer?,\n    ccv_nnc_tensor_param_t, UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n    UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n  ) -> Int32 = {\n    data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params, tensorOut,\n    decoded, decodedSize\n    in\n    switch identifier {\n    case 0xf7217:\n      return fpzipDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x217:\n      return zipDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x511:\n      return ezm7Decode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e4b:\n      return q4pDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e5b:\n      return q5pDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e6b:\n      return q6pDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e7b:\n      return q7pDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    case 0x8a1e8b:\n      return q8pDecode(\n        data, dataSize, dataType, dimensions, dimensionCount, identifier, context, params,\n        tensorOut, decoded, decodedSize)\n    default:\n      return 0\n    }\n  }",
        "key.parsed_scope.end" : 4027,
        "key.parsed_scope.start" : 4027,
        "key.reusingastcontext" : false,
        "key.typename" : "<<error type>>",
        "key.typeusr" : "$sXeD",
        "key.usr" : "s:4main7uDecode33_FB88E2357CC5890C59B91A970B0C008ELLXevp"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class DynamicGraph<\/Declaration>",
        "key.bodylength" : 38991,
        "key.bodyoffset" : 173741,
        "key.column" : 20,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class DynamicGraph",
        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/DynamicGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/DynamicGraph.swift\" line=\"5\" column=\"20\"><Name>DynamicGraph<\/Name><USR>s:4main12DynamicGraphC<\/USR><Declaration>public final class DynamicGraph<\/Declaration><CommentParts><Abstract><Para>A dynamic graph is a workspace for computations. All tensor variables can be tracked from a dynamic graph.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "DynamicGraph",
        "key.doc.type" : "Class",
        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/DynamicGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DynamicGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 39016,
        "key.line" : 5,
        "key.modulename" : "main",
        "key.name" : "DynamicGraph",
        "key.namelength" : 12,
        "key.nameoffset" : 173727,
        "key.offset" : 173717,
        "key.parsed_declaration" : "extension DynamicGraph",
        "key.parsed_scope.end" : 5057,
        "key.parsed_scope.start" : 4074,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>@usableFromInline final class _Store<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.final",
                "key.length" : 5,
                "key.offset" : 173765
              },
              {
                "key.attribute" : "source.decl.attribute.usableFromInline",
                "key.length" : 17,
                "key.offset" : 173745
              }
            ],
            "key.bodylength" : 3379,
            "key.bodyoffset" : 173785,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>_Store<\/decl.name><\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 3394,
            "key.line" : 4077,
            "key.modulename" : "main",
            "key.name" : "_Store",
            "key.namelength" : 6,
            "key.nameoffset" : 173777,
            "key.offset" : 173771,
            "key.parsed_declaration" : "final class _Store",
            "key.parsed_scope.end" : 4164,
            "key.parsed_scope.start" : 4077,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sqlite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 35,
                "key.line" : 4078,
                "key.modulename" : "main",
                "key.name" : "sqlite",
                "key.namelength" : 6,
                "key.nameoffset" : 173794,
                "key.offset" : 173790,
                "key.parsed_declaration" : "let sqlite: UnsafeMutableRawPointer",
                "key.parsed_scope.end" : 4078,
                "key.parsed_scope.start" : 4078,
                "key.reusingastcontext" : false,
                "key.typename" : "UnsafeMutableRawPointer",
                "key.typeusr" : "$sSvD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC6sqliteSvvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let flags: <Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>flags<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 25,
                "key.line" : 4079,
                "key.modulename" : "main",
                "key.name" : "flags",
                "key.namelength" : 5,
                "key.nameoffset" : 173834,
                "key.offset" : 173830,
                "key.parsed_declaration" : "let flags: Store.OpenFlag",
                "key.parsed_scope.end" : 4079,
                "key.parsed_scope.start" : 4079,
                "key.reusingastcontext" : false,
                "key.typename" : "DynamicGraph.Store.OpenFlag",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV8OpenFlagVD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC5flagsAC0D0V8OpenFlagVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let externalStore: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalStore<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.line" : 4080,
                "key.modulename" : "main",
                "key.name" : "externalStore",
                "key.namelength" : 13,
                "key.nameoffset" : 173864,
                "key.offset" : 173860,
                "key.parsed_declaration" : "let externalStore: String?",
                "key.parsed_scope.end" : 4080,
                "key.parsed_scope.start" : 4080,
                "key.reusingastcontext" : false,
                "key.typename" : "String?",
                "key.typeusr" : "$sSSSgD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC08externalD0SSSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let chunkSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.line" : 4081,
                "key.modulename" : "main",
                "key.name" : "chunkSize",
                "key.namelength" : 9,
                "key.nameoffset" : 173895,
                "key.offset" : 173891,
                "key.parsed_declaration" : "let chunkSize: Int",
                "key.parsed_scope.end" : 4081,
                "key.parsed_scope.start" : 4081,
                "key.reusingastcontext" : false,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC9chunkSizeSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var loadedBytesLength: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>loadedBytesLength<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.line" : 4082,
                "key.modulename" : "main",
                "key.name" : "loadedBytesLength",
                "key.namelength" : 17,
                "key.nameoffset" : 173918,
                "key.offset" : 173914,
                "key.parsed_declaration" : "var loadedBytesLength: Int",
                "key.parsed_scope.end" : 4082,
                "key.parsed_scope.start" : 4082,
                "key.reusingastcontext" : false,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC17loadedBytesLengthSivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var loadedBytes: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>loadedBytes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 41,
                "key.line" : 4083,
                "key.modulename" : "main",
                "key.name" : "loadedBytes",
                "key.namelength" : 11,
                "key.nameoffset" : 173949,
                "key.offset" : 173945,
                "key.parsed_declaration" : "var loadedBytes: UnsafeMutableRawPointer?",
                "key.parsed_scope.end" : 4083,
                "key.parsed_scope.start" : 4083,
                "key.reusingastcontext" : false,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "UnsafeMutableRawPointer?",
                "key.typeusr" : "$sSvSgD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC11loadedBytesSvSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var externalFileRead: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"c:@T@FILE\">FILE<\/Type>&gt;?<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>externalFileRead<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.typealias usr=\"c:@T@FILE\">FILE<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 49,
                "key.line" : 4084,
                "key.modulename" : "main",
                "key.name" : "externalFileRead",
                "key.namelength" : 16,
                "key.nameoffset" : 173995,
                "key.offset" : 173991,
                "key.parsed_declaration" : "var externalFileRead: UnsafeMutablePointer<FILE>?",
                "key.parsed_scope.end" : 4084,
                "key.parsed_scope.start" : 4084,
                "key.reusingastcontext" : false,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "UnsafeMutablePointer<_IO_FILE>?",
                "key.typeusr" : "$sSpySo8_IO_FILEVGSgD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC16externalFileReadSpySo8_IO_FILEVGSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var externalFileWrite: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"c:@T@FILE\">FILE<\/Type>&gt;?<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>externalFileWrite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.typealias usr=\"c:@T@FILE\">FILE<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 50,
                "key.line" : 4085,
                "key.modulename" : "main",
                "key.name" : "externalFileWrite",
                "key.namelength" : 17,
                "key.nameoffset" : 174049,
                "key.offset" : 174045,
                "key.parsed_declaration" : "var externalFileWrite: UnsafeMutablePointer<FILE>?",
                "key.parsed_scope.end" : 4085,
                "key.parsed_scope.start" : 4085,
                "key.reusingastcontext" : false,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "UnsafeMutablePointer<_IO_FILE>?",
                "key.typeusr" : "$sSpySo8_IO_FILEVGSgD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC17externalFileWriteSpySo8_IO_FILEVGSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var externalFileWriteError: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>externalFileWriteError<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 32,
                "key.line" : 4086,
                "key.modulename" : "main",
                "key.name" : "externalFileWriteError",
                "key.namelength" : 22,
                "key.nameoffset" : 174104,
                "key.offset" : 174100,
                "key.parsed_declaration" : "var externalFileWriteError: Bool",
                "key.parsed_scope.end" : 4086,
                "key.parsed_scope.start" : 4086,
                "key.reusingastcontext" : false,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC22externalFileWriteErrorSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(sqlite: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer<\/Type>, flags: <Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/Type>, externalStore: <Type usr=\"s:SS\">String<\/Type>?, chunkSize: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                "key.bodylength" : 304,
                "key.bodyoffset" : 174229,
                "key.column" : 5,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sqlite<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flags<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>externalStore<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 397,
                "key.line" : 4087,
                "key.modulename" : "main",
                "key.name" : "init(sqlite:flags:externalStore:chunkSize:)",
                "key.namelength" : 90,
                "key.nameoffset" : 174137,
                "key.offset" : 174137,
                "key.parsed_declaration" : "init(sqlite: OpaquePointer, flags: Store.OpenFlag, externalStore: String?, chunkSize: Int)",
                "key.parsed_scope.end" : 4097,
                "key.parsed_scope.start" : 4087,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph._Store.Type) -> (OpaquePointer, DynamicGraph.Store.OpenFlag, String?, Int) -> DynamicGraph._Store",
                "key.typeusr" : "$s6sqlite5flags13externalStore9chunkSize4main12DynamicGraphC01_D0Cs13OpaquePointerV_AG0D0V8OpenFlagVSSSgSitcD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC6sqlite5flags08externalD09chunkSizeAEs13OpaquePointerV_AC0D0V8OpenFlagVSSSgSitcfc"
              },
              {
                "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
                "key.bodylength" : 862,
                "key.bodyoffset" : 174547,
                "key.column" : 5,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 871,
                "key.line" : 4098,
                "key.modulename" : "main",
                "key.name" : "deinit",
                "key.namelength" : 6,
                "key.nameoffset" : 174539,
                "key.offset" : 174539,
                "key.parsed_declaration" : "deinit",
                "key.parsed_scope.end" : 4119,
                "key.parsed_scope.start" : 4098,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph._Store) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreCfd"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func writeBytes(_ bytes: <Type usr=\"s:SV\">UnsafeRawPointer<\/Type>, length: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.bodylength" : 737,
                "key.bodyoffset" : 175531,
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>writeBytes<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>bytes<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>length<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 802,
                "key.line" : 4121,
                "key.modulename" : "main",
                "key.name" : "writeBytes(_:length:)",
                "key.namelength" : 50,
                "key.nameoffset" : 175472,
                "key.offset" : 175467,
                "key.parsed_declaration" : "func writeBytes(_ bytes: UnsafeRawPointer, length: Int) -> Int",
                "key.parsed_scope.end" : 4141,
                "key.parsed_scope.start" : 4121,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let externalFileWrite: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"c:@T@FILE\">FILE<\/Type>&gt;?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalFileWrite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.typealias usr=\"c:@T@FILE\">FILE<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 72,
                    "key.line" : 4122,
                    "key.modulename" : "main",
                    "key.name" : "externalFileWrite",
                    "key.namelength" : 17,
                    "key.nameoffset" : 175542,
                    "key.offset" : 175538,
                    "key.parsed_declaration" : "let externalFileWrite = externalFileWrite ?? fopen(externalStore, \"wb+\")",
                    "key.parsed_scope.end" : 4122,
                    "key.parsed_scope.start" : 4122,
                    "key.reusingastcontext" : false,
                    "key.typename" : "UnsafeMutablePointer<_IO_FILE>?",
                    "key.typeusr" : "$sSpySo8_IO_FILEVGSgD",
                    "key.usr" : "s:4main12DynamicGraphC6_StoreC10writeBytes_6lengthSiSV_SitF17externalFileWriteL_SpySo8_IO_FILEVGSgvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let offset: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>offset<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 37,
                    "key.line" : 4125,
                    "key.modulename" : "main",
                    "key.name" : "offset",
                    "key.namelength" : 6,
                    "key.nameoffset" : 175743,
                    "key.offset" : 175739,
                    "key.parsed_declaration" : "let offset = ftell(externalFileWrite)",
                    "key.parsed_scope.end" : 4125,
                    "key.parsed_scope.start" : 4125,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:4main12DynamicGraphC6_StoreC10writeBytes_6lengthSiSV_SitF6offsetL_Sivp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let alignedOffset: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>alignedOffset<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 68,
                    "key.line" : 4130,
                    "key.modulename" : "main",
                    "key.name" : "alignedOffset",
                    "key.namelength" : 13,
                    "key.nameoffset" : 175875,
                    "key.offset" : 175871,
                    "key.parsed_declaration" : "let alignedOffset = (offset + chunkSize - 1) \/ chunkSize * chunkSize",
                    "key.parsed_scope.end" : 4130,
                    "key.parsed_scope.start" : 4130,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:4main12DynamicGraphC6_StoreC10writeBytes_6lengthSiSV_SitF13alignedOffsetL_Sivp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let bytesWritten: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>bytesWritten<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 62,
                    "key.line" : 4135,
                    "key.modulename" : "main",
                    "key.name" : "bytesWritten",
                    "key.namelength" : 12,
                    "key.nameoffset" : 176080,
                    "key.offset" : 176076,
                    "key.parsed_declaration" : "let bytesWritten = fwrite(bytes, 1, length, externalFileWrite)",
                    "key.parsed_scope.end" : 4135,
                    "key.parsed_scope.start" : 4135,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:4main12DynamicGraphC6_StoreC10writeBytes_6lengthSiSV_SitF12bytesWrittenL_Sivp"
                  }
                ],
                "key.typename" : "(DynamicGraph._Store) -> (UnsafeRawPointer, Int) -> Int",
                "key.typeusr" : "$s_6lengthSiSV_SitcD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC10writeBytes_6lengthSiSV_SitF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func loadBytes(offset: <Type usr=\"s:Si\">Int<\/Type>, length: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?<\/Declaration>",
                "key.bodylength" : 600,
                "key.bodyoffset" : 176394,
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>loadBytes<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>length<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 671,
                "key.line" : 4143,
                "key.modulename" : "main",
                "key.name" : "loadBytes(offset:length:)",
                "key.namelength" : 35,
                "key.nameoffset" : 176329,
                "key.offset" : 176324,
                "key.parsed_declaration" : "func loadBytes(offset: Int, length: Int) -> UnsafeMutableRawPointer?",
                "key.parsed_scope.end" : 4158,
                "key.parsed_scope.start" : 4143,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let externalFileRead: <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"c:@T@FILE\">FILE<\/Type>&gt;?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalFileRead<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.typealias usr=\"c:@T@FILE\">FILE<\/ref.typealias>&gt;?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 69,
                    "key.line" : 4149,
                    "key.modulename" : "main",
                    "key.name" : "externalFileRead",
                    "key.namelength" : 16,
                    "key.nameoffset" : 176607,
                    "key.offset" : 176603,
                    "key.parsed_declaration" : "let externalFileRead = externalFileRead ?? fopen(externalStore, \"rb\")",
                    "key.parsed_scope.end" : 4149,
                    "key.parsed_scope.start" : 4149,
                    "key.reusingastcontext" : false,
                    "key.typename" : "UnsafeMutablePointer<_IO_FILE>?",
                    "key.typeusr" : "$sSpySo8_IO_FILEVGSgD",
                    "key.usr" : "s:4main12DynamicGraphC6_StoreC9loadBytes6offset6lengthSvSgSi_SitF16externalFileReadL_SpySo8_IO_FILEVGSgvp"
                  }
                ],
                "key.typename" : "(DynamicGraph._Store) -> (Int, Int) -> UnsafeMutableRawPointer?",
                "key.typeusr" : "$s6offset6lengthSvSgSi_SitcD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC9loadBytes6offset6lengthSvSgSi_SitF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func flush()<\/Declaration>",
                "key.bodylength" : 146,
                "key.bodyoffset" : 177014,
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>flush<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 161,
                "key.line" : 4159,
                "key.modulename" : "main",
                "key.name" : "flush()",
                "key.namelength" : 7,
                "key.nameoffset" : 177005,
                "key.offset" : 177000,
                "key.parsed_declaration" : "func flush()",
                "key.parsed_scope.end" : 4163,
                "key.parsed_scope.start" : 4159,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph._Store) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:4main12DynamicGraphC6_StoreC5flushyyF"
              }
            ],
            "key.typename" : "DynamicGraph._Store.Type",
            "key.typeusr" : "$s4main12DynamicGraphC6_StoreCmD",
            "key.usr" : "s:4main12DynamicGraphC6_StoreC"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Store<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 177221
              }
            ],
            "key.bodylength" : 33665,
            "key.bodyoffset" : 177242,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "A key-value based parameter store.",
            "key.doc.declaration" : "public struct Store",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4169\" column=\"17\"><Name>Store<\/Name><USR>s:4main12DynamicGraphC5StoreV<\/USR><Declaration>public struct Store<\/Declaration><CommentParts><Abstract><Para>A key-value based parameter store.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 4169,
            "key.doc.name" : "Store",
            "key.doc.type" : "Class",
            "key.doclength" : 49,
            "key.docoffset" : 177169,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Store<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 33680,
            "key.line" : 4169,
            "key.modulename" : "main",
            "key.name" : "Store",
            "key.namelength" : 5,
            "key.nameoffset" : 177235,
            "key.offset" : 177228,
            "key.parsed_declaration" : "public struct Store",
            "key.parsed_scope.end" : 5013,
            "key.parsed_scope.start" : 4169,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.OpenFlag : <Type usr=\"s:s9OptionSetP\">OptionSet<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 177247
                  }
                ],
                "key.bodylength" : 245,
                "key.bodyoffset" : 177282,
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 177271
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>OpenFlag<\/decl.name> : <ref.protocol usr=\"s:s9OptionSetP\">OptionSet<\/ref.protocol><\/decl.struct>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "OptionSet"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 274,
                "key.line" : 4170,
                "key.modulename" : "main",
                "key.name" : "OpenFlag",
                "key.namelength" : 8,
                "key.nameoffset" : 177261,
                "key.offset" : 177254,
                "key.parsed_declaration" : "public struct OpenFlag: OptionSet",
                "key.parsed_scope.end" : 4177,
                "key.parsed_scope.start" : 4170,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public let rawValue: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177289
                      }
                    ],
                    "key.column" : 18,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc.declaration" : "var rawValue: Self.RawValue { get }",
                    "key.doc.discussion" : [
                      {
                        "Para" : "A new instance initialized with `rawValue` will be equivalent to this instance. For example:"
                      },
                      {
                        "CodeListing" : ""
                      },
                      {
                        "Note" : ""
                      }
                    ],
                    "key.doc.full_as_xml" : "<Other><Name>rawValue<\/Name><USR>s:SY8rawValue03RawB0Qzvp<\/USR><Declaration>var rawValue: Self.RawValue { get }<\/Declaration><CommentParts><Abstract><Para>The corresponding value of the raw type.<\/Para><\/Abstract><Discussion><Para>A new instance initialized with <codeVoice>rawValue<\/codeVoice> will be equivalent to this instance. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let selectedSize = PaperSize.Letter]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize.rawValue)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Letter\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize == PaperSize(rawValue: selectedSize.rawValue)!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RawRepresentable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                    "key.doc.name" : "rawValue",
                    "key.doc.type" : "Other",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>rawValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 17,
                    "key.line" : 4171,
                    "key.modulename" : "main",
                    "key.name" : "rawValue",
                    "key.namelength" : 8,
                    "key.nameoffset" : 177300,
                    "key.offset" : 177296,
                    "key.overrides" : [
                      {
                        "key.usr" : "s:SY8rawValue03RawB0Qzvp"
                      }
                    ],
                    "key.parsed_declaration" : "public let rawValue: Int",
                    "key.parsed_scope.end" : 4171,
                    "key.parsed_scope.start" : 4171,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:SY8rawValue03RawB0Qzvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public init(rawValue: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177320
                      }
                    ],
                    "key.bodylength" : 40,
                    "key.bodyoffset" : 177348,
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc.declaration" : "init(rawValue: Self.RawValue)",
                    "key.doc.discussion" : [
                      {
                        "Para" : "This initializer always succeeds, even if the value passed as `rawValue` exceeds the static properties declared as part of the option set. This example creates an instance of `ShippingOptions` with a raw value beyond the highest element, with a bit mask that effectively contains all the declared static members."
                      },
                      {
                        "CodeListing" : ""
                      },
                      {
                        "Note" : ""
                      }
                    ],
                    "key.doc.full_as_xml" : "<Function><Name>init(rawValue:)<\/Name><USR>s:s9OptionSetP8rawValuex03RawD0Qz_tcfc<\/USR><Declaration>init(rawValue: Self.RawValue)<\/Declaration><CommentParts><Abstract><Para>Creates a new option set from the given raw value.<\/Para><\/Abstract><Parameters><Parameter><Name>rawValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The raw value of the option set to create. Each bit of <codeVoice>rawValue<\/codeVoice> potentially represents an element of the option set, though raw values may include bits that are not defined as distinct values of the <codeVoice>OptionSet<\/codeVoice> type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer always succeeds, even if the value passed as <codeVoice>rawValue<\/codeVoice> exceeds the static properties declared as part of the option set. This example creates an instance of <codeVoice>ShippingOptions<\/codeVoice> with a raw value beyond the highest element, with a bit mask that effectively contains all the declared static members.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let extraOptions = ShippingOptions(rawValue: 255)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(extraOptions.isStrictSuperset(of: .all))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>OptionSet<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
                    "key.doc.name" : "init(rawValue:)",
                    "key.doc.parameters" : [
                      {
                        "discussion" : [
                          {
                            "Para" : "The raw value of the option set to create. Each bit of `rawValue` potentially represents an element of the option set, though raw values may include bits that are not defined as distinct values of the `OptionSet` type."
                          }
                        ],
                        "name" : "rawValue"
                      }
                    ],
                    "key.doc.type" : "Function",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 62,
                    "key.line" : 4172,
                    "key.modulename" : "main",
                    "key.name" : "init(rawValue:)",
                    "key.namelength" : 19,
                    "key.nameoffset" : 177327,
                    "key.offset" : 177327,
                    "key.overrides" : [
                      {
                        "key.usr" : "s:s9OptionSetP8rawValuex03RawD0Qz_tcfc"
                      },
                      {
                        "key.usr" : "s:SY8rawValuexSg03RawB0Qz_tcfc"
                      }
                    ],
                    "key.parsed_declaration" : "public init(rawValue: Int)",
                    "key.parsed_scope.end" : 4174,
                    "key.parsed_scope.start" : 4172,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(DynamicGraph.Store.OpenFlag.Type) -> (Int) -> DynamicGraph.Store.OpenFlag",
                    "key.typeusr" : "$s8rawValue4main12DynamicGraphC5StoreV8OpenFlagVSi_tcD",
                    "key.usr" : "s:s9OptionSetP8rawValuex03RawD0Qz_tcfc"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let truncateWhenClose: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177396
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>truncateWhenClose<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 57,
                    "key.line" : 4175,
                    "key.modulename" : "main",
                    "key.name" : "truncateWhenClose",
                    "key.namelength" : 17,
                    "key.nameoffset" : 177414,
                    "key.offset" : 177403,
                    "key.parsed_declaration" : "public static let truncateWhenClose = OpenFlag(rawValue: 1 << 0)",
                    "key.parsed_scope.end" : 4175,
                    "key.parsed_scope.start" : 4175,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.OpenFlag",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV8OpenFlagVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV8OpenFlagV17truncateWhenCloseAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let readOnly: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177467
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>readOnly<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 48,
                    "key.line" : 4176,
                    "key.modulename" : "main",
                    "key.name" : "readOnly",
                    "key.namelength" : 8,
                    "key.nameoffset" : 177485,
                    "key.offset" : 177474,
                    "key.parsed_declaration" : "public static let readOnly = OpenFlag(rawValue: 1 << 1)",
                    "key.parsed_scope.end" : 4176,
                    "key.parsed_scope.start" : 4176,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.OpenFlag",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV8OpenFlagVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV8OpenFlagV8readOnlyAGvpZ"
                  }
                ],
                "key.typename" : "DynamicGraph.Store.OpenFlag.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV8OpenFlagVmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV8OpenFlagV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.Codec : <Type usr=\"s:s9OptionSetP\">OptionSet<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 177533
                  }
                ],
                "key.bodylength" : 6207,
                "key.bodyoffset" : 177565,
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 177554
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>Codec<\/decl.name> : <ref.protocol usr=\"s:s9OptionSetP\">OptionSet<\/ref.protocol><\/decl.struct>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "OptionSet"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 6233,
                "key.line" : 4178,
                "key.modulename" : "main",
                "key.name" : "Codec",
                "key.namelength" : 5,
                "key.nameoffset" : 177547,
                "key.offset" : 177540,
                "key.parsed_declaration" : "public struct Codec: OptionSet",
                "key.parsed_scope.end" : 4329,
                "key.parsed_scope.start" : 4178,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public let rawValue: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177572
                      }
                    ],
                    "key.column" : 18,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc.declaration" : "var rawValue: Self.RawValue { get }",
                    "key.doc.discussion" : [
                      {
                        "Para" : "A new instance initialized with `rawValue` will be equivalent to this instance. For example:"
                      },
                      {
                        "CodeListing" : ""
                      },
                      {
                        "Note" : ""
                      }
                    ],
                    "key.doc.full_as_xml" : "<Other><Name>rawValue<\/Name><USR>s:SY8rawValue03RawB0Qzvp<\/USR><Declaration>var rawValue: Self.RawValue { get }<\/Declaration><CommentParts><Abstract><Para>The corresponding value of the raw type.<\/Para><\/Abstract><Discussion><Para>A new instance initialized with <codeVoice>rawValue<\/codeVoice> will be equivalent to this instance. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let selectedSize = PaperSize.Letter]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize.rawValue)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Letter\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize == PaperSize(rawValue: selectedSize.rawValue)!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RawRepresentable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                    "key.doc.name" : "rawValue",
                    "key.doc.type" : "Other",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>rawValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 17,
                    "key.line" : 4179,
                    "key.modulename" : "main",
                    "key.name" : "rawValue",
                    "key.namelength" : 8,
                    "key.nameoffset" : 177583,
                    "key.offset" : 177579,
                    "key.overrides" : [
                      {
                        "key.usr" : "s:SY8rawValue03RawB0Qzvp"
                      }
                    ],
                    "key.parsed_declaration" : "public let rawValue: Int",
                    "key.parsed_scope.end" : 4179,
                    "key.parsed_scope.start" : 4179,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int",
                    "key.typeusr" : "$sSiD",
                    "key.usr" : "s:SY8rawValue03RawB0Qzvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public init(rawValue: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177603
                      }
                    ],
                    "key.bodylength" : 40,
                    "key.bodyoffset" : 177631,
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc.declaration" : "init(rawValue: Self.RawValue)",
                    "key.doc.discussion" : [
                      {
                        "Para" : "This initializer always succeeds, even if the value passed as `rawValue` exceeds the static properties declared as part of the option set. This example creates an instance of `ShippingOptions` with a raw value beyond the highest element, with a bit mask that effectively contains all the declared static members."
                      },
                      {
                        "CodeListing" : ""
                      },
                      {
                        "Note" : ""
                      }
                    ],
                    "key.doc.full_as_xml" : "<Function><Name>init(rawValue:)<\/Name><USR>s:s9OptionSetP8rawValuex03RawD0Qz_tcfc<\/USR><Declaration>init(rawValue: Self.RawValue)<\/Declaration><CommentParts><Abstract><Para>Creates a new option set from the given raw value.<\/Para><\/Abstract><Parameters><Parameter><Name>rawValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The raw value of the option set to create. Each bit of <codeVoice>rawValue<\/codeVoice> potentially represents an element of the option set, though raw values may include bits that are not defined as distinct values of the <codeVoice>OptionSet<\/codeVoice> type.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer always succeeds, even if the value passed as <codeVoice>rawValue<\/codeVoice> exceeds the static properties declared as part of the option set. This example creates an instance of <codeVoice>ShippingOptions<\/codeVoice> with a raw value beyond the highest element, with a bit mask that effectively contains all the declared static members.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let extraOptions = ShippingOptions(rawValue: 255)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(extraOptions.isStrictSuperset(of: .all))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>OptionSet<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
                    "key.doc.name" : "init(rawValue:)",
                    "key.doc.parameters" : [
                      {
                        "discussion" : [
                          {
                            "Para" : "The raw value of the option set to create. Each bit of `rawValue` potentially represents an element of the option set, though raw values may include bits that are not defined as distinct values of the `OptionSet` type."
                          }
                        ],
                        "name" : "rawValue"
                      }
                    ],
                    "key.doc.type" : "Function",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 62,
                    "key.line" : 4180,
                    "key.modulename" : "main",
                    "key.name" : "init(rawValue:)",
                    "key.namelength" : 19,
                    "key.nameoffset" : 177610,
                    "key.offset" : 177610,
                    "key.overrides" : [
                      {
                        "key.usr" : "s:s9OptionSetP8rawValuex03RawD0Qz_tcfc"
                      },
                      {
                        "key.usr" : "s:SY8rawValuexSg03RawB0Qz_tcfc"
                      }
                    ],
                    "key.parsed_declaration" : "public init(rawValue: Int)",
                    "key.parsed_scope.end" : 4182,
                    "key.parsed_scope.start" : 4180,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(DynamicGraph.Store.Codec.Type) -> (Int) -> DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s8rawValue4main12DynamicGraphC5StoreV5CodecVSi_tcD",
                    "key.usr" : "s:s9OptionSetP8rawValuex03RawD0Qz_tcfc"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let fpzip: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177679
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fpzip<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 42,
                    "key.line" : 4183,
                    "key.modulename" : "main",
                    "key.name" : "fpzip",
                    "key.namelength" : 5,
                    "key.nameoffset" : 177697,
                    "key.offset" : 177686,
                    "key.parsed_declaration" : "public static let fpzip = Codec(rawValue: 1 << 0)",
                    "key.parsed_scope.end" : 4183,
                    "key.parsed_scope.start" : 4183,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV5fpzipAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let zip: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177735
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4184,
                    "key.modulename" : "main",
                    "key.name" : "zip",
                    "key.namelength" : 3,
                    "key.nameoffset" : 177753,
                    "key.offset" : 177742,
                    "key.parsed_declaration" : "public static let zip = Codec(rawValue: 1 << 1)",
                    "key.parsed_scope.end" : 4184,
                    "key.parsed_scope.start" : 4184,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3zipAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let ezm7: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177789
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>ezm7<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 41,
                    "key.line" : 4185,
                    "key.modulename" : "main",
                    "key.name" : "ezm7",
                    "key.namelength" : 4,
                    "key.nameoffset" : 177807,
                    "key.offset" : 177796,
                    "key.parsed_declaration" : "public static let ezm7 = Codec(rawValue: 1 << 2)",
                    "key.parsed_scope.end" : 4185,
                    "key.parsed_scope.start" : 4185,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV4ezm7AGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let q4p: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177844
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q4p<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4186,
                    "key.modulename" : "main",
                    "key.name" : "q4p",
                    "key.namelength" : 3,
                    "key.nameoffset" : 177862,
                    "key.offset" : 177851,
                    "key.parsed_declaration" : "public static let q4p = Codec(rawValue: 1 << 3)",
                    "key.parsed_scope.end" : 4186,
                    "key.parsed_scope.start" : 4186,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3q4pAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let q5p: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177898
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q5p<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4187,
                    "key.modulename" : "main",
                    "key.name" : "q5p",
                    "key.namelength" : 3,
                    "key.nameoffset" : 177916,
                    "key.offset" : 177905,
                    "key.parsed_declaration" : "public static let q5p = Codec(rawValue: 1 << 4)",
                    "key.parsed_scope.end" : 4187,
                    "key.parsed_scope.start" : 4187,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3q5pAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let q6p: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 177952
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q6p<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4188,
                    "key.modulename" : "main",
                    "key.name" : "q6p",
                    "key.namelength" : 3,
                    "key.nameoffset" : 177970,
                    "key.offset" : 177959,
                    "key.parsed_declaration" : "public static let q6p = Codec(rawValue: 1 << 5)",
                    "key.parsed_scope.end" : 4188,
                    "key.parsed_scope.start" : 4188,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3q6pAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let q7p: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 178006
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q7p<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4189,
                    "key.modulename" : "main",
                    "key.name" : "q7p",
                    "key.namelength" : 3,
                    "key.nameoffset" : 178024,
                    "key.offset" : 178013,
                    "key.parsed_declaration" : "public static let q7p = Codec(rawValue: 1 << 6)",
                    "key.parsed_scope.end" : 4189,
                    "key.parsed_scope.start" : 4189,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3q7pAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let q8p: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 178060
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>q8p<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4190,
                    "key.modulename" : "main",
                    "key.name" : "q8p",
                    "key.namelength" : 3,
                    "key.nameoffset" : 178078,
                    "key.offset" : 178067,
                    "key.parsed_declaration" : "public static let q8p = Codec(rawValue: 1 << 7)",
                    "key.parsed_scope.end" : 4190,
                    "key.parsed_scope.start" : 4190,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3q8pAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let jit: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 178114
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>jit<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 40,
                    "key.line" : 4191,
                    "key.modulename" : "main",
                    "key.name" : "jit",
                    "key.namelength" : 3,
                    "key.nameoffset" : 178132,
                    "key.offset" : 178121,
                    "key.parsed_declaration" : "public static let jit = Codec(rawValue: 1 << 8)",
                    "key.parsed_scope.end" : 4191,
                    "key.parsed_scope.start" : 4191,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV3jitAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let externalData: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 178168
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalData<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 49,
                    "key.line" : 4192,
                    "key.modulename" : "main",
                    "key.name" : "externalData",
                    "key.namelength" : 12,
                    "key.nameoffset" : 178186,
                    "key.offset" : 178175,
                    "key.parsed_declaration" : "public static let externalData = Codec(rawValue: 1 << 9)",
                    "key.parsed_scope.end" : 4192,
                    "key.parsed_scope.start" : 4192,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV12externalDataAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public static let externalOnDemand: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type><\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 178231
                      }
                    ],
                    "key.column" : 25,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalOnDemand<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                    "key.kind" : "source.lang.swift.decl.var.static",
                    "key.length" : 54,
                    "key.line" : 4193,
                    "key.modulename" : "main",
                    "key.name" : "externalOnDemand",
                    "key.namelength" : 16,
                    "key.nameoffset" : 178249,
                    "key.offset" : 178238,
                    "key.parsed_declaration" : "public static let externalOnDemand = Codec(rawValue: 1 << 10)",
                    "key.parsed_scope.end" : 4193,
                    "key.parsed_scope.start" : 4193,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV16externalOnDemandAGvpZ"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var encode: (@convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?, UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:s6UInt32V\">UInt32<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type>)? { get }<\/Declaration>",
                    "key.bodylength" : 3646,
                    "key.bodyoffset" : 178641,
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_param_t&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 3989,
                    "key.line" : 4194,
                    "key.modulename" : "main",
                    "key.name" : "encode",
                    "key.namelength" : 6,
                    "key.nameoffset" : 178303,
                    "key.offset" : 178299,
                    "key.parsed_declaration" : "var encode:\n  (\n    @convention(c) (\n      UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UnsafeMutableRawPointer?,\n      UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?,\n      UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, UnsafeMutablePointer<UInt32>?\n    ) -> Int32\n  )?",
                    "key.parsed_scope.end" : 4279,
                    "key.parsed_scope.start" : 4194,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6encodeXevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let externalData: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.column" : 13,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalData<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 73,
                    "key.line" : 4203,
                    "key.modulename" : "main",
                    "key.name" : "externalData",
                    "key.namelength" : 12,
                    "key.nameoffset" : 178654,
                    "key.offset" : 178650,
                    "key.parsed_declaration" : "let externalData = contains(.externalOnDemand) || contains(.externalData)",
                    "key.parsed_scope.end" : 4203,
                    "key.parsed_scope.start" : 4203,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Bool",
                    "key.typeusr" : "$sSbD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6encodeXevg12externalDataL_Sbvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>var decode: (@convention(c) (<Type usr=\"s:SV\">UnsafeRawPointer<\/Type>?, <Type usr=\"s:Si\">Int<\/Type>, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:SP\">UnsafePointer<\/Type>&lt;<Type usr=\"s:s5Int32V\">Int32<\/Type>&gt;?, <Type usr=\"s:s5Int32V\">Int32<\/Type>, <Type usr=\"s:s6UInt32V\">UInt32<\/Type>, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, ccv_nnc_tensor_param_t, UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?, <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>?, <Type usr=\"s:Sp\">UnsafeMutablePointer<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;?) -&gt; <Type usr=\"s:s5Int32V\">Int32<\/Type>)? { get }<\/Declaration>",
                    "key.bodylength" : 1099,
                    "key.bodyoffset" : 182667,
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@convention<\/syntaxtype.attribute.name>(c)<\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SV\">UnsafeRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SP\">UnsafePointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>ccv_nnc_tensor_param_t<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>UnsafeMutablePointer&lt;UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 1472,
                    "key.line" : 4280,
                    "key.modulename" : "main",
                    "key.name" : "decode",
                    "key.namelength" : 6,
                    "key.nameoffset" : 182299,
                    "key.offset" : 182295,
                    "key.parsed_declaration" : "var decode:\n  (\n    @convention(c) (\n      UnsafeRawPointer?, Int, Int32, UnsafePointer<Int32>?, Int32, UInt32,\n      UnsafeMutableRawPointer?, ccv_nnc_tensor_param_t,\n      UnsafeMutablePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?,\n      UnsafeMutableRawPointer?, UnsafeMutablePointer<Int>?\n    ) -> Int32\n  )?",
                    "key.parsed_scope.end" : 4328,
                    "key.parsed_scope.start" : 4280,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6decodeXevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let isJit: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.column" : 13,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>isJit<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 26,
                    "key.line" : 4293,
                    "key.modulename" : "main",
                    "key.name" : "isJit",
                    "key.namelength" : 5,
                    "key.nameoffset" : 182741,
                    "key.offset" : 182737,
                    "key.parsed_declaration" : "let isJit = contains(.jit)",
                    "key.parsed_scope.end" : 4293,
                    "key.parsed_scope.start" : 4293,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Bool",
                    "key.typeusr" : "$sSbD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6decodeXevg5isJitL_Sbvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let externalData: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.column" : 13,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalData<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 42,
                    "key.line" : 4294,
                    "key.modulename" : "main",
                    "key.name" : "externalData",
                    "key.namelength" : 12,
                    "key.nameoffset" : 182776,
                    "key.offset" : 182772,
                    "key.parsed_declaration" : "let externalData = contains(.externalData)",
                    "key.parsed_scope.end" : 4294,
                    "key.parsed_scope.start" : 4294,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Bool",
                    "key.typeusr" : "$sSbD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6decodeXevg12externalDataL_Sbvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let externalOnDemand: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.column" : 13,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>externalOnDemand<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 50,
                    "key.line" : 4295,
                    "key.modulename" : "main",
                    "key.name" : "externalOnDemand",
                    "key.namelength" : 16,
                    "key.nameoffset" : 182827,
                    "key.offset" : 182823,
                    "key.parsed_declaration" : "let externalOnDemand = contains(.externalOnDemand)",
                    "key.parsed_scope.end" : 4295,
                    "key.parsed_scope.start" : 4295,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Bool",
                    "key.typeusr" : "$sSbD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV6decodeXevg16externalOnDemandL_Sbvp"
                  }
                ],
                "key.typename" : "DynamicGraph.Store.Codec.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5CodecV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>private let graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.private",
                    "key.length" : 7,
                    "key.offset" : 183778
                  }
                ],
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>graph<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 23,
                "key.line" : 4330,
                "key.modulename" : "main",
                "key.name" : "graph",
                "key.namelength" : 5,
                "key.nameoffset" : 183790,
                "key.offset" : 183786,
                "key.parsed_declaration" : "private let graph: DynamicGraph",
                "key.parsed_scope.end" : 4330,
                "key.parsed_scope.start" : 4330,
                "key.reusingastcontext" : false,
                "key.typename" : "DynamicGraph",
                "key.typeusr" : "$s4main12DynamicGraphCD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5graph33_FB88E2357CC5890C59B91A970B0C008ELLACvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>@usableFromInline let store: <Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.usableFromInline",
                    "key.length" : 17,
                    "key.offset" : 183814
                  }
                ],
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@usableFromInline<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>store<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 17,
                "key.line" : 4332,
                "key.modulename" : "main",
                "key.name" : "store",
                "key.namelength" : 5,
                "key.nameoffset" : 183840,
                "key.offset" : 183836,
                "key.parsed_declaration" : "let store: _Store",
                "key.parsed_scope.end" : 4332,
                "key.parsed_scope.start" : 4332,
                "key.reusingastcontext" : false,
                "key.typename" : "DynamicGraph._Store",
                "key.typeusr" : "$s4main12DynamicGraphC6_StoreCD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5storeAC01_D0Cvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind<\/Type>? = nil, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = []) -&gt; NNC.AnyTensor?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 184071
                  }
                ],
                "key.bodylength" : 730,
                "key.bodyoffset" : 184166,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read a type-erased tensor from the store.\n\n - Parameter key: The key corresponding to that particular tensor.",
                "key.doc.declaration" : "public func read(_ key: String, kind: DeviceKind? = nil, codec: Codec = []) -> NNC.AnyTensor?",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4339\" column=\"17\"><Name>read(_:kind:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4readyXeXeF<\/USR><Declaration>public func read(_ key: String, kind: DeviceKind? = nil, codec: Codec = []) -&gt; NNC.AnyTensor?<\/Declaration><CommentParts><Abstract><Para>Read a type-erased tensor from the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to that particular tensor.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4339,
                "key.doc.name" : "read(_:kind:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to that particular tensor."
                      }
                    ],
                    "name" : "key"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 140,
                "key.docoffset" : 183926,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>kind<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind<\/ref.enum>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>) -&gt; <decl.function.returntype>NNC.AnyTensor?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 819,
                "key.line" : 4339,
                "key.modulename" : "main",
                "key.name" : "read(_:kind:codec:)",
                "key.namelength" : 63,
                "key.nameoffset" : 184083,
                "key.offset" : 184078,
                "key.parsed_declaration" : "public func read(_ key: String, kind: DeviceKind? = nil, codec: Codec = []) -> NNC.AnyTensor?",
                "key.parsed_scope.end" : 4353,
                "key.parsed_scope.start" : 4339,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>var underlying: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>underlying<\/decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 61,
                    "key.line" : 4340,
                    "key.modulename" : "main",
                    "key.name" : "underlying",
                    "key.namelength" : 10,
                    "key.nameoffset" : 184177,
                    "key.offset" : 184173,
                    "key.parsed_declaration" : "var underlying: UnsafeMutablePointer<ccv_nnc_tensor_t>? = nil",
                    "key.parsed_scope.end" : 4340,
                    "key.parsed_scope.start" : 4340,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4readyXeXeF10underlyingL_Xevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let result: <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 17,
                    "key.line" : 4341,
                    "key.modulename" : "main",
                    "key.name" : "result",
                    "key.namelength" : 6,
                    "key.nameoffset" : 184245,
                    "key.offset" : 184241,
                    "key.parsed_declaration" : "let result: Int32",
                    "key.parsed_scope.end" : 4341,
                    "key.parsed_scope.start" : 4341,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Int32",
                    "key.typeusr" : "$ss5Int32VD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4readyXeXeF6resultL_s5Int32Vvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let anyTensor: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>anyTensor<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 45,
                    "key.line" : 4351,
                    "key.modulename" : "main",
                    "key.name" : "anyTensor",
                    "key.namelength" : 9,
                    "key.nameoffset" : 184813,
                    "key.offset" : 184809,
                    "key.parsed_declaration" : "let anyTensor = AnyTensorStorage(underlying!)",
                    "key.parsed_scope.end" : 4351,
                    "key.parsed_scope.start" : 4351,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4readyXeXeF9anyTensorL_Xevp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, DeviceKind?, DynamicGraph.Store.Codec) -> <<error type>>",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4readyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func read(like key: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 185051
                  }
                ],
                "key.bodylength" : 472,
                "key.bodyoffset" : 185101,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read only shape of a tensor from the store.\n\n - Parameter like: The key corresponding to that particular tensor.",
                "key.doc.declaration" : "public func read(like key: String) -> AnyTensor?",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4360\" column=\"17\"><Name>read(like:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF<\/USR><Declaration>public func read(like key: String) -&gt; AnyTensor?<\/Declaration><CommentParts><Abstract><Para>Read only shape of a tensor from the store.<\/Para><\/Abstract><Parameters><Parameter><Name>like<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to that particular tensor.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4360,
                "key.doc.name" : "read(like:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to that particular tensor."
                      }
                    ],
                    "name" : "like"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 143,
                "key.docoffset" : 184903,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>like<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4main12DynamicGraphC9AnyTensorC\">AnyTensor<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 516,
                "key.line" : 4360,
                "key.modulename" : "main",
                "key.name" : "read(like:)",
                "key.namelength" : 22,
                "key.nameoffset" : 185063,
                "key.offset" : 185058,
                "key.parsed_declaration" : "public func read(like key: String) -> AnyTensor?",
                "key.parsed_scope.end" : 4371,
                "key.parsed_scope.start" : 4360,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>var underlying: UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>underlying<\/decl.name>: <decl.var.type>UnsafeMutablePointer&lt;ccv_nnc_tensor_t&gt;?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 61,
                    "key.line" : 4361,
                    "key.modulename" : "main",
                    "key.name" : "underlying",
                    "key.namelength" : 10,
                    "key.nameoffset" : 185112,
                    "key.offset" : 185108,
                    "key.parsed_declaration" : "var underlying: UnsafeMutablePointer<ccv_nnc_tensor_t>? = nil",
                    "key.parsed_scope.end" : 4361,
                    "key.parsed_scope.start" : 4361,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF10underlyingL_Xevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let _tensor: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>_tensor<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 87,
                    "key.line" : 4367,
                    "key.modulename" : "main",
                    "key.name" : "_tensor",
                    "key.namelength" : 7,
                    "key.nameoffset" : 185367,
                    "key.offset" : 185363,
                    "key.parsed_declaration" : "let _tensor = ccv_nnc_tensor_variable_new_impl(graph.cGraph, underlying!.pointee.info)!",
                    "key.parsed_scope.end" : 4367,
                    "key.parsed_scope.start" : 4367,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF7_tensorL_Xevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let tensor: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tensor<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 53,
                    "key.line" : 4369,
                    "key.modulename" : "main",
                    "key.name" : "tensor",
                    "key.namelength" : 6,
                    "key.nameoffset" : 185499,
                    "key.offset" : 185495,
                    "key.parsed_declaration" : "let tensor = AnyTensor(graph: graph, tensor: _tensor)",
                    "key.parsed_scope.end" : 4369,
                    "key.parsed_scope.start" : 4369,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF6tensorL_Xevp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String) -> DynamicGraph.AnyTensor?",
                "key.typeusr" : "$s4like4main12DynamicGraphC9AnyTensorCSgSS_tcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func codec(for key: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 185842
                  }
                ],
                "key.bodylength" : 1282,
                "key.bodyoffset" : 185888,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Retrieve codec for a particular key. It must be a tensor to make sense of this.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n - Returns the codec, if the tensor doesn't exist, return nil.",
                "key.doc.declaration" : "public func codec(for key: String) -> Codec?",
                "key.doc.discussion" : [
                  {
                    "List-Bullet" : ""
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4380\" column=\"17\"><Name>codec(for:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5codec3forAE5CodecVSgSS_tF<\/USR><Declaration>public func codec(for key: String) -&gt; Codec?<\/Declaration><CommentParts><Abstract><Para>Retrieve codec for a particular key. It must be a tensor to make sense of this.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular tensor.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><List-Bullet><Item><Para>Returns the codec, if the tensor doesn’t exist, return nil.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 4380,
                "key.doc.name" : "codec(for:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular tensor."
                      }
                    ],
                    "name" : "key"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 257,
                "key.docoffset" : 185580,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>codec<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1322,
                "key.line" : 4380,
                "key.modulename" : "main",
                "key.name" : "codec(for:)",
                "key.namelength" : 22,
                "key.nameoffset" : 185854,
                "key.offset" : 185849,
                "key.parsed_declaration" : "public func codec(for key: String) -> Codec?",
                "key.parsed_scope.end" : 4422,
                "key.parsed_scope.start" : 4380,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>var selectCodec: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer<\/Type>?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>selectCodec<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 37,
                    "key.line" : 4381,
                    "key.modulename" : "main",
                    "key.name" : "selectCodec",
                    "key.namelength" : 11,
                    "key.nameoffset" : 185899,
                    "key.offset" : 185895,
                    "key.parsed_declaration" : "var selectCodec: OpaquePointer? = nil",
                    "key.parsed_scope.end" : 4381,
                    "key.parsed_scope.start" : 4381,
                    "key.reusingastcontext" : false,
                    "key.typename" : "OpaquePointer?",
                    "key.typeusr" : "$ss13OpaquePointerVSgD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5codec3forAE5CodecVSgSS_tF06selectG0L_s13OpaquePointerVSgvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let SQLITE_TRANSIENT: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>SQLITE_TRANSIENT<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 110,
                    "key.line" : 4385,
                    "key.modulename" : "main",
                    "key.name" : "SQLITE_TRANSIENT",
                    "key.namelength" : 16,
                    "key.nameoffset" : 186078,
                    "key.offset" : 186074,
                    "key.parsed_declaration" : "let SQLITE_TRANSIENT = unsafeBitCast(\n  OpaquePointer(bitPattern: -1), to: sqlite3_destructor_type.self)",
                    "key.parsed_scope.end" : 4385,
                    "key.parsed_scope.start" : 4385,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5codec3forAE5CodecVSgSS_tF16SQLITE_TRANSIENTL_Xevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type>?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>codec<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 17,
                    "key.line" : 4388,
                    "key.modulename" : "main",
                    "key.name" : "codec",
                    "key.namelength" : 5,
                    "key.nameoffset" : 186262,
                    "key.offset" : 186258,
                    "key.parsed_declaration" : "let codec: Codec?",
                    "key.parsed_scope.end" : 4388,
                    "key.parsed_scope.start" : 4388,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.Codec?",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV5CodecVSgD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5codec3forAE5CodecVSgSS_tFAFL_AJvp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String) -> DynamicGraph.Store.Codec?",
                "key.typeusr" : "$s3for4main12DynamicGraphC5StoreV5CodecVSgSS_tcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5codec3forAE5CodecVSgSS_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@discardableResult public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, variable: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/Type>, kind: <Type usr=\"s:4main10DeviceKindO\">DeviceKind<\/Type>? = nil, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = []) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 187525
                  },
                  {
                    "key.attribute" : "source.decl.attribute.discardableResult",
                    "key.length" : 18,
                    "key.offset" : 187502
                  }
                ],
                "key.bodylength" : 2429,
                "key.bodyoffset" : 187638,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read a tensor from the store into tensor variable from dynamic graph.\n\n - Parameters:\n   - key: The key corresponding to that particular tensor.\n   - variable: The tensor variable to be initialized with.\n - Returns whether we successfully initialized the tensor variable.",
                "key.doc.declaration" : "@discardableResult\npublic func read(_ key: String, variable: DynamicGraph_Any, kind: DeviceKind? = nil, codec: Codec = []) -> Bool",
                "key.doc.discussion" : [
                  {
                    "List-Bullet" : ""
                  }
                ],
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4433\" column=\"17\"><Name>read(_:variable:kind:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF<\/USR><Declaration>@discardableResult\npublic func read(_ key: String, variable: DynamicGraph_Any, kind: DeviceKind? = nil, codec: Codec = []) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Read a tensor from the store into tensor variable from dynamic graph.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to that particular tensor.<\/Para><\/Discussion><\/Parameter><Parameter><Name>variable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The tensor variable to be initialized with.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><List-Bullet><Item><Para>Returns whether we successfully initialized the tensor variable.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 4433,
                "key.doc.name" : "read(_:variable:kind:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to that particular tensor."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The tensor variable to be initialized with."
                      }
                    ],
                    "name" : "variable"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 320,
                "key.docoffset" : 187177,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variable<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>kind<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:4main10DeviceKindO\">DeviceKind<\/ref.enum>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 2536,
                "key.line" : 4433,
                "key.modulename" : "main",
                "key.name" : "read(_:variable:kind:codec:)",
                "key.namelength" : 91,
                "key.nameoffset" : 187537,
                "key.offset" : 187532,
                "key.parsed_declaration" : "public func read(_ key: String, variable: DynamicGraph_Any, kind: DeviceKind? = nil, codec: Codec = []) -> Bool",
                "key.parsed_scope.end" : 4486,
                "key.parsed_scope.start" : 4433,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any DynamicGraph_Any, DeviceKind?, DynamicGraph.Store.Codec) -> Bool",
                "key.typeusr" : "$s_8variable4kind5codecSbSS_4main16DynamicGraph_Any_pAD10DeviceKindOSgAD0eF0C5StoreV5CodecVtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelReaderResult<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 190073
                  }
                ],
                "key.bodylength" : 252,
                "key.bodyoffset" : 190104,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelReaderResult<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 277,
                "key.line" : 4487,
                "key.modulename" : "main",
                "key.name" : "ModelReaderResult",
                "key.namelength" : 17,
                "key.nameoffset" : 190085,
                "key.offset" : 190080,
                "key.parsed_declaration" : "public enum ModelReaderResult",
                "key.parsed_scope.end" : 4494,
                "key.parsed_scope.start" : 4487,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 44,
                    "key.offset" : 190169,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case `continue`(<Type usr=\"s:SS\">String<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type>? = nil)<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.doc.column" : 12,
                        "key.doc.comment" : "Continue to load parameter with the given name.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4489\" column=\"12\"><Name>continue(_:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV17ModelReaderResultO8continueyAGSS_AE5CodecVSgtcAGmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Continue to load parameter with the given name.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 4489,
                        "key.doc.name" : "continue(_:codec:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 52,
                        "key.docoffset" : 190111,
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>`continue`<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 39,
                        "key.line" : 4489,
                        "key.modulename" : "main",
                        "key.name" : "continue(_:codec:)",
                        "key.namelength" : 39,
                        "key.nameoffset" : 190174,
                        "key.offset" : 190174,
                        "key.parsed_declaration" : "case `continue`(String, codec: Codec? = nil)",
                        "key.parsed_scope.end" : 4489,
                        "key.parsed_scope.start" : 4489,
                        "key.reusingastcontext" : false,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(DynamicGraph.Store.ModelReaderResult.Type) -> (String, DynamicGraph.Store.Codec?) -> DynamicGraph.Store.ModelReaderResult",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV17ModelReaderResultOSS_AE5CodecVSgtcAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderResultO8continueyAGSS_AE5CodecVSgtcAGmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 25,
                    "key.offset" : 190281,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case final(NNC.AnyTensor)<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.doc.column" : 12,
                        "key.doc.comment" : "The parameter is loaded, no futher operation need.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4491\" column=\"12\"><Name>final(_:)<\/Name><USR>s:4main12DynamicGraphC5StoreV17ModelReaderResultO5final33_FB88E2357CC5890C59B91A970B0C008ELLXeF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The parameter is loaded, no futher operation need.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 4491,
                        "key.doc.name" : "final(_:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 55,
                        "key.docoffset" : 190220,
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>final<\/decl.name>(<decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 20,
                        "key.line" : 4491,
                        "key.modulename" : "main",
                        "key.name" : "final(_:)",
                        "key.namelength" : 20,
                        "key.nameoffset" : 190286,
                        "key.offset" : 190286,
                        "key.parsed_declaration" : "case final(NNC.AnyTensor)",
                        "key.parsed_scope.end" : 4491,
                        "key.parsed_scope.start" : 4491,
                        "key.reusingastcontext" : false,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(DynamicGraph.Store.ModelReaderResult.Type) -> (<<error type>>) -> DynamicGraph.Store.ModelReaderResult",
                        "key.typeusr" : "$sXeD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderResultO5final33_FB88E2357CC5890C59B91A970B0C008ELLXeF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 9,
                    "key.offset" : 190342,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case fail<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.doc.column" : 12,
                        "key.doc.comment" : "Nothing is loaded.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4493\" column=\"12\"><Name>fail<\/Name><USR>s:4main12DynamicGraphC5StoreV17ModelReaderResultO4failyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Nothing is loaded.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 4493,
                        "key.doc.name" : "fail",
                        "key.doc.type" : "Other",
                        "key.doclength" : 23,
                        "key.docoffset" : 190313,
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fail<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 4,
                        "key.line" : 4493,
                        "key.modulename" : "main",
                        "key.name" : "fail",
                        "key.namelength" : 4,
                        "key.nameoffset" : 190347,
                        "key.offset" : 190347,
                        "key.parsed_declaration" : "case fail",
                        "key.parsed_scope.end" : 4493,
                        "key.parsed_scope.start" : 4493,
                        "key.reusingastcontext" : false,
                        "key.typename" : "(DynamicGraph.Store.ModelReaderResult.Type) -> DynamicGraph.Store.ModelReaderResult",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV17ModelReaderResultOAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderResultO4failyA2GmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelReaderResult.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV17ModelReaderResultOmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderResultO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelReaderHelper<\/Declaration>",
                "key.bodylength" : 354,
                "key.bodyoffset" : 190387,
                "key.column" : 11,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelReaderHelper<\/decl.name><\/decl.class>",
                "key.kind" : "source.lang.swift.decl.class",
                "key.length" : 380,
                "key.line" : 4495,
                "key.modulename" : "main",
                "key.name" : "ModelReaderHelper",
                "key.namelength" : 17,
                "key.nameoffset" : 190368,
                "key.offset" : 190362,
                "key.parsed_declaration" : "class ModelReaderHelper",
                "key.parsed_scope.end" : 4505,
                "key.parsed_scope.start" : 4495,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>let reader: (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>reader<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 78,
                    "key.line" : 4496,
                    "key.modulename" : "main",
                    "key.name" : "reader",
                    "key.namelength" : 6,
                    "key.nameoffset" : 190398,
                    "key.offset" : 190394,
                    "key.parsed_declaration" : "let reader: (String, DataType, TensorFormat, TensorShape) -> ModelReaderResult",
                    "key.parsed_scope.end" : 4496,
                    "key.parsed_scope.start" : 4496,
                    "key.reusingastcontext" : false,
                    "key.typename" : "(String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult",
                    "key.typeusr" : "$sy4main12DynamicGraphC5StoreV17ModelReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0J5ShapeVtcD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderHelperC6readeryAE0eF6ResultOSS_AA8DataTypeOAA12TensorFormatOAA0L5ShapeVtcvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>let sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sqlite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 35,
                    "key.line" : 4497,
                    "key.modulename" : "main",
                    "key.name" : "sqlite",
                    "key.namelength" : 6,
                    "key.nameoffset" : 190483,
                    "key.offset" : 190479,
                    "key.parsed_declaration" : "let sqlite: UnsafeMutableRawPointer",
                    "key.parsed_scope.end" : 4497,
                    "key.parsed_scope.start" : 4497,
                    "key.reusingastcontext" : false,
                    "key.typename" : "UnsafeMutableRawPointer",
                    "key.typeusr" : "$sSvD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderHelperC6sqliteSvvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>init(reader: @escaping (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>, sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>)<\/Declaration>",
                    "key.bodylength" : 65,
                    "key.bodyoffset" : 190670,
                    "key.column" : 7,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sqlite<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 215,
                    "key.line" : 4498,
                    "key.modulename" : "main",
                    "key.name" : "init(reader:sqlite:)",
                    "key.namelength" : 147,
                    "key.nameoffset" : 190521,
                    "key.offset" : 190521,
                    "key.parsed_declaration" : "init(\n  reader: @escaping (String, DataType, TensorFormat, TensorShape) -> ModelReaderResult,\n  sqlite: UnsafeMutableRawPointer\n)",
                    "key.parsed_scope.end" : 4504,
                    "key.parsed_scope.start" : 4498,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(DynamicGraph.Store.ModelReaderHelper.Type) -> (@escaping (String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult, UnsafeMutableRawPointer) -> DynamicGraph.Store.ModelReaderHelper",
                    "key.typeusr" : "$s6reader6sqlite4main12DynamicGraphC5StoreV17ModelReaderHelperCAG0gH6ResultOSS_AC8DataTypeOAC12TensorFormatOAC0M5ShapeVtc_SvtcD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderHelperC6reader6sqliteAgE0eF6ResultOSS_AA8DataTypeOAA12TensorFormatOAA0M5ShapeVtc_Svtcfc"
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelReaderHelper.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV17ModelReaderHelperCmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelReaderHelperC"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelReadError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 190747
                  }
                ],
                "key.bodylength" : 32,
                "key.bodyoffset" : 190782,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 5,
                    "key.offset" : 190775
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelReadError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Error"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 61,
                "key.line" : 4506,
                "key.modulename" : "main",
                "key.name" : "ModelReadError",
                "key.namelength" : 14,
                "key.nameoffset" : 190759,
                "key.offset" : 190754,
                "key.parsed_declaration" : "public enum ModelReadError: Error",
                "key.parsed_scope.end" : 4508,
                "key.parsed_scope.start" : 4506,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 20,
                    "key.offset" : 190789,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case missing(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>missing<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 15,
                        "key.line" : 4507,
                        "key.modulename" : "main",
                        "key.name" : "missing(_:)",
                        "key.namelength" : 15,
                        "key.nameoffset" : 190794,
                        "key.offset" : 190794,
                        "key.parsed_declaration" : "case missing(String)",
                        "key.parsed_scope.end" : 4507,
                        "key.parsed_scope.start" : 4507,
                        "key.reusingastcontext" : false,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(DynamicGraph.Store.ModelReadError.Type) -> (String) -> DynamicGraph.Store.ModelReadError",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV14ModelReadErrorOSScAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV14ModelReadErrorO7missingyAGSScAGmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelReadError.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV14ModelReadErrorOmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV14ModelReadErrorO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main5ModelC\">Model<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 191290
                  }
                ],
                "key.bodylength" : 3050,
                "key.bodyoffset" : 191480,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model to be initialized with parameters from a given key.\n   - strict: When this is true, will throw error if any parameters are missing.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "public func read(_ key: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4519\" column=\"17\"><Name>read(_:model:strict:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF<\/USR><Declaration>public func read(_ key: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When this is true, will throw error if any parameters are missing.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4519,
                "key.doc.name" : "read(_:model:strict:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "When this is true, will throw error if any parameters are missing."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 465,
                "key.docoffset" : 190820,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 3234,
                "key.line" : 4519,
                "key.modulename" : "main",
                "key.name" : "read(_:model:strict:codec:reader:)",
                "key.namelength" : 169,
                "key.nameoffset" : 191302,
                "key.offset" : 191297,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: Model, strict: Bool, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4589,
                "key.parsed_scope.start" : 4519,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let readerHelper: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderHelperC\">ModelReaderHelper<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>readerHelper<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.class usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderHelperC\">ModelReaderHelper<\/ref.class><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 74,
                    "key.line" : 4539,
                    "key.modulename" : "main",
                    "key.name" : "readerHelper",
                    "key.namelength" : 12,
                    "key.nameoffset" : 192143,
                    "key.offset" : 192139,
                    "key.parsed_declaration" : "let readerHelper = ModelReaderHelper(reader: reader, sqlite: store.sqlite)",
                    "key.parsed_scope.end" : 4539,
                    "key.parsed_scope.start" : 4539,
                    "key.reusingastcontext" : false,
                    "key.typename" : "DynamicGraph.Store.ModelReaderHelper",
                    "key.typeusr" : "$s4main12DynamicGraphC5StoreV17ModelReaderHelperCD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF0I6HelperL_AE0jlS0Cvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let unmanaged: <Type usr=\"s:s9UnmanagedV\">Unmanaged<\/Type>&lt;<Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderHelperC\">ModelReaderHelper<\/Type>&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>unmanaged<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s9UnmanagedV\">Unmanaged<\/ref.struct>&lt;<ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.class usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderHelperC\">ModelReaderHelper<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 52,
                    "key.line" : 4573,
                    "key.modulename" : "main",
                    "key.name" : "unmanaged",
                    "key.namelength" : 9,
                    "key.nameoffset" : 193819,
                    "key.offset" : 193815,
                    "key.parsed_declaration" : "let unmanaged = Unmanaged.passRetained(readerHelper)",
                    "key.parsed_scope.end" : 4573,
                    "key.parsed_scope.start" : 4573,
                    "key.reusingastcontext" : false,
                    "key.typename" : "Unmanaged<DynamicGraph.Store.ModelReaderHelper>",
                    "key.typeusr" : "$ss9UnmanagedVy4main12DynamicGraphC5StoreV17ModelReaderHelperCGD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF9unmanagedL_s9UnmanagedVyAE0jL6HelperCGvp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, Model, Bool, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws -> ()",
                "key.typeusr" : "$s_5model6strict5codec6readerySS_4main5ModelCSbAE12DynamicGraphC5StoreV5CodecVAK0F12ReaderResultOSS_AE8DataTypeOAE12TensorFormatOAE0O5ShapeVtcSgtKcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main5ModelC\">Model<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 194935
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 194920
                  }
                ],
                "key.bodylength" : 85,
                "key.bodyoffset" : 195104,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model to be initialized with parameters from a given key.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "@inlinable public func read(_ key: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4600\" column=\"17\"><Name>read(_:model:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF<\/USR><Declaration>@inlinable public func read(_ key: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4600,
                "key.doc.name" : "read(_:model:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 379,
                "key.docoffset" : 194536,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 248,
                "key.line" : 4600,
                "key.modulename" : "main",
                "key.name" : "read(_:model:codec:reader:)",
                "key.namelength" : 155,
                "key.nameoffset" : 194947,
                "key.offset" : 194942,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: Model, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n)",
                "key.parsed_scope.end" : 4605,
                "key.parsed_scope.start" : 4600,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, Model, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) -> ()",
                "key.typeusr" : "$s_5model5codec6readerySS_4main5ModelCAD12DynamicGraphC5StoreV5CodecVAJ0E12ReaderResultOSS_AD8DataTypeOAD12TensorFormatOAD0N5ShapeVtcSgtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 195696
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 195681
                  }
                ],
                "key.bodylength" : 90,
                "key.bodyoffset" : 195896,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model builder.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model builder to be initialized with parameters from a given key.\n   - strict: When this is true, will throw error if any parameters are missing.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "@inlinable public func read(_ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4617\" column=\"17\"><Name>read(_:model:strict:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF<\/USR><Declaration>@inlinable public func read(_ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model builder.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model builder to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When this is true, will throw error if any parameters are missing.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4617,
                "key.doc.name" : "read(_:model:strict:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model builder to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "When this is true, will throw error if any parameters are missing."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 481,
                "key.docoffset" : 195195,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 284,
                "key.line" : 4617,
                "key.modulename" : "main",
                "key.name" : "read(_:model:strict:codec:reader:)",
                "key.namelength" : 179,
                "key.nameoffset" : 195708,
                "key.offset" : 195703,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4622,
                "key.parsed_scope.start" : 4617,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, AnyModelBuilder, Bool, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws -> ()",
                "key.typeusr" : "$s_5model6strict5codec6readerySS_4main15AnyModelBuilderCSbAE12DynamicGraphC5StoreV5CodecVAK0G12ReaderResultOSS_AE8DataTypeOAE12TensorFormatOAE0Q5ShapeVtcSgtKcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 196407
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 196392
                  }
                ],
                "key.bodylength" : 85,
                "key.bodyoffset" : 196586,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model builder.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model builder to be initialized with parameters from a given key.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "@inlinable public func read(_ key: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4633\" column=\"17\"><Name>read(_:model:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF<\/USR><Declaration>@inlinable public func read(_ key: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model builder.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model builder to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4633,
                "key.doc.name" : "read(_:model:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model builder to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 395,
                "key.docoffset" : 195992,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 258,
                "key.line" : 4633,
                "key.modulename" : "main",
                "key.name" : "read(_:model:codec:reader:)",
                "key.namelength" : 165,
                "key.nameoffset" : 196419,
                "key.offset" : 196414,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: AnyModelBuilder, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n)",
                "key.parsed_scope.end" : 4638,
                "key.parsed_scope.start" : 4633,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, AnyModelBuilder, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) -> ()",
                "key.typeusr" : "$s_5model5codec6readerySS_4main15AnyModelBuilderCAD12DynamicGraphC5StoreV5CodecVAJ0F12ReaderResultOSS_AD8DataTypeOAD12TensorFormatOAD0P5ShapeVtcSgtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main8AnyModelP\">AnyModel<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 197162
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 197147
                  }
                ],
                "key.bodylength" : 335,
                "key.bodyoffset" : 197355,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model to be initialized with parameters from a given key.\n   - strict: When this is true, will throw error if any parameters are missing.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "@inlinable public func read(_ key: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4650\" column=\"17\"><Name>read(_:model:strict:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF<\/USR><Declaration>@inlinable public func read(_ key: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When this is true, will throw error if any parameters are missing.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4650,
                "key.doc.name" : "read(_:model:strict:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "When this is true, will throw error if any parameters are missing."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 465,
                "key.docoffset" : 196677,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main8AnyModelP\">AnyModel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 522,
                "key.line" : 4650,
                "key.modulename" : "main",
                "key.name" : "read(_:model:strict:codec:reader:)",
                "key.namelength" : 172,
                "key.nameoffset" : 197174,
                "key.offset" : 197169,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: AnyModel, strict: Bool, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4662,
                "key.parsed_scope.start" : 4650,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF\">read(_: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any AnyModel, Bool, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws -> ()",
                "key.typeusr" : "$s_5model6strict5codec6readerySS_4main8AnyModel_pSbAE12DynamicGraphC5StoreV5CodecVAJ0G12ReaderResultOSS_AE8DataTypeOAE12TensorFormatOAE0P5ShapeVtcSgtKcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func read(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main8AnyModelP\">AnyModel<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], reader: ((<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:4main8DataTypeO\">DataType<\/Type>, <Type usr=\"s:4main12TensorFormatO\">TensorFormat<\/Type>, <Type usr=\"s:4main11TensorShapeV\">TensorShape<\/Type>) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 198095
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 198080
                  }
                ],
                "key.bodylength" : 85,
                "key.bodyoffset" : 198267,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Read parameters into a given model.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model to be initialized with parameters from a given key.\n   - codec: The codec for potential encoded parameters.\n   - reader: You can customize your reader to load parameter with a different name etc.",
                "key.doc.declaration" : "@inlinable public func read(_ key: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4673\" column=\"17\"><Name>read(_:model:codec:reader:)<\/Name><USR>s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF<\/USR><Declaration>@inlinable public func read(_ key: String, model: AnyModel, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Read parameters into a given model.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model to be initialized with parameters from a given key.<\/Para><\/Discussion><\/Parameter><Parameter><Name>codec<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The codec for potential encoded parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your reader to load parameter with a different name etc.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4673,
                "key.doc.name" : "read(_:model:codec:reader:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model to be initialized with parameters from a given key."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The codec for potential encoded parameters."
                      }
                    ],
                    "name" : "codec"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your reader to load parameter with a different name etc."
                      }
                    ],
                    "name" : "reader"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 379,
                "key.docoffset" : 197696,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main8AnyModelP\">AnyModel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main8DataTypeO\">DataType<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:4main12TensorFormatO\">TensorFormat<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:4main11TensorShapeV\">TensorShape<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelReaderResultO\">ModelReaderResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 251,
                "key.line" : 4673,
                "key.modulename" : "main",
                "key.name" : "read(_:model:codec:reader:)",
                "key.namelength" : 158,
                "key.nameoffset" : 198107,
                "key.offset" : 198102,
                "key.parsed_declaration" : "public func read(\n  _ key: String, model: AnyModel, codec: Codec = [],\n  reader: ((String, DataType, TensorFormat, TensorShape) -> ModelReaderResult)? = nil\n)",
                "key.parsed_scope.end" : 4678,
                "key.parsed_scope.start" : 4673,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4readyXeXeF\">read(_:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read4likeAC9AnyTensorCSgSS_tF\">read(like:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_8variable4kind5codecSbSS_AA0bC4_Any_pAA10DeviceKindOSgAE5CodecVtF\">read(_:variable:kind:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA5ModelCSbAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtKF\">read(_: String, model: Model, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA5ModelCAE5CodecVAE0I12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0O5ShapeVtcSgtF\">read(_: String, model: Model, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA15AnyModelBuilderCSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0R5ShapeVtcSgtKF\">read(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA15AnyModelBuilderCAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtF\">read(_: String, model: AnyModelBuilder, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV4read_5model6strict5codec6readerySS_AA8AnyModel_pSbAE5CodecVAE0K12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0Q5ShapeVtcSgtKF\">read(_: String, model: AnyModel, strict: Bool, codec: Codec = [], reader: ((String, DataType, TensorFormat, TensorShape) -&gt; ModelReaderResult)? = nil) throws<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any AnyModel, DynamicGraph.Store.Codec, ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) -> ()",
                "key.typeusr" : "$s_5model5codec6readerySS_4main8AnyModel_pAD12DynamicGraphC5StoreV5CodecVAI0F12ReaderResultOSS_AD8DataTypeOAD12TensorFormatOAD0O5ShapeVtcSgtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4read_5model5codec6readerySS_AA8AnyModel_pAE5CodecVAE0J12ReaderResultOSS_AA8DataTypeOAA12TensorFormatOAA0P5ShapeVtcSgtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelWriteError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 198358
                  }
                ],
                "key.bodylength" : 62,
                "key.bodyoffset" : 198394,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 5,
                    "key.offset" : 198387
                  }
                ],
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelWriteError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Error"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 92,
                "key.line" : 4679,
                "key.modulename" : "main",
                "key.name" : "ModelWriteError",
                "key.namelength" : 15,
                "key.nameoffset" : 198370,
                "key.offset" : 198365,
                "key.parsed_declaration" : "public enum ModelWriteError: Error",
                "key.parsed_scope.end" : 4682,
                "key.parsed_scope.start" : 4679,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 16,
                    "key.offset" : 198401,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case sqliteError<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>sqliteError<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 11,
                        "key.line" : 4680,
                        "key.modulename" : "main",
                        "key.name" : "sqliteError",
                        "key.namelength" : 11,
                        "key.nameoffset" : 198406,
                        "key.offset" : 198406,
                        "key.parsed_declaration" : "case sqliteError",
                        "key.parsed_scope.end" : 4680,
                        "key.parsed_scope.start" : 4680,
                        "key.reusingastcontext" : false,
                        "key.typename" : "(DynamicGraph.Store.ModelWriteError.Type) -> DynamicGraph.Store.ModelWriteError",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV15ModelWriteErrorOAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV15ModelWriteErrorO06sqliteG0yA2GmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 27,
                    "key.offset" : 198424,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case externalFileWriteError<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>externalFileWriteError<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 22,
                        "key.line" : 4681,
                        "key.modulename" : "main",
                        "key.name" : "externalFileWriteError",
                        "key.namelength" : 22,
                        "key.nameoffset" : 198429,
                        "key.offset" : 198429,
                        "key.parsed_declaration" : "case externalFileWriteError",
                        "key.parsed_scope.end" : 4681,
                        "key.parsed_scope.start" : 4681,
                        "key.reusingastcontext" : false,
                        "key.typename" : "(DynamicGraph.Store.ModelWriteError.Type) -> DynamicGraph.Store.ModelWriteError",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV15ModelWriteErrorOAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV15ModelWriteErrorO012externalFilefG0yA2GmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelWriteError.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV15ModelWriteErrorOmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV15ModelWriteErrorO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, tensor: NNC.AnyTensor, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = []) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 198691
                  }
                ],
                "key.bodylength" : 684,
                "key.bodyoffset" : 198788,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a tensor to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - tensor: The tensor to be persisted.\n   - strict: Whether check error.",
                "key.doc.declaration" : "public func write(_ key: String, tensor: NNC.AnyTensor, strict: Bool, codec: Codec = []) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4691\" column=\"17\"><Name>write(_:tensor:strict:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>public func write(_ key: String, tensor: NNC.AnyTensor, strict: Bool, codec: Codec = []) throws<\/Declaration><CommentParts><Abstract><Para>Write a tensor to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular tensor.<\/Para><\/Discussion><\/Parameter><Parameter><Name>tensor<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The tensor to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether check error.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4691,
                "key.doc.name" : "write(_:tensor:strict:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular tensor."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The tensor to be persisted."
                      }
                    ],
                    "name" : "tensor"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether check error."
                      }
                    ],
                    "name" : "strict"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 224,
                "key.docoffset" : 198462,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tensor<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 775,
                "key.line" : 4691,
                "key.modulename" : "main",
                "key.name" : "write(_:tensor:strict:codec:)",
                "key.namelength" : 76,
                "key.nameoffset" : 198703,
                "key.offset" : 198698,
                "key.parsed_declaration" : "public func write(_ key: String, tensor: NNC.AnyTensor, strict: Bool, codec: Codec = []) throws",
                "key.parsed_scope.end" : 4708,
                "key.parsed_scope.start" : 4691,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, <<error type>>, Bool, DynamicGraph.Store.Codec) throws -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, tensor: NNC.AnyTensor, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [])<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 199682
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 199667
                  }
                ],
                "key.bodylength" : 72,
                "key.bodyoffset" : 199758,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a tensor to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - tensor: The tensor to be persisted.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, tensor: NNC.AnyTensor, codec: Codec = [])",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4717\" column=\"17\"><Name>write(_:tensor:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, tensor: NNC.AnyTensor, codec: Codec = [])<\/Declaration><CommentParts><Abstract><Para>Write a tensor to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular tensor.<\/Para><\/Discussion><\/Parameter><Parameter><Name>tensor<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The tensor to be persisted.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4717,
                "key.doc.name" : "write(_:tensor:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular tensor."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The tensor to be persisted."
                      }
                    ],
                    "name" : "tensor"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 184,
                "key.docoffset" : 199478,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tensor<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 142,
                "key.line" : 4717,
                "key.modulename" : "main",
                "key.name" : "write(_:tensor:codec:)",
                "key.namelength" : 62,
                "key.nameoffset" : 199694,
                "key.offset" : 199689,
                "key.parsed_declaration" : "public func write(_ key: String, tensor: NNC.AnyTensor, codec: Codec = [])",
                "key.parsed_scope.end" : 4719,
                "key.parsed_scope.start" : 4717,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, <<error type>>, DynamicGraph.Store.Codec) -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, variable: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = []) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 200085
                  }
                ],
                "key.bodylength" : 1224,
                "key.bodyoffset" : 200187,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a tensor variable to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - variable: The tensor variable to be persisted.\n   - strict: Whether check error.",
                "key.doc.declaration" : "public func write(_ key: String, variable: DynamicGraph_Any, strict: Bool, codec: Codec = []) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4728\" column=\"17\"><Name>write(_:variable:strict:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF<\/USR><Declaration>public func write(_ key: String, variable: DynamicGraph_Any, strict: Bool, codec: Codec = []) throws<\/Declaration><CommentParts><Abstract><Para>Write a tensor variable to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular tensor.<\/Para><\/Discussion><\/Parameter><Parameter><Name>variable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The tensor variable to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether check error.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4728,
                "key.doc.name" : "write(_:variable:strict:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular tensor."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The tensor variable to be persisted."
                      }
                    ],
                    "name" : "variable"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether check error."
                      }
                    ],
                    "name" : "strict"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 244,
                "key.docoffset" : 199836,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variable<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 1320,
                "key.line" : 4728,
                "key.modulename" : "main",
                "key.name" : "write(_:variable:strict:codec:)",
                "key.namelength" : 81,
                "key.nameoffset" : 200097,
                "key.offset" : 200092,
                "key.parsed_declaration" : "public func write(_ key: String, variable: DynamicGraph_Any, strict: Bool, codec: Codec = []) throws",
                "key.parsed_scope.end" : 4758,
                "key.parsed_scope.start" : 4728,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any DynamicGraph_Any, Bool, DynamicGraph.Store.Codec) throws -> ()",
                "key.typeusr" : "$s_8variable6strict5codecySS_4main16DynamicGraph_Any_pSbAD0eF0C5StoreV5CodecVtKcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, variable: <Type usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [])<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 201641
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 201626
                  }
                ],
                "key.bodylength" : 76,
                "key.bodyoffset" : 201722,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a tensor variable to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular tensor.\n   - variable: The tensor variable to be persisted.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, variable: DynamicGraph_Any, codec: Codec = [])",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4767\" column=\"17\"><Name>write(_:variable:codec:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF<\/USR><Declaration>@inlinable public func write(_ key: String, variable: DynamicGraph_Any, codec: Codec = [])<\/Declaration><CommentParts><Abstract><Para>Write a tensor variable to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular tensor.<\/Para><\/Discussion><\/Parameter><Parameter><Name>variable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The tensor variable to be persisted.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4767,
                "key.doc.name" : "write(_:variable:codec:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular tensor."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The tensor variable to be persisted."
                      }
                    ],
                    "name" : "variable"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 204,
                "key.docoffset" : 201417,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>variable<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main16DynamicGraph_AnyP\">DynamicGraph_Any<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 151,
                "key.line" : 4767,
                "key.modulename" : "main",
                "key.name" : "write(_:variable:codec:)",
                "key.namelength" : 67,
                "key.nameoffset" : 201653,
                "key.offset" : 201648,
                "key.parsed_declaration" : "public func write(_ key: String, variable: DynamicGraph_Any, codec: Codec = [])",
                "key.parsed_scope.end" : 4769,
                "key.parsed_scope.start" : 4767,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any DynamicGraph_Any, DynamicGraph.Store.Codec) -> ()",
                "key.typeusr" : "$s_8variable5codecySS_4main16DynamicGraph_Any_pAC0dE0C5StoreV5CodecVtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelWriterResult<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 201804
                  }
                ],
                "key.bodylength" : 139,
                "key.bodyoffset" : 201835,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelWriterResult<\/decl.name><\/decl.enum>",
                "key.kind" : "source.lang.swift.decl.enum",
                "key.length" : 164,
                "key.line" : 4770,
                "key.modulename" : "main",
                "key.name" : "ModelWriterResult",
                "key.namelength" : 17,
                "key.nameoffset" : 201816,
                "key.offset" : 201811,
                "key.parsed_declaration" : "public enum ModelWriterResult",
                "key.parsed_scope.end" : 4775,
                "key.parsed_scope.start" : 4770,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 23,
                    "key.offset" : 201902,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case `continue`(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.doc.column" : 12,
                        "key.doc.comment" : "Continue to write the tensor with the given name.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4772\" column=\"12\"><Name>continue(_:)<\/Name><USR>s:4main12DynamicGraphC5StoreV17ModelWriterResultO8continueyAGSScAGmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Continue to write the tensor with the given name.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 4772,
                        "key.doc.name" : "continue(_:)",
                        "key.doc.type" : "Other",
                        "key.doclength" : 54,
                        "key.docoffset" : 201842,
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>`continue`<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 18,
                        "key.line" : 4772,
                        "key.modulename" : "main",
                        "key.name" : "continue(_:)",
                        "key.namelength" : 18,
                        "key.nameoffset" : 201907,
                        "key.offset" : 201907,
                        "key.parsed_declaration" : "case `continue`(String)",
                        "key.parsed_scope.end" : 4772,
                        "key.parsed_scope.start" : 4772,
                        "key.reusingastcontext" : false,
                        "key.substructure" : [

                        ],
                        "key.typename" : "(DynamicGraph.Store.ModelWriterResult.Type) -> (String) -> DynamicGraph.Store.ModelWriterResult",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV17ModelWriterResultOSScAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterResultO8continueyAGSScAGmF"
                      }
                    ]
                  },
                  {
                    "key.kind" : "source.lang.swift.decl.enumcase",
                    "key.length" : 9,
                    "key.offset" : 201960,
                    "key.substructure" : [
                      {
                        "key.accessibility" : "source.lang.swift.accessibility.public",
                        "key.annotated_decl" : "<Declaration>case skip<\/Declaration>",
                        "key.column" : 12,
                        "key.decl_lang" : "source.lang.swift",
                        "key.doc.column" : 12,
                        "key.doc.comment" : "Nothing to write.",
                        "key.doc.declaration" : "",
                        "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4774\" column=\"12\"><Name>skip<\/Name><USR>s:4main12DynamicGraphC5StoreV17ModelWriterResultO4skipyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Nothing to write.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                        "key.doc.line" : 4774,
                        "key.doc.name" : "skip",
                        "key.doc.type" : "Other",
                        "key.doclength" : 22,
                        "key.docoffset" : 201932,
                        "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                        "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>skip<\/decl.name><\/decl.enumelement>",
                        "key.kind" : "source.lang.swift.decl.enumelement",
                        "key.length" : 4,
                        "key.line" : 4774,
                        "key.modulename" : "main",
                        "key.name" : "skip",
                        "key.namelength" : 4,
                        "key.nameoffset" : 201965,
                        "key.offset" : 201965,
                        "key.parsed_declaration" : "case skip",
                        "key.parsed_scope.end" : 4774,
                        "key.parsed_scope.start" : 4774,
                        "key.reusingastcontext" : false,
                        "key.typename" : "(DynamicGraph.Store.ModelWriterResult.Type) -> DynamicGraph.Store.ModelWriterResult",
                        "key.typeusr" : "$sy4main12DynamicGraphC5StoreV17ModelWriterResultOAGmcD",
                        "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterResultO4skipyA2GmF"
                      }
                    ]
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelWriterResult.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV17ModelWriterResultOmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterResultO"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>class <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.ModelWriterHelper<\/Declaration>",
                "key.bodylength" : 310,
                "key.bodyoffset" : 202005,
                "key.column" : 11,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<decl.name>ModelWriterHelper<\/decl.name><\/decl.class>",
                "key.kind" : "source.lang.swift.decl.class",
                "key.length" : 336,
                "key.line" : 4776,
                "key.modulename" : "main",
                "key.name" : "ModelWriterHelper",
                "key.namelength" : 17,
                "key.nameoffset" : 201986,
                "key.offset" : 201980,
                "key.parsed_declaration" : "class ModelWriterHelper",
                "key.parsed_scope.end" : 4786,
                "key.parsed_scope.start" : 4776,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>let writer: (<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>writer<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 56,
                    "key.line" : 4777,
                    "key.modulename" : "main",
                    "key.name" : "writer",
                    "key.namelength" : 6,
                    "key.nameoffset" : 202016,
                    "key.offset" : 202012,
                    "key.parsed_declaration" : "let writer: (String, NNC.AnyTensor) -> ModelWriterResult",
                    "key.parsed_scope.end" : 4777,
                    "key.parsed_scope.start" : 4777,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterHelperC6writerXevp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>let sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type><\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sqlite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 35,
                    "key.line" : 4778,
                    "key.modulename" : "main",
                    "key.name" : "sqlite",
                    "key.namelength" : 6,
                    "key.nameoffset" : 202079,
                    "key.offset" : 202075,
                    "key.parsed_declaration" : "let sqlite: UnsafeMutableRawPointer",
                    "key.parsed_scope.end" : 4778,
                    "key.parsed_scope.start" : 4778,
                    "key.reusingastcontext" : false,
                    "key.typename" : "UnsafeMutableRawPointer",
                    "key.typeusr" : "$sSvD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterHelperC6sqliteSvvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>init(writer: @escaping (<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>, sqlite: <Type usr=\"s:Sv\">UnsafeMutableRawPointer<\/Type>)<\/Declaration>",
                    "key.bodylength" : 65,
                    "key.bodyoffset" : 202244,
                    "key.column" : 7,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sqlite<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                    "key.kind" : "source.lang.swift.decl.function.method.instance",
                    "key.length" : 193,
                    "key.line" : 4779,
                    "key.modulename" : "main",
                    "key.name" : "init(writer:sqlite:)",
                    "key.namelength" : 125,
                    "key.nameoffset" : 202117,
                    "key.offset" : 202117,
                    "key.parsed_declaration" : "init(\n  writer: @escaping (String, NNC.AnyTensor) -> ModelWriterResult,\n  sqlite: UnsafeMutableRawPointer\n)",
                    "key.parsed_scope.end" : 4785,
                    "key.parsed_scope.start" : 4779,
                    "key.reusingastcontext" : false,
                    "key.substructure" : [

                    ],
                    "key.typename" : "(DynamicGraph.Store.ModelWriterHelper.Type) -> (<<error type>>, UnsafeMutableRawPointer) -> DynamicGraph.Store.ModelWriterHelper",
                    "key.typeusr" : "$syXeXecD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterHelperCyXeXecfc"
                  }
                ],
                "key.typename" : "DynamicGraph.Store.ModelWriterHelper.Type",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreV17ModelWriterHelperCmD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV17ModelWriterHelperC"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main5ModelC\">Model<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 202676
                  }
                ],
                "key.bodylength" : 2529,
                "key.bodyoffset" : 202845,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model where its parameters to be persisted.\n   - strict: Whether check error.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "public func write(_ key: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4796\" column=\"17\"><Name>write(_:model:strict:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>public func write(_ key: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Write a model to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether check error.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4796,
                "key.doc.name" : "write(_:model:strict:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether check error."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 350,
                "key.docoffset" : 202321,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 2692,
                "key.line" : 4796,
                "key.modulename" : "main",
                "key.name" : "write(_:model:strict:codec:writer:)",
                "key.namelength" : 148,
                "key.nameoffset" : 202688,
                "key.offset" : 202683,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: Model, strict: Bool, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4860,
                "key.parsed_scope.start" : 4796,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let writerHelper: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>writerHelper<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 74,
                    "key.line" : 4819,
                    "key.modulename" : "main",
                    "key.name" : "writerHelper",
                    "key.namelength" : 12,
                    "key.nameoffset" : 203625,
                    "key.offset" : 203621,
                    "key.parsed_declaration" : "let writerHelper = ModelWriterHelper(writer: writer, sqlite: store.sqlite)",
                    "key.parsed_scope.end" : 4819,
                    "key.parsed_scope.start" : 4819,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF12writerHelperL_Xevp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let unmanaged: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>unmanaged<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 52,
                    "key.line" : 4839,
                    "key.modulename" : "main",
                    "key.name" : "unmanaged",
                    "key.namelength" : 9,
                    "key.nameoffset" : 204526,
                    "key.offset" : 204522,
                    "key.parsed_declaration" : "let unmanaged = Unmanaged.passRetained(writerHelper)",
                    "key.parsed_scope.end" : 4839,
                    "key.parsed_scope.start" : 4839,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF9unmanagedL_Xevp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, Model, Bool, DynamicGraph.Store.Codec, <<error type>>) throws -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main5ModelC\">Model<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 205710
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 205695
                  }
                ],
                "key.bodylength" : 86,
                "key.bodyoffset" : 205858,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model where its parameters to be persisted.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4870\" column=\"17\"><Name>write(_:model:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Write a model to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4870,
                "key.doc.name" : "write(_:model:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 310,
                "key.docoffset" : 205380,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main5ModelC\">Model<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 228,
                "key.line" : 4870,
                "key.modulename" : "main",
                "key.name" : "write(_:model:codec:writer:)",
                "key.namelength" : 134,
                "key.nameoffset" : 205722,
                "key.offset" : 205717,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: Model, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n)",
                "key.parsed_scope.end" : 4875,
                "key.parsed_scope.start" : 4870,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, Model, DynamicGraph.Store.Codec, <<error type>>) -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 206344
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 206329
                  }
                ],
                "key.bodylength" : 93,
                "key.bodyoffset" : 206523,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model builder to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model builder.\n   - model builder: The model where its parameters to be persisted.\n   - strict: Whether check error.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4886\" column=\"17\"><Name>write(_:model:strict:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Write a model builder to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model builder.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model builder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether check error.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4886,
                "key.doc.name" : "write(_:model:strict:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model builder."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model builder"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether check error."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 374,
                "key.docoffset" : 205950,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 266,
                "key.line" : 4886,
                "key.modulename" : "main",
                "key.name" : "write(_:model:strict:codec:writer:)",
                "key.namelength" : 158,
                "key.nameoffset" : 206356,
                "key.offset" : 206351,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4891,
                "key.parsed_scope.start" : 4886,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, AnyModelBuilder, Bool, DynamicGraph.Store.Codec, <<error type>>) throws -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 206976
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 206961
                  }
                ],
                "key.bodylength" : 86,
                "key.bodyoffset" : 207134,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model builder to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model builder.\n   - model builder: The model where its parameters to be persisted.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4901\" column=\"17\"><Name>write(_:model:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Write a model builder to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model builder.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model builder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4901,
                "key.doc.name" : "write(_:model:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model builder."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model builder"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 334,
                "key.docoffset" : 206622,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main15AnyModelBuilderC\">AnyModelBuilder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 238,
                "key.line" : 4901,
                "key.modulename" : "main",
                "key.name" : "write(_:model:codec:writer:)",
                "key.namelength" : 144,
                "key.nameoffset" : 206988,
                "key.offset" : 206983,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: AnyModelBuilder, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n)",
                "key.parsed_scope.end" : 4906,
                "key.parsed_scope.start" : 4901,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, AnyModelBuilder, DynamicGraph.Store.Codec, <<error type>>) -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main8AnyModelP\">AnyModel<\/Type>, strict: <Type usr=\"s:Sb\">Bool<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil) throws<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 207596
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 207581
                  }
                ],
                "key.bodylength" : 337,
                "key.bodyoffset" : 207768,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model where its parameters to be persisted.\n   - strict: Whether check error.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil) throws",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4917\" column=\"17\"><Name>write(_:model:strict:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/Declaration><CommentParts><Abstract><Para>Write a model to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>strict<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether check error.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4917,
                "key.doc.name" : "write(_:model:strict:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Whether check error."
                      }
                    ],
                    "name" : "strict"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 350,
                "key.docoffset" : 207226,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main8AnyModelP\">AnyModel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>strict<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 503,
                "key.line" : 4917,
                "key.modulename" : "main",
                "key.name" : "write(_:model:strict:codec:writer:)",
                "key.namelength" : 151,
                "key.nameoffset" : 207608,
                "key.offset" : 207603,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: AnyModel, strict: Bool, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n) throws",
                "key.parsed_scope.end" : 4929,
                "key.parsed_scope.start" : 4917,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any AnyModel, Bool, DynamicGraph.Store.Codec, <<error type>>) throws -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>@inlinable public func write(_ key: <Type usr=\"s:SS\">String<\/Type>, model: <Type usr=\"s:4main8AnyModelP\">AnyModel<\/Type>, codec: <Type usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/Type> = [], writer: ((<Type usr=\"s:SS\">String<\/Type>, NNC.AnyTensor) -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/Type>)? = nil)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 208441
                  },
                  {
                    "key.attribute" : "source.decl.attribute.inlinable",
                    "key.length" : 10,
                    "key.offset" : 208426
                  }
                ],
                "key.bodylength" : 86,
                "key.bodyoffset" : 208592,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : " Write a model to the store.\n\n - Parameters:\n   - key: The key corresponding to a particular model.\n   - model: The model where its parameters to be persisted.\n   - writer: You can customize your writer to writer parameter with a different name or skip entirely.",
                "key.doc.declaration" : "@inlinable public func write(_ key: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4939\" column=\"17\"><Name>write(_:model:codec:writer:)<\/Name><USR>s:4main12DynamicGraphC5StoreV5writeyXeXeF<\/USR><Declaration>@inlinable public func write(_ key: String, model: AnyModel, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/Declaration><CommentParts><Abstract><Para>Write a model to the store.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key corresponding to a particular model.<\/Para><\/Discussion><\/Parameter><Parameter><Name>model<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The model where its parameters to be persisted.<\/Para><\/Discussion><\/Parameter><Parameter><Name>writer<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>You can customize your writer to writer parameter with a different name or skip entirely.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 4939,
                "key.doc.name" : "write(_:model:codec:writer:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The key corresponding to a particular model."
                      }
                    ],
                    "name" : "key"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "The model where its parameters to be persisted."
                      }
                    ],
                    "name" : "model"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "You can customize your writer to writer parameter with a different name or skip entirely."
                      }
                    ],
                    "name" : "writer"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 310,
                "key.docoffset" : 208111,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>write<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4main8AnyModelP\">AnyModel<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>codec<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV5CodecV\">Codec<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>writer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>NNC.AnyTensor<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:4main12DynamicGraphC5StoreV17ModelWriterResultO\">ModelWriterResult<\/ref.enum><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 231,
                "key.line" : 4939,
                "key.modulename" : "main",
                "key.name" : "write(_:model:codec:writer:)",
                "key.namelength" : 137,
                "key.nameoffset" : 208453,
                "key.offset" : 208448,
                "key.parsed_declaration" : "public func write(\n  _ key: String, model: AnyModel, codec: Codec = [],\n  writer: ((String, NNC.AnyTensor) -> ModelWriterResult)? = nil\n)",
                "key.parsed_scope.end" : 4944,
                "key.parsed_scope.start" : 4939,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_:tensor:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable6strict5codecySS_AA0bC4_Any_pSbAE5CodecVtKF\">write(_:variable:strict:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5write_8variable5codecySS_AA0bC4_Any_pAE5CodecVtF\">write(_:variable:codec:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: Model, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModelBuilder, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4main12DynamicGraphC5StoreV5writeyXeXeF\">write(_: String, model: AnyModel, strict: Bool, codec: Codec = [], writer: ((String, NNC.AnyTensor) -&gt; ModelWriterResult)? = nil) throws<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> (String, any AnyModel, DynamicGraph.Store.Codec, <<error type>>) -> ()",
                "key.typeusr" : "$syXeXecD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV5writeyXeXeF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(_ store: <Type usr=\"s:4main12DynamicGraphC6_StoreC\">_Store<\/Type>, graph: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>)<\/Declaration>",
                "key.bodylength" : 55,
                "key.bodyoffset" : 208729,
                "key.column" : 5,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>store<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC6_StoreC\">_Store<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>graph<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 100,
                "key.line" : 4946,
                "key.modulename" : "main",
                "key.name" : "init(_:graph:)",
                "key.namelength" : 42,
                "key.nameoffset" : 208685,
                "key.offset" : 208685,
                "key.parsed_declaration" : "init(_ store: _Store, graph: DynamicGraph)",
                "key.parsed_scope.end" : 4949,
                "key.parsed_scope.start" : 4946,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store.Type) -> (DynamicGraph._Store, DynamicGraph) -> DynamicGraph.Store",
                "key.typeusr" : "$s_5graph4main12DynamicGraphC5StoreVAD01_E0C_ADtcD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV_5graphAeC01_D0C_ACtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var keys: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 208927
                  }
                ],
                "key.bodylength" : 438,
                "key.bodyoffset" : 208954,
                "key.column" : 16,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 16,
                "key.doc.comment" : "Retrieve a list of all tensors in this file. This reads from the disk\nand could take some time to finish.",
                "key.doc.declaration" : "public var keys: [String] { get }",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4955\" column=\"16\"><Name>keys<\/Name><USR>s:4main12DynamicGraphC5StoreV4keysSaySSGvp<\/USR><Declaration>public var keys: [String] { get }<\/Declaration><CommentParts><Abstract><Para>Retrieve a list of all tensors in this file. This reads from the disk and could take some time to finish.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 4955,
                "key.doc.name" : "keys",
                "key.doc.type" : "Other",
                "key.doclength" : 131,
                "key.docoffset" : 208791,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>keys<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 459,
                "key.line" : 4955,
                "key.modulename" : "main",
                "key.name" : "keys",
                "key.namelength" : 4,
                "key.nameoffset" : 208938,
                "key.offset" : 208934,
                "key.parsed_declaration" : "public var keys: [String]",
                "key.parsed_scope.end" : 4966,
                "key.parsed_scope.start" : 4955,
                "key.reusingastcontext" : false,
                "key.typename" : "[String]",
                "key.typeusr" : "$sSaySSGD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4keysSaySSGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var stmt: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer<\/Type>?<\/Declaration>",
                "key.column" : 11,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stmt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 30,
                "key.line" : 4956,
                "key.modulename" : "main",
                "key.name" : "stmt",
                "key.namelength" : 4,
                "key.nameoffset" : 208965,
                "key.offset" : 208961,
                "key.parsed_declaration" : "var stmt: OpaquePointer? = nil",
                "key.parsed_scope.end" : 4956,
                "key.parsed_scope.start" : 4956,
                "key.reusingastcontext" : false,
                "key.typename" : "OpaquePointer?",
                "key.typeusr" : "$ss13OpaquePointerVSgD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4keysSaySSGvg4stmtL_s13OpaquePointerVSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var keys: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.column" : 11,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>keys<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.line" : 4959,
                "key.modulename" : "main",
                "key.name" : "keys",
                "key.namelength" : 4,
                "key.nameoffset" : 209147,
                "key.offset" : 209143,
                "key.parsed_declaration" : "var keys = [String]()",
                "key.parsed_scope.end" : 4959,
                "key.parsed_scope.start" : 4959,
                "key.reusingastcontext" : false,
                "key.typename" : "[String]",
                "key.typeusr" : "$sSaySSGD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV4keysSaySSGvgAFL_AGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func remove(_ key: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 209452
                  }
                ],
                "key.bodylength" : 409,
                "key.bodyoffset" : 209487,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : "Remove one tensor by its key.",
                "key.doc.declaration" : "public func remove(_ key: String)",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4971\" column=\"17\"><Name>remove(_:)<\/Name><USR>s:4main12DynamicGraphC5StoreV6removeyySSF<\/USR><Declaration>public func remove(_ key: String)<\/Declaration><CommentParts><Abstract><Para>Remove one tensor by its key.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 4971,
                "key.doc.name" : "remove(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 48,
                "key.docoffset" : 209399,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 438,
                "key.line" : 4971,
                "key.modulename" : "main",
                "key.name" : "remove(_:)",
                "key.namelength" : 21,
                "key.nameoffset" : 209464,
                "key.offset" : 209459,
                "key.parsed_declaration" : "public func remove(_ key: String)",
                "key.parsed_scope.end" : 4980,
                "key.parsed_scope.start" : 4971,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>var deletion: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer<\/Type>?<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>deletion<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 34,
                    "key.line" : 4972,
                    "key.modulename" : "main",
                    "key.name" : "deletion",
                    "key.namelength" : 8,
                    "key.nameoffset" : 209498,
                    "key.offset" : 209494,
                    "key.parsed_declaration" : "var deletion: OpaquePointer? = nil",
                    "key.parsed_scope.end" : 4972,
                    "key.parsed_scope.start" : 4972,
                    "key.reusingastcontext" : false,
                    "key.typename" : "OpaquePointer?",
                    "key.typeusr" : "$ss13OpaquePointerVSgD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV6removeyySSF8deletionL_s13OpaquePointerVSgvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let SQLITE_TRANSIENT: &lt;&lt;error type&gt;&gt;<\/Declaration>",
                    "key.column" : 11,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>SQLITE_TRANSIENT<\/decl.name>: <decl.var.type>&lt;&lt;error type&gt;&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 110,
                    "key.line" : 4975,
                    "key.modulename" : "main",
                    "key.name" : "SQLITE_TRANSIENT",
                    "key.namelength" : 16,
                    "key.nameoffset" : 209659,
                    "key.offset" : 209655,
                    "key.parsed_declaration" : "let SQLITE_TRANSIENT = unsafeBitCast(\n  OpaquePointer(bitPattern: -1), to: sqlite3_destructor_type.self)",
                    "key.parsed_scope.end" : 4975,
                    "key.parsed_scope.start" : 4975,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<<error type>>",
                    "key.typeusr" : "$sXeD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV6removeyySSF16SQLITE_TRANSIENTL_Xevp"
                  }
                ],
                "key.typename" : "(DynamicGraph.Store) -> (String) -> ()",
                "key.typeusr" : "$syySScD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV6removeyySSF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func removeAll()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 210011
                  }
                ],
                "key.bodylength" : 164,
                "key.bodyoffset" : 210036,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : "Remove all tensors from the store. This also vacuums the store to minimize its size.",
                "key.doc.declaration" : "public func removeAll()",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4985\" column=\"17\"><Name>removeAll()<\/Name><USR>s:4main12DynamicGraphC5StoreV9removeAllyyF<\/USR><Declaration>public func removeAll()<\/Declaration><CommentParts><Abstract><Para>Remove all tensors from the store. This also vacuums the store to minimize its size.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 4985,
                "key.doc.name" : "removeAll()",
                "key.doc.type" : "Function",
                "key.doclength" : 103,
                "key.docoffset" : 209903,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeAll<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 183,
                "key.line" : 4985,
                "key.modulename" : "main",
                "key.name" : "removeAll()",
                "key.namelength" : 11,
                "key.nameoffset" : 210023,
                "key.offset" : 210018,
                "key.parsed_declaration" : "public func removeAll()",
                "key.parsed_scope.end" : 4988,
                "key.parsed_scope.start" : 4985,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV9removeAllyyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func vacuum()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 210260
                  }
                ],
                "key.bodylength" : 78,
                "key.bodyoffset" : 210282,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : "Explicit vacuum the database.",
                "key.doc.declaration" : "public func vacuum()",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"4993\" column=\"17\"><Name>vacuum()<\/Name><USR>s:4main12DynamicGraphC5StoreV6vacuumyyF<\/USR><Declaration>public func vacuum()<\/Declaration><CommentParts><Abstract><Para>Explicit vacuum the database.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 4993,
                "key.doc.name" : "vacuum()",
                "key.doc.type" : "Function",
                "key.doclength" : 48,
                "key.docoffset" : 210207,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>vacuum<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 94,
                "key.line" : 4993,
                "key.modulename" : "main",
                "key.name" : "vacuum()",
                "key.namelength" : 8,
                "key.nameoffset" : 210272,
                "key.offset" : 210267,
                "key.parsed_declaration" : "public func vacuum()",
                "key.parsed_scope.end" : 4995,
                "key.parsed_scope.start" : 4993,
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(DynamicGraph.Store) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV6vacuumyyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func withTransaction&lt;Result&gt;(_ closure: () throws -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp\">Result<\/Type>) rethrows -&gt; <Type usr=\"s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp\">Result<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.rethrows",
                    "key.length" : 8,
                    "key.offset" : 210498
                  },
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 210430
                  }
                ],
                "key.bodylength" : 385,
                "key.bodyoffset" : 210518,
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.doc.column" : 17,
                "key.doc.comment" : "Wrap the database ops in a transaction.",
                "key.doc.declaration" : "public func withTransaction<Result>(_ closure: () throws -> Result) rethrows -> Result",
                "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"5000\" column=\"17\"><Name>withTransaction(_:)<\/Name><USR>s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF<\/USR><Declaration>public func withTransaction&lt;Result&gt;(_ closure: () throws -&gt; Result) rethrows -&gt; Result<\/Declaration><CommentParts><Abstract><Para>Wrap the database ops in a transaction.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 5000,
                "key.doc.name" : "withTransaction(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 58,
                "key.docoffset" : 210367,
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>withTransaction<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp\"><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp\">Result<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>rethrows<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp\">Result<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 467,
                "key.line" : 5000,
                "key.modulename" : "main",
                "key.name" : "withTransaction(_:)",
                "key.namelength" : 55,
                "key.nameoffset" : 210442,
                "key.offset" : 210437,
                "key.parsed_declaration" : "public func withTransaction<Result>(_ closure: () throws -> Result) rethrows -> Result",
                "key.parsed_scope.end" : 5012,
                "key.parsed_scope.start" : 5000,
                "key.reusingastcontext" : false,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>Result<\/Declaration>",
                    "key.column" : 33,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                    "key.kind" : "source.lang.swift.decl.generic_type_param",
                    "key.length" : 6,
                    "key.line" : 5000,
                    "key.modulename" : "main",
                    "key.name" : "Result",
                    "key.namelength" : 6,
                    "key.nameoffset" : 210458,
                    "key.offset" : 210458,
                    "key.parsed_declaration" : "public func withTransaction<Result",
                    "key.parsed_scope.end" : 5000,
                    "key.parsed_scope.start" : 5000,
                    "key.related_decls" : [
                      {
                        "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultO\">Result<\/RelatedName>"
                      }
                    ],
                    "key.reusingastcontext" : false,
                    "key.typename" : "Result.Type",
                    "key.typeusr" : "$sxmD",
                    "key.usr" : "s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF6ResultL_xmfp"
                  }
                ],
                "key.typename" : "<Result> (DynamicGraph.Store) -> (() throws -> Result) throws -> Result",
                "key.typeusr" : "$syxxyKXEKcluD",
                "key.usr" : "s:4main12DynamicGraphC5StoreV15withTransactionyxxyKXEKlF"
              }
            ],
            "key.typename" : "DynamicGraph.Store.Type",
            "key.typeusr" : "$s4main12DynamicGraphC5StoreVmD",
            "key.usr" : "s:4main12DynamicGraphC5StoreV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum OpenError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 210912
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 210942,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 210935
              }
            ],
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>OpenError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 47,
            "key.line" : 5015,
            "key.modulename" : "main",
            "key.name" : "OpenError",
            "key.namelength" : 9,
            "key.nameoffset" : 210924,
            "key.offset" : 210919,
            "key.parsed_declaration" : "public enum OpenError: Error",
            "key.parsed_scope.end" : 5017,
            "key.parsed_scope.start" : 5015,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 15,
                "key.offset" : 210947,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case cannotOpen<\/Declaration>",
                    "key.column" : 10,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>cannotOpen<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 10,
                    "key.line" : 5016,
                    "key.modulename" : "main",
                    "key.name" : "cannotOpen",
                    "key.namelength" : 10,
                    "key.nameoffset" : 210952,
                    "key.offset" : 210952,
                    "key.parsed_declaration" : "case cannotOpen",
                    "key.parsed_scope.end" : 5016,
                    "key.parsed_scope.start" : 5016,
                    "key.reusingastcontext" : false,
                    "key.typename" : "(DynamicGraph.OpenError.Type) -> DynamicGraph.OpenError",
                    "key.typeusr" : "$sy4main12DynamicGraphC9OpenErrorOAEmcD",
                    "key.usr" : "s:4main12DynamicGraphC9OpenErrorO06cannotD0yA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "DynamicGraph.OpenError.Type",
            "key.typeusr" : "$s4main12DynamicGraphC9OpenErrorOmD",
            "key.usr" : "s:4main12DynamicGraphC9OpenErrorO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func openStore&lt;SuccessResult&gt;(_ filePath: <Type usr=\"s:SS\">String<\/Type>, flags: <Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/Type> = .truncateWhenClose, externalStore: <Type usr=\"s:SS\">String<\/Type>? = nil, chunkSize: <Type usr=\"s:Si\">Int<\/Type> = 16_384, procedure: (_ store: <Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type>) throws -&gt; <Type usr=\"s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp\">SuccessResult<\/Type>) rethrows -&gt; <Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp\">SuccessResult<\/Type>, <Type usr=\"s:4main12DynamicGraphC9OpenErrorO\">OpenError<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.rethrows",
                "key.length" : 8,
                "key.offset" : 211766
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 211541
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 211520
              }
            ],
            "key.bodylength" : 917,
            "key.bodyoffset" : 211812,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 15,
            "key.doc.comment" : " Open the store from a file.\n\n - Parameters:\n   - filePath: The file path for the store.\n   - flags: The flags for the opening store. Default to truncateWhenClose.\n   - externalStore: The external store for tensor data, in case we have tensors stored externally (a.k.a. outside of the SQLite database).\n   - chunkSize: Align each tensor to a certain chunk size.\n   - procedure: When the store is open, you can access it from this closure.\n - Returns: Wether this store can be successfully open or not.",
            "key.doc.declaration" : "@discardableResult\npublic func openStore<SuccessResult>(_ filePath: String, flags: Store.OpenFlag = .truncateWhenClose, externalStore: String? = nil, chunkSize: Int = 16_384, procedure: (_ store: Store) throws -> SuccessResult) rethrows -> Result<SuccessResult, OpenError>",
            "key.doc.file" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift\" line=\"5031\" column=\"15\"><Name>openStore(_:flags:externalStore:chunkSize:procedure:)<\/Name><USR>s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF<\/USR><Declaration>@discardableResult\npublic func openStore&lt;SuccessResult&gt;(_ filePath: String, flags: Store.OpenFlag = .truncateWhenClose, externalStore: String? = nil, chunkSize: Int = 16_384, procedure: (_ store: Store) throws -&gt; SuccessResult) rethrows -&gt; Result&lt;SuccessResult, OpenError&gt;<\/Declaration><CommentParts><Abstract><Para>Open the store from a file.<\/Para><\/Abstract><Parameters><Parameter><Name>filePath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The file path for the store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>flags<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The flags for the opening store. Default to truncateWhenClose.<\/Para><\/Discussion><\/Parameter><Parameter><Name>externalStore<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The external store for tensor data, in case we have tensors stored externally (a.k.a. outside of the SQLite database).<\/Para><\/Discussion><\/Parameter><Parameter><Name>chunkSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Align each tensor to a certain chunk size.<\/Para><\/Discussion><\/Parameter><Parameter><Name>procedure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When the store is open, you can access it from this closure.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Wether this store can be successfully open or not.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 5031,
            "key.doc.name" : "openStore(_:flags:externalStore:chunkSize:procedure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The file path for the store."
                  }
                ],
                "name" : "filePath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The flags for the opening store. Default to truncateWhenClose."
                  }
                ],
                "name" : "flags"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The external store for tensor data, in case we have tensors stored externally (a.k.a. outside of the SQLite database)."
                  }
                ],
                "name" : "externalStore"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Align each tensor to a certain chunk size."
                  }
                ],
                "name" : "chunkSize"
              },
              {
                "discussion" : [
                  {
                    "Para" : "When the store is open, you can access it from this closure."
                  }
                ],
                "name" : "procedure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Wether this store can be successfully open or not."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 547,
            "key.docoffset" : 210970,
            "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>openStore<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp\"><decl.generic_type_param.name>SuccessResult<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>filePath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flags<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV8OpenFlagV\">OpenFlag<\/ref.struct><\/decl.var.parameter.type> = .truncateWhenClose<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>externalStore<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 16_384<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>procedure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>store<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp\">SuccessResult<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>rethrows<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp\">SuccessResult<\/ref.generic_type_param>, <ref.enum usr=\"s:4main12DynamicGraphC9OpenErrorO\">OpenError<\/ref.enum>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1182,
            "key.line" : 5031,
            "key.modulename" : "main",
            "key.name" : "openStore(_:flags:externalStore:chunkSize:procedure:)",
            "key.namelength" : 212,
            "key.nameoffset" : 211553,
            "key.offset" : 211548,
            "key.parsed_declaration" : "public func openStore<SuccessResult>(\n  _ filePath: String, flags: Store.OpenFlag = .truncateWhenClose,\n  externalStore: String? = nil, chunkSize: Int = 16_384,\n  procedure: (_ store: Store) throws -> SuccessResult\n) rethrows -> Result<SuccessResult, OpenError>",
            "key.parsed_scope.end" : 5055,
            "key.parsed_scope.start" : 5031,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>SuccessResult<\/Declaration>",
                "key.column" : 25,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>SuccessResult<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 13,
                "key.line" : 5031,
                "key.modulename" : "main",
                "key.name" : "SuccessResult",
                "key.namelength" : 13,
                "key.nameoffset" : 211563,
                "key.offset" : 211563,
                "key.parsed_declaration" : "public func openStore<SuccessResult",
                "key.parsed_scope.end" : 5031,
                "key.parsed_scope.start" : 5031,
                "key.reusingastcontext" : false,
                "key.typename" : "SuccessResult.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF07SuccessK0L_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var _sqlite: <Type usr=\"s:s13OpaquePointerV\">OpaquePointer<\/Type>?<\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>_sqlite<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s13OpaquePointerV\">OpaquePointer<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 5036,
                "key.modulename" : "main",
                "key.name" : "_sqlite",
                "key.namelength" : 7,
                "key.nameoffset" : 211821,
                "key.offset" : 211817,
                "key.parsed_declaration" : "var _sqlite: OpaquePointer? = nil",
                "key.parsed_scope.end" : 5036,
                "key.parsed_scope.start" : 5036,
                "key.reusingastcontext" : false,
                "key.typename" : "OpaquePointer?",
                "key.typeusr" : "$ss13OpaquePointerVSgD",
                "key.usr" : "s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF7_sqliteL_s13OpaquePointerVSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let store: <Type usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/Type>.<Type usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/Type><\/Declaration>",
                "key.column" : 9,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/home\/liu\/Dropbox\/workspace\/s4nnc\/nnc\/Store.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>store<\/decl.name>: <decl.var.type><ref.class usr=\"s:4main12DynamicGraphC\">DynamicGraph<\/ref.class>.<ref.struct usr=\"s:4main12DynamicGraphC5StoreV\">Store<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 133,
                "key.line" : 5051,
                "key.modulename" : "main",
                "key.name" : "store",
                "key.namelength" : 5,
                "key.nameoffset" : 212555,
                "key.offset" : 212551,
                "key.parsed_declaration" : "let store = Store(\n  _Store(sqlite: sqlite, flags: flags, externalStore: externalStore, chunkSize: chunkSize),\n  graph: self)",
                "key.parsed_scope.end" : 5051,
                "key.parsed_scope.start" : 5051,
                "key.reusingastcontext" : false,
                "key.typename" : "DynamicGraph.Store",
                "key.typeusr" : "$s4main12DynamicGraphC5StoreVD",
                "key.usr" : "s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF5storeL_AOvp"
              }
            ],
            "key.typename" : "<SuccessResult> (DynamicGraph) -> (String, DynamicGraph.Store.OpenFlag, String?, Int, (DynamicGraph.Store) throws -> SuccessResult) throws -> Result<SuccessResult, DynamicGraph.OpenError>",
            "key.typeusr" : "$s_5flags13externalStore9chunkSize9procedures6ResultOyx4main12DynamicGraphC9OpenErrorOGSS_AI0C0V0K4FlagVSSSgSixANKXEtKcluD",
            "key.usr" : "s:4main12DynamicGraphC9openStore_5flags08externalE09chunkSize9procedures6ResultOyxAC9OpenErrorOGSS_AC0E0V0L4FlagVSSSgSixAOKXEtKlF"
          }
        ],
        "key.typename" : "DynamicGraph.Type",
        "key.typeusr" : "$s4main12DynamicGraphCmD",
        "key.usr" : "s:4main12DynamicGraphC"
      }
    ]
  }
}
